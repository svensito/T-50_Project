ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PPMCounter.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PPMCounter_Init,"ax",%progbits
  18              		.align	1
  19              		.global	PPMCounter_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PPMCounter_Init, %function
  23              	PPMCounter_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PPMCounter.c"
   1:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PPMCounter.c **** * File Name: PPMCounter.c
   3:.\Generated_Source\PSoC4/PPMCounter.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/PPMCounter.c **** *
   5:.\Generated_Source\PSoC4/PPMCounter.c **** * Description:
   6:.\Generated_Source\PSoC4/PPMCounter.c **** *  This file provides the source code to the API for the PPMCounter
   7:.\Generated_Source\PSoC4/PPMCounter.c **** *  component
   8:.\Generated_Source\PSoC4/PPMCounter.c **** *
   9:.\Generated_Source\PSoC4/PPMCounter.c **** * Note:
  10:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
  11:.\Generated_Source\PSoC4/PPMCounter.c **** *
  12:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PPMCounter.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PPMCounter.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PPMCounter.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PPMCounter.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PPMCounter.c **** 
  19:.\Generated_Source\PSoC4/PPMCounter.c **** #include "PPMCounter.h"
  20:.\Generated_Source\PSoC4/PPMCounter.c **** 
  21:.\Generated_Source\PSoC4/PPMCounter.c **** uint8 PPMCounter_initVar = 0u;
  22:.\Generated_Source\PSoC4/PPMCounter.c **** 
  23:.\Generated_Source\PSoC4/PPMCounter.c **** 
  24:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Init
  26:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PPMCounter.c **** *
  28:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
  29:.\Generated_Source\PSoC4/PPMCounter.c **** *  Initialize/Restore default PPMCounter configuration.
  30:.\Generated_Source\PSoC4/PPMCounter.c **** *
  31:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 2


  33:.\Generated_Source\PSoC4/PPMCounter.c **** *
  34:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
  35:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
  36:.\Generated_Source\PSoC4/PPMCounter.c **** *
  37:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Init(void)
  39:.\Generated_Source\PSoC4/PPMCounter.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:.\Generated_Source\PSoC4/PPMCounter.c **** 
  41:.\Generated_Source\PSoC4/PPMCounter.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__QUAD == PPMCounter_CONFIG)
  43:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_CONTROL_REG = PPMCounter_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PPMCounter.c ****         
  45:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  = PPMCounter_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PPMCounter.c **** 
  48:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_SetInterruptMode(PPMCounter_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PPMCounter.c ****         
  51:.\Generated_Source\PSoC4/PPMCounter.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_SetCounterMode(PPMCounter_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WritePeriod(PPMCounter_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WriteCounter(PPMCounter_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__QUAD == PPMCounter_CONFIG) */
  56:.\Generated_Source\PSoC4/PPMCounter.c **** 
  57:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__TIMER == PPMCounter_CONFIG)
  58:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_CONTROL_REG = PPMCounter_CTRL_TIMER_BASE_CONFIG;
  28              		.loc 1 58 0
  29 0000 084B     		ldr	r3, .L2
  30 0002 8022     		mov	r2, #128
  31 0004 9204     		lsl	r2, r2, #18
  32 0006 1A60     		str	r2, [r3]
  59:.\Generated_Source\PSoC4/PPMCounter.c ****         
  60:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  = PPMCounter_TIMER_SIGNALS_MODES;
  33              		.loc 1 61 0
  34 0008 074B     		ldr	r3, .L2+4
  35 000a 0C22     		mov	r2, #12
  36 000c 1A60     		str	r2, [r3]
  37              	.LVL0:
  38              	.LBB8:
  39              	.LBB9:
  62:.\Generated_Source\PSoC4/PPMCounter.c ****     
  63:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_SetInterruptMode(PPMCounter_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PPMCounter.c ****         
  66:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WritePeriod(PPMCounter_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PPMCounter.c **** 
  69:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__COMPARE == PPMCounter_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCompare(PPMCounter_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PPMCounter.c **** 
  72:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (1u == PPMCounter_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_WriteCompareBuf(PPMCounter_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* (1u == PPMCounter_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 3


  76:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__COMPARE == PPMCounter_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PPMCounter.c **** 
  78:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter_CY_TCPWM_V2 && PPMCounter_TIMER_UPDOWN_CNT_USED && !PPMCounter_CY_TCPWM_400
  80:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PPMCounter.c ****         #elif(PPMCounter__COUNT_DOWN == PPMCounter_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCounter(PPMCounter_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PPMCounter.c ****         #else
  84:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif /* (PPMCounter_CY_TCPWM_V2 && PPMCounter_TIMER_UPDOWN_CNT_USED && !PPMCounter_CY_TCP
  86:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__TIMER == PPMCounter_CONFIG) */
  87:.\Generated_Source\PSoC4/PPMCounter.c **** 
  88:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__PWM_SEL == PPMCounter_CONFIG)
  89:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_CONTROL_REG = PPMCounter_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/PPMCounter.c **** 
  91:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM_PR == PPMCounter_PWM_MODE)
  92:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |= PPMCounter_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCounter(PPMCounter_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PPMCounter.c ****         #else
  95:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |= PPMCounter_CTRL_PWM_ALIGN | PPMCounter_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PPMCounter.c ****             
  97:.\Generated_Source\PSoC4/PPMCounter.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter_CY_TCPWM_V2 && PPMCounter_PWM_UPDOWN_CNT_USED && !PPMCounter_CY_TCPWM_4
  99:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PPMCounter.c ****             #elif (PPMCounter__RIGHT == PPMCounter_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_WriteCounter(PPMCounter_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PPMCounter.c ****             #else 
 103:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* (PPMCounter_CY_TCPWM_V2 && PPMCounter_PWM_UPDOWN_CNT_USED && !PPMCounter_CY_
 105:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM_PR == PPMCounter_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PPMCounter.c **** 
 107:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM_DT == PPMCounter_PWM_MODE)
 108:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |= PPMCounter_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM_DT == PPMCounter_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PPMCounter.c **** 
 111:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM == PPMCounter_PWM_MODE)
 112:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |= PPMCounter_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM == PPMCounter_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PPMCounter.c **** 
 115:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  = PPMCounter_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PPMCounter.c ****     
 118:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_SetInterruptMode(PPMCounter_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PPMCounter.c **** 
 121:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM_PR == PPMCounter_PWM_MODE)
 123:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PPMCounter.c ****                     (PPMCounter_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PPMCounter.c ****                     PPMCounter_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PPMCounter.c ****                     PPMCounter_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PPMCounter.c ****         #else
 128:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__LEFT == PPMCounter_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* ( PPMCounter_PWM_LEFT == PPMCounter_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PPMCounter.c **** 
 132:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__RIGHT == PPMCounter_PWM_ALIGN)
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 4


 133:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* ( PPMCounter_PWM_RIGHT == PPMCounter_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PPMCounter.c **** 
 136:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__CENTER == PPMCounter_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* ( PPMCounter_PWM_CENTER == PPMCounter_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PPMCounter.c **** 
 140:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__ASYMMETRIC == PPMCounter_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* (PPMCounter__ASYMMETRIC == PPMCounter_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM_PR == PPMCounter_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PPMCounter.c **** 
 145:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WritePeriod(PPMCounter_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WriteCompare(PPMCounter_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PPMCounter.c **** 
 149:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (1u == PPMCounter_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCompareBuf(PPMCounter_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (1u == PPMCounter_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PPMCounter.c **** 
 154:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (1u == PPMCounter_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WritePeriodBuf(PPMCounter_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (1u == PPMCounter_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__PWM_SEL == PPMCounter_CONFIG) */
 159:.\Generated_Source\PSoC4/PPMCounter.c ****     
 160:.\Generated_Source\PSoC4/PPMCounter.c **** }
 161:.\Generated_Source\PSoC4/PPMCounter.c **** 
 162:.\Generated_Source\PSoC4/PPMCounter.c **** 
 163:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Enable
 165:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PPMCounter.c **** *
 167:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 168:.\Generated_Source\PSoC4/PPMCounter.c **** *  Enables the PPMCounter.
 169:.\Generated_Source\PSoC4/PPMCounter.c **** *
 170:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 172:.\Generated_Source\PSoC4/PPMCounter.c **** *
 173:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 174:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 175:.\Generated_Source\PSoC4/PPMCounter.c **** *
 176:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Enable(void)
 178:.\Generated_Source\PSoC4/PPMCounter.c **** {
 179:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PPMCounter.c **** 
 181:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG |= PPMCounter_MASK;
 183:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PPMCounter.c **** 
 185:.\Generated_Source\PSoC4/PPMCounter.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__PWM_SEL == PPMCounter_CONFIG)
 187:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (0u == PPMCounter_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TriggerCommand(PPMCounter_MASK, PPMCounter_CMD_START);
 189:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif /* (0u == PPMCounter_PWM_START_SIGNAL_PRESENT) */
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 5


 190:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter__PWM_SEL == PPMCounter_CONFIG) */
 191:.\Generated_Source\PSoC4/PPMCounter.c **** 
 192:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__TIMER == PPMCounter_CONFIG)
 193:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (0u == PPMCounter_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TriggerCommand(PPMCounter_MASK, PPMCounter_CMD_START);
 195:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif /* (0u == PPMCounter_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter__TIMER == PPMCounter_CONFIG) */
 197:.\Generated_Source\PSoC4/PPMCounter.c **** }
 198:.\Generated_Source\PSoC4/PPMCounter.c **** 
 199:.\Generated_Source\PSoC4/PPMCounter.c **** 
 200:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Start
 202:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/PPMCounter.c **** *
 204:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 205:.\Generated_Source\PSoC4/PPMCounter.c **** *  Initializes the PPMCounter with default customizer
 206:.\Generated_Source\PSoC4/PPMCounter.c **** *  values when called the first time and enables the PPMCounter.
 207:.\Generated_Source\PSoC4/PPMCounter.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/PPMCounter.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/PPMCounter.c **** *
 210:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 211:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 212:.\Generated_Source\PSoC4/PPMCounter.c **** *
 213:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 214:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 215:.\Generated_Source\PSoC4/PPMCounter.c **** *
 216:.\Generated_Source\PSoC4/PPMCounter.c **** * Global variables:
 217:.\Generated_Source\PSoC4/PPMCounter.c **** *  PPMCounter_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/PPMCounter.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/PPMCounter.c **** *  to 1 the first time PPMCounter_Start() is called. This allows
 220:.\Generated_Source\PSoC4/PPMCounter.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/PPMCounter.c **** *  calls to the PPMCounter_Start() routine.
 222:.\Generated_Source\PSoC4/PPMCounter.c **** *
 223:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Start(void)
 225:.\Generated_Source\PSoC4/PPMCounter.c **** {
 226:.\Generated_Source\PSoC4/PPMCounter.c ****     if (0u == PPMCounter_initVar)
 227:.\Generated_Source\PSoC4/PPMCounter.c ****     {
 228:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_Init();
 229:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_initVar = 1u;
 230:.\Generated_Source\PSoC4/PPMCounter.c ****     }
 231:.\Generated_Source\PSoC4/PPMCounter.c **** 
 232:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_Enable();
 233:.\Generated_Source\PSoC4/PPMCounter.c **** }
 234:.\Generated_Source\PSoC4/PPMCounter.c **** 
 235:.\Generated_Source\PSoC4/PPMCounter.c **** 
 236:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Stop
 238:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/PPMCounter.c **** *
 240:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 241:.\Generated_Source\PSoC4/PPMCounter.c **** *  Disables the PPMCounter.
 242:.\Generated_Source\PSoC4/PPMCounter.c **** *
 243:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 244:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 245:.\Generated_Source\PSoC4/PPMCounter.c **** *
 246:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 6


 247:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 248:.\Generated_Source\PSoC4/PPMCounter.c **** *
 249:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Stop(void)
 251:.\Generated_Source\PSoC4/PPMCounter.c **** {
 252:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/PPMCounter.c **** 
 254:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 255:.\Generated_Source\PSoC4/PPMCounter.c **** 
 256:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG &= (uint32)~PPMCounter_MASK;
 257:.\Generated_Source\PSoC4/PPMCounter.c **** 
 258:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 259:.\Generated_Source\PSoC4/PPMCounter.c **** }
 260:.\Generated_Source\PSoC4/PPMCounter.c **** 
 261:.\Generated_Source\PSoC4/PPMCounter.c **** 
 262:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetMode
 264:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/PPMCounter.c **** *
 266:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 267:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the operation mode of the PPMCounter. This function is used when
 268:.\Generated_Source\PSoC4/PPMCounter.c **** *  configured as a generic PPMCounter and the actual mode of operation is
 269:.\Generated_Source\PSoC4/PPMCounter.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/PPMCounter.c **** *
 271:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 272:.\Generated_Source\PSoC4/PPMCounter.c **** *  mode: Mode for the PPMCounter to operate in
 273:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 274:.\Generated_Source\PSoC4/PPMCounter.c **** *   - PPMCounter_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/PPMCounter.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/PPMCounter.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/PPMCounter.c **** *
 283:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 284:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 285:.\Generated_Source\PSoC4/PPMCounter.c **** *
 286:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/PPMCounter.c **** {
 289:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/PPMCounter.c **** 
 291:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 292:.\Generated_Source\PSoC4/PPMCounter.c **** 
 293:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_MODE_MASK;
 294:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mode;
 295:.\Generated_Source\PSoC4/PPMCounter.c **** 
 296:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 297:.\Generated_Source\PSoC4/PPMCounter.c **** }
 298:.\Generated_Source\PSoC4/PPMCounter.c **** 
 299:.\Generated_Source\PSoC4/PPMCounter.c **** 
 300:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetQDMode
 302:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 7


 304:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 305:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/PPMCounter.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/PPMCounter.c **** *
 308:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 309:.\Generated_Source\PSoC4/PPMCounter.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 311:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/PPMCounter.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/PPMCounter.c **** *
 316:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 317:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 318:.\Generated_Source\PSoC4/PPMCounter.c **** *
 319:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/PPMCounter.c **** {
 322:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/PPMCounter.c **** 
 324:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 325:.\Generated_Source\PSoC4/PPMCounter.c **** 
 326:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_QUAD_MODE_MASK;
 327:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= qdMode;
 328:.\Generated_Source\PSoC4/PPMCounter.c **** 
 329:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 330:.\Generated_Source\PSoC4/PPMCounter.c **** }
 331:.\Generated_Source\PSoC4/PPMCounter.c **** 
 332:.\Generated_Source\PSoC4/PPMCounter.c **** 
 333:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPrescaler
 335:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/PPMCounter.c **** *
 337:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 338:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/PPMCounter.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/PPMCounter.c **** *
 341:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 342:.\Generated_Source\PSoC4/PPMCounter.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 344:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/PPMCounter.c **** *
 353:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 354:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 355:.\Generated_Source\PSoC4/PPMCounter.c **** *
 356:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/PPMCounter.c **** {
 359:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/PPMCounter.c **** 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 8


 361:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 362:.\Generated_Source\PSoC4/PPMCounter.c **** 
 363:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 364:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= prescaler;
 365:.\Generated_Source\PSoC4/PPMCounter.c **** 
 366:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 367:.\Generated_Source\PSoC4/PPMCounter.c **** }
 368:.\Generated_Source\PSoC4/PPMCounter.c **** 
 369:.\Generated_Source\PSoC4/PPMCounter.c **** 
 370:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetOneShot
 372:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/PPMCounter.c **** *
 374:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 375:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the PPMCounter runs
 376:.\Generated_Source\PSoC4/PPMCounter.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/PPMCounter.c **** *  PPMCounter operates in the continuous mode.
 378:.\Generated_Source\PSoC4/PPMCounter.c **** *
 379:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 380:.\Generated_Source\PSoC4/PPMCounter.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 382:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/PPMCounter.c **** *
 385:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 386:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 387:.\Generated_Source\PSoC4/PPMCounter.c **** *
 388:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/PPMCounter.c **** {
 391:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/PPMCounter.c **** 
 393:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 394:.\Generated_Source\PSoC4/PPMCounter.c **** 
 395:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_ONESHOT_MASK;
 396:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((oneShotEnable & PPMCounter_1BIT_MASK) <<
 397:.\Generated_Source\PSoC4/PPMCounter.c ****                                                                PPMCounter_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/PPMCounter.c **** 
 399:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 400:.\Generated_Source\PSoC4/PPMCounter.c **** }
 401:.\Generated_Source\PSoC4/PPMCounter.c **** 
 402:.\Generated_Source\PSoC4/PPMCounter.c **** 
 403:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMMode
 405:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/PPMCounter.c **** *
 407:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 408:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/PPMCounter.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/PPMCounter.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/PPMCounter.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/PPMCounter.c **** *  the mode.
 413:.\Generated_Source\PSoC4/PPMCounter.c **** *
 414:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 415:.\Generated_Source\PSoC4/PPMCounter.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/PPMCounter.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 9


 418:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/PPMCounter.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/PPMCounter.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/PPMCounter.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PPMCounter.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/PPMCounter.c **** *
 439:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 440:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 441:.\Generated_Source\PSoC4/PPMCounter.c **** *
 442:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/PPMCounter.c **** {
 445:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL2_REG = (modeMask & PPMCounter_6BIT_MASK);
 446:.\Generated_Source\PSoC4/PPMCounter.c **** }
 447:.\Generated_Source\PSoC4/PPMCounter.c **** 
 448:.\Generated_Source\PSoC4/PPMCounter.c **** 
 449:.\Generated_Source\PSoC4/PPMCounter.c **** 
 450:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/PPMCounter.c **** *
 454:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 455:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/PPMCounter.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/PPMCounter.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/PPMCounter.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/PPMCounter.c **** *
 460:.\Generated_Source\PSoC4/PPMCounter.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/PPMCounter.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/PPMCounter.c **** *
 463:.\Generated_Source\PSoC4/PPMCounter.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/PPMCounter.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/PPMCounter.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/PPMCounter.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/PPMCounter.c **** 
 468:.\Generated_Source\PSoC4/PPMCounter.c **** *
 469:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 470:.\Generated_Source\PSoC4/PPMCounter.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 472:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 10


 475:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 476:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 477:.\Generated_Source\PSoC4/PPMCounter.c **** *
 478:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/PPMCounter.c **** {
 481:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/PPMCounter.c **** 
 483:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 484:.\Generated_Source\PSoC4/PPMCounter.c **** 
 485:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_SYNC_KILL_MASK;
 486:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((syncKillEnable & PPMCounter_1BIT_MASK)  <<
 487:.\Generated_Source\PSoC4/PPMCounter.c ****                                                PPMCounter_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/PPMCounter.c **** 
 489:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 490:.\Generated_Source\PSoC4/PPMCounter.c **** }
 491:.\Generated_Source\PSoC4/PPMCounter.c **** 
 492:.\Generated_Source\PSoC4/PPMCounter.c **** 
 493:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/PPMCounter.c **** *
 497:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 498:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/PPMCounter.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/PPMCounter.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/PPMCounter.c **** *
 502:.\Generated_Source\PSoC4/PPMCounter.c **** *
 503:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 504:.\Generated_Source\PSoC4/PPMCounter.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 506:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/PPMCounter.c **** *
 509:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 510:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 511:.\Generated_Source\PSoC4/PPMCounter.c **** *
 512:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/PPMCounter.c **** {
 515:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/PPMCounter.c **** 
 517:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 518:.\Generated_Source\PSoC4/PPMCounter.c **** 
 519:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_STOP_KILL_MASK;
 520:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((stopOnKillEnable & PPMCounter_1BIT_MASK)  <<
 521:.\Generated_Source\PSoC4/PPMCounter.c ****                                                          PPMCounter_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/PPMCounter.c **** 
 523:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 524:.\Generated_Source\PSoC4/PPMCounter.c **** }
 525:.\Generated_Source\PSoC4/PPMCounter.c **** 
 526:.\Generated_Source\PSoC4/PPMCounter.c **** 
 527:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/PPMCounter.c **** *
 531:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 11


 532:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/PPMCounter.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/PPMCounter.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/PPMCounter.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/PPMCounter.c **** 
 537:.\Generated_Source\PSoC4/PPMCounter.c **** *
 538:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 539:.\Generated_Source\PSoC4/PPMCounter.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/PPMCounter.c **** *
 542:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 543:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 544:.\Generated_Source\PSoC4/PPMCounter.c **** *
 545:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/PPMCounter.c **** {
 548:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/PPMCounter.c **** 
 550:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 551:.\Generated_Source\PSoC4/PPMCounter.c **** 
 552:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 553:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((deadTime & PPMCounter_8BIT_MASK) <<
 554:.\Generated_Source\PSoC4/PPMCounter.c ****                                                           PPMCounter_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/PPMCounter.c **** 
 556:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 557:.\Generated_Source\PSoC4/PPMCounter.c **** }
 558:.\Generated_Source\PSoC4/PPMCounter.c **** 
 559:.\Generated_Source\PSoC4/PPMCounter.c **** 
 560:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMInvert
 562:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/PPMCounter.c **** *
 564:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 565:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/PPMCounter.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/PPMCounter.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/PPMCounter.c **** *
 569:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 570:.\Generated_Source\PSoC4/PPMCounter.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 572:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/PPMCounter.c **** *
 575:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 576:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 577:.\Generated_Source\PSoC4/PPMCounter.c **** *
 578:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/PPMCounter.c **** {
 581:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/PPMCounter.c **** 
 583:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 584:.\Generated_Source\PSoC4/PPMCounter.c **** 
 585:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_INV_OUT_MASK;
 586:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mask;
 587:.\Generated_Source\PSoC4/PPMCounter.c **** 
 588:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 12


 589:.\Generated_Source\PSoC4/PPMCounter.c **** }
 590:.\Generated_Source\PSoC4/PPMCounter.c **** 
 591:.\Generated_Source\PSoC4/PPMCounter.c **** 
 592:.\Generated_Source\PSoC4/PPMCounter.c **** 
 593:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WriteCounter
 595:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/PPMCounter.c **** *
 597:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 598:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/PPMCounter.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/PPMCounter.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/PPMCounter.c **** *
 602:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 603:.\Generated_Source\PSoC4/PPMCounter.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/PPMCounter.c **** *
 605:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 606:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 607:.\Generated_Source\PSoC4/PPMCounter.c **** *
 608:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/PPMCounter.c **** {
 611:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COUNTER_REG = (count & PPMCounter_16BIT_MASK);
 612:.\Generated_Source\PSoC4/PPMCounter.c **** }
 613:.\Generated_Source\PSoC4/PPMCounter.c **** 
 614:.\Generated_Source\PSoC4/PPMCounter.c **** 
 615:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCounter
 617:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/PPMCounter.c **** *
 619:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 620:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/PPMCounter.c **** *
 622:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 623:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 624:.\Generated_Source\PSoC4/PPMCounter.c **** *
 625:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 626:.\Generated_Source\PSoC4/PPMCounter.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/PPMCounter.c **** *
 628:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCounter(void)
 630:.\Generated_Source\PSoC4/PPMCounter.c **** {
 631:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COUNTER_REG & PPMCounter_16BIT_MASK);
 632:.\Generated_Source\PSoC4/PPMCounter.c **** }
 633:.\Generated_Source\PSoC4/PPMCounter.c **** 
 634:.\Generated_Source\PSoC4/PPMCounter.c **** 
 635:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCounterMode
 637:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/PPMCounter.c **** *
 639:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 640:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/PPMCounter.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/PPMCounter.c **** *
 643:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 644:.\Generated_Source\PSoC4/PPMCounter.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 13


 646:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/PPMCounter.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/PPMCounter.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/PPMCounter.c **** *                                         and period
 653:.\Generated_Source\PSoC4/PPMCounter.c **** *
 654:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 655:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 656:.\Generated_Source\PSoC4/PPMCounter.c **** *
 657:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/PPMCounter.c **** {
 660:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/PPMCounter.c **** 
 662:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 663:.\Generated_Source\PSoC4/PPMCounter.c **** 
 664:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_UPDOWN_MASK;
 665:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= counterMode;
 666:.\Generated_Source\PSoC4/PPMCounter.c **** 
 667:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 668:.\Generated_Source\PSoC4/PPMCounter.c **** }
 669:.\Generated_Source\PSoC4/PPMCounter.c **** 
 670:.\Generated_Source\PSoC4/PPMCounter.c **** 
 671:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WritePeriod
 673:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/PPMCounter.c **** *
 675:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 676:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/PPMCounter.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/PPMCounter.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/PPMCounter.c **** *
 680:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 681:.\Generated_Source\PSoC4/PPMCounter.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/PPMCounter.c **** *
 683:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 684:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 685:.\Generated_Source\PSoC4/PPMCounter.c **** *
 686:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/PPMCounter.c **** {
 689:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_REG = (period & PPMCounter_16BIT_MASK);
 690:.\Generated_Source\PSoC4/PPMCounter.c **** }
 691:.\Generated_Source\PSoC4/PPMCounter.c **** 
 692:.\Generated_Source\PSoC4/PPMCounter.c **** 
 693:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadPeriod
 695:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/PPMCounter.c **** *
 697:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 698:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/PPMCounter.c **** *
 700:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 701:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 702:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 14


 703:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 704:.\Generated_Source\PSoC4/PPMCounter.c **** *  Period value
 705:.\Generated_Source\PSoC4/PPMCounter.c **** *
 706:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/PPMCounter.c **** {
 709:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_REG & PPMCounter_16BIT_MASK);
 710:.\Generated_Source\PSoC4/PPMCounter.c **** }
 711:.\Generated_Source\PSoC4/PPMCounter.c **** 
 712:.\Generated_Source\PSoC4/PPMCounter.c **** 
 713:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCompareSwap
 715:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/PPMCounter.c **** *
 717:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 718:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/PPMCounter.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/PPMCounter.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/PPMCounter.c **** *
 723:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 726:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/PPMCounter.c **** *
 729:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 730:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 731:.\Generated_Source\PSoC4/PPMCounter.c **** *
 732:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/PPMCounter.c **** {
 735:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/PPMCounter.c **** 
 737:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 738:.\Generated_Source\PSoC4/PPMCounter.c **** 
 739:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_CC_MASK;
 740:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= (swapEnable & PPMCounter_1BIT_MASK);
 741:.\Generated_Source\PSoC4/PPMCounter.c **** 
 742:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 743:.\Generated_Source\PSoC4/PPMCounter.c **** }
 744:.\Generated_Source\PSoC4/PPMCounter.c **** 
 745:.\Generated_Source\PSoC4/PPMCounter.c **** 
 746:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WritePeriodBuf
 748:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/PPMCounter.c **** *
 750:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 751:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/PPMCounter.c **** *
 753:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 754:.\Generated_Source\PSoC4/PPMCounter.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/PPMCounter.c **** *
 756:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 757:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 758:.\Generated_Source\PSoC4/PPMCounter.c **** *
 759:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 15


 760:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/PPMCounter.c **** {
 762:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_BUF_REG = (periodBuf & PPMCounter_16BIT_MASK);
 763:.\Generated_Source\PSoC4/PPMCounter.c **** }
 764:.\Generated_Source\PSoC4/PPMCounter.c **** 
 765:.\Generated_Source\PSoC4/PPMCounter.c **** 
 766:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/PPMCounter.c **** *
 770:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 771:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/PPMCounter.c **** *
 773:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 774:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 775:.\Generated_Source\PSoC4/PPMCounter.c **** *
 776:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 777:.\Generated_Source\PSoC4/PPMCounter.c **** *  Period value
 778:.\Generated_Source\PSoC4/PPMCounter.c **** *
 779:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/PPMCounter.c **** {
 782:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_BUF_REG & PPMCounter_16BIT_MASK);
 783:.\Generated_Source\PSoC4/PPMCounter.c **** }
 784:.\Generated_Source\PSoC4/PPMCounter.c **** 
 785:.\Generated_Source\PSoC4/PPMCounter.c **** 
 786:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPeriodSwap
 788:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/PPMCounter.c **** *
 790:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 791:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/PPMCounter.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/PPMCounter.c **** *  switch event.
 795:.\Generated_Source\PSoC4/PPMCounter.c **** *
 796:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 799:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/PPMCounter.c **** *
 802:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 803:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 804:.\Generated_Source\PSoC4/PPMCounter.c **** *
 805:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/PPMCounter.c **** {
 808:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/PPMCounter.c **** 
 810:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 811:.\Generated_Source\PSoC4/PPMCounter.c **** 
 812:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_PERIOD_MASK;
 813:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((swapEnable & PPMCounter_1BIT_MASK) <<
 814:.\Generated_Source\PSoC4/PPMCounter.c ****                                                             PPMCounter_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/PPMCounter.c **** 
 816:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 16


 817:.\Generated_Source\PSoC4/PPMCounter.c **** }
 818:.\Generated_Source\PSoC4/PPMCounter.c **** 
 819:.\Generated_Source\PSoC4/PPMCounter.c **** 
 820:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WriteCompare
 822:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/PPMCounter.c **** *
 824:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 825:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/PPMCounter.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/PPMCounter.c **** *
 828:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 829:.\Generated_Source\PSoC4/PPMCounter.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/PPMCounter.c **** *
 831:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 832:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 833:.\Generated_Source\PSoC4/PPMCounter.c **** *
 834:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/PPMCounter.c **** {
 837:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/PPMCounter.c **** 
 841:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 843:.\Generated_Source\PSoC4/PPMCounter.c **** 
 844:.\Generated_Source\PSoC4/PPMCounter.c ****         if (((uint32)PPMCounter__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 846:.\Generated_Source\PSoC4/PPMCounter.c ****             compare++;
 847:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 848:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (((uint32)PPMCounter__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 850:.\Generated_Source\PSoC4/PPMCounter.c ****             compare--;
 851:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 852:.\Generated_Source\PSoC4/PPMCounter.c ****         else
 853:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 854:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 855:.\Generated_Source\PSoC4/PPMCounter.c ****         
 856:.\Generated_Source\PSoC4/PPMCounter.c ****     
 857:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/PPMCounter.c ****     
 859:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMP_CAP_REG = (compare & PPMCounter_16BIT_MASK);
 860:.\Generated_Source\PSoC4/PPMCounter.c **** }
 861:.\Generated_Source\PSoC4/PPMCounter.c **** 
 862:.\Generated_Source\PSoC4/PPMCounter.c **** 
 863:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCompare
 865:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/PPMCounter.c **** *
 867:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 868:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/PPMCounter.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/PPMCounter.c **** *
 871:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 872:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 873:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 17


 874:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 875:.\Generated_Source\PSoC4/PPMCounter.c **** *  Compare value
 876:.\Generated_Source\PSoC4/PPMCounter.c **** *
 877:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCompare(void)
 879:.\Generated_Source\PSoC4/PPMCounter.c **** {
 880:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/PPMCounter.c **** 
 885:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 887:.\Generated_Source\PSoC4/PPMCounter.c ****         
 888:.\Generated_Source\PSoC4/PPMCounter.c ****         regVal = PPMCounter_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/PPMCounter.c ****         
 890:.\Generated_Source\PSoC4/PPMCounter.c ****         if (((uint32)PPMCounter__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 892:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal--;
 893:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 894:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (((uint32)PPMCounter__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 896:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal++;
 897:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 898:.\Generated_Source\PSoC4/PPMCounter.c ****         else
 899:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 900:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 901:.\Generated_Source\PSoC4/PPMCounter.c **** 
 902:.\Generated_Source\PSoC4/PPMCounter.c ****         return (regVal & PPMCounter_16BIT_MASK);
 903:.\Generated_Source\PSoC4/PPMCounter.c ****     #else
 904:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 905:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PPMCounter.c **** }
 907:.\Generated_Source\PSoC4/PPMCounter.c **** 
 908:.\Generated_Source\PSoC4/PPMCounter.c **** 
 909:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WriteCompareBuf
 911:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/PPMCounter.c **** *
 913:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 914:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/PPMCounter.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/PPMCounter.c **** *
 917:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 918:.\Generated_Source\PSoC4/PPMCounter.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/PPMCounter.c **** *
 920:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 921:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 922:.\Generated_Source\PSoC4/PPMCounter.c **** *
 923:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/PPMCounter.c **** {
 926:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/PPMCounter.c **** 
 930:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 18


 931:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 932:.\Generated_Source\PSoC4/PPMCounter.c **** 
 933:.\Generated_Source\PSoC4/PPMCounter.c ****         if (((uint32)PPMCounter__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 935:.\Generated_Source\PSoC4/PPMCounter.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 937:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (((uint32)PPMCounter__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 939:.\Generated_Source\PSoC4/PPMCounter.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 941:.\Generated_Source\PSoC4/PPMCounter.c ****         else
 942:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 943:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 944:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/PPMCounter.c ****     
 946:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMP_CAP_BUF_REG = (compareBuf & PPMCounter_16BIT_MASK);
 947:.\Generated_Source\PSoC4/PPMCounter.c **** }
 948:.\Generated_Source\PSoC4/PPMCounter.c **** 
 949:.\Generated_Source\PSoC4/PPMCounter.c **** 
 950:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCompareBuf
 952:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/PPMCounter.c **** *
 954:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 955:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/PPMCounter.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/PPMCounter.c **** *
 958:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 959:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 960:.\Generated_Source\PSoC4/PPMCounter.c **** *
 961:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 962:.\Generated_Source\PSoC4/PPMCounter.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/PPMCounter.c **** *
 964:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/PPMCounter.c **** {
 967:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/PPMCounter.c **** 
 972:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 974:.\Generated_Source\PSoC4/PPMCounter.c **** 
 975:.\Generated_Source\PSoC4/PPMCounter.c ****         regVal = PPMCounter_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/PPMCounter.c ****         
 977:.\Generated_Source\PSoC4/PPMCounter.c ****         if (((uint32)PPMCounter__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 979:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal--;
 980:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 981:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (((uint32)PPMCounter__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 983:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal++;
 984:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 985:.\Generated_Source\PSoC4/PPMCounter.c ****         else
 986:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 987:.\Generated_Source\PSoC4/PPMCounter.c ****         }
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 19


 988:.\Generated_Source\PSoC4/PPMCounter.c **** 
 989:.\Generated_Source\PSoC4/PPMCounter.c ****         return (regVal & PPMCounter_16BIT_MASK);
 990:.\Generated_Source\PSoC4/PPMCounter.c ****     #else
 991:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 992:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/PPMCounter.c **** }
 994:.\Generated_Source\PSoC4/PPMCounter.c **** 
 995:.\Generated_Source\PSoC4/PPMCounter.c **** 
 996:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCapture
 998:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/PPMCounter.c **** *
1000:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1001:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/PPMCounter.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/PPMCounter.c **** *
1004:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1005:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1006:.\Generated_Source\PSoC4/PPMCounter.c **** *
1007:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1008:.\Generated_Source\PSoC4/PPMCounter.c **** *  Capture value
1009:.\Generated_Source\PSoC4/PPMCounter.c **** *
1010:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCapture(void)
1012:.\Generated_Source\PSoC4/PPMCounter.c **** {
1013:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
1014:.\Generated_Source\PSoC4/PPMCounter.c **** }
1015:.\Generated_Source\PSoC4/PPMCounter.c **** 
1016:.\Generated_Source\PSoC4/PPMCounter.c **** 
1017:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/PPMCounter.c **** *
1021:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1022:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/PPMCounter.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/PPMCounter.c **** *
1025:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1026:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1027:.\Generated_Source\PSoC4/PPMCounter.c **** *
1028:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1029:.\Generated_Source\PSoC4/PPMCounter.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/PPMCounter.c **** *
1031:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/PPMCounter.c **** {
1034:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
1035:.\Generated_Source\PSoC4/PPMCounter.c **** }
1036:.\Generated_Source\PSoC4/PPMCounter.c **** 
1037:.\Generated_Source\PSoC4/PPMCounter.c **** 
1038:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCaptureMode
1040:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/PPMCounter.c **** *
1042:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1043:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/PPMCounter.c **** *  This input is not applicable to the Timer/Counter without Capture and
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 20


1045:.\Generated_Source\PSoC4/PPMCounter.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/PPMCounter.c **** *
1047:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1048:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1050:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/PPMCounter.c **** *
1055:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1056:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1057:.\Generated_Source\PSoC4/PPMCounter.c **** *
1058:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/PPMCounter.c **** {
1061:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/PPMCounter.c **** 
1063:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1064:.\Generated_Source\PSoC4/PPMCounter.c **** 
1065:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_CAPTURE_MASK;
1066:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= triggerMode;
1067:.\Generated_Source\PSoC4/PPMCounter.c **** 
1068:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1069:.\Generated_Source\PSoC4/PPMCounter.c **** }
1070:.\Generated_Source\PSoC4/PPMCounter.c **** 
1071:.\Generated_Source\PSoC4/PPMCounter.c **** 
1072:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetReloadMode
1074:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/PPMCounter.c **** *
1076:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1077:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/PPMCounter.c **** *  input.
1079:.\Generated_Source\PSoC4/PPMCounter.c **** *
1080:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1081:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1083:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/PPMCounter.c **** *
1088:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1089:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1090:.\Generated_Source\PSoC4/PPMCounter.c **** *
1091:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/PPMCounter.c **** {
1094:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/PPMCounter.c **** 
1096:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1097:.\Generated_Source\PSoC4/PPMCounter.c **** 
1098:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_RELOAD_MASK;
1099:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
1100:.\Generated_Source\PSoC4/PPMCounter.c **** 
1101:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 21


1102:.\Generated_Source\PSoC4/PPMCounter.c **** }
1103:.\Generated_Source\PSoC4/PPMCounter.c **** 
1104:.\Generated_Source\PSoC4/PPMCounter.c **** 
1105:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetStartMode
1107:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/PPMCounter.c **** *
1109:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1110:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/PPMCounter.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/PPMCounter.c **** *
1113:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1114:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1116:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/PPMCounter.c **** *
1121:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1122:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1123:.\Generated_Source\PSoC4/PPMCounter.c **** *
1124:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/PPMCounter.c **** {
1127:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/PPMCounter.c **** 
1129:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1130:.\Generated_Source\PSoC4/PPMCounter.c **** 
1131:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_START_MASK;
1132:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
1133:.\Generated_Source\PSoC4/PPMCounter.c **** 
1134:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1135:.\Generated_Source\PSoC4/PPMCounter.c **** }
1136:.\Generated_Source\PSoC4/PPMCounter.c **** 
1137:.\Generated_Source\PSoC4/PPMCounter.c **** 
1138:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetStopMode
1140:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/PPMCounter.c **** *
1142:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1143:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/PPMCounter.c **** *
1145:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1146:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1148:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/PPMCounter.c **** *
1153:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1154:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1155:.\Generated_Source\PSoC4/PPMCounter.c **** *
1156:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/PPMCounter.c **** {
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 22


1159:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/PPMCounter.c **** 
1161:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1162:.\Generated_Source\PSoC4/PPMCounter.c **** 
1163:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_STOP_MASK;
1164:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
1165:.\Generated_Source\PSoC4/PPMCounter.c **** 
1166:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1167:.\Generated_Source\PSoC4/PPMCounter.c **** }
1168:.\Generated_Source\PSoC4/PPMCounter.c **** 
1169:.\Generated_Source\PSoC4/PPMCounter.c **** 
1170:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCountMode
1172:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/PPMCounter.c **** *
1174:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1175:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/PPMCounter.c **** *  input.
1177:.\Generated_Source\PSoC4/PPMCounter.c **** *
1178:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1179:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1181:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/PPMCounter.c **** *
1186:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1187:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1188:.\Generated_Source\PSoC4/PPMCounter.c **** *
1189:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/PPMCounter.c **** {
1192:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/PPMCounter.c **** 
1194:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1195:.\Generated_Source\PSoC4/PPMCounter.c **** 
1196:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_COUNT_MASK;
1197:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
1198:.\Generated_Source\PSoC4/PPMCounter.c **** 
1199:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1200:.\Generated_Source\PSoC4/PPMCounter.c **** }
1201:.\Generated_Source\PSoC4/PPMCounter.c **** 
1202:.\Generated_Source\PSoC4/PPMCounter.c **** 
1203:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_TriggerCommand
1205:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/PPMCounter.c **** *
1207:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1208:.\Generated_Source\PSoC4/PPMCounter.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/PPMCounter.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/PPMCounter.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/PPMCounter.c **** *
1212:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1213:.\Generated_Source\PSoC4/PPMCounter.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/PPMCounter.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/PPMCounter.c **** *        to apply the command to any of the instances in the design.
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 23


1216:.\Generated_Source\PSoC4/PPMCounter.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/PPMCounter.c **** *        define.
1218:.\Generated_Source\PSoC4/PPMCounter.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/PPMCounter.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1221:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/PPMCounter.c **** *
1226:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1227:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1228:.\Generated_Source\PSoC4/PPMCounter.c **** *
1229:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/PPMCounter.c **** {
1232:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/PPMCounter.c **** 
1234:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1235:.\Generated_Source\PSoC4/PPMCounter.c **** 
1236:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMMAND_REG = ((uint32)(mask << command));
1237:.\Generated_Source\PSoC4/PPMCounter.c **** 
1238:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1239:.\Generated_Source\PSoC4/PPMCounter.c **** }
1240:.\Generated_Source\PSoC4/PPMCounter.c **** 
1241:.\Generated_Source\PSoC4/PPMCounter.c **** 
1242:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadStatus
1244:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/PPMCounter.c **** *
1246:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1247:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the status of the PPMCounter.
1248:.\Generated_Source\PSoC4/PPMCounter.c **** *
1249:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1250:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1251:.\Generated_Source\PSoC4/PPMCounter.c **** *
1252:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1253:.\Generated_Source\PSoC4/PPMCounter.c **** *  Status
1254:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1255:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/PPMCounter.c **** *
1258:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadStatus(void)
1260:.\Generated_Source\PSoC4/PPMCounter.c **** {
1261:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
1262:.\Generated_Source\PSoC4/PPMCounter.c ****             (PPMCounter_STATUS_REG & PPMCounter_STATUS_DOWN));
1263:.\Generated_Source\PSoC4/PPMCounter.c **** }
1264:.\Generated_Source\PSoC4/PPMCounter.c **** 
1265:.\Generated_Source\PSoC4/PPMCounter.c **** 
1266:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetInterruptMode
1268:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/PPMCounter.c **** *
1270:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1271:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/PPMCounter.c **** *  requests generate the interrupt signal.
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 24


1273:.\Generated_Source\PSoC4/PPMCounter.c **** *
1274:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1275:.\Generated_Source\PSoC4/PPMCounter.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1277:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/PPMCounter.c **** *
1280:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1281:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1282:.\Generated_Source\PSoC4/PPMCounter.c **** *
1283:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/PPMCounter.c **** {
1286:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_MASK_REG =  interruptMask;
  40              		.loc 1 1286 0
  41 000e 074B     		ldr	r3, .L2+8
  42 0010 0222     		mov	r2, #2
  43 0012 1A60     		str	r2, [r3]
  44              	.LVL1:
  45              	.LBE9:
  46              	.LBE8:
  47              	.LBB10:
  48              	.LBB11:
 689:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_REG = (period & PPMCounter_16BIT_MASK);
  49              		.loc 1 689 0
  50 0014 064B     		ldr	r3, .L2+12
  51 0016 E122     		mov	r2, #225
  52 0018 1201     		lsl	r2, r2, #4
  53 001a 1A60     		str	r2, [r3]
  54              	.LVL2:
  55              	.LBE11:
  56              	.LBE10:
  57              	.LBB12:
  58              	.LBB13:
 611:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COUNTER_REG = (count & PPMCounter_16BIT_MASK);
  59              		.loc 1 611 0
  60 001c 054B     		ldr	r3, .L2+16
  61 001e 0022     		mov	r2, #0
  62 0020 1A60     		str	r2, [r3]
  63              	.LBE13:
  64              	.LBE12:
 160:.\Generated_Source\PSoC4/PPMCounter.c **** }
  65              		.loc 1 160 0
  66              		@ sp needed
  67 0022 7047     		bx	lr
  68              	.L3:
  69              		.align	2
  70              	.L2:
  71 0024 C0010540 		.word	1074069952
  72 0028 E4010540 		.word	1074069988
  73 002c F8010540 		.word	1074070008
  74 0030 D4010540 		.word	1074069972
  75 0034 C8010540 		.word	1074069960
  76              		.cfi_endproc
  77              	.LFE0:
  78              		.size	PPMCounter_Init, .-PPMCounter_Init
  79              		.section	.text.PPMCounter_Stop,"ax",%progbits
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 25


  80              		.align	1
  81              		.global	PPMCounter_Stop
  82              		.code	16
  83              		.thumb_func
  84              		.type	PPMCounter_Stop, %function
  85              	PPMCounter_Stop:
  86              	.LFB3:
 251:.\Generated_Source\PSoC4/PPMCounter.c **** {
  87              		.loc 1 251 0
  88              		.cfi_startproc
  89 0000 08B5     		push	{r3, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
 254:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
  93              		.loc 1 254 0
  94 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  95              	.LVL3:
 256:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG &= (uint32)~PPMCounter_MASK;
  96              		.loc 1 256 0
  97 0006 044B     		ldr	r3, .L5
  98 0008 0821     		mov	r1, #8
  99 000a 1A68     		ldr	r2, [r3]
 259:.\Generated_Source\PSoC4/PPMCounter.c **** }
 100              		.loc 1 259 0
 101              		@ sp needed
 256:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG &= (uint32)~PPMCounter_MASK;
 102              		.loc 1 256 0
 103 000c 8A43     		bic	r2, r1
 104 000e 1A60     		str	r2, [r3]
 258:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 105              		.loc 1 258 0
 106 0010 FFF7FEFF 		bl	CyExitCriticalSection
 107              	.LVL4:
 259:.\Generated_Source\PSoC4/PPMCounter.c **** }
 108              		.loc 1 259 0
 109 0014 08BD     		pop	{r3, pc}
 110              	.L6:
 111 0016 C046     		.align	2
 112              	.L5:
 113 0018 00000540 		.word	1074069504
 114              		.cfi_endproc
 115              	.LFE3:
 116              		.size	PPMCounter_Stop, .-PPMCounter_Stop
 117              		.section	.text.PPMCounter_SetMode,"ax",%progbits
 118              		.align	1
 119              		.global	PPMCounter_SetMode
 120              		.code	16
 121              		.thumb_func
 122              		.type	PPMCounter_SetMode, %function
 123              	PPMCounter_SetMode:
 124              	.LFB4:
 288:.\Generated_Source\PSoC4/PPMCounter.c **** {
 125              		.loc 1 288 0
 126              		.cfi_startproc
 127              	.LVL5:
 128 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 26


 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 288:.\Generated_Source\PSoC4/PPMCounter.c **** {
 132              		.loc 1 288 0
 133 0002 041C     		mov	r4, r0
 291:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 134              		.loc 1 291 0
 135 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 136              	.LVL6:
 293:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_MODE_MASK;
 137              		.loc 1 293 0
 138 0008 054B     		ldr	r3, .L8
 139 000a 064A     		ldr	r2, .L8+4
 140 000c 1968     		ldr	r1, [r3]
 297:.\Generated_Source\PSoC4/PPMCounter.c **** }
 141              		.loc 1 297 0
 142              		@ sp needed
 293:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_MODE_MASK;
 143              		.loc 1 293 0
 144 000e 0A40     		and	r2, r1
 145 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mode;
 146              		.loc 1 294 0
 147 0012 1A68     		ldr	r2, [r3]
 148 0014 1443     		orr	r4, r2
 149              	.LVL7:
 150 0016 1C60     		str	r4, [r3]
 296:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 151              		.loc 1 296 0
 152 0018 FFF7FEFF 		bl	CyExitCriticalSection
 153              	.LVL8:
 297:.\Generated_Source\PSoC4/PPMCounter.c **** }
 154              		.loc 1 297 0
 155 001c 10BD     		pop	{r4, pc}
 156              	.L9:
 157 001e C046     		.align	2
 158              	.L8:
 159 0020 C0010540 		.word	1074069952
 160 0024 FFFFFFF8 		.word	-117440513
 161              		.cfi_endproc
 162              	.LFE4:
 163              		.size	PPMCounter_SetMode, .-PPMCounter_SetMode
 164              		.section	.text.PPMCounter_SetQDMode,"ax",%progbits
 165              		.align	1
 166              		.global	PPMCounter_SetQDMode
 167              		.code	16
 168              		.thumb_func
 169              		.type	PPMCounter_SetQDMode, %function
 170              	PPMCounter_SetQDMode:
 171              	.LFB5:
 321:.\Generated_Source\PSoC4/PPMCounter.c **** {
 172              		.loc 1 321 0
 173              		.cfi_startproc
 174              	.LVL9:
 175 0000 10B5     		push	{r4, lr}
 176              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 27


 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 321:.\Generated_Source\PSoC4/PPMCounter.c **** {
 179              		.loc 1 321 0
 180 0002 041C     		mov	r4, r0
 324:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 181              		.loc 1 324 0
 182 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 183              	.LVL10:
 326:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_QUAD_MODE_MASK;
 184              		.loc 1 326 0
 185 0008 054B     		ldr	r3, .L11
 186 000a 064A     		ldr	r2, .L11+4
 187 000c 1968     		ldr	r1, [r3]
 330:.\Generated_Source\PSoC4/PPMCounter.c **** }
 188              		.loc 1 330 0
 189              		@ sp needed
 326:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_QUAD_MODE_MASK;
 190              		.loc 1 326 0
 191 000e 0A40     		and	r2, r1
 192 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= qdMode;
 193              		.loc 1 327 0
 194 0012 1A68     		ldr	r2, [r3]
 195 0014 1443     		orr	r4, r2
 196              	.LVL11:
 197 0016 1C60     		str	r4, [r3]
 329:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 198              		.loc 1 329 0
 199 0018 FFF7FEFF 		bl	CyExitCriticalSection
 200              	.LVL12:
 330:.\Generated_Source\PSoC4/PPMCounter.c **** }
 201              		.loc 1 330 0
 202 001c 10BD     		pop	{r4, pc}
 203              	.L12:
 204 001e C046     		.align	2
 205              	.L11:
 206 0020 C0010540 		.word	1074069952
 207 0024 FFFF8FFF 		.word	-7340033
 208              		.cfi_endproc
 209              	.LFE5:
 210              		.size	PPMCounter_SetQDMode, .-PPMCounter_SetQDMode
 211              		.section	.text.PPMCounter_SetPrescaler,"ax",%progbits
 212              		.align	1
 213              		.global	PPMCounter_SetPrescaler
 214              		.code	16
 215              		.thumb_func
 216              		.type	PPMCounter_SetPrescaler, %function
 217              	PPMCounter_SetPrescaler:
 218              	.LFB6:
 358:.\Generated_Source\PSoC4/PPMCounter.c **** {
 219              		.loc 1 358 0
 220              		.cfi_startproc
 221              	.LVL13:
 222 0000 10B5     		push	{r4, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 4, -8
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 28


 225              		.cfi_offset 14, -4
 358:.\Generated_Source\PSoC4/PPMCounter.c **** {
 226              		.loc 1 358 0
 227 0002 041C     		mov	r4, r0
 361:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 228              		.loc 1 361 0
 229 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 230              	.LVL14:
 363:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 231              		.loc 1 363 0
 232 0008 054B     		ldr	r3, .L14
 233 000a 064A     		ldr	r2, .L14+4
 234 000c 1968     		ldr	r1, [r3]
 367:.\Generated_Source\PSoC4/PPMCounter.c **** }
 235              		.loc 1 367 0
 236              		@ sp needed
 363:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 237              		.loc 1 363 0
 238 000e 0A40     		and	r2, r1
 239 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= prescaler;
 240              		.loc 1 364 0
 241 0012 1A68     		ldr	r2, [r3]
 242 0014 1443     		orr	r4, r2
 243              	.LVL15:
 244 0016 1C60     		str	r4, [r3]
 366:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 245              		.loc 1 366 0
 246 0018 FFF7FEFF 		bl	CyExitCriticalSection
 247              	.LVL16:
 367:.\Generated_Source\PSoC4/PPMCounter.c **** }
 248              		.loc 1 367 0
 249 001c 10BD     		pop	{r4, pc}
 250              	.L15:
 251 001e C046     		.align	2
 252              	.L14:
 253 0020 C0010540 		.word	1074069952
 254 0024 FF00FFFF 		.word	-65281
 255              		.cfi_endproc
 256              	.LFE6:
 257              		.size	PPMCounter_SetPrescaler, .-PPMCounter_SetPrescaler
 258              		.section	.text.PPMCounter_SetOneShot,"ax",%progbits
 259              		.align	1
 260              		.global	PPMCounter_SetOneShot
 261              		.code	16
 262              		.thumb_func
 263              		.type	PPMCounter_SetOneShot, %function
 264              	PPMCounter_SetOneShot:
 265              	.LFB7:
 390:.\Generated_Source\PSoC4/PPMCounter.c **** {
 266              		.loc 1 390 0
 267              		.cfi_startproc
 268              	.LVL17:
 269 0000 10B5     		push	{r4, lr}
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 29


 390:.\Generated_Source\PSoC4/PPMCounter.c **** {
 273              		.loc 1 390 0
 274 0002 041C     		mov	r4, r0
 393:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 275              		.loc 1 393 0
 276 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 277              	.LVL18:
 395:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_ONESHOT_MASK;
 278              		.loc 1 395 0
 279 0008 064B     		ldr	r3, .L17
 280 000a 074A     		ldr	r2, .L17+4
 281 000c 1968     		ldr	r1, [r3]
 400:.\Generated_Source\PSoC4/PPMCounter.c **** }
 282              		.loc 1 400 0
 283              		@ sp needed
 395:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_ONESHOT_MASK;
 284              		.loc 1 395 0
 285 000e 0A40     		and	r2, r1
 286 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((oneShotEnable & PPMCounter_1BIT_MASK) <<
 287              		.loc 1 396 0
 288 0012 0121     		mov	r1, #1
 289 0014 1A68     		ldr	r2, [r3]
 290 0016 0C40     		and	r4, r1
 291              	.LVL19:
 292 0018 A404     		lsl	r4, r4, #18
 293 001a 1443     		orr	r4, r2
 294 001c 1C60     		str	r4, [r3]
 399:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 295              		.loc 1 399 0
 296 001e FFF7FEFF 		bl	CyExitCriticalSection
 297              	.LVL20:
 400:.\Generated_Source\PSoC4/PPMCounter.c **** }
 298              		.loc 1 400 0
 299 0022 10BD     		pop	{r4, pc}
 300              	.L18:
 301              		.align	2
 302              	.L17:
 303 0024 C0010540 		.word	1074069952
 304 0028 FFFFFBFF 		.word	-262145
 305              		.cfi_endproc
 306              	.LFE7:
 307              		.size	PPMCounter_SetOneShot, .-PPMCounter_SetOneShot
 308              		.section	.text.PPMCounter_SetPWMMode,"ax",%progbits
 309              		.align	1
 310              		.global	PPMCounter_SetPWMMode
 311              		.code	16
 312              		.thumb_func
 313              		.type	PPMCounter_SetPWMMode, %function
 314              	PPMCounter_SetPWMMode:
 315              	.LFB8:
 444:.\Generated_Source\PSoC4/PPMCounter.c **** {
 316              		.loc 1 444 0
 317              		.cfi_startproc
 318              	.LVL21:
 445:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL2_REG = (modeMask & PPMCounter_6BIT_MASK);
 319              		.loc 1 445 0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 30


 320 0000 3F23     		mov	r3, #63
 321 0002 1840     		and	r0, r3
 322              	.LVL22:
 323 0004 014B     		ldr	r3, .L20
 446:.\Generated_Source\PSoC4/PPMCounter.c **** }
 324              		.loc 1 446 0
 325              		@ sp needed
 445:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL2_REG = (modeMask & PPMCounter_6BIT_MASK);
 326              		.loc 1 445 0
 327 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/PPMCounter.c **** }
 328              		.loc 1 446 0
 329 0008 7047     		bx	lr
 330              	.L21:
 331 000a C046     		.align	2
 332              	.L20:
 333 000c E8010540 		.word	1074069992
 334              		.cfi_endproc
 335              	.LFE8:
 336              		.size	PPMCounter_SetPWMMode, .-PPMCounter_SetPWMMode
 337              		.section	.text.PPMCounter_SetPWMSyncKill,"ax",%progbits
 338              		.align	1
 339              		.global	PPMCounter_SetPWMSyncKill
 340              		.code	16
 341              		.thumb_func
 342              		.type	PPMCounter_SetPWMSyncKill, %function
 343              	PPMCounter_SetPWMSyncKill:
 344              	.LFB9:
 480:.\Generated_Source\PSoC4/PPMCounter.c **** {
 345              		.loc 1 480 0
 346              		.cfi_startproc
 347              	.LVL23:
 348 0000 10B5     		push	{r4, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 480:.\Generated_Source\PSoC4/PPMCounter.c **** {
 352              		.loc 1 480 0
 353 0002 041C     		mov	r4, r0
 483:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 354              		.loc 1 483 0
 355 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 356              	.LVL24:
 485:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_SYNC_KILL_MASK;
 357              		.loc 1 485 0
 358 0008 064B     		ldr	r3, .L23
 359 000a 0421     		mov	r1, #4
 360 000c 1A68     		ldr	r2, [r3]
 490:.\Generated_Source\PSoC4/PPMCounter.c **** }
 361              		.loc 1 490 0
 362              		@ sp needed
 485:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_SYNC_KILL_MASK;
 363              		.loc 1 485 0
 364 000e 8A43     		bic	r2, r1
 365 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((syncKillEnable & PPMCounter_1BIT_MASK)  <<
 366              		.loc 1 486 0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 31


 367 0012 0121     		mov	r1, #1
 368 0014 1A68     		ldr	r2, [r3]
 369 0016 0C40     		and	r4, r1
 370              	.LVL25:
 371 0018 A400     		lsl	r4, r4, #2
 372 001a 1443     		orr	r4, r2
 373 001c 1C60     		str	r4, [r3]
 489:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 374              		.loc 1 489 0
 375 001e FFF7FEFF 		bl	CyExitCriticalSection
 376              	.LVL26:
 490:.\Generated_Source\PSoC4/PPMCounter.c **** }
 377              		.loc 1 490 0
 378 0022 10BD     		pop	{r4, pc}
 379              	.L24:
 380              		.align	2
 381              	.L23:
 382 0024 C0010540 		.word	1074069952
 383              		.cfi_endproc
 384              	.LFE9:
 385              		.size	PPMCounter_SetPWMSyncKill, .-PPMCounter_SetPWMSyncKill
 386              		.section	.text.PPMCounter_SetPWMStopOnKill,"ax",%progbits
 387              		.align	1
 388              		.global	PPMCounter_SetPWMStopOnKill
 389              		.code	16
 390              		.thumb_func
 391              		.type	PPMCounter_SetPWMStopOnKill, %function
 392              	PPMCounter_SetPWMStopOnKill:
 393              	.LFB10:
 514:.\Generated_Source\PSoC4/PPMCounter.c **** {
 394              		.loc 1 514 0
 395              		.cfi_startproc
 396              	.LVL27:
 397 0000 10B5     		push	{r4, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 4, -8
 400              		.cfi_offset 14, -4
 514:.\Generated_Source\PSoC4/PPMCounter.c **** {
 401              		.loc 1 514 0
 402 0002 041C     		mov	r4, r0
 517:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 403              		.loc 1 517 0
 404 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 405              	.LVL28:
 519:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_STOP_KILL_MASK;
 406              		.loc 1 519 0
 407 0008 064B     		ldr	r3, .L26
 408 000a 0821     		mov	r1, #8
 409 000c 1A68     		ldr	r2, [r3]
 524:.\Generated_Source\PSoC4/PPMCounter.c **** }
 410              		.loc 1 524 0
 411              		@ sp needed
 519:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_STOP_KILL_MASK;
 412              		.loc 1 519 0
 413 000e 8A43     		bic	r2, r1
 414 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((stopOnKillEnable & PPMCounter_1BIT_MASK)  <<
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 32


 415              		.loc 1 520 0
 416 0012 0121     		mov	r1, #1
 417 0014 1A68     		ldr	r2, [r3]
 418 0016 0C40     		and	r4, r1
 419              	.LVL29:
 420 0018 E400     		lsl	r4, r4, #3
 421 001a 1443     		orr	r4, r2
 422 001c 1C60     		str	r4, [r3]
 523:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 423              		.loc 1 523 0
 424 001e FFF7FEFF 		bl	CyExitCriticalSection
 425              	.LVL30:
 524:.\Generated_Source\PSoC4/PPMCounter.c **** }
 426              		.loc 1 524 0
 427 0022 10BD     		pop	{r4, pc}
 428              	.L27:
 429              		.align	2
 430              	.L26:
 431 0024 C0010540 		.word	1074069952
 432              		.cfi_endproc
 433              	.LFE10:
 434              		.size	PPMCounter_SetPWMStopOnKill, .-PPMCounter_SetPWMStopOnKill
 435              		.section	.text.PPMCounter_SetPWMDeadTime,"ax",%progbits
 436              		.align	1
 437              		.global	PPMCounter_SetPWMDeadTime
 438              		.code	16
 439              		.thumb_func
 440              		.type	PPMCounter_SetPWMDeadTime, %function
 441              	PPMCounter_SetPWMDeadTime:
 442              	.LFB11:
 547:.\Generated_Source\PSoC4/PPMCounter.c **** {
 443              		.loc 1 547 0
 444              		.cfi_startproc
 445              	.LVL31:
 446 0000 10B5     		push	{r4, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
 547:.\Generated_Source\PSoC4/PPMCounter.c **** {
 450              		.loc 1 547 0
 451 0002 041C     		mov	r4, r0
 550:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 452              		.loc 1 550 0
 453 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 454              	.LVL32:
 552:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 455              		.loc 1 552 0
 456 0008 064B     		ldr	r3, .L29
 457 000a 074A     		ldr	r2, .L29+4
 458 000c 1968     		ldr	r1, [r3]
 553:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((deadTime & PPMCounter_8BIT_MASK) <<
 459              		.loc 1 553 0
 460 000e 2406     		lsl	r4, r4, #24
 461              	.LVL33:
 552:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 462              		.loc 1 552 0
 463 0010 0A40     		and	r2, r1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 33


 464 0012 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((deadTime & PPMCounter_8BIT_MASK) <<
 465              		.loc 1 553 0
 466 0014 1A68     		ldr	r2, [r3]
 467 0016 240C     		lsr	r4, r4, #16
 468 0018 1443     		orr	r4, r2
 469 001a 1C60     		str	r4, [r3]
 556:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 470              		.loc 1 556 0
 471 001c FFF7FEFF 		bl	CyExitCriticalSection
 472              	.LVL34:
 557:.\Generated_Source\PSoC4/PPMCounter.c **** }
 473              		.loc 1 557 0
 474              		@ sp needed
 475 0020 10BD     		pop	{r4, pc}
 476              	.L30:
 477 0022 C046     		.align	2
 478              	.L29:
 479 0024 C0010540 		.word	1074069952
 480 0028 FF00FFFF 		.word	-65281
 481              		.cfi_endproc
 482              	.LFE11:
 483              		.size	PPMCounter_SetPWMDeadTime, .-PPMCounter_SetPWMDeadTime
 484              		.section	.text.PPMCounter_SetPWMInvert,"ax",%progbits
 485              		.align	1
 486              		.global	PPMCounter_SetPWMInvert
 487              		.code	16
 488              		.thumb_func
 489              		.type	PPMCounter_SetPWMInvert, %function
 490              	PPMCounter_SetPWMInvert:
 491              	.LFB12:
 580:.\Generated_Source\PSoC4/PPMCounter.c **** {
 492              		.loc 1 580 0
 493              		.cfi_startproc
 494              	.LVL35:
 495 0000 10B5     		push	{r4, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 4, -8
 498              		.cfi_offset 14, -4
 580:.\Generated_Source\PSoC4/PPMCounter.c **** {
 499              		.loc 1 580 0
 500 0002 041C     		mov	r4, r0
 583:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 501              		.loc 1 583 0
 502 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 503              	.LVL36:
 585:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_INV_OUT_MASK;
 504              		.loc 1 585 0
 505 0008 054B     		ldr	r3, .L32
 506 000a 064A     		ldr	r2, .L32+4
 507 000c 1968     		ldr	r1, [r3]
 589:.\Generated_Source\PSoC4/PPMCounter.c **** }
 508              		.loc 1 589 0
 509              		@ sp needed
 585:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_INV_OUT_MASK;
 510              		.loc 1 585 0
 511 000e 0A40     		and	r2, r1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 34


 512 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mask;
 513              		.loc 1 586 0
 514 0012 1A68     		ldr	r2, [r3]
 515 0014 1443     		orr	r4, r2
 516              	.LVL37:
 517 0016 1C60     		str	r4, [r3]
 588:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 518              		.loc 1 588 0
 519 0018 FFF7FEFF 		bl	CyExitCriticalSection
 520              	.LVL38:
 589:.\Generated_Source\PSoC4/PPMCounter.c **** }
 521              		.loc 1 589 0
 522 001c 10BD     		pop	{r4, pc}
 523              	.L33:
 524 001e C046     		.align	2
 525              	.L32:
 526 0020 C0010540 		.word	1074069952
 527 0024 FFFFCFFF 		.word	-3145729
 528              		.cfi_endproc
 529              	.LFE12:
 530              		.size	PPMCounter_SetPWMInvert, .-PPMCounter_SetPWMInvert
 531              		.section	.text.PPMCounter_WriteCounter,"ax",%progbits
 532              		.align	1
 533              		.global	PPMCounter_WriteCounter
 534              		.code	16
 535              		.thumb_func
 536              		.type	PPMCounter_WriteCounter, %function
 537              	PPMCounter_WriteCounter:
 538              	.LFB13:
 610:.\Generated_Source\PSoC4/PPMCounter.c **** {
 539              		.loc 1 610 0
 540              		.cfi_startproc
 541              	.LVL39:
 611:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COUNTER_REG = (count & PPMCounter_16BIT_MASK);
 542              		.loc 1 611 0
 543 0000 014B     		ldr	r3, .L35
 544 0002 80B2     		uxth	r0, r0
 545              	.LVL40:
 546 0004 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/PPMCounter.c **** }
 547              		.loc 1 612 0
 548              		@ sp needed
 549 0006 7047     		bx	lr
 550              	.L36:
 551              		.align	2
 552              	.L35:
 553 0008 C8010540 		.word	1074069960
 554              		.cfi_endproc
 555              	.LFE13:
 556              		.size	PPMCounter_WriteCounter, .-PPMCounter_WriteCounter
 557              		.section	.text.PPMCounter_ReadCounter,"ax",%progbits
 558              		.align	1
 559              		.global	PPMCounter_ReadCounter
 560              		.code	16
 561              		.thumb_func
 562              		.type	PPMCounter_ReadCounter, %function
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 35


 563              	PPMCounter_ReadCounter:
 564              	.LFB14:
 630:.\Generated_Source\PSoC4/PPMCounter.c **** {
 565              		.loc 1 630 0
 566              		.cfi_startproc
 631:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COUNTER_REG & PPMCounter_16BIT_MASK);
 567              		.loc 1 631 0
 568 0000 014B     		ldr	r3, .L38
 632:.\Generated_Source\PSoC4/PPMCounter.c **** }
 569              		.loc 1 632 0
 570              		@ sp needed
 631:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COUNTER_REG & PPMCounter_16BIT_MASK);
 571              		.loc 1 631 0
 572 0002 1868     		ldr	r0, [r3]
 573 0004 80B2     		uxth	r0, r0
 632:.\Generated_Source\PSoC4/PPMCounter.c **** }
 574              		.loc 1 632 0
 575 0006 7047     		bx	lr
 576              	.L39:
 577              		.align	2
 578              	.L38:
 579 0008 C8010540 		.word	1074069960
 580              		.cfi_endproc
 581              	.LFE14:
 582              		.size	PPMCounter_ReadCounter, .-PPMCounter_ReadCounter
 583              		.section	.text.PPMCounter_SetCounterMode,"ax",%progbits
 584              		.align	1
 585              		.global	PPMCounter_SetCounterMode
 586              		.code	16
 587              		.thumb_func
 588              		.type	PPMCounter_SetCounterMode, %function
 589              	PPMCounter_SetCounterMode:
 590              	.LFB15:
 659:.\Generated_Source\PSoC4/PPMCounter.c **** {
 591              		.loc 1 659 0
 592              		.cfi_startproc
 593              	.LVL41:
 594 0000 10B5     		push	{r4, lr}
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 4, -8
 597              		.cfi_offset 14, -4
 659:.\Generated_Source\PSoC4/PPMCounter.c **** {
 598              		.loc 1 659 0
 599 0002 041C     		mov	r4, r0
 662:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 600              		.loc 1 662 0
 601 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 602              	.LVL42:
 664:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_UPDOWN_MASK;
 603              		.loc 1 664 0
 604 0008 054B     		ldr	r3, .L41
 605 000a 064A     		ldr	r2, .L41+4
 606 000c 1968     		ldr	r1, [r3]
 668:.\Generated_Source\PSoC4/PPMCounter.c **** }
 607              		.loc 1 668 0
 608              		@ sp needed
 664:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_UPDOWN_MASK;
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 36


 609              		.loc 1 664 0
 610 000e 0A40     		and	r2, r1
 611 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= counterMode;
 612              		.loc 1 665 0
 613 0012 1A68     		ldr	r2, [r3]
 614 0014 1443     		orr	r4, r2
 615              	.LVL43:
 616 0016 1C60     		str	r4, [r3]
 667:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 617              		.loc 1 667 0
 618 0018 FFF7FEFF 		bl	CyExitCriticalSection
 619              	.LVL44:
 668:.\Generated_Source\PSoC4/PPMCounter.c **** }
 620              		.loc 1 668 0
 621 001c 10BD     		pop	{r4, pc}
 622              	.L42:
 623 001e C046     		.align	2
 624              	.L41:
 625 0020 C0010540 		.word	1074069952
 626 0024 FFFFFCFF 		.word	-196609
 627              		.cfi_endproc
 628              	.LFE15:
 629              		.size	PPMCounter_SetCounterMode, .-PPMCounter_SetCounterMode
 630              		.section	.text.PPMCounter_WritePeriod,"ax",%progbits
 631              		.align	1
 632              		.global	PPMCounter_WritePeriod
 633              		.code	16
 634              		.thumb_func
 635              		.type	PPMCounter_WritePeriod, %function
 636              	PPMCounter_WritePeriod:
 637              	.LFB16:
 688:.\Generated_Source\PSoC4/PPMCounter.c **** {
 638              		.loc 1 688 0
 639              		.cfi_startproc
 640              	.LVL45:
 689:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_REG = (period & PPMCounter_16BIT_MASK);
 641              		.loc 1 689 0
 642 0000 014B     		ldr	r3, .L44
 643 0002 80B2     		uxth	r0, r0
 644              	.LVL46:
 645 0004 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/PPMCounter.c **** }
 646              		.loc 1 690 0
 647              		@ sp needed
 648 0006 7047     		bx	lr
 649              	.L45:
 650              		.align	2
 651              	.L44:
 652 0008 D4010540 		.word	1074069972
 653              		.cfi_endproc
 654              	.LFE16:
 655              		.size	PPMCounter_WritePeriod, .-PPMCounter_WritePeriod
 656              		.section	.text.PPMCounter_ReadPeriod,"ax",%progbits
 657              		.align	1
 658              		.global	PPMCounter_ReadPeriod
 659              		.code	16
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 37


 660              		.thumb_func
 661              		.type	PPMCounter_ReadPeriod, %function
 662              	PPMCounter_ReadPeriod:
 663              	.LFB17:
 708:.\Generated_Source\PSoC4/PPMCounter.c **** {
 664              		.loc 1 708 0
 665              		.cfi_startproc
 709:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_REG & PPMCounter_16BIT_MASK);
 666              		.loc 1 709 0
 667 0000 014B     		ldr	r3, .L47
 710:.\Generated_Source\PSoC4/PPMCounter.c **** }
 668              		.loc 1 710 0
 669              		@ sp needed
 709:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_REG & PPMCounter_16BIT_MASK);
 670              		.loc 1 709 0
 671 0002 1868     		ldr	r0, [r3]
 672 0004 80B2     		uxth	r0, r0
 710:.\Generated_Source\PSoC4/PPMCounter.c **** }
 673              		.loc 1 710 0
 674 0006 7047     		bx	lr
 675              	.L48:
 676              		.align	2
 677              	.L47:
 678 0008 D4010540 		.word	1074069972
 679              		.cfi_endproc
 680              	.LFE17:
 681              		.size	PPMCounter_ReadPeriod, .-PPMCounter_ReadPeriod
 682              		.section	.text.PPMCounter_SetCompareSwap,"ax",%progbits
 683              		.align	1
 684              		.global	PPMCounter_SetCompareSwap
 685              		.code	16
 686              		.thumb_func
 687              		.type	PPMCounter_SetCompareSwap, %function
 688              	PPMCounter_SetCompareSwap:
 689              	.LFB18:
 734:.\Generated_Source\PSoC4/PPMCounter.c **** {
 690              		.loc 1 734 0
 691              		.cfi_startproc
 692              	.LVL47:
 693 0000 10B5     		push	{r4, lr}
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 4, -8
 696              		.cfi_offset 14, -4
 734:.\Generated_Source\PSoC4/PPMCounter.c **** {
 697              		.loc 1 734 0
 698 0002 041C     		mov	r4, r0
 737:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 699              		.loc 1 737 0
 700 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 701              	.LVL48:
 739:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_CC_MASK;
 702              		.loc 1 739 0
 703 0008 054B     		ldr	r3, .L50
 704 000a 0122     		mov	r2, #1
 705 000c 1968     		ldr	r1, [r3]
 743:.\Generated_Source\PSoC4/PPMCounter.c **** }
 706              		.loc 1 743 0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 38


 707              		@ sp needed
 739:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_CC_MASK;
 708              		.loc 1 739 0
 709 000e 9143     		bic	r1, r2
 710 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= (swapEnable & PPMCounter_1BIT_MASK);
 711              		.loc 1 740 0
 712 0012 1968     		ldr	r1, [r3]
 713 0014 2240     		and	r2, r4
 714 0016 0A43     		orr	r2, r1
 715 0018 1A60     		str	r2, [r3]
 742:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 716              		.loc 1 742 0
 717 001a FFF7FEFF 		bl	CyExitCriticalSection
 718              	.LVL49:
 719              	.LVL50:
 743:.\Generated_Source\PSoC4/PPMCounter.c **** }
 720              		.loc 1 743 0
 721 001e 10BD     		pop	{r4, pc}
 722              	.L51:
 723              		.align	2
 724              	.L50:
 725 0020 C0010540 		.word	1074069952
 726              		.cfi_endproc
 727              	.LFE18:
 728              		.size	PPMCounter_SetCompareSwap, .-PPMCounter_SetCompareSwap
 729              		.section	.text.PPMCounter_WritePeriodBuf,"ax",%progbits
 730              		.align	1
 731              		.global	PPMCounter_WritePeriodBuf
 732              		.code	16
 733              		.thumb_func
 734              		.type	PPMCounter_WritePeriodBuf, %function
 735              	PPMCounter_WritePeriodBuf:
 736              	.LFB19:
 761:.\Generated_Source\PSoC4/PPMCounter.c **** {
 737              		.loc 1 761 0
 738              		.cfi_startproc
 739              	.LVL51:
 762:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_BUF_REG = (periodBuf & PPMCounter_16BIT_MASK);
 740              		.loc 1 762 0
 741 0000 014B     		ldr	r3, .L53
 742 0002 80B2     		uxth	r0, r0
 743              	.LVL52:
 744 0004 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/PPMCounter.c **** }
 745              		.loc 1 763 0
 746              		@ sp needed
 747 0006 7047     		bx	lr
 748              	.L54:
 749              		.align	2
 750              	.L53:
 751 0008 D8010540 		.word	1074069976
 752              		.cfi_endproc
 753              	.LFE19:
 754              		.size	PPMCounter_WritePeriodBuf, .-PPMCounter_WritePeriodBuf
 755              		.section	.text.PPMCounter_ReadPeriodBuf,"ax",%progbits
 756              		.align	1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 39


 757              		.global	PPMCounter_ReadPeriodBuf
 758              		.code	16
 759              		.thumb_func
 760              		.type	PPMCounter_ReadPeriodBuf, %function
 761              	PPMCounter_ReadPeriodBuf:
 762              	.LFB20:
 781:.\Generated_Source\PSoC4/PPMCounter.c **** {
 763              		.loc 1 781 0
 764              		.cfi_startproc
 782:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_BUF_REG & PPMCounter_16BIT_MASK);
 765              		.loc 1 782 0
 766 0000 014B     		ldr	r3, .L56
 783:.\Generated_Source\PSoC4/PPMCounter.c **** }
 767              		.loc 1 783 0
 768              		@ sp needed
 782:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_BUF_REG & PPMCounter_16BIT_MASK);
 769              		.loc 1 782 0
 770 0002 1868     		ldr	r0, [r3]
 771 0004 80B2     		uxth	r0, r0
 783:.\Generated_Source\PSoC4/PPMCounter.c **** }
 772              		.loc 1 783 0
 773 0006 7047     		bx	lr
 774              	.L57:
 775              		.align	2
 776              	.L56:
 777 0008 D8010540 		.word	1074069976
 778              		.cfi_endproc
 779              	.LFE20:
 780              		.size	PPMCounter_ReadPeriodBuf, .-PPMCounter_ReadPeriodBuf
 781              		.section	.text.PPMCounter_SetPeriodSwap,"ax",%progbits
 782              		.align	1
 783              		.global	PPMCounter_SetPeriodSwap
 784              		.code	16
 785              		.thumb_func
 786              		.type	PPMCounter_SetPeriodSwap, %function
 787              	PPMCounter_SetPeriodSwap:
 788              	.LFB21:
 807:.\Generated_Source\PSoC4/PPMCounter.c **** {
 789              		.loc 1 807 0
 790              		.cfi_startproc
 791              	.LVL53:
 792 0000 10B5     		push	{r4, lr}
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 4, -8
 795              		.cfi_offset 14, -4
 807:.\Generated_Source\PSoC4/PPMCounter.c **** {
 796              		.loc 1 807 0
 797 0002 041C     		mov	r4, r0
 810:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 798              		.loc 1 810 0
 799 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 800              	.LVL54:
 812:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_PERIOD_MASK;
 801              		.loc 1 812 0
 802 0008 064B     		ldr	r3, .L59
 803 000a 0221     		mov	r1, #2
 804 000c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 40


 817:.\Generated_Source\PSoC4/PPMCounter.c **** }
 805              		.loc 1 817 0
 806              		@ sp needed
 812:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_PERIOD_MASK;
 807              		.loc 1 812 0
 808 000e 8A43     		bic	r2, r1
 809 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((swapEnable & PPMCounter_1BIT_MASK) <<
 810              		.loc 1 813 0
 811 0012 0121     		mov	r1, #1
 812 0014 1A68     		ldr	r2, [r3]
 813 0016 0C40     		and	r4, r1
 814              	.LVL55:
 815 0018 8C40     		lsl	r4, r4, r1
 816 001a 1443     		orr	r4, r2
 817 001c 1C60     		str	r4, [r3]
 816:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 818              		.loc 1 816 0
 819 001e FFF7FEFF 		bl	CyExitCriticalSection
 820              	.LVL56:
 817:.\Generated_Source\PSoC4/PPMCounter.c **** }
 821              		.loc 1 817 0
 822 0022 10BD     		pop	{r4, pc}
 823              	.L60:
 824              		.align	2
 825              	.L59:
 826 0024 C0010540 		.word	1074069952
 827              		.cfi_endproc
 828              	.LFE21:
 829              		.size	PPMCounter_SetPeriodSwap, .-PPMCounter_SetPeriodSwap
 830              		.section	.text.PPMCounter_WriteCompare,"ax",%progbits
 831              		.align	1
 832              		.global	PPMCounter_WriteCompare
 833              		.code	16
 834              		.thumb_func
 835              		.type	PPMCounter_WriteCompare, %function
 836              	PPMCounter_WriteCompare:
 837              	.LFB22:
 836:.\Generated_Source\PSoC4/PPMCounter.c **** {
 838              		.loc 1 836 0
 839              		.cfi_startproc
 840              	.LVL57:
 859:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMP_CAP_REG = (compare & PPMCounter_16BIT_MASK);
 841              		.loc 1 859 0
 842 0000 014B     		ldr	r3, .L62
 843 0002 80B2     		uxth	r0, r0
 844              	.LVL58:
 845 0004 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/PPMCounter.c **** }
 846              		.loc 1 860 0
 847              		@ sp needed
 848 0006 7047     		bx	lr
 849              	.L63:
 850              		.align	2
 851              	.L62:
 852 0008 CC010540 		.word	1074069964
 853              		.cfi_endproc
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 41


 854              	.LFE22:
 855              		.size	PPMCounter_WriteCompare, .-PPMCounter_WriteCompare
 856              		.section	.text.PPMCounter_ReadCompare,"ax",%progbits
 857              		.align	1
 858              		.global	PPMCounter_ReadCompare
 859              		.code	16
 860              		.thumb_func
 861              		.type	PPMCounter_ReadCompare, %function
 862              	PPMCounter_ReadCompare:
 863              	.LFB23:
 879:.\Generated_Source\PSoC4/PPMCounter.c **** {
 864              		.loc 1 879 0
 865              		.cfi_startproc
 904:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 866              		.loc 1 904 0
 867 0000 014B     		ldr	r3, .L65
 906:.\Generated_Source\PSoC4/PPMCounter.c **** }
 868              		.loc 1 906 0
 869              		@ sp needed
 904:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 870              		.loc 1 904 0
 871 0002 1868     		ldr	r0, [r3]
 872 0004 80B2     		uxth	r0, r0
 906:.\Generated_Source\PSoC4/PPMCounter.c **** }
 873              		.loc 1 906 0
 874 0006 7047     		bx	lr
 875              	.L66:
 876              		.align	2
 877              	.L65:
 878 0008 CC010540 		.word	1074069964
 879              		.cfi_endproc
 880              	.LFE23:
 881              		.size	PPMCounter_ReadCompare, .-PPMCounter_ReadCompare
 882              		.section	.text.PPMCounter_WriteCompareBuf,"ax",%progbits
 883              		.align	1
 884              		.global	PPMCounter_WriteCompareBuf
 885              		.code	16
 886              		.thumb_func
 887              		.type	PPMCounter_WriteCompareBuf, %function
 888              	PPMCounter_WriteCompareBuf:
 889              	.LFB24:
 925:.\Generated_Source\PSoC4/PPMCounter.c **** {
 890              		.loc 1 925 0
 891              		.cfi_startproc
 892              	.LVL59:
 946:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMP_CAP_BUF_REG = (compareBuf & PPMCounter_16BIT_MASK);
 893              		.loc 1 946 0
 894 0000 014B     		ldr	r3, .L68
 895 0002 80B2     		uxth	r0, r0
 896              	.LVL60:
 897 0004 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/PPMCounter.c **** }
 898              		.loc 1 947 0
 899              		@ sp needed
 900 0006 7047     		bx	lr
 901              	.L69:
 902              		.align	2
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 42


 903              	.L68:
 904 0008 D0010540 		.word	1074069968
 905              		.cfi_endproc
 906              	.LFE24:
 907              		.size	PPMCounter_WriteCompareBuf, .-PPMCounter_WriteCompareBuf
 908              		.section	.text.PPMCounter_ReadCompareBuf,"ax",%progbits
 909              		.align	1
 910              		.global	PPMCounter_ReadCompareBuf
 911              		.code	16
 912              		.thumb_func
 913              		.type	PPMCounter_ReadCompareBuf, %function
 914              	PPMCounter_ReadCompareBuf:
 915              	.LFB25:
 966:.\Generated_Source\PSoC4/PPMCounter.c **** {
 916              		.loc 1 966 0
 917              		.cfi_startproc
 991:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 918              		.loc 1 991 0
 919 0000 014B     		ldr	r3, .L71
 993:.\Generated_Source\PSoC4/PPMCounter.c **** }
 920              		.loc 1 993 0
 921              		@ sp needed
 991:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 922              		.loc 1 991 0
 923 0002 1868     		ldr	r0, [r3]
 924 0004 80B2     		uxth	r0, r0
 993:.\Generated_Source\PSoC4/PPMCounter.c **** }
 925              		.loc 1 993 0
 926 0006 7047     		bx	lr
 927              	.L72:
 928              		.align	2
 929              	.L71:
 930 0008 D0010540 		.word	1074069968
 931              		.cfi_endproc
 932              	.LFE25:
 933              		.size	PPMCounter_ReadCompareBuf, .-PPMCounter_ReadCompareBuf
 934              		.section	.text.PPMCounter_ReadCapture,"ax",%progbits
 935              		.align	1
 936              		.global	PPMCounter_ReadCapture
 937              		.code	16
 938              		.thumb_func
 939              		.type	PPMCounter_ReadCapture, %function
 940              	PPMCounter_ReadCapture:
 941              	.LFB26:
1012:.\Generated_Source\PSoC4/PPMCounter.c **** {
 942              		.loc 1 1012 0
 943              		.cfi_startproc
1013:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 944              		.loc 1 1013 0
 945 0000 014B     		ldr	r3, .L74
1014:.\Generated_Source\PSoC4/PPMCounter.c **** }
 946              		.loc 1 1014 0
 947              		@ sp needed
1013:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 948              		.loc 1 1013 0
 949 0002 1868     		ldr	r0, [r3]
 950 0004 80B2     		uxth	r0, r0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 43


1014:.\Generated_Source\PSoC4/PPMCounter.c **** }
 951              		.loc 1 1014 0
 952 0006 7047     		bx	lr
 953              	.L75:
 954              		.align	2
 955              	.L74:
 956 0008 CC010540 		.word	1074069964
 957              		.cfi_endproc
 958              	.LFE26:
 959              		.size	PPMCounter_ReadCapture, .-PPMCounter_ReadCapture
 960              		.section	.text.PPMCounter_ReadCaptureBuf,"ax",%progbits
 961              		.align	1
 962              		.global	PPMCounter_ReadCaptureBuf
 963              		.code	16
 964              		.thumb_func
 965              		.type	PPMCounter_ReadCaptureBuf, %function
 966              	PPMCounter_ReadCaptureBuf:
 967              	.LFB27:
1033:.\Generated_Source\PSoC4/PPMCounter.c **** {
 968              		.loc 1 1033 0
 969              		.cfi_startproc
1034:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 970              		.loc 1 1034 0
 971 0000 014B     		ldr	r3, .L77
1035:.\Generated_Source\PSoC4/PPMCounter.c **** }
 972              		.loc 1 1035 0
 973              		@ sp needed
1034:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 974              		.loc 1 1034 0
 975 0002 1868     		ldr	r0, [r3]
 976 0004 80B2     		uxth	r0, r0
1035:.\Generated_Source\PSoC4/PPMCounter.c **** }
 977              		.loc 1 1035 0
 978 0006 7047     		bx	lr
 979              	.L78:
 980              		.align	2
 981              	.L77:
 982 0008 D0010540 		.word	1074069968
 983              		.cfi_endproc
 984              	.LFE27:
 985              		.size	PPMCounter_ReadCaptureBuf, .-PPMCounter_ReadCaptureBuf
 986              		.section	.text.PPMCounter_SetCaptureMode,"ax",%progbits
 987              		.align	1
 988              		.global	PPMCounter_SetCaptureMode
 989              		.code	16
 990              		.thumb_func
 991              		.type	PPMCounter_SetCaptureMode, %function
 992              	PPMCounter_SetCaptureMode:
 993              	.LFB28:
1060:.\Generated_Source\PSoC4/PPMCounter.c **** {
 994              		.loc 1 1060 0
 995              		.cfi_startproc
 996              	.LVL61:
 997 0000 10B5     		push	{r4, lr}
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 4, -8
 1000              		.cfi_offset 14, -4
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 44


1060:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1001              		.loc 1 1060 0
 1002 0002 041C     		mov	r4, r0
1063:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1003              		.loc 1 1063 0
 1004 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1005              	.LVL62:
1065:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_CAPTURE_MASK;
 1006              		.loc 1 1065 0
 1007 0008 054B     		ldr	r3, .L80
 1008 000a 0321     		mov	r1, #3
 1009 000c 1A68     		ldr	r2, [r3]
1069:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1010              		.loc 1 1069 0
 1011              		@ sp needed
1065:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_CAPTURE_MASK;
 1012              		.loc 1 1065 0
 1013 000e 8A43     		bic	r2, r1
 1014 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= triggerMode;
 1015              		.loc 1 1066 0
 1016 0012 1A68     		ldr	r2, [r3]
 1017 0014 1443     		orr	r4, r2
 1018              	.LVL63:
 1019 0016 1C60     		str	r4, [r3]
1068:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1020              		.loc 1 1068 0
 1021 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1022              	.LVL64:
1069:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1023              		.loc 1 1069 0
 1024 001c 10BD     		pop	{r4, pc}
 1025              	.L81:
 1026 001e C046     		.align	2
 1027              	.L80:
 1028 0020 E4010540 		.word	1074069988
 1029              		.cfi_endproc
 1030              	.LFE28:
 1031              		.size	PPMCounter_SetCaptureMode, .-PPMCounter_SetCaptureMode
 1032              		.section	.text.PPMCounter_SetReloadMode,"ax",%progbits
 1033              		.align	1
 1034              		.global	PPMCounter_SetReloadMode
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	PPMCounter_SetReloadMode, %function
 1038              	PPMCounter_SetReloadMode:
 1039              	.LFB29:
1093:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1040              		.loc 1 1093 0
 1041              		.cfi_startproc
 1042              	.LVL65:
 1043 0000 10B5     		push	{r4, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 4, -8
 1046              		.cfi_offset 14, -4
1093:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1047              		.loc 1 1093 0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 45


 1048 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1049              		.loc 1 1096 0
 1050 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1051              	.LVL66:
1098:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_RELOAD_MASK;
 1052              		.loc 1 1098 0
 1053 0008 054B     		ldr	r3, .L83
 1054 000a 3021     		mov	r1, #48
 1055 000c 1A68     		ldr	r2, [r3]
1099:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
 1056              		.loc 1 1099 0
 1057 000e 2401     		lsl	r4, r4, #4
 1058              	.LVL67:
1098:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_RELOAD_MASK;
 1059              		.loc 1 1098 0
 1060 0010 8A43     		bic	r2, r1
 1061 0012 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
 1062              		.loc 1 1099 0
 1063 0014 1A68     		ldr	r2, [r3]
1102:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1064              		.loc 1 1102 0
 1065              		@ sp needed
1099:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
 1066              		.loc 1 1099 0
 1067 0016 1443     		orr	r4, r2
 1068 0018 1C60     		str	r4, [r3]
1101:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1069              		.loc 1 1101 0
 1070 001a FFF7FEFF 		bl	CyExitCriticalSection
 1071              	.LVL68:
1102:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1072              		.loc 1 1102 0
 1073 001e 10BD     		pop	{r4, pc}
 1074              	.L84:
 1075              		.align	2
 1076              	.L83:
 1077 0020 E4010540 		.word	1074069988
 1078              		.cfi_endproc
 1079              	.LFE29:
 1080              		.size	PPMCounter_SetReloadMode, .-PPMCounter_SetReloadMode
 1081              		.section	.text.PPMCounter_SetStartMode,"ax",%progbits
 1082              		.align	1
 1083              		.global	PPMCounter_SetStartMode
 1084              		.code	16
 1085              		.thumb_func
 1086              		.type	PPMCounter_SetStartMode, %function
 1087              	PPMCounter_SetStartMode:
 1088              	.LFB30:
1126:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1089              		.loc 1 1126 0
 1090              		.cfi_startproc
 1091              	.LVL69:
 1092 0000 10B5     		push	{r4, lr}
 1093              		.cfi_def_cfa_offset 8
 1094              		.cfi_offset 4, -8
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 46


 1095              		.cfi_offset 14, -4
1126:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1096              		.loc 1 1126 0
 1097 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1098              		.loc 1 1129 0
 1099 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1100              	.LVL70:
1131:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_START_MASK;
 1101              		.loc 1 1131 0
 1102 0008 054B     		ldr	r3, .L86
 1103 000a 064A     		ldr	r2, .L86+4
 1104 000c 1968     		ldr	r1, [r3]
1132:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
 1105              		.loc 1 1132 0
 1106 000e 2402     		lsl	r4, r4, #8
 1107              	.LVL71:
1131:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_START_MASK;
 1108              		.loc 1 1131 0
 1109 0010 0A40     		and	r2, r1
 1110 0012 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
 1111              		.loc 1 1132 0
 1112 0014 1A68     		ldr	r2, [r3]
1135:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1113              		.loc 1 1135 0
 1114              		@ sp needed
1132:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
 1115              		.loc 1 1132 0
 1116 0016 1443     		orr	r4, r2
 1117 0018 1C60     		str	r4, [r3]
1134:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1118              		.loc 1 1134 0
 1119 001a FFF7FEFF 		bl	CyExitCriticalSection
 1120              	.LVL72:
1135:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1121              		.loc 1 1135 0
 1122 001e 10BD     		pop	{r4, pc}
 1123              	.L87:
 1124              		.align	2
 1125              	.L86:
 1126 0020 E4010540 		.word	1074069988
 1127 0024 FFFCFFFF 		.word	-769
 1128              		.cfi_endproc
 1129              	.LFE30:
 1130              		.size	PPMCounter_SetStartMode, .-PPMCounter_SetStartMode
 1131              		.section	.text.PPMCounter_SetStopMode,"ax",%progbits
 1132              		.align	1
 1133              		.global	PPMCounter_SetStopMode
 1134              		.code	16
 1135              		.thumb_func
 1136              		.type	PPMCounter_SetStopMode, %function
 1137              	PPMCounter_SetStopMode:
 1138              	.LFB31:
1158:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1139              		.loc 1 1158 0
 1140              		.cfi_startproc
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 47


 1141              	.LVL73:
 1142 0000 10B5     		push	{r4, lr}
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 4, -8
 1145              		.cfi_offset 14, -4
1158:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1146              		.loc 1 1158 0
 1147 0002 041C     		mov	r4, r0
1161:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1148              		.loc 1 1161 0
 1149 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1150              	.LVL74:
1163:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_STOP_MASK;
 1151              		.loc 1 1163 0
 1152 0008 054B     		ldr	r3, .L89
 1153 000a C021     		mov	r1, #192
 1154 000c 1A68     		ldr	r2, [r3]
1164:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
 1155              		.loc 1 1164 0
 1156 000e A401     		lsl	r4, r4, #6
 1157              	.LVL75:
1163:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_STOP_MASK;
 1158              		.loc 1 1163 0
 1159 0010 8A43     		bic	r2, r1
 1160 0012 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
 1161              		.loc 1 1164 0
 1162 0014 1A68     		ldr	r2, [r3]
1167:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1163              		.loc 1 1167 0
 1164              		@ sp needed
1164:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
 1165              		.loc 1 1164 0
 1166 0016 1443     		orr	r4, r2
 1167 0018 1C60     		str	r4, [r3]
1166:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1168              		.loc 1 1166 0
 1169 001a FFF7FEFF 		bl	CyExitCriticalSection
 1170              	.LVL76:
1167:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1171              		.loc 1 1167 0
 1172 001e 10BD     		pop	{r4, pc}
 1173              	.L90:
 1174              		.align	2
 1175              	.L89:
 1176 0020 E4010540 		.word	1074069988
 1177              		.cfi_endproc
 1178              	.LFE31:
 1179              		.size	PPMCounter_SetStopMode, .-PPMCounter_SetStopMode
 1180              		.section	.text.PPMCounter_SetCountMode,"ax",%progbits
 1181              		.align	1
 1182              		.global	PPMCounter_SetCountMode
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	PPMCounter_SetCountMode, %function
 1186              	PPMCounter_SetCountMode:
 1187              	.LFB32:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 48


1191:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1188              		.loc 1 1191 0
 1189              		.cfi_startproc
 1190              	.LVL77:
 1191 0000 10B5     		push	{r4, lr}
 1192              		.cfi_def_cfa_offset 8
 1193              		.cfi_offset 4, -8
 1194              		.cfi_offset 14, -4
1191:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1195              		.loc 1 1191 0
 1196 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1197              		.loc 1 1194 0
 1198 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1199              	.LVL78:
1196:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_COUNT_MASK;
 1200              		.loc 1 1196 0
 1201 0008 054B     		ldr	r3, .L92
 1202 000a 0C21     		mov	r1, #12
 1203 000c 1A68     		ldr	r2, [r3]
1197:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
 1204              		.loc 1 1197 0
 1205 000e A400     		lsl	r4, r4, #2
 1206              	.LVL79:
1196:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_COUNT_MASK;
 1207              		.loc 1 1196 0
 1208 0010 8A43     		bic	r2, r1
 1209 0012 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
 1210              		.loc 1 1197 0
 1211 0014 1A68     		ldr	r2, [r3]
1200:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1212              		.loc 1 1200 0
 1213              		@ sp needed
1197:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
 1214              		.loc 1 1197 0
 1215 0016 1443     		orr	r4, r2
 1216 0018 1C60     		str	r4, [r3]
1199:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1217              		.loc 1 1199 0
 1218 001a FFF7FEFF 		bl	CyExitCriticalSection
 1219              	.LVL80:
1200:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1220              		.loc 1 1200 0
 1221 001e 10BD     		pop	{r4, pc}
 1222              	.L93:
 1223              		.align	2
 1224              	.L92:
 1225 0020 E4010540 		.word	1074069988
 1226              		.cfi_endproc
 1227              	.LFE32:
 1228              		.size	PPMCounter_SetCountMode, .-PPMCounter_SetCountMode
 1229              		.section	.text.PPMCounter_TriggerCommand,"ax",%progbits
 1230              		.align	1
 1231              		.global	PPMCounter_TriggerCommand
 1232              		.code	16
 1233              		.thumb_func
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 49


 1234              		.type	PPMCounter_TriggerCommand, %function
 1235              	PPMCounter_TriggerCommand:
 1236              	.LFB33:
1231:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1237              		.loc 1 1231 0
 1238              		.cfi_startproc
 1239              	.LVL81:
 1240 0000 38B5     		push	{r3, r4, r5, lr}
 1241              		.cfi_def_cfa_offset 16
 1242              		.cfi_offset 3, -16
 1243              		.cfi_offset 4, -12
 1244              		.cfi_offset 5, -8
 1245              		.cfi_offset 14, -4
1231:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1246              		.loc 1 1231 0
 1247 0002 0C1C     		mov	r4, r1
 1248 0004 051C     		mov	r5, r0
1234:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1249              		.loc 1 1234 0
 1250 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1251              	.LVL82:
1236:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMMAND_REG = ((uint32)(mask << command));
 1252              		.loc 1 1236 0
 1253 000a 034B     		ldr	r3, .L95
 1254 000c A540     		lsl	r5, r5, r4
 1255              	.LVL83:
 1256 000e 1D60     		str	r5, [r3]
1238:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1257              		.loc 1 1238 0
 1258 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1259              	.LVL84:
1239:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1260              		.loc 1 1239 0
 1261              		@ sp needed
 1262              	.LVL85:
 1263 0014 38BD     		pop	{r3, r4, r5, pc}
 1264              	.L96:
 1265 0016 C046     		.align	2
 1266              	.L95:
 1267 0018 08000540 		.word	1074069512
 1268              		.cfi_endproc
 1269              	.LFE33:
 1270              		.size	PPMCounter_TriggerCommand, .-PPMCounter_TriggerCommand
 1271              		.section	.text.PPMCounter_Enable,"ax",%progbits
 1272              		.align	1
 1273              		.global	PPMCounter_Enable
 1274              		.code	16
 1275              		.thumb_func
 1276              		.type	PPMCounter_Enable, %function
 1277              	PPMCounter_Enable:
 1278              	.LFB1:
 178:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1279              		.loc 1 178 0
 1280              		.cfi_startproc
 1281 0000 10B5     		push	{r4, lr}
 1282              		.cfi_def_cfa_offset 8
 1283              		.cfi_offset 4, -8
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 50


 1284              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1285              		.loc 1 181 0
 1286 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1287              	.LVL86:
 182:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG |= PPMCounter_MASK;
 1288              		.loc 1 182 0
 1289 0006 064B     		ldr	r3, .L98
 1290 0008 0824     		mov	r4, #8
 1291 000a 1A68     		ldr	r2, [r3]
 197:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1292              		.loc 1 197 0
 1293              		@ sp needed
 182:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG |= PPMCounter_MASK;
 1294              		.loc 1 182 0
 1295 000c 2243     		orr	r2, r4
 1296 000e 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1297              		.loc 1 183 0
 1298 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1299              	.LVL87:
 194:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TriggerCommand(PPMCounter_MASK, PPMCounter_CMD_START);
 1300              		.loc 1 194 0
 1301 0014 201C     		mov	r0, r4
 1302 0016 1821     		mov	r1, #24
 1303 0018 FFF7FEFF 		bl	PPMCounter_TriggerCommand
 1304              	.LVL88:
 197:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1305              		.loc 1 197 0
 1306 001c 10BD     		pop	{r4, pc}
 1307              	.L99:
 1308 001e C046     		.align	2
 1309              	.L98:
 1310 0020 00000540 		.word	1074069504
 1311              		.cfi_endproc
 1312              	.LFE1:
 1313              		.size	PPMCounter_Enable, .-PPMCounter_Enable
 1314              		.section	.text.PPMCounter_Start,"ax",%progbits
 1315              		.align	1
 1316              		.global	PPMCounter_Start
 1317              		.code	16
 1318              		.thumb_func
 1319              		.type	PPMCounter_Start, %function
 1320              	PPMCounter_Start:
 1321              	.LFB2:
 225:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1322              		.loc 1 225 0
 1323              		.cfi_startproc
 1324 0000 10B5     		push	{r4, lr}
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 4, -8
 1327              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/PPMCounter.c ****     if (0u == PPMCounter_initVar)
 1328              		.loc 1 226 0
 1329 0002 054C     		ldr	r4, .L103
 1330 0004 2378     		ldrb	r3, [r4]
 1331 0006 002B     		cmp	r3, #0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 51


 1332 0008 03D1     		bne	.L101
 228:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_Init();
 1333              		.loc 1 228 0
 1334 000a FFF7FEFF 		bl	PPMCounter_Init
 1335              	.LVL89:
 229:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_initVar = 1u;
 1336              		.loc 1 229 0
 1337 000e 0123     		mov	r3, #1
 1338 0010 2370     		strb	r3, [r4]
 1339              	.L101:
 232:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_Enable();
 1340              		.loc 1 232 0
 1341 0012 FFF7FEFF 		bl	PPMCounter_Enable
 1342              	.LVL90:
 233:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1343              		.loc 1 233 0
 1344              		@ sp needed
 1345 0016 10BD     		pop	{r4, pc}
 1346              	.L104:
 1347              		.align	2
 1348              	.L103:
 1349 0018 00000000 		.word	.LANCHOR0
 1350              		.cfi_endproc
 1351              	.LFE2:
 1352              		.size	PPMCounter_Start, .-PPMCounter_Start
 1353              		.section	.text.PPMCounter_ReadStatus,"ax",%progbits
 1354              		.align	1
 1355              		.global	PPMCounter_ReadStatus
 1356              		.code	16
 1357              		.thumb_func
 1358              		.type	PPMCounter_ReadStatus, %function
 1359              	PPMCounter_ReadStatus:
 1360              	.LFB34:
1260:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1361              		.loc 1 1260 0
 1362              		.cfi_startproc
1261:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
 1363              		.loc 1 1261 0
 1364 0000 034B     		ldr	r3, .L106
1263:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1365              		.loc 1 1263 0
 1366              		@ sp needed
1261:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
 1367              		.loc 1 1261 0
 1368 0002 1A68     		ldr	r2, [r3]
1262:.\Generated_Source\PSoC4/PPMCounter.c ****             (PPMCounter_STATUS_REG & PPMCounter_STATUS_DOWN));
 1369              		.loc 1 1262 0
 1370 0004 1868     		ldr	r0, [r3]
 1371 0006 0123     		mov	r3, #1
 1372 0008 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
 1373              		.loc 1 1261 0
 1374 000a 930F     		lsr	r3, r2, #30
 1375 000c 1843     		orr	r0, r3
1263:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1376              		.loc 1 1263 0
 1377 000e 7047     		bx	lr
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 52


 1378              	.L107:
 1379              		.align	2
 1380              	.L106:
 1381 0010 C4010540 		.word	1074069956
 1382              		.cfi_endproc
 1383              	.LFE34:
 1384              		.size	PPMCounter_ReadStatus, .-PPMCounter_ReadStatus
 1385              		.section	.text.PPMCounter_SetInterruptMode,"ax",%progbits
 1386              		.align	1
 1387              		.global	PPMCounter_SetInterruptMode
 1388              		.code	16
 1389              		.thumb_func
 1390              		.type	PPMCounter_SetInterruptMode, %function
 1391              	PPMCounter_SetInterruptMode:
 1392              	.LFB35:
1285:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1393              		.loc 1 1285 0
 1394              		.cfi_startproc
 1395              	.LVL91:
 1396              		.loc 1 1286 0
 1397 0000 014B     		ldr	r3, .L109
1287:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1398              		.loc 1 1287 0
 1399              		@ sp needed
1286:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_MASK_REG =  interruptMask;
 1400              		.loc 1 1286 0
 1401 0002 1860     		str	r0, [r3]
 1402              		.loc 1 1287 0
 1403 0004 7047     		bx	lr
 1404              	.L110:
 1405 0006 C046     		.align	2
 1406              	.L109:
 1407 0008 F8010540 		.word	1074070008
 1408              		.cfi_endproc
 1409              	.LFE35:
 1410              		.size	PPMCounter_SetInterruptMode, .-PPMCounter_SetInterruptMode
 1411              		.section	.text.PPMCounter_GetInterruptSourceMasked,"ax",%progbits
 1412              		.align	1
 1413              		.global	PPMCounter_GetInterruptSourceMasked
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	PPMCounter_GetInterruptSourceMasked, %function
 1417              	PPMCounter_GetInterruptSourceMasked:
 1418              	.LFB36:
1288:.\Generated_Source\PSoC4/PPMCounter.c **** 
1289:.\Generated_Source\PSoC4/PPMCounter.c **** 
1290:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/PPMCounter.c **** *
1294:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1295:.\Generated_Source\PSoC4/PPMCounter.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/PPMCounter.c **** *
1297:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1298:.\Generated_Source\PSoC4/PPMCounter.c **** *   None
1299:.\Generated_Source\PSoC4/PPMCounter.c **** *
1300:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 53


1301:.\Generated_Source\PSoC4/PPMCounter.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1303:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/PPMCounter.c **** *
1306:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1419              		.loc 1 1308 0
 1420              		.cfi_startproc
1309:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_MASKED_REG);
 1421              		.loc 1 1309 0
 1422 0000 014B     		ldr	r3, .L112
1310:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1423              		.loc 1 1310 0
 1424              		@ sp needed
1309:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_MASKED_REG);
 1425              		.loc 1 1309 0
 1426 0002 1868     		ldr	r0, [r3]
 1427              		.loc 1 1310 0
 1428 0004 7047     		bx	lr
 1429              	.L113:
 1430 0006 C046     		.align	2
 1431              	.L112:
 1432 0008 FC010540 		.word	1074070012
 1433              		.cfi_endproc
 1434              	.LFE36:
 1435              		.size	PPMCounter_GetInterruptSourceMasked, .-PPMCounter_GetInterruptSourceMasked
 1436              		.section	.text.PPMCounter_GetInterruptSource,"ax",%progbits
 1437              		.align	1
 1438              		.global	PPMCounter_GetInterruptSource
 1439              		.code	16
 1440              		.thumb_func
 1441              		.type	PPMCounter_GetInterruptSource, %function
 1442              	PPMCounter_GetInterruptSource:
 1443              	.LFB37:
1311:.\Generated_Source\PSoC4/PPMCounter.c **** 
1312:.\Generated_Source\PSoC4/PPMCounter.c **** 
1313:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_GetInterruptSource
1315:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/PPMCounter.c **** *
1317:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1318:.\Generated_Source\PSoC4/PPMCounter.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/PPMCounter.c **** *
1320:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1321:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1322:.\Generated_Source\PSoC4/PPMCounter.c **** *
1323:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1324:.\Generated_Source\PSoC4/PPMCounter.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1326:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/PPMCounter.c **** *
1329:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/PPMCounter.c **** {
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 54


 1444              		.loc 1 1331 0
 1445              		.cfi_startproc
1332:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_REQ_REG);
 1446              		.loc 1 1332 0
 1447 0000 014B     		ldr	r3, .L115
1333:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1448              		.loc 1 1333 0
 1449              		@ sp needed
1332:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_REQ_REG);
 1450              		.loc 1 1332 0
 1451 0002 1868     		ldr	r0, [r3]
 1452              		.loc 1 1333 0
 1453 0004 7047     		bx	lr
 1454              	.L116:
 1455 0006 C046     		.align	2
 1456              	.L115:
 1457 0008 F0010540 		.word	1074070000
 1458              		.cfi_endproc
 1459              	.LFE37:
 1460              		.size	PPMCounter_GetInterruptSource, .-PPMCounter_GetInterruptSource
 1461              		.section	.text.PPMCounter_ClearInterrupt,"ax",%progbits
 1462              		.align	1
 1463              		.global	PPMCounter_ClearInterrupt
 1464              		.code	16
 1465              		.thumb_func
 1466              		.type	PPMCounter_ClearInterrupt, %function
 1467              	PPMCounter_ClearInterrupt:
 1468              	.LFB38:
1334:.\Generated_Source\PSoC4/PPMCounter.c **** 
1335:.\Generated_Source\PSoC4/PPMCounter.c **** 
1336:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ClearInterrupt
1338:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/PPMCounter.c **** *
1340:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1341:.\Generated_Source\PSoC4/PPMCounter.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/PPMCounter.c **** *
1343:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1344:.\Generated_Source\PSoC4/PPMCounter.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1346:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/PPMCounter.c **** *
1349:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1350:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1351:.\Generated_Source\PSoC4/PPMCounter.c **** *
1352:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1469              		.loc 1 1354 0
 1470              		.cfi_startproc
 1471              	.LVL92:
1355:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_REQ_REG = interruptMask;
 1472              		.loc 1 1355 0
 1473 0000 014B     		ldr	r3, .L118
1356:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1474              		.loc 1 1356 0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 55


 1475              		@ sp needed
1355:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_REQ_REG = interruptMask;
 1476              		.loc 1 1355 0
 1477 0002 1860     		str	r0, [r3]
 1478              		.loc 1 1356 0
 1479 0004 7047     		bx	lr
 1480              	.L119:
 1481 0006 C046     		.align	2
 1482              	.L118:
 1483 0008 F0010540 		.word	1074070000
 1484              		.cfi_endproc
 1485              	.LFE38:
 1486              		.size	PPMCounter_ClearInterrupt, .-PPMCounter_ClearInterrupt
 1487              		.section	.text.PPMCounter_SetInterrupt,"ax",%progbits
 1488              		.align	1
 1489              		.global	PPMCounter_SetInterrupt
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	PPMCounter_SetInterrupt, %function
 1493              	PPMCounter_SetInterrupt:
 1494              	.LFB39:
1357:.\Generated_Source\PSoC4/PPMCounter.c **** 
1358:.\Generated_Source\PSoC4/PPMCounter.c **** 
1359:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetInterrupt
1361:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/PPMCounter.c **** *
1363:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1364:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/PPMCounter.c **** *
1366:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1367:.\Generated_Source\PSoC4/PPMCounter.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1369:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/PPMCounter.c **** *
1372:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1373:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1374:.\Generated_Source\PSoC4/PPMCounter.c **** *
1375:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1495              		.loc 1 1377 0
 1496              		.cfi_startproc
 1497              	.LVL93:
1378:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_SET_REG = interruptMask;
 1498              		.loc 1 1378 0
 1499 0000 014B     		ldr	r3, .L121
1379:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1500              		.loc 1 1379 0
 1501              		@ sp needed
1378:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_SET_REG = interruptMask;
 1502              		.loc 1 1378 0
 1503 0002 1860     		str	r0, [r3]
 1504              		.loc 1 1379 0
 1505 0004 7047     		bx	lr
 1506              	.L122:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 56


 1507 0006 C046     		.align	2
 1508              	.L121:
 1509 0008 F4010540 		.word	1074070004
 1510              		.cfi_endproc
 1511              	.LFE39:
 1512              		.size	PPMCounter_SetInterrupt, .-PPMCounter_SetInterrupt
 1513              		.global	PPMCounter_initVar
 1514              		.bss
 1515              		.set	.LANCHOR0,. + 0
 1516              		.type	PPMCounter_initVar, %object
 1517              		.size	PPMCounter_initVar, 1
 1518              	PPMCounter_initVar:
 1519 0000 00       		.space	1
 1520              		.text
 1521              	.Letext0:
 1522              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1523              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1524              		.section	.debug_info,"",%progbits
 1525              	.Ldebug_info0:
 1526 0000 2E090000 		.4byte	0x92e
 1527 0004 0400     		.2byte	0x4
 1528 0006 00000000 		.4byte	.Ldebug_abbrev0
 1529 000a 04       		.byte	0x4
 1530 000b 01       		.uleb128 0x1
 1531 000c 4C040000 		.4byte	.LASF76
 1532 0010 01       		.byte	0x1
 1533 0011 62000000 		.4byte	.LASF77
 1534 0015 DA020000 		.4byte	.LASF78
 1535 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1536 001d 00000000 		.4byte	0
 1537 0021 00000000 		.4byte	.Ldebug_line0
 1538 0025 02       		.uleb128 0x2
 1539 0026 01       		.byte	0x1
 1540 0027 06       		.byte	0x6
 1541 0028 26010000 		.4byte	.LASF0
 1542 002c 02       		.uleb128 0x2
 1543 002d 01       		.byte	0x1
 1544 002e 08       		.byte	0x8
 1545 002f DB040000 		.4byte	.LASF1
 1546 0033 02       		.uleb128 0x2
 1547 0034 02       		.byte	0x2
 1548 0035 05       		.byte	0x5
 1549 0036 FA040000 		.4byte	.LASF2
 1550 003a 02       		.uleb128 0x2
 1551 003b 02       		.byte	0x2
 1552 003c 07       		.byte	0x7
 1553 003d 88020000 		.4byte	.LASF3
 1554 0041 02       		.uleb128 0x2
 1555 0042 04       		.byte	0x4
 1556 0043 05       		.byte	0x5
 1557 0044 78010000 		.4byte	.LASF4
 1558 0048 02       		.uleb128 0x2
 1559 0049 04       		.byte	0x4
 1560 004a 07       		.byte	0x7
 1561 004b 56020000 		.4byte	.LASF5
 1562 004f 02       		.uleb128 0x2
 1563 0050 08       		.byte	0x8
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 57


 1564 0051 05       		.byte	0x5
 1565 0052 18010000 		.4byte	.LASF6
 1566 0056 02       		.uleb128 0x2
 1567 0057 08       		.byte	0x8
 1568 0058 07       		.byte	0x7
 1569 0059 A6000000 		.4byte	.LASF7
 1570 005d 03       		.uleb128 0x3
 1571 005e 04       		.byte	0x4
 1572 005f 05       		.byte	0x5
 1573 0060 696E7400 		.ascii	"int\000"
 1574 0064 02       		.uleb128 0x2
 1575 0065 04       		.byte	0x4
 1576 0066 07       		.byte	0x7
 1577 0067 41020000 		.4byte	.LASF8
 1578 006b 04       		.uleb128 0x4
 1579 006c CE010000 		.4byte	.LASF9
 1580 0070 02       		.byte	0x2
 1581 0071 A1       		.byte	0xa1
 1582 0072 2C000000 		.4byte	0x2c
 1583 0076 04       		.uleb128 0x4
 1584 0077 EE010000 		.4byte	.LASF10
 1585 007b 02       		.byte	0x2
 1586 007c A3       		.byte	0xa3
 1587 007d 48000000 		.4byte	0x48
 1588 0081 02       		.uleb128 0x2
 1589 0082 04       		.byte	0x4
 1590 0083 04       		.byte	0x4
 1591 0084 0C040000 		.4byte	.LASF11
 1592 0088 02       		.uleb128 0x2
 1593 0089 08       		.byte	0x8
 1594 008a 04       		.byte	0x4
 1595 008b E7010000 		.4byte	.LASF12
 1596 008f 02       		.uleb128 0x2
 1597 0090 01       		.byte	0x1
 1598 0091 08       		.byte	0x8
 1599 0092 2C050000 		.4byte	.LASF13
 1600 0096 05       		.uleb128 0x5
 1601 0097 4D030000 		.4byte	.LASF14
 1602 009b 02       		.byte	0x2
 1603 009c 4D01     		.2byte	0x14d
 1604 009e A2000000 		.4byte	0xa2
 1605 00a2 06       		.uleb128 0x6
 1606 00a3 76000000 		.4byte	0x76
 1607 00a7 02       		.uleb128 0x2
 1608 00a8 04       		.byte	0x4
 1609 00a9 07       		.byte	0x7
 1610 00aa 68030000 		.4byte	.LASF15
 1611 00ae 07       		.uleb128 0x7
 1612 00af 9B010000 		.4byte	.LASF16
 1613 00b3 01       		.byte	0x1
 1614 00b4 0405     		.2byte	0x504
 1615 00b6 01       		.byte	0x1
 1616 00b7 C8000000 		.4byte	0xc8
 1617 00bb 08       		.uleb128 0x8
 1618 00bc 04050000 		.4byte	.LASF18
 1619 00c0 01       		.byte	0x1
 1620 00c1 0405     		.2byte	0x504
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 58


 1621 00c3 76000000 		.4byte	0x76
 1622 00c7 00       		.byte	0
 1623 00c8 07       		.uleb128 0x7
 1624 00c9 88000000 		.4byte	.LASF17
 1625 00cd 01       		.byte	0x1
 1626 00ce AF02     		.2byte	0x2af
 1627 00d0 01       		.byte	0x1
 1628 00d1 E2000000 		.4byte	0xe2
 1629 00d5 08       		.uleb128 0x8
 1630 00d6 9F000000 		.4byte	.LASF19
 1631 00da 01       		.byte	0x1
 1632 00db AF02     		.2byte	0x2af
 1633 00dd 76000000 		.4byte	0x76
 1634 00e1 00       		.byte	0
 1635 00e2 07       		.uleb128 0x7
 1636 00e3 32010000 		.4byte	.LASF20
 1637 00e7 01       		.byte	0x1
 1638 00e8 6102     		.2byte	0x261
 1639 00ea 01       		.byte	0x1
 1640 00eb FC000000 		.4byte	0xfc
 1641 00ef 08       		.uleb128 0x8
 1642 00f0 00000000 		.4byte	.LASF21
 1643 00f4 01       		.byte	0x1
 1644 00f5 6102     		.2byte	0x261
 1645 00f7 76000000 		.4byte	0x76
 1646 00fb 00       		.byte	0
 1647 00fc 09       		.uleb128 0x9
 1648 00fd FC030000 		.4byte	.LASF22
 1649 0101 01       		.byte	0x1
 1650 0102 26       		.byte	0x26
 1651 0103 00000000 		.4byte	.LFB0
 1652 0107 38000000 		.4byte	.LFE0-.LFB0
 1653 010b 01       		.uleb128 0x1
 1654 010c 9C       		.byte	0x9c
 1655 010d 5D010000 		.4byte	0x15d
 1656 0111 0A       		.uleb128 0xa
 1657 0112 AE000000 		.4byte	0xae
 1658 0116 0E000000 		.4byte	.LBB8
 1659 011a 06000000 		.4byte	.LBE8-.LBB8
 1660 011e 01       		.byte	0x1
 1661 011f 40       		.byte	0x40
 1662 0120 2B010000 		.4byte	0x12b
 1663 0124 0B       		.uleb128 0xb
 1664 0125 BB000000 		.4byte	0xbb
 1665 0129 02       		.byte	0x2
 1666 012a 00       		.byte	0
 1667 012b 0A       		.uleb128 0xa
 1668 012c C8000000 		.4byte	0xc8
 1669 0130 14000000 		.4byte	.LBB10
 1670 0134 08000000 		.4byte	.LBE10-.LBB10
 1671 0138 01       		.byte	0x1
 1672 0139 43       		.byte	0x43
 1673 013a 46010000 		.4byte	0x146
 1674 013e 0C       		.uleb128 0xc
 1675 013f D5000000 		.4byte	0xd5
 1676 0143 100E     		.2byte	0xe10
 1677 0145 00       		.byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 59


 1678 0146 0D       		.uleb128 0xd
 1679 0147 E2000000 		.4byte	0xe2
 1680 014b 1C000000 		.4byte	.LBB12
 1681 014f 06000000 		.4byte	.LBE12-.LBB12
 1682 0153 01       		.byte	0x1
 1683 0154 54       		.byte	0x54
 1684 0155 0B       		.uleb128 0xb
 1685 0156 EF000000 		.4byte	0xef
 1686 015a 00       		.byte	0
 1687 015b 00       		.byte	0
 1688 015c 00       		.byte	0
 1689 015d 09       		.uleb128 0x9
 1690 015e 68010000 		.4byte	.LASF23
 1691 0162 01       		.byte	0x1
 1692 0163 FA       		.byte	0xfa
 1693 0164 00000000 		.4byte	.LFB3
 1694 0168 1C000000 		.4byte	.LFE3-.LFB3
 1695 016c 01       		.uleb128 0x1
 1696 016d 9C       		.byte	0x9c
 1697 016e 94010000 		.4byte	0x194
 1698 0172 0E       		.uleb128 0xe
 1699 0173 DA050000 		.4byte	.LASF25
 1700 0177 01       		.byte	0x1
 1701 0178 FC       		.byte	0xfc
 1702 0179 6B000000 		.4byte	0x6b
 1703 017d 00000000 		.4byte	.LLST0
 1704 0181 0F       		.uleb128 0xf
 1705 0182 06000000 		.4byte	.LVL3
 1706 0186 19090000 		.4byte	0x919
 1707 018a 0F       		.uleb128 0xf
 1708 018b 14000000 		.4byte	.LVL4
 1709 018f 24090000 		.4byte	0x924
 1710 0193 00       		.byte	0
 1711 0194 10       		.uleb128 0x10
 1712 0195 D4010000 		.4byte	.LASF24
 1713 0199 01       		.byte	0x1
 1714 019a 1F01     		.2byte	0x11f
 1715 019c 00000000 		.4byte	.LFB4
 1716 01a0 28000000 		.4byte	.LFE4-.LFB4
 1717 01a4 01       		.uleb128 0x1
 1718 01a5 9C       		.byte	0x9c
 1719 01a6 DD010000 		.4byte	0x1dd
 1720 01aa 11       		.uleb128 0x11
 1721 01ab 31050000 		.4byte	.LASF27
 1722 01af 01       		.byte	0x1
 1723 01b0 1F01     		.2byte	0x11f
 1724 01b2 76000000 		.4byte	0x76
 1725 01b6 13000000 		.4byte	.LLST1
 1726 01ba 12       		.uleb128 0x12
 1727 01bb DA050000 		.4byte	.LASF25
 1728 01bf 01       		.byte	0x1
 1729 01c0 2101     		.2byte	0x121
 1730 01c2 6B000000 		.4byte	0x6b
 1731 01c6 3F000000 		.4byte	.LLST2
 1732 01ca 0F       		.uleb128 0xf
 1733 01cb 08000000 		.4byte	.LVL6
 1734 01cf 19090000 		.4byte	0x919
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 60


 1735 01d3 0F       		.uleb128 0xf
 1736 01d4 1C000000 		.4byte	.LVL8
 1737 01d8 24090000 		.4byte	0x924
 1738 01dc 00       		.byte	0
 1739 01dd 10       		.uleb128 0x10
 1740 01de 53030000 		.4byte	.LASF26
 1741 01e2 01       		.byte	0x1
 1742 01e3 4001     		.2byte	0x140
 1743 01e5 00000000 		.4byte	.LFB5
 1744 01e9 28000000 		.4byte	.LFE5-.LFB5
 1745 01ed 01       		.uleb128 0x1
 1746 01ee 9C       		.byte	0x9c
 1747 01ef 26020000 		.4byte	0x226
 1748 01f3 11       		.uleb128 0x11
 1749 01f4 D3000000 		.4byte	.LASF28
 1750 01f8 01       		.byte	0x1
 1751 01f9 4001     		.2byte	0x140
 1752 01fb 76000000 		.4byte	0x76
 1753 01ff 52000000 		.4byte	.LLST3
 1754 0203 12       		.uleb128 0x12
 1755 0204 DA050000 		.4byte	.LASF25
 1756 0208 01       		.byte	0x1
 1757 0209 4201     		.2byte	0x142
 1758 020b 6B000000 		.4byte	0x6b
 1759 020f 7E000000 		.4byte	.LLST4
 1760 0213 0F       		.uleb128 0xf
 1761 0214 08000000 		.4byte	.LVL10
 1762 0218 19090000 		.4byte	0x919
 1763 021c 0F       		.uleb128 0xf
 1764 021d 1C000000 		.4byte	.LVL12
 1765 0221 24090000 		.4byte	0x924
 1766 0225 00       		.byte	0
 1767 0226 10       		.uleb128 0x10
 1768 0227 35030000 		.4byte	.LASF29
 1769 022b 01       		.byte	0x1
 1770 022c 6501     		.2byte	0x165
 1771 022e 00000000 		.4byte	.LFB6
 1772 0232 28000000 		.4byte	.LFE6-.LFB6
 1773 0236 01       		.uleb128 0x1
 1774 0237 9C       		.byte	0x9c
 1775 0238 6F020000 		.4byte	0x26f
 1776 023c 11       		.uleb128 0x11
 1777 023d 12040000 		.4byte	.LASF30
 1778 0241 01       		.byte	0x1
 1779 0242 6501     		.2byte	0x165
 1780 0244 76000000 		.4byte	0x76
 1781 0248 91000000 		.4byte	.LLST5
 1782 024c 12       		.uleb128 0x12
 1783 024d DA050000 		.4byte	.LASF25
 1784 0251 01       		.byte	0x1
 1785 0252 6701     		.2byte	0x167
 1786 0254 6B000000 		.4byte	0x6b
 1787 0258 BD000000 		.4byte	.LLST6
 1788 025c 0F       		.uleb128 0xf
 1789 025d 08000000 		.4byte	.LVL14
 1790 0261 19090000 		.4byte	0x919
 1791 0265 0F       		.uleb128 0xf
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 61


 1792 0266 1C000000 		.4byte	.LVL16
 1793 026a 24090000 		.4byte	0x924
 1794 026e 00       		.byte	0
 1795 026f 10       		.uleb128 0x10
 1796 0270 BD000000 		.4byte	.LASF31
 1797 0274 01       		.byte	0x1
 1798 0275 8501     		.2byte	0x185
 1799 0277 00000000 		.4byte	.LFB7
 1800 027b 2C000000 		.4byte	.LFE7-.LFB7
 1801 027f 01       		.uleb128 0x1
 1802 0280 9C       		.byte	0x9c
 1803 0281 B8020000 		.4byte	0x2b8
 1804 0285 11       		.uleb128 0x11
 1805 0286 B5020000 		.4byte	.LASF32
 1806 028a 01       		.byte	0x1
 1807 028b 8501     		.2byte	0x185
 1808 028d 76000000 		.4byte	0x76
 1809 0291 D0000000 		.4byte	.LLST7
 1810 0295 12       		.uleb128 0x12
 1811 0296 DA050000 		.4byte	.LASF25
 1812 029a 01       		.byte	0x1
 1813 029b 8701     		.2byte	0x187
 1814 029d 6B000000 		.4byte	0x6b
 1815 02a1 FC000000 		.4byte	.LLST8
 1816 02a5 0F       		.uleb128 0xf
 1817 02a6 08000000 		.4byte	.LVL18
 1818 02aa 19090000 		.4byte	0x919
 1819 02ae 0F       		.uleb128 0xf
 1820 02af 22000000 		.4byte	.LVL20
 1821 02b3 24090000 		.4byte	0x924
 1822 02b7 00       		.byte	0
 1823 02b8 10       		.uleb128 0x10
 1824 02b9 9A030000 		.4byte	.LASF33
 1825 02bd 01       		.byte	0x1
 1826 02be BB01     		.2byte	0x1bb
 1827 02c0 00000000 		.4byte	.LFB8
 1828 02c4 10000000 		.4byte	.LFE8-.LFB8
 1829 02c8 01       		.uleb128 0x1
 1830 02c9 9C       		.byte	0x9c
 1831 02ca DF020000 		.4byte	0x2df
 1832 02ce 11       		.uleb128 0x11
 1833 02cf 68020000 		.4byte	.LASF34
 1834 02d3 01       		.byte	0x1
 1835 02d4 BB01     		.2byte	0x1bb
 1836 02d6 76000000 		.4byte	0x76
 1837 02da 0F010000 		.4byte	.LLST9
 1838 02de 00       		.byte	0
 1839 02df 10       		.uleb128 0x10
 1840 02e0 06020000 		.4byte	.LASF35
 1841 02e4 01       		.byte	0x1
 1842 02e5 DF01     		.2byte	0x1df
 1843 02e7 00000000 		.4byte	.LFB9
 1844 02eb 28000000 		.4byte	.LFE9-.LFB9
 1845 02ef 01       		.uleb128 0x1
 1846 02f0 9C       		.byte	0x9c
 1847 02f1 28030000 		.4byte	0x328
 1848 02f5 11       		.uleb128 0x11
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 62


 1849 02f6 8B030000 		.4byte	.LASF36
 1850 02fa 01       		.byte	0x1
 1851 02fb DF01     		.2byte	0x1df
 1852 02fd 76000000 		.4byte	0x76
 1853 0301 30010000 		.4byte	.LLST10
 1854 0305 12       		.uleb128 0x12
 1855 0306 DA050000 		.4byte	.LASF25
 1856 030a 01       		.byte	0x1
 1857 030b E101     		.2byte	0x1e1
 1858 030d 6B000000 		.4byte	0x6b
 1859 0311 5C010000 		.4byte	.LLST11
 1860 0315 0F       		.uleb128 0xf
 1861 0316 08000000 		.4byte	.LVL24
 1862 031a 19090000 		.4byte	0x919
 1863 031e 0F       		.uleb128 0xf
 1864 031f 22000000 		.4byte	.LVL26
 1865 0323 24090000 		.4byte	0x924
 1866 0327 00       		.byte	0
 1867 0328 10       		.uleb128 0x10
 1868 0329 5C060000 		.4byte	.LASF37
 1869 032d 01       		.byte	0x1
 1870 032e 0102     		.2byte	0x201
 1871 0330 00000000 		.4byte	.LFB10
 1872 0334 28000000 		.4byte	.LFE10-.LFB10
 1873 0338 01       		.uleb128 0x1
 1874 0339 9C       		.byte	0x9c
 1875 033a 71030000 		.4byte	0x371
 1876 033e 11       		.uleb128 0x11
 1877 033f E9040000 		.4byte	.LASF38
 1878 0343 01       		.byte	0x1
 1879 0344 0102     		.2byte	0x201
 1880 0346 76000000 		.4byte	0x76
 1881 034a 6F010000 		.4byte	.LLST12
 1882 034e 12       		.uleb128 0x12
 1883 034f DA050000 		.4byte	.LASF25
 1884 0353 01       		.byte	0x1
 1885 0354 0302     		.2byte	0x203
 1886 0356 6B000000 		.4byte	0x6b
 1887 035a 9B010000 		.4byte	.LLST13
 1888 035e 0F       		.uleb128 0xf
 1889 035f 08000000 		.4byte	.LVL28
 1890 0363 19090000 		.4byte	0x919
 1891 0367 0F       		.uleb128 0xf
 1892 0368 22000000 		.4byte	.LVL30
 1893 036c 24090000 		.4byte	0x924
 1894 0370 00       		.byte	0
 1895 0371 10       		.uleb128 0x10
 1896 0372 05060000 		.4byte	.LASF39
 1897 0376 01       		.byte	0x1
 1898 0377 2202     		.2byte	0x222
 1899 0379 00000000 		.4byte	.LFB11
 1900 037d 2C000000 		.4byte	.LFE11-.LFB11
 1901 0381 01       		.uleb128 0x1
 1902 0382 9C       		.byte	0x9c
 1903 0383 BA030000 		.4byte	0x3ba
 1904 0387 11       		.uleb128 0x11
 1905 0388 38020000 		.4byte	.LASF40
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 63


 1906 038c 01       		.byte	0x1
 1907 038d 2202     		.2byte	0x222
 1908 038f 76000000 		.4byte	0x76
 1909 0393 AE010000 		.4byte	.LLST14
 1910 0397 12       		.uleb128 0x12
 1911 0398 DA050000 		.4byte	.LASF25
 1912 039c 01       		.byte	0x1
 1913 039d 2402     		.2byte	0x224
 1914 039f 6B000000 		.4byte	0x6b
 1915 03a3 DA010000 		.4byte	.LLST15
 1916 03a7 0F       		.uleb128 0xf
 1917 03a8 08000000 		.4byte	.LVL32
 1918 03ac 19090000 		.4byte	0x919
 1919 03b0 0F       		.uleb128 0xf
 1920 03b1 20000000 		.4byte	.LVL34
 1921 03b5 24090000 		.4byte	0x924
 1922 03b9 00       		.byte	0
 1923 03ba 10       		.uleb128 0x10
 1924 03bb 20020000 		.4byte	.LASF41
 1925 03bf 01       		.byte	0x1
 1926 03c0 4302     		.2byte	0x243
 1927 03c2 00000000 		.4byte	.LFB12
 1928 03c6 28000000 		.4byte	.LFE12-.LFB12
 1929 03ca 01       		.uleb128 0x1
 1930 03cb 9C       		.byte	0x9c
 1931 03cc 03040000 		.4byte	0x403
 1932 03d0 11       		.uleb128 0x11
 1933 03d1 01020000 		.4byte	.LASF42
 1934 03d5 01       		.byte	0x1
 1935 03d6 4302     		.2byte	0x243
 1936 03d8 76000000 		.4byte	0x76
 1937 03dc ED010000 		.4byte	.LLST16
 1938 03e0 12       		.uleb128 0x12
 1939 03e1 DA050000 		.4byte	.LASF25
 1940 03e5 01       		.byte	0x1
 1941 03e6 4502     		.2byte	0x245
 1942 03e8 6B000000 		.4byte	0x6b
 1943 03ec 19020000 		.4byte	.LLST17
 1944 03f0 0F       		.uleb128 0xf
 1945 03f1 08000000 		.4byte	.LVL36
 1946 03f5 19090000 		.4byte	0x919
 1947 03f9 0F       		.uleb128 0xf
 1948 03fa 1C000000 		.4byte	.LVL38
 1949 03fe 24090000 		.4byte	0x924
 1950 0402 00       		.byte	0
 1951 0403 13       		.uleb128 0x13
 1952 0404 E2000000 		.4byte	0xe2
 1953 0408 00000000 		.4byte	.LFB13
 1954 040c 0C000000 		.4byte	.LFE13-.LFB13
 1955 0410 01       		.uleb128 0x1
 1956 0411 9C       		.byte	0x9c
 1957 0412 20040000 		.4byte	0x420
 1958 0416 14       		.uleb128 0x14
 1959 0417 EF000000 		.4byte	0xef
 1960 041b 2C020000 		.4byte	.LLST18
 1961 041f 00       		.byte	0
 1962 0420 15       		.uleb128 0x15
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 64


 1963 0421 C3020000 		.4byte	.LASF45
 1964 0425 01       		.byte	0x1
 1965 0426 7502     		.2byte	0x275
 1966 0428 76000000 		.4byte	0x76
 1967 042c 00000000 		.4byte	.LFB14
 1968 0430 0C000000 		.4byte	.LFE14-.LFB14
 1969 0434 01       		.uleb128 0x1
 1970 0435 9C       		.byte	0x9c
 1971 0436 10       		.uleb128 0x10
 1972 0437 42060000 		.4byte	.LASF43
 1973 043b 01       		.byte	0x1
 1974 043c 9202     		.2byte	0x292
 1975 043e 00000000 		.4byte	.LFB15
 1976 0442 28000000 		.4byte	.LFE15-.LFB15
 1977 0446 01       		.uleb128 0x1
 1978 0447 9C       		.byte	0x9c
 1979 0448 7F040000 		.4byte	0x47f
 1980 044c 11       		.uleb128 0x11
 1981 044d 4F050000 		.4byte	.LASF44
 1982 0451 01       		.byte	0x1
 1983 0452 9202     		.2byte	0x292
 1984 0454 76000000 		.4byte	0x76
 1985 0458 4D020000 		.4byte	.LLST19
 1986 045c 12       		.uleb128 0x12
 1987 045d DA050000 		.4byte	.LASF25
 1988 0461 01       		.byte	0x1
 1989 0462 9402     		.2byte	0x294
 1990 0464 6B000000 		.4byte	0x6b
 1991 0468 79020000 		.4byte	.LLST20
 1992 046c 0F       		.uleb128 0xf
 1993 046d 08000000 		.4byte	.LVL42
 1994 0471 19090000 		.4byte	0x919
 1995 0475 0F       		.uleb128 0xf
 1996 0476 1C000000 		.4byte	.LVL44
 1997 047a 24090000 		.4byte	0x924
 1998 047e 00       		.byte	0
 1999 047f 13       		.uleb128 0x13
 2000 0480 C8000000 		.4byte	0xc8
 2001 0484 00000000 		.4byte	.LFB16
 2002 0488 0C000000 		.4byte	.LFE16-.LFB16
 2003 048c 01       		.uleb128 0x1
 2004 048d 9C       		.byte	0x9c
 2005 048e 9C040000 		.4byte	0x49c
 2006 0492 14       		.uleb128 0x14
 2007 0493 D5000000 		.4byte	0xd5
 2008 0497 8C020000 		.4byte	.LLST21
 2009 049b 00       		.byte	0
 2010 049c 15       		.uleb128 0x15
 2011 049d 4C000000 		.4byte	.LASF46
 2012 04a1 01       		.byte	0x1
 2013 04a2 C302     		.2byte	0x2c3
 2014 04a4 76000000 		.4byte	0x76
 2015 04a8 00000000 		.4byte	.LFB17
 2016 04ac 0C000000 		.4byte	.LFE17-.LFB17
 2017 04b0 01       		.uleb128 0x1
 2018 04b1 9C       		.byte	0x9c
 2019 04b2 10       		.uleb128 0x10
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 65


 2020 04b3 81010000 		.4byte	.LASF47
 2021 04b7 01       		.byte	0x1
 2022 04b8 DD02     		.2byte	0x2dd
 2023 04ba 00000000 		.4byte	.LFB18
 2024 04be 24000000 		.4byte	.LFE18-.LFB18
 2025 04c2 01       		.uleb128 0x1
 2026 04c3 9C       		.byte	0x9c
 2027 04c4 FB040000 		.4byte	0x4fb
 2028 04c8 11       		.uleb128 0x11
 2029 04c9 1F060000 		.4byte	.LASF48
 2030 04cd 01       		.byte	0x1
 2031 04ce DD02     		.2byte	0x2dd
 2032 04d0 76000000 		.4byte	0x76
 2033 04d4 AD020000 		.4byte	.LLST22
 2034 04d8 12       		.uleb128 0x12
 2035 04d9 DA050000 		.4byte	.LASF25
 2036 04dd 01       		.byte	0x1
 2037 04de DF02     		.2byte	0x2df
 2038 04e0 6B000000 		.4byte	0x6b
 2039 04e4 D9020000 		.4byte	.LLST23
 2040 04e8 0F       		.uleb128 0xf
 2041 04e9 08000000 		.4byte	.LVL48
 2042 04ed 19090000 		.4byte	0x919
 2043 04f1 0F       		.uleb128 0xf
 2044 04f2 1E000000 		.4byte	.LVL49
 2045 04f6 24090000 		.4byte	0x924
 2046 04fa 00       		.byte	0
 2047 04fb 10       		.uleb128 0x10
 2048 04fc 12050000 		.4byte	.LASF49
 2049 0500 01       		.byte	0x1
 2050 0501 F802     		.2byte	0x2f8
 2051 0503 00000000 		.4byte	.LFB19
 2052 0507 0C000000 		.4byte	.LFE19-.LFB19
 2053 050b 01       		.uleb128 0x1
 2054 050c 9C       		.byte	0x9c
 2055 050d 22050000 		.4byte	0x522
 2056 0511 11       		.uleb128 0x11
 2057 0512 78060000 		.4byte	.LASF50
 2058 0516 01       		.byte	0x1
 2059 0517 F802     		.2byte	0x2f8
 2060 0519 76000000 		.4byte	0x76
 2061 051d EC020000 		.4byte	.LLST24
 2062 0521 00       		.byte	0
 2063 0522 15       		.uleb128 0x15
 2064 0523 C1050000 		.4byte	.LASF51
 2065 0527 01       		.byte	0x1
 2066 0528 0C03     		.2byte	0x30c
 2067 052a 76000000 		.4byte	0x76
 2068 052e 00000000 		.4byte	.LFB20
 2069 0532 0C000000 		.4byte	.LFE20-.LFB20
 2070 0536 01       		.uleb128 0x1
 2071 0537 9C       		.byte	0x9c
 2072 0538 10       		.uleb128 0x10
 2073 0539 33040000 		.4byte	.LASF52
 2074 053d 01       		.byte	0x1
 2075 053e 2603     		.2byte	0x326
 2076 0540 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 66


 2077 0544 28000000 		.4byte	.LFE21-.LFB21
 2078 0548 01       		.uleb128 0x1
 2079 0549 9C       		.byte	0x9c
 2080 054a 81050000 		.4byte	0x581
 2081 054e 11       		.uleb128 0x11
 2082 054f 1F060000 		.4byte	.LASF48
 2083 0553 01       		.byte	0x1
 2084 0554 2603     		.2byte	0x326
 2085 0556 76000000 		.4byte	0x76
 2086 055a 0D030000 		.4byte	.LLST25
 2087 055e 12       		.uleb128 0x12
 2088 055f DA050000 		.4byte	.LASF25
 2089 0563 01       		.byte	0x1
 2090 0564 2803     		.2byte	0x328
 2091 0566 6B000000 		.4byte	0x6b
 2092 056a 39030000 		.4byte	.LLST26
 2093 056e 0F       		.uleb128 0xf
 2094 056f 08000000 		.4byte	.LVL54
 2095 0573 19090000 		.4byte	0x919
 2096 0577 0F       		.uleb128 0xf
 2097 0578 22000000 		.4byte	.LVL56
 2098 057c 24090000 		.4byte	0x924
 2099 0580 00       		.byte	0
 2100 0581 10       		.uleb128 0x10
 2101 0582 34000000 		.4byte	.LASF53
 2102 0586 01       		.byte	0x1
 2103 0587 4303     		.2byte	0x343
 2104 0589 00000000 		.4byte	.LFB22
 2105 058d 0C000000 		.4byte	.LFE22-.LFB22
 2106 0591 01       		.uleb128 0x1
 2107 0592 9C       		.byte	0x9c
 2108 0593 A8050000 		.4byte	0x5a8
 2109 0597 11       		.uleb128 0x11
 2110 0598 C2030000 		.4byte	.LASF54
 2111 059c 01       		.byte	0x1
 2112 059d 4303     		.2byte	0x343
 2113 059f 76000000 		.4byte	0x76
 2114 05a3 4C030000 		.4byte	.LLST27
 2115 05a7 00       		.byte	0
 2116 05a8 15       		.uleb128 0x15
 2117 05a9 E5030000 		.4byte	.LASF55
 2118 05ad 01       		.byte	0x1
 2119 05ae 6E03     		.2byte	0x36e
 2120 05b0 76000000 		.4byte	0x76
 2121 05b4 00000000 		.4byte	.LFB23
 2122 05b8 0C000000 		.4byte	.LFE23-.LFB23
 2123 05bc 01       		.uleb128 0x1
 2124 05bd 9C       		.byte	0x9c
 2125 05be 10       		.uleb128 0x10
 2126 05bf CA030000 		.4byte	.LASF56
 2127 05c3 01       		.byte	0x1
 2128 05c4 9C03     		.2byte	0x39c
 2129 05c6 00000000 		.4byte	.LFB24
 2130 05ca 0C000000 		.4byte	.LFE24-.LFB24
 2131 05ce 01       		.uleb128 0x1
 2132 05cf 9C       		.byte	0x9c
 2133 05d0 E5050000 		.4byte	0x5e5
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 67


 2134 05d4 11       		.uleb128 0x11
 2135 05d5 A0050000 		.4byte	.LASF57
 2136 05d9 01       		.byte	0x1
 2137 05da 9C03     		.2byte	0x39c
 2138 05dc 76000000 		.4byte	0x76
 2139 05e0 6D030000 		.4byte	.LLST28
 2140 05e4 00       		.byte	0
 2141 05e5 15       		.uleb128 0x15
 2142 05e6 EB050000 		.4byte	.LASF58
 2143 05ea 01       		.byte	0x1
 2144 05eb C503     		.2byte	0x3c5
 2145 05ed 76000000 		.4byte	0x76
 2146 05f1 00000000 		.4byte	.LFB25
 2147 05f5 0C000000 		.4byte	.LFE25-.LFB25
 2148 05f9 01       		.uleb128 0x1
 2149 05fa 9C       		.byte	0x9c
 2150 05fb 15       		.uleb128 0x15
 2151 05fc B7010000 		.4byte	.LASF59
 2152 0600 01       		.byte	0x1
 2153 0601 F303     		.2byte	0x3f3
 2154 0603 76000000 		.4byte	0x76
 2155 0607 00000000 		.4byte	.LFB26
 2156 060b 0C000000 		.4byte	.LFE26-.LFB26
 2157 060f 01       		.uleb128 0x1
 2158 0610 9C       		.byte	0x9c
 2159 0611 15       		.uleb128 0x15
 2160 0612 6E050000 		.4byte	.LASF60
 2161 0616 01       		.byte	0x1
 2162 0617 0804     		.2byte	0x408
 2163 0619 76000000 		.4byte	0x76
 2164 061d 00000000 		.4byte	.LFB27
 2165 0621 0C000000 		.4byte	.LFE27-.LFB27
 2166 0625 01       		.uleb128 0x1
 2167 0626 9C       		.byte	0x9c
 2168 0627 10       		.uleb128 0x10
 2169 0628 FE000000 		.4byte	.LASF61
 2170 062c 01       		.byte	0x1
 2171 062d 2304     		.2byte	0x423
 2172 062f 00000000 		.4byte	.LFB28
 2173 0633 24000000 		.4byte	.LFE28-.LFB28
 2174 0637 01       		.uleb128 0x1
 2175 0638 9C       		.byte	0x9c
 2176 0639 70060000 		.4byte	0x670
 2177 063d 11       		.uleb128 0x11
 2178 063e F5010000 		.4byte	.LASF62
 2179 0642 01       		.byte	0x1
 2180 0643 2304     		.2byte	0x423
 2181 0645 76000000 		.4byte	0x76
 2182 0649 8E030000 		.4byte	.LLST29
 2183 064d 12       		.uleb128 0x12
 2184 064e DA050000 		.4byte	.LASF25
 2185 0652 01       		.byte	0x1
 2186 0653 2504     		.2byte	0x425
 2187 0655 6B000000 		.4byte	0x6b
 2188 0659 BA030000 		.4byte	.LLST30
 2189 065d 0F       		.uleb128 0xf
 2190 065e 08000000 		.4byte	.LVL62
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 68


 2191 0662 19090000 		.4byte	0x919
 2192 0666 0F       		.uleb128 0xf
 2193 0667 1C000000 		.4byte	.LVL64
 2194 066b 24090000 		.4byte	0x924
 2195 066f 00       		.byte	0
 2196 0670 10       		.uleb128 0x10
 2197 0671 36050000 		.4byte	.LASF63
 2198 0675 01       		.byte	0x1
 2199 0676 4404     		.2byte	0x444
 2200 0678 00000000 		.4byte	.LFB29
 2201 067c 24000000 		.4byte	.LFE29-.LFB29
 2202 0680 01       		.uleb128 0x1
 2203 0681 9C       		.byte	0x9c
 2204 0682 B9060000 		.4byte	0x6b9
 2205 0686 11       		.uleb128 0x11
 2206 0687 F5010000 		.4byte	.LASF62
 2207 068b 01       		.byte	0x1
 2208 068c 4404     		.2byte	0x444
 2209 068e 76000000 		.4byte	0x76
 2210 0692 CD030000 		.4byte	.LLST31
 2211 0696 12       		.uleb128 0x12
 2212 0697 DA050000 		.4byte	.LASF25
 2213 069b 01       		.byte	0x1
 2214 069c 4604     		.2byte	0x446
 2215 069e 6B000000 		.4byte	0x6b
 2216 06a2 F9030000 		.4byte	.LLST32
 2217 06a6 0F       		.uleb128 0xf
 2218 06a7 08000000 		.4byte	.LVL66
 2219 06ab 19090000 		.4byte	0x919
 2220 06af 0F       		.uleb128 0xf
 2221 06b0 1E000000 		.4byte	.LVL68
 2222 06b4 24090000 		.4byte	0x924
 2223 06b8 00       		.byte	0
 2224 06b9 10       		.uleb128 0x10
 2225 06ba 06000000 		.4byte	.LASF64
 2226 06be 01       		.byte	0x1
 2227 06bf 6504     		.2byte	0x465
 2228 06c1 00000000 		.4byte	.LFB30
 2229 06c5 28000000 		.4byte	.LFE30-.LFB30
 2230 06c9 01       		.uleb128 0x1
 2231 06ca 9C       		.byte	0x9c
 2232 06cb 02070000 		.4byte	0x702
 2233 06cf 11       		.uleb128 0x11
 2234 06d0 F5010000 		.4byte	.LASF62
 2235 06d4 01       		.byte	0x1
 2236 06d5 6504     		.2byte	0x465
 2237 06d7 76000000 		.4byte	0x76
 2238 06db 0C040000 		.4byte	.LLST33
 2239 06df 12       		.uleb128 0x12
 2240 06e0 DA050000 		.4byte	.LASF25
 2241 06e4 01       		.byte	0x1
 2242 06e5 6704     		.2byte	0x467
 2243 06e7 6B000000 		.4byte	0x6b
 2244 06eb 38040000 		.4byte	.LLST34
 2245 06ef 0F       		.uleb128 0xf
 2246 06f0 08000000 		.4byte	.LVL70
 2247 06f4 19090000 		.4byte	0x919
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 69


 2248 06f8 0F       		.uleb128 0xf
 2249 06f9 1E000000 		.4byte	.LVL72
 2250 06fd 24090000 		.4byte	0x924
 2251 0701 00       		.byte	0
 2252 0702 10       		.uleb128 0x10
 2253 0703 1C040000 		.4byte	.LASF65
 2254 0707 01       		.byte	0x1
 2255 0708 8504     		.2byte	0x485
 2256 070a 00000000 		.4byte	.LFB31
 2257 070e 24000000 		.4byte	.LFE31-.LFB31
 2258 0712 01       		.uleb128 0x1
 2259 0713 9C       		.byte	0x9c
 2260 0714 4B070000 		.4byte	0x74b
 2261 0718 11       		.uleb128 0x11
 2262 0719 F5010000 		.4byte	.LASF62
 2263 071d 01       		.byte	0x1
 2264 071e 8504     		.2byte	0x485
 2265 0720 76000000 		.4byte	0x76
 2266 0724 4B040000 		.4byte	.LLST35
 2267 0728 12       		.uleb128 0x12
 2268 0729 DA050000 		.4byte	.LASF25
 2269 072d 01       		.byte	0x1
 2270 072e 8704     		.2byte	0x487
 2271 0730 6B000000 		.4byte	0x6b
 2272 0734 77040000 		.4byte	.LLST36
 2273 0738 0F       		.uleb128 0xf
 2274 0739 08000000 		.4byte	.LVL74
 2275 073d 19090000 		.4byte	0x919
 2276 0741 0F       		.uleb128 0xf
 2277 0742 1E000000 		.4byte	.LVL76
 2278 0746 24090000 		.4byte	0x924
 2279 074a 00       		.byte	0
 2280 074b 10       		.uleb128 0x10
 2281 074c 2A060000 		.4byte	.LASF66
 2282 0750 01       		.byte	0x1
 2283 0751 A604     		.2byte	0x4a6
 2284 0753 00000000 		.4byte	.LFB32
 2285 0757 24000000 		.4byte	.LFE32-.LFB32
 2286 075b 01       		.uleb128 0x1
 2287 075c 9C       		.byte	0x9c
 2288 075d 94070000 		.4byte	0x794
 2289 0761 11       		.uleb128 0x11
 2290 0762 F5010000 		.4byte	.LASF62
 2291 0766 01       		.byte	0x1
 2292 0767 A604     		.2byte	0x4a6
 2293 0769 76000000 		.4byte	0x76
 2294 076d 8A040000 		.4byte	.LLST37
 2295 0771 12       		.uleb128 0x12
 2296 0772 DA050000 		.4byte	.LASF25
 2297 0776 01       		.byte	0x1
 2298 0777 A804     		.2byte	0x4a8
 2299 0779 6B000000 		.4byte	0x6b
 2300 077d B6040000 		.4byte	.LLST38
 2301 0781 0F       		.uleb128 0xf
 2302 0782 08000000 		.4byte	.LVL78
 2303 0786 19090000 		.4byte	0x919
 2304 078a 0F       		.uleb128 0xf
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 70


 2305 078b 1E000000 		.4byte	.LVL80
 2306 078f 24090000 		.4byte	0x924
 2307 0793 00       		.byte	0
 2308 0794 10       		.uleb128 0x10
 2309 0795 9B020000 		.4byte	.LASF67
 2310 0799 01       		.byte	0x1
 2311 079a CE04     		.2byte	0x4ce
 2312 079c 00000000 		.4byte	.LFB33
 2313 07a0 1C000000 		.4byte	.LFE33-.LFB33
 2314 07a4 01       		.uleb128 0x1
 2315 07a5 9C       		.byte	0x9c
 2316 07a6 ED070000 		.4byte	0x7ed
 2317 07aa 11       		.uleb128 0x11
 2318 07ab 01020000 		.4byte	.LASF42
 2319 07af 01       		.byte	0x1
 2320 07b0 CE04     		.2byte	0x4ce
 2321 07b2 76000000 		.4byte	0x76
 2322 07b6 C9040000 		.4byte	.LLST39
 2323 07ba 11       		.uleb128 0x11
 2324 07bb 4E020000 		.4byte	.LASF68
 2325 07bf 01       		.byte	0x1
 2326 07c0 CE04     		.2byte	0x4ce
 2327 07c2 76000000 		.4byte	0x76
 2328 07c6 F5040000 		.4byte	.LLST40
 2329 07ca 12       		.uleb128 0x12
 2330 07cb DA050000 		.4byte	.LASF25
 2331 07cf 01       		.byte	0x1
 2332 07d0 D004     		.2byte	0x4d0
 2333 07d2 6B000000 		.4byte	0x6b
 2334 07d6 21050000 		.4byte	.LLST41
 2335 07da 0F       		.uleb128 0xf
 2336 07db 0A000000 		.4byte	.LVL82
 2337 07df 19090000 		.4byte	0x919
 2338 07e3 0F       		.uleb128 0xf
 2339 07e4 14000000 		.4byte	.LVL84
 2340 07e8 24090000 		.4byte	0x924
 2341 07ec 00       		.byte	0
 2342 07ed 09       		.uleb128 0x9
 2343 07ee B0030000 		.4byte	.LASF69
 2344 07f2 01       		.byte	0x1
 2345 07f3 B1       		.byte	0xb1
 2346 07f4 00000000 		.4byte	.LFB1
 2347 07f8 24000000 		.4byte	.LFE1-.LFB1
 2348 07fc 01       		.uleb128 0x1
 2349 07fd 9C       		.byte	0x9c
 2350 07fe 39080000 		.4byte	0x839
 2351 0802 0E       		.uleb128 0xe
 2352 0803 DA050000 		.4byte	.LASF25
 2353 0807 01       		.byte	0x1
 2354 0808 B3       		.byte	0xb3
 2355 0809 6B000000 		.4byte	0x6b
 2356 080d 34050000 		.4byte	.LLST42
 2357 0811 0F       		.uleb128 0xf
 2358 0812 06000000 		.4byte	.LVL86
 2359 0816 19090000 		.4byte	0x919
 2360 081a 0F       		.uleb128 0xf
 2361 081b 14000000 		.4byte	.LVL87
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 71


 2362 081f 24090000 		.4byte	0x924
 2363 0823 16       		.uleb128 0x16
 2364 0824 1C000000 		.4byte	.LVL88
 2365 0828 94070000 		.4byte	0x794
 2366 082c 17       		.uleb128 0x17
 2367 082d 01       		.uleb128 0x1
 2368 082e 51       		.byte	0x51
 2369 082f 01       		.uleb128 0x1
 2370 0830 48       		.byte	0x48
 2371 0831 17       		.uleb128 0x17
 2372 0832 01       		.uleb128 0x1
 2373 0833 50       		.byte	0x50
 2374 0834 02       		.uleb128 0x2
 2375 0835 74       		.byte	0x74
 2376 0836 00       		.sleb128 0
 2377 0837 00       		.byte	0
 2378 0838 00       		.byte	0
 2379 0839 09       		.uleb128 0x9
 2380 083a 24030000 		.4byte	.LASF70
 2381 083e 01       		.byte	0x1
 2382 083f E0       		.byte	0xe0
 2383 0840 00000000 		.4byte	.LFB2
 2384 0844 1C000000 		.4byte	.LFE2-.LFB2
 2385 0848 01       		.uleb128 0x1
 2386 0849 9C       		.byte	0x9c
 2387 084a 61080000 		.4byte	0x861
 2388 084e 0F       		.uleb128 0xf
 2389 084f 0E000000 		.4byte	.LVL89
 2390 0853 FC000000 		.4byte	0xfc
 2391 0857 0F       		.uleb128 0xf
 2392 0858 16000000 		.4byte	.LVL90
 2393 085c ED070000 		.4byte	0x7ed
 2394 0860 00       		.byte	0
 2395 0861 15       		.uleb128 0x15
 2396 0862 AB050000 		.4byte	.LASF71
 2397 0866 01       		.byte	0x1
 2398 0867 EB04     		.2byte	0x4eb
 2399 0869 76000000 		.4byte	0x76
 2400 086d 00000000 		.4byte	.LFB34
 2401 0871 14000000 		.4byte	.LFE34-.LFB34
 2402 0875 01       		.uleb128 0x1
 2403 0876 9C       		.byte	0x9c
 2404 0877 13       		.uleb128 0x13
 2405 0878 AE000000 		.4byte	0xae
 2406 087c 00000000 		.4byte	.LFB35
 2407 0880 0C000000 		.4byte	.LFE35-.LFB35
 2408 0884 01       		.uleb128 0x1
 2409 0885 9C       		.byte	0x9c
 2410 0886 92080000 		.4byte	0x892
 2411 088a 18       		.uleb128 0x18
 2412 088b BB000000 		.4byte	0xbb
 2413 088f 01       		.uleb128 0x1
 2414 0890 50       		.byte	0x50
 2415 0891 00       		.byte	0
 2416 0892 15       		.uleb128 0x15
 2417 0893 DA000000 		.4byte	.LASF72
 2418 0897 01       		.byte	0x1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 72


 2419 0898 1B05     		.2byte	0x51b
 2420 089a 76000000 		.4byte	0x76
 2421 089e 00000000 		.4byte	.LFB36
 2422 08a2 0C000000 		.4byte	.LFE36-.LFB36
 2423 08a6 01       		.uleb128 0x1
 2424 08a7 9C       		.byte	0x9c
 2425 08a8 15       		.uleb128 0x15
 2426 08a9 4A010000 		.4byte	.LASF73
 2427 08ad 01       		.byte	0x1
 2428 08ae 3205     		.2byte	0x532
 2429 08b0 76000000 		.4byte	0x76
 2430 08b4 00000000 		.4byte	.LFB37
 2431 08b8 0C000000 		.4byte	.LFE37-.LFB37
 2432 08bc 01       		.uleb128 0x1
 2433 08bd 9C       		.byte	0x9c
 2434 08be 10       		.uleb128 0x10
 2435 08bf 71030000 		.4byte	.LASF74
 2436 08c3 01       		.byte	0x1
 2437 08c4 4905     		.2byte	0x549
 2438 08c6 00000000 		.4byte	.LFB38
 2439 08ca 0C000000 		.4byte	.LFE38-.LFB38
 2440 08ce 01       		.uleb128 0x1
 2441 08cf 9C       		.byte	0x9c
 2442 08d0 E3080000 		.4byte	0x8e3
 2443 08d4 19       		.uleb128 0x19
 2444 08d5 04050000 		.4byte	.LASF18
 2445 08d9 01       		.byte	0x1
 2446 08da 4905     		.2byte	0x549
 2447 08dc 76000000 		.4byte	0x76
 2448 08e0 01       		.uleb128 0x1
 2449 08e1 50       		.byte	0x50
 2450 08e2 00       		.byte	0
 2451 08e3 10       		.uleb128 0x10
 2452 08e4 88050000 		.4byte	.LASF75
 2453 08e8 01       		.byte	0x1
 2454 08e9 6005     		.2byte	0x560
 2455 08eb 00000000 		.4byte	.LFB39
 2456 08ef 0C000000 		.4byte	.LFE39-.LFB39
 2457 08f3 01       		.uleb128 0x1
 2458 08f4 9C       		.byte	0x9c
 2459 08f5 08090000 		.4byte	0x908
 2460 08f9 19       		.uleb128 0x19
 2461 08fa 04050000 		.4byte	.LASF18
 2462 08fe 01       		.byte	0x1
 2463 08ff 6005     		.2byte	0x560
 2464 0901 76000000 		.4byte	0x76
 2465 0905 01       		.uleb128 0x1
 2466 0906 50       		.byte	0x50
 2467 0907 00       		.byte	0
 2468 0908 1A       		.uleb128 0x1a
 2469 0909 5B050000 		.4byte	.LASF79
 2470 090d 01       		.byte	0x1
 2471 090e 15       		.byte	0x15
 2472 090f 6B000000 		.4byte	0x6b
 2473 0913 05       		.uleb128 0x5
 2474 0914 03       		.byte	0x3
 2475 0915 00000000 		.4byte	PPMCounter_initVar
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 73


 2476 0919 1B       		.uleb128 0x1b
 2477 091a 71020000 		.4byte	.LASF80
 2478 091e 03       		.byte	0x3
 2479 091f 82       		.byte	0x82
 2480 0920 6B000000 		.4byte	0x6b
 2481 0924 1C       		.uleb128 0x1c
 2482 0925 1E000000 		.4byte	.LASF81
 2483 0929 03       		.byte	0x3
 2484 092a 83       		.byte	0x83
 2485 092b 1D       		.uleb128 0x1d
 2486 092c 6B000000 		.4byte	0x6b
 2487 0930 00       		.byte	0
 2488 0931 00       		.byte	0
 2489              		.section	.debug_abbrev,"",%progbits
 2490              	.Ldebug_abbrev0:
 2491 0000 01       		.uleb128 0x1
 2492 0001 11       		.uleb128 0x11
 2493 0002 01       		.byte	0x1
 2494 0003 25       		.uleb128 0x25
 2495 0004 0E       		.uleb128 0xe
 2496 0005 13       		.uleb128 0x13
 2497 0006 0B       		.uleb128 0xb
 2498 0007 03       		.uleb128 0x3
 2499 0008 0E       		.uleb128 0xe
 2500 0009 1B       		.uleb128 0x1b
 2501 000a 0E       		.uleb128 0xe
 2502 000b 55       		.uleb128 0x55
 2503 000c 17       		.uleb128 0x17
 2504 000d 11       		.uleb128 0x11
 2505 000e 01       		.uleb128 0x1
 2506 000f 10       		.uleb128 0x10
 2507 0010 17       		.uleb128 0x17
 2508 0011 00       		.byte	0
 2509 0012 00       		.byte	0
 2510 0013 02       		.uleb128 0x2
 2511 0014 24       		.uleb128 0x24
 2512 0015 00       		.byte	0
 2513 0016 0B       		.uleb128 0xb
 2514 0017 0B       		.uleb128 0xb
 2515 0018 3E       		.uleb128 0x3e
 2516 0019 0B       		.uleb128 0xb
 2517 001a 03       		.uleb128 0x3
 2518 001b 0E       		.uleb128 0xe
 2519 001c 00       		.byte	0
 2520 001d 00       		.byte	0
 2521 001e 03       		.uleb128 0x3
 2522 001f 24       		.uleb128 0x24
 2523 0020 00       		.byte	0
 2524 0021 0B       		.uleb128 0xb
 2525 0022 0B       		.uleb128 0xb
 2526 0023 3E       		.uleb128 0x3e
 2527 0024 0B       		.uleb128 0xb
 2528 0025 03       		.uleb128 0x3
 2529 0026 08       		.uleb128 0x8
 2530 0027 00       		.byte	0
 2531 0028 00       		.byte	0
 2532 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 74


 2533 002a 16       		.uleb128 0x16
 2534 002b 00       		.byte	0
 2535 002c 03       		.uleb128 0x3
 2536 002d 0E       		.uleb128 0xe
 2537 002e 3A       		.uleb128 0x3a
 2538 002f 0B       		.uleb128 0xb
 2539 0030 3B       		.uleb128 0x3b
 2540 0031 0B       		.uleb128 0xb
 2541 0032 49       		.uleb128 0x49
 2542 0033 13       		.uleb128 0x13
 2543 0034 00       		.byte	0
 2544 0035 00       		.byte	0
 2545 0036 05       		.uleb128 0x5
 2546 0037 16       		.uleb128 0x16
 2547 0038 00       		.byte	0
 2548 0039 03       		.uleb128 0x3
 2549 003a 0E       		.uleb128 0xe
 2550 003b 3A       		.uleb128 0x3a
 2551 003c 0B       		.uleb128 0xb
 2552 003d 3B       		.uleb128 0x3b
 2553 003e 05       		.uleb128 0x5
 2554 003f 49       		.uleb128 0x49
 2555 0040 13       		.uleb128 0x13
 2556 0041 00       		.byte	0
 2557 0042 00       		.byte	0
 2558 0043 06       		.uleb128 0x6
 2559 0044 35       		.uleb128 0x35
 2560 0045 00       		.byte	0
 2561 0046 49       		.uleb128 0x49
 2562 0047 13       		.uleb128 0x13
 2563 0048 00       		.byte	0
 2564 0049 00       		.byte	0
 2565 004a 07       		.uleb128 0x7
 2566 004b 2E       		.uleb128 0x2e
 2567 004c 01       		.byte	0x1
 2568 004d 3F       		.uleb128 0x3f
 2569 004e 19       		.uleb128 0x19
 2570 004f 03       		.uleb128 0x3
 2571 0050 0E       		.uleb128 0xe
 2572 0051 3A       		.uleb128 0x3a
 2573 0052 0B       		.uleb128 0xb
 2574 0053 3B       		.uleb128 0x3b
 2575 0054 05       		.uleb128 0x5
 2576 0055 27       		.uleb128 0x27
 2577 0056 19       		.uleb128 0x19
 2578 0057 20       		.uleb128 0x20
 2579 0058 0B       		.uleb128 0xb
 2580 0059 01       		.uleb128 0x1
 2581 005a 13       		.uleb128 0x13
 2582 005b 00       		.byte	0
 2583 005c 00       		.byte	0
 2584 005d 08       		.uleb128 0x8
 2585 005e 05       		.uleb128 0x5
 2586 005f 00       		.byte	0
 2587 0060 03       		.uleb128 0x3
 2588 0061 0E       		.uleb128 0xe
 2589 0062 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 75


 2590 0063 0B       		.uleb128 0xb
 2591 0064 3B       		.uleb128 0x3b
 2592 0065 05       		.uleb128 0x5
 2593 0066 49       		.uleb128 0x49
 2594 0067 13       		.uleb128 0x13
 2595 0068 00       		.byte	0
 2596 0069 00       		.byte	0
 2597 006a 09       		.uleb128 0x9
 2598 006b 2E       		.uleb128 0x2e
 2599 006c 01       		.byte	0x1
 2600 006d 3F       		.uleb128 0x3f
 2601 006e 19       		.uleb128 0x19
 2602 006f 03       		.uleb128 0x3
 2603 0070 0E       		.uleb128 0xe
 2604 0071 3A       		.uleb128 0x3a
 2605 0072 0B       		.uleb128 0xb
 2606 0073 3B       		.uleb128 0x3b
 2607 0074 0B       		.uleb128 0xb
 2608 0075 27       		.uleb128 0x27
 2609 0076 19       		.uleb128 0x19
 2610 0077 11       		.uleb128 0x11
 2611 0078 01       		.uleb128 0x1
 2612 0079 12       		.uleb128 0x12
 2613 007a 06       		.uleb128 0x6
 2614 007b 40       		.uleb128 0x40
 2615 007c 18       		.uleb128 0x18
 2616 007d 9742     		.uleb128 0x2117
 2617 007f 19       		.uleb128 0x19
 2618 0080 01       		.uleb128 0x1
 2619 0081 13       		.uleb128 0x13
 2620 0082 00       		.byte	0
 2621 0083 00       		.byte	0
 2622 0084 0A       		.uleb128 0xa
 2623 0085 1D       		.uleb128 0x1d
 2624 0086 01       		.byte	0x1
 2625 0087 31       		.uleb128 0x31
 2626 0088 13       		.uleb128 0x13
 2627 0089 11       		.uleb128 0x11
 2628 008a 01       		.uleb128 0x1
 2629 008b 12       		.uleb128 0x12
 2630 008c 06       		.uleb128 0x6
 2631 008d 58       		.uleb128 0x58
 2632 008e 0B       		.uleb128 0xb
 2633 008f 59       		.uleb128 0x59
 2634 0090 0B       		.uleb128 0xb
 2635 0091 01       		.uleb128 0x1
 2636 0092 13       		.uleb128 0x13
 2637 0093 00       		.byte	0
 2638 0094 00       		.byte	0
 2639 0095 0B       		.uleb128 0xb
 2640 0096 05       		.uleb128 0x5
 2641 0097 00       		.byte	0
 2642 0098 31       		.uleb128 0x31
 2643 0099 13       		.uleb128 0x13
 2644 009a 1C       		.uleb128 0x1c
 2645 009b 0B       		.uleb128 0xb
 2646 009c 00       		.byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 76


 2647 009d 00       		.byte	0
 2648 009e 0C       		.uleb128 0xc
 2649 009f 05       		.uleb128 0x5
 2650 00a0 00       		.byte	0
 2651 00a1 31       		.uleb128 0x31
 2652 00a2 13       		.uleb128 0x13
 2653 00a3 1C       		.uleb128 0x1c
 2654 00a4 05       		.uleb128 0x5
 2655 00a5 00       		.byte	0
 2656 00a6 00       		.byte	0
 2657 00a7 0D       		.uleb128 0xd
 2658 00a8 1D       		.uleb128 0x1d
 2659 00a9 01       		.byte	0x1
 2660 00aa 31       		.uleb128 0x31
 2661 00ab 13       		.uleb128 0x13
 2662 00ac 11       		.uleb128 0x11
 2663 00ad 01       		.uleb128 0x1
 2664 00ae 12       		.uleb128 0x12
 2665 00af 06       		.uleb128 0x6
 2666 00b0 58       		.uleb128 0x58
 2667 00b1 0B       		.uleb128 0xb
 2668 00b2 59       		.uleb128 0x59
 2669 00b3 0B       		.uleb128 0xb
 2670 00b4 00       		.byte	0
 2671 00b5 00       		.byte	0
 2672 00b6 0E       		.uleb128 0xe
 2673 00b7 34       		.uleb128 0x34
 2674 00b8 00       		.byte	0
 2675 00b9 03       		.uleb128 0x3
 2676 00ba 0E       		.uleb128 0xe
 2677 00bb 3A       		.uleb128 0x3a
 2678 00bc 0B       		.uleb128 0xb
 2679 00bd 3B       		.uleb128 0x3b
 2680 00be 0B       		.uleb128 0xb
 2681 00bf 49       		.uleb128 0x49
 2682 00c0 13       		.uleb128 0x13
 2683 00c1 02       		.uleb128 0x2
 2684 00c2 17       		.uleb128 0x17
 2685 00c3 00       		.byte	0
 2686 00c4 00       		.byte	0
 2687 00c5 0F       		.uleb128 0xf
 2688 00c6 898201   		.uleb128 0x4109
 2689 00c9 00       		.byte	0
 2690 00ca 11       		.uleb128 0x11
 2691 00cb 01       		.uleb128 0x1
 2692 00cc 31       		.uleb128 0x31
 2693 00cd 13       		.uleb128 0x13
 2694 00ce 00       		.byte	0
 2695 00cf 00       		.byte	0
 2696 00d0 10       		.uleb128 0x10
 2697 00d1 2E       		.uleb128 0x2e
 2698 00d2 01       		.byte	0x1
 2699 00d3 3F       		.uleb128 0x3f
 2700 00d4 19       		.uleb128 0x19
 2701 00d5 03       		.uleb128 0x3
 2702 00d6 0E       		.uleb128 0xe
 2703 00d7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 77


 2704 00d8 0B       		.uleb128 0xb
 2705 00d9 3B       		.uleb128 0x3b
 2706 00da 05       		.uleb128 0x5
 2707 00db 27       		.uleb128 0x27
 2708 00dc 19       		.uleb128 0x19
 2709 00dd 11       		.uleb128 0x11
 2710 00de 01       		.uleb128 0x1
 2711 00df 12       		.uleb128 0x12
 2712 00e0 06       		.uleb128 0x6
 2713 00e1 40       		.uleb128 0x40
 2714 00e2 18       		.uleb128 0x18
 2715 00e3 9742     		.uleb128 0x2117
 2716 00e5 19       		.uleb128 0x19
 2717 00e6 01       		.uleb128 0x1
 2718 00e7 13       		.uleb128 0x13
 2719 00e8 00       		.byte	0
 2720 00e9 00       		.byte	0
 2721 00ea 11       		.uleb128 0x11
 2722 00eb 05       		.uleb128 0x5
 2723 00ec 00       		.byte	0
 2724 00ed 03       		.uleb128 0x3
 2725 00ee 0E       		.uleb128 0xe
 2726 00ef 3A       		.uleb128 0x3a
 2727 00f0 0B       		.uleb128 0xb
 2728 00f1 3B       		.uleb128 0x3b
 2729 00f2 05       		.uleb128 0x5
 2730 00f3 49       		.uleb128 0x49
 2731 00f4 13       		.uleb128 0x13
 2732 00f5 02       		.uleb128 0x2
 2733 00f6 17       		.uleb128 0x17
 2734 00f7 00       		.byte	0
 2735 00f8 00       		.byte	0
 2736 00f9 12       		.uleb128 0x12
 2737 00fa 34       		.uleb128 0x34
 2738 00fb 00       		.byte	0
 2739 00fc 03       		.uleb128 0x3
 2740 00fd 0E       		.uleb128 0xe
 2741 00fe 3A       		.uleb128 0x3a
 2742 00ff 0B       		.uleb128 0xb
 2743 0100 3B       		.uleb128 0x3b
 2744 0101 05       		.uleb128 0x5
 2745 0102 49       		.uleb128 0x49
 2746 0103 13       		.uleb128 0x13
 2747 0104 02       		.uleb128 0x2
 2748 0105 17       		.uleb128 0x17
 2749 0106 00       		.byte	0
 2750 0107 00       		.byte	0
 2751 0108 13       		.uleb128 0x13
 2752 0109 2E       		.uleb128 0x2e
 2753 010a 01       		.byte	0x1
 2754 010b 31       		.uleb128 0x31
 2755 010c 13       		.uleb128 0x13
 2756 010d 11       		.uleb128 0x11
 2757 010e 01       		.uleb128 0x1
 2758 010f 12       		.uleb128 0x12
 2759 0110 06       		.uleb128 0x6
 2760 0111 40       		.uleb128 0x40
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 78


 2761 0112 18       		.uleb128 0x18
 2762 0113 9742     		.uleb128 0x2117
 2763 0115 19       		.uleb128 0x19
 2764 0116 01       		.uleb128 0x1
 2765 0117 13       		.uleb128 0x13
 2766 0118 00       		.byte	0
 2767 0119 00       		.byte	0
 2768 011a 14       		.uleb128 0x14
 2769 011b 05       		.uleb128 0x5
 2770 011c 00       		.byte	0
 2771 011d 31       		.uleb128 0x31
 2772 011e 13       		.uleb128 0x13
 2773 011f 02       		.uleb128 0x2
 2774 0120 17       		.uleb128 0x17
 2775 0121 00       		.byte	0
 2776 0122 00       		.byte	0
 2777 0123 15       		.uleb128 0x15
 2778 0124 2E       		.uleb128 0x2e
 2779 0125 00       		.byte	0
 2780 0126 3F       		.uleb128 0x3f
 2781 0127 19       		.uleb128 0x19
 2782 0128 03       		.uleb128 0x3
 2783 0129 0E       		.uleb128 0xe
 2784 012a 3A       		.uleb128 0x3a
 2785 012b 0B       		.uleb128 0xb
 2786 012c 3B       		.uleb128 0x3b
 2787 012d 05       		.uleb128 0x5
 2788 012e 27       		.uleb128 0x27
 2789 012f 19       		.uleb128 0x19
 2790 0130 49       		.uleb128 0x49
 2791 0131 13       		.uleb128 0x13
 2792 0132 11       		.uleb128 0x11
 2793 0133 01       		.uleb128 0x1
 2794 0134 12       		.uleb128 0x12
 2795 0135 06       		.uleb128 0x6
 2796 0136 40       		.uleb128 0x40
 2797 0137 18       		.uleb128 0x18
 2798 0138 9742     		.uleb128 0x2117
 2799 013a 19       		.uleb128 0x19
 2800 013b 00       		.byte	0
 2801 013c 00       		.byte	0
 2802 013d 16       		.uleb128 0x16
 2803 013e 898201   		.uleb128 0x4109
 2804 0141 01       		.byte	0x1
 2805 0142 11       		.uleb128 0x11
 2806 0143 01       		.uleb128 0x1
 2807 0144 31       		.uleb128 0x31
 2808 0145 13       		.uleb128 0x13
 2809 0146 00       		.byte	0
 2810 0147 00       		.byte	0
 2811 0148 17       		.uleb128 0x17
 2812 0149 8A8201   		.uleb128 0x410a
 2813 014c 00       		.byte	0
 2814 014d 02       		.uleb128 0x2
 2815 014e 18       		.uleb128 0x18
 2816 014f 9142     		.uleb128 0x2111
 2817 0151 18       		.uleb128 0x18
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 79


 2818 0152 00       		.byte	0
 2819 0153 00       		.byte	0
 2820 0154 18       		.uleb128 0x18
 2821 0155 05       		.uleb128 0x5
 2822 0156 00       		.byte	0
 2823 0157 31       		.uleb128 0x31
 2824 0158 13       		.uleb128 0x13
 2825 0159 02       		.uleb128 0x2
 2826 015a 18       		.uleb128 0x18
 2827 015b 00       		.byte	0
 2828 015c 00       		.byte	0
 2829 015d 19       		.uleb128 0x19
 2830 015e 05       		.uleb128 0x5
 2831 015f 00       		.byte	0
 2832 0160 03       		.uleb128 0x3
 2833 0161 0E       		.uleb128 0xe
 2834 0162 3A       		.uleb128 0x3a
 2835 0163 0B       		.uleb128 0xb
 2836 0164 3B       		.uleb128 0x3b
 2837 0165 05       		.uleb128 0x5
 2838 0166 49       		.uleb128 0x49
 2839 0167 13       		.uleb128 0x13
 2840 0168 02       		.uleb128 0x2
 2841 0169 18       		.uleb128 0x18
 2842 016a 00       		.byte	0
 2843 016b 00       		.byte	0
 2844 016c 1A       		.uleb128 0x1a
 2845 016d 34       		.uleb128 0x34
 2846 016e 00       		.byte	0
 2847 016f 03       		.uleb128 0x3
 2848 0170 0E       		.uleb128 0xe
 2849 0171 3A       		.uleb128 0x3a
 2850 0172 0B       		.uleb128 0xb
 2851 0173 3B       		.uleb128 0x3b
 2852 0174 0B       		.uleb128 0xb
 2853 0175 49       		.uleb128 0x49
 2854 0176 13       		.uleb128 0x13
 2855 0177 3F       		.uleb128 0x3f
 2856 0178 19       		.uleb128 0x19
 2857 0179 02       		.uleb128 0x2
 2858 017a 18       		.uleb128 0x18
 2859 017b 00       		.byte	0
 2860 017c 00       		.byte	0
 2861 017d 1B       		.uleb128 0x1b
 2862 017e 2E       		.uleb128 0x2e
 2863 017f 00       		.byte	0
 2864 0180 3F       		.uleb128 0x3f
 2865 0181 19       		.uleb128 0x19
 2866 0182 03       		.uleb128 0x3
 2867 0183 0E       		.uleb128 0xe
 2868 0184 3A       		.uleb128 0x3a
 2869 0185 0B       		.uleb128 0xb
 2870 0186 3B       		.uleb128 0x3b
 2871 0187 0B       		.uleb128 0xb
 2872 0188 27       		.uleb128 0x27
 2873 0189 19       		.uleb128 0x19
 2874 018a 49       		.uleb128 0x49
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 80


 2875 018b 13       		.uleb128 0x13
 2876 018c 3C       		.uleb128 0x3c
 2877 018d 19       		.uleb128 0x19
 2878 018e 00       		.byte	0
 2879 018f 00       		.byte	0
 2880 0190 1C       		.uleb128 0x1c
 2881 0191 2E       		.uleb128 0x2e
 2882 0192 01       		.byte	0x1
 2883 0193 3F       		.uleb128 0x3f
 2884 0194 19       		.uleb128 0x19
 2885 0195 03       		.uleb128 0x3
 2886 0196 0E       		.uleb128 0xe
 2887 0197 3A       		.uleb128 0x3a
 2888 0198 0B       		.uleb128 0xb
 2889 0199 3B       		.uleb128 0x3b
 2890 019a 0B       		.uleb128 0xb
 2891 019b 27       		.uleb128 0x27
 2892 019c 19       		.uleb128 0x19
 2893 019d 3C       		.uleb128 0x3c
 2894 019e 19       		.uleb128 0x19
 2895 019f 00       		.byte	0
 2896 01a0 00       		.byte	0
 2897 01a1 1D       		.uleb128 0x1d
 2898 01a2 05       		.uleb128 0x5
 2899 01a3 00       		.byte	0
 2900 01a4 49       		.uleb128 0x49
 2901 01a5 13       		.uleb128 0x13
 2902 01a6 00       		.byte	0
 2903 01a7 00       		.byte	0
 2904 01a8 00       		.byte	0
 2905              		.section	.debug_loc,"",%progbits
 2906              	.Ldebug_loc0:
 2907              	.LLST0:
 2908 0000 06000000 		.4byte	.LVL3
 2909 0004 13000000 		.4byte	.LVL4-1
 2910 0008 0100     		.2byte	0x1
 2911 000a 50       		.byte	0x50
 2912 000b 00000000 		.4byte	0
 2913 000f 00000000 		.4byte	0
 2914              	.LLST1:
 2915 0013 00000000 		.4byte	.LVL5
 2916 0017 07000000 		.4byte	.LVL6-1
 2917 001b 0100     		.2byte	0x1
 2918 001d 50       		.byte	0x50
 2919 001e 07000000 		.4byte	.LVL6-1
 2920 0022 16000000 		.4byte	.LVL7
 2921 0026 0100     		.2byte	0x1
 2922 0028 54       		.byte	0x54
 2923 0029 16000000 		.4byte	.LVL7
 2924 002d 28000000 		.4byte	.LFE4
 2925 0031 0400     		.2byte	0x4
 2926 0033 F3       		.byte	0xf3
 2927 0034 01       		.uleb128 0x1
 2928 0035 50       		.byte	0x50
 2929 0036 9F       		.byte	0x9f
 2930 0037 00000000 		.4byte	0
 2931 003b 00000000 		.4byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 81


 2932              	.LLST2:
 2933 003f 08000000 		.4byte	.LVL6
 2934 0043 1B000000 		.4byte	.LVL8-1
 2935 0047 0100     		.2byte	0x1
 2936 0049 50       		.byte	0x50
 2937 004a 00000000 		.4byte	0
 2938 004e 00000000 		.4byte	0
 2939              	.LLST3:
 2940 0052 00000000 		.4byte	.LVL9
 2941 0056 07000000 		.4byte	.LVL10-1
 2942 005a 0100     		.2byte	0x1
 2943 005c 50       		.byte	0x50
 2944 005d 07000000 		.4byte	.LVL10-1
 2945 0061 16000000 		.4byte	.LVL11
 2946 0065 0100     		.2byte	0x1
 2947 0067 54       		.byte	0x54
 2948 0068 16000000 		.4byte	.LVL11
 2949 006c 28000000 		.4byte	.LFE5
 2950 0070 0400     		.2byte	0x4
 2951 0072 F3       		.byte	0xf3
 2952 0073 01       		.uleb128 0x1
 2953 0074 50       		.byte	0x50
 2954 0075 9F       		.byte	0x9f
 2955 0076 00000000 		.4byte	0
 2956 007a 00000000 		.4byte	0
 2957              	.LLST4:
 2958 007e 08000000 		.4byte	.LVL10
 2959 0082 1B000000 		.4byte	.LVL12-1
 2960 0086 0100     		.2byte	0x1
 2961 0088 50       		.byte	0x50
 2962 0089 00000000 		.4byte	0
 2963 008d 00000000 		.4byte	0
 2964              	.LLST5:
 2965 0091 00000000 		.4byte	.LVL13
 2966 0095 07000000 		.4byte	.LVL14-1
 2967 0099 0100     		.2byte	0x1
 2968 009b 50       		.byte	0x50
 2969 009c 07000000 		.4byte	.LVL14-1
 2970 00a0 16000000 		.4byte	.LVL15
 2971 00a4 0100     		.2byte	0x1
 2972 00a6 54       		.byte	0x54
 2973 00a7 16000000 		.4byte	.LVL15
 2974 00ab 28000000 		.4byte	.LFE6
 2975 00af 0400     		.2byte	0x4
 2976 00b1 F3       		.byte	0xf3
 2977 00b2 01       		.uleb128 0x1
 2978 00b3 50       		.byte	0x50
 2979 00b4 9F       		.byte	0x9f
 2980 00b5 00000000 		.4byte	0
 2981 00b9 00000000 		.4byte	0
 2982              	.LLST6:
 2983 00bd 08000000 		.4byte	.LVL14
 2984 00c1 1B000000 		.4byte	.LVL16-1
 2985 00c5 0100     		.2byte	0x1
 2986 00c7 50       		.byte	0x50
 2987 00c8 00000000 		.4byte	0
 2988 00cc 00000000 		.4byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 82


 2989              	.LLST7:
 2990 00d0 00000000 		.4byte	.LVL17
 2991 00d4 07000000 		.4byte	.LVL18-1
 2992 00d8 0100     		.2byte	0x1
 2993 00da 50       		.byte	0x50
 2994 00db 07000000 		.4byte	.LVL18-1
 2995 00df 18000000 		.4byte	.LVL19
 2996 00e3 0100     		.2byte	0x1
 2997 00e5 54       		.byte	0x54
 2998 00e6 18000000 		.4byte	.LVL19
 2999 00ea 2C000000 		.4byte	.LFE7
 3000 00ee 0400     		.2byte	0x4
 3001 00f0 F3       		.byte	0xf3
 3002 00f1 01       		.uleb128 0x1
 3003 00f2 50       		.byte	0x50
 3004 00f3 9F       		.byte	0x9f
 3005 00f4 00000000 		.4byte	0
 3006 00f8 00000000 		.4byte	0
 3007              	.LLST8:
 3008 00fc 08000000 		.4byte	.LVL18
 3009 0100 21000000 		.4byte	.LVL20-1
 3010 0104 0100     		.2byte	0x1
 3011 0106 50       		.byte	0x50
 3012 0107 00000000 		.4byte	0
 3013 010b 00000000 		.4byte	0
 3014              	.LLST9:
 3015 010f 00000000 		.4byte	.LVL21
 3016 0113 04000000 		.4byte	.LVL22
 3017 0117 0100     		.2byte	0x1
 3018 0119 50       		.byte	0x50
 3019 011a 04000000 		.4byte	.LVL22
 3020 011e 10000000 		.4byte	.LFE8
 3021 0122 0400     		.2byte	0x4
 3022 0124 F3       		.byte	0xf3
 3023 0125 01       		.uleb128 0x1
 3024 0126 50       		.byte	0x50
 3025 0127 9F       		.byte	0x9f
 3026 0128 00000000 		.4byte	0
 3027 012c 00000000 		.4byte	0
 3028              	.LLST10:
 3029 0130 00000000 		.4byte	.LVL23
 3030 0134 07000000 		.4byte	.LVL24-1
 3031 0138 0100     		.2byte	0x1
 3032 013a 50       		.byte	0x50
 3033 013b 07000000 		.4byte	.LVL24-1
 3034 013f 18000000 		.4byte	.LVL25
 3035 0143 0100     		.2byte	0x1
 3036 0145 54       		.byte	0x54
 3037 0146 18000000 		.4byte	.LVL25
 3038 014a 28000000 		.4byte	.LFE9
 3039 014e 0400     		.2byte	0x4
 3040 0150 F3       		.byte	0xf3
 3041 0151 01       		.uleb128 0x1
 3042 0152 50       		.byte	0x50
 3043 0153 9F       		.byte	0x9f
 3044 0154 00000000 		.4byte	0
 3045 0158 00000000 		.4byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 83


 3046              	.LLST11:
 3047 015c 08000000 		.4byte	.LVL24
 3048 0160 21000000 		.4byte	.LVL26-1
 3049 0164 0100     		.2byte	0x1
 3050 0166 50       		.byte	0x50
 3051 0167 00000000 		.4byte	0
 3052 016b 00000000 		.4byte	0
 3053              	.LLST12:
 3054 016f 00000000 		.4byte	.LVL27
 3055 0173 07000000 		.4byte	.LVL28-1
 3056 0177 0100     		.2byte	0x1
 3057 0179 50       		.byte	0x50
 3058 017a 07000000 		.4byte	.LVL28-1
 3059 017e 18000000 		.4byte	.LVL29
 3060 0182 0100     		.2byte	0x1
 3061 0184 54       		.byte	0x54
 3062 0185 18000000 		.4byte	.LVL29
 3063 0189 28000000 		.4byte	.LFE10
 3064 018d 0400     		.2byte	0x4
 3065 018f F3       		.byte	0xf3
 3066 0190 01       		.uleb128 0x1
 3067 0191 50       		.byte	0x50
 3068 0192 9F       		.byte	0x9f
 3069 0193 00000000 		.4byte	0
 3070 0197 00000000 		.4byte	0
 3071              	.LLST13:
 3072 019b 08000000 		.4byte	.LVL28
 3073 019f 21000000 		.4byte	.LVL30-1
 3074 01a3 0100     		.2byte	0x1
 3075 01a5 50       		.byte	0x50
 3076 01a6 00000000 		.4byte	0
 3077 01aa 00000000 		.4byte	0
 3078              	.LLST14:
 3079 01ae 00000000 		.4byte	.LVL31
 3080 01b2 07000000 		.4byte	.LVL32-1
 3081 01b6 0100     		.2byte	0x1
 3082 01b8 50       		.byte	0x50
 3083 01b9 07000000 		.4byte	.LVL32-1
 3084 01bd 10000000 		.4byte	.LVL33
 3085 01c1 0100     		.2byte	0x1
 3086 01c3 54       		.byte	0x54
 3087 01c4 10000000 		.4byte	.LVL33
 3088 01c8 2C000000 		.4byte	.LFE11
 3089 01cc 0400     		.2byte	0x4
 3090 01ce F3       		.byte	0xf3
 3091 01cf 01       		.uleb128 0x1
 3092 01d0 50       		.byte	0x50
 3093 01d1 9F       		.byte	0x9f
 3094 01d2 00000000 		.4byte	0
 3095 01d6 00000000 		.4byte	0
 3096              	.LLST15:
 3097 01da 08000000 		.4byte	.LVL32
 3098 01de 1F000000 		.4byte	.LVL34-1
 3099 01e2 0100     		.2byte	0x1
 3100 01e4 50       		.byte	0x50
 3101 01e5 00000000 		.4byte	0
 3102 01e9 00000000 		.4byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 84


 3103              	.LLST16:
 3104 01ed 00000000 		.4byte	.LVL35
 3105 01f1 07000000 		.4byte	.LVL36-1
 3106 01f5 0100     		.2byte	0x1
 3107 01f7 50       		.byte	0x50
 3108 01f8 07000000 		.4byte	.LVL36-1
 3109 01fc 16000000 		.4byte	.LVL37
 3110 0200 0100     		.2byte	0x1
 3111 0202 54       		.byte	0x54
 3112 0203 16000000 		.4byte	.LVL37
 3113 0207 28000000 		.4byte	.LFE12
 3114 020b 0400     		.2byte	0x4
 3115 020d F3       		.byte	0xf3
 3116 020e 01       		.uleb128 0x1
 3117 020f 50       		.byte	0x50
 3118 0210 9F       		.byte	0x9f
 3119 0211 00000000 		.4byte	0
 3120 0215 00000000 		.4byte	0
 3121              	.LLST17:
 3122 0219 08000000 		.4byte	.LVL36
 3123 021d 1B000000 		.4byte	.LVL38-1
 3124 0221 0100     		.2byte	0x1
 3125 0223 50       		.byte	0x50
 3126 0224 00000000 		.4byte	0
 3127 0228 00000000 		.4byte	0
 3128              	.LLST18:
 3129 022c 00000000 		.4byte	.LVL39
 3130 0230 04000000 		.4byte	.LVL40
 3131 0234 0100     		.2byte	0x1
 3132 0236 50       		.byte	0x50
 3133 0237 04000000 		.4byte	.LVL40
 3134 023b 0C000000 		.4byte	.LFE13
 3135 023f 0400     		.2byte	0x4
 3136 0241 F3       		.byte	0xf3
 3137 0242 01       		.uleb128 0x1
 3138 0243 50       		.byte	0x50
 3139 0244 9F       		.byte	0x9f
 3140 0245 00000000 		.4byte	0
 3141 0249 00000000 		.4byte	0
 3142              	.LLST19:
 3143 024d 00000000 		.4byte	.LVL41
 3144 0251 07000000 		.4byte	.LVL42-1
 3145 0255 0100     		.2byte	0x1
 3146 0257 50       		.byte	0x50
 3147 0258 07000000 		.4byte	.LVL42-1
 3148 025c 16000000 		.4byte	.LVL43
 3149 0260 0100     		.2byte	0x1
 3150 0262 54       		.byte	0x54
 3151 0263 16000000 		.4byte	.LVL43
 3152 0267 28000000 		.4byte	.LFE15
 3153 026b 0400     		.2byte	0x4
 3154 026d F3       		.byte	0xf3
 3155 026e 01       		.uleb128 0x1
 3156 026f 50       		.byte	0x50
 3157 0270 9F       		.byte	0x9f
 3158 0271 00000000 		.4byte	0
 3159 0275 00000000 		.4byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 85


 3160              	.LLST20:
 3161 0279 08000000 		.4byte	.LVL42
 3162 027d 1B000000 		.4byte	.LVL44-1
 3163 0281 0100     		.2byte	0x1
 3164 0283 50       		.byte	0x50
 3165 0284 00000000 		.4byte	0
 3166 0288 00000000 		.4byte	0
 3167              	.LLST21:
 3168 028c 00000000 		.4byte	.LVL45
 3169 0290 04000000 		.4byte	.LVL46
 3170 0294 0100     		.2byte	0x1
 3171 0296 50       		.byte	0x50
 3172 0297 04000000 		.4byte	.LVL46
 3173 029b 0C000000 		.4byte	.LFE16
 3174 029f 0400     		.2byte	0x4
 3175 02a1 F3       		.byte	0xf3
 3176 02a2 01       		.uleb128 0x1
 3177 02a3 50       		.byte	0x50
 3178 02a4 9F       		.byte	0x9f
 3179 02a5 00000000 		.4byte	0
 3180 02a9 00000000 		.4byte	0
 3181              	.LLST22:
 3182 02ad 00000000 		.4byte	.LVL47
 3183 02b1 07000000 		.4byte	.LVL48-1
 3184 02b5 0100     		.2byte	0x1
 3185 02b7 50       		.byte	0x50
 3186 02b8 07000000 		.4byte	.LVL48-1
 3187 02bc 1E000000 		.4byte	.LVL50
 3188 02c0 0100     		.2byte	0x1
 3189 02c2 54       		.byte	0x54
 3190 02c3 1E000000 		.4byte	.LVL50
 3191 02c7 24000000 		.4byte	.LFE18
 3192 02cb 0400     		.2byte	0x4
 3193 02cd F3       		.byte	0xf3
 3194 02ce 01       		.uleb128 0x1
 3195 02cf 50       		.byte	0x50
 3196 02d0 9F       		.byte	0x9f
 3197 02d1 00000000 		.4byte	0
 3198 02d5 00000000 		.4byte	0
 3199              	.LLST23:
 3200 02d9 08000000 		.4byte	.LVL48
 3201 02dd 1D000000 		.4byte	.LVL49-1
 3202 02e1 0100     		.2byte	0x1
 3203 02e3 50       		.byte	0x50
 3204 02e4 00000000 		.4byte	0
 3205 02e8 00000000 		.4byte	0
 3206              	.LLST24:
 3207 02ec 00000000 		.4byte	.LVL51
 3208 02f0 04000000 		.4byte	.LVL52
 3209 02f4 0100     		.2byte	0x1
 3210 02f6 50       		.byte	0x50
 3211 02f7 04000000 		.4byte	.LVL52
 3212 02fb 0C000000 		.4byte	.LFE19
 3213 02ff 0400     		.2byte	0x4
 3214 0301 F3       		.byte	0xf3
 3215 0302 01       		.uleb128 0x1
 3216 0303 50       		.byte	0x50
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 86


 3217 0304 9F       		.byte	0x9f
 3218 0305 00000000 		.4byte	0
 3219 0309 00000000 		.4byte	0
 3220              	.LLST25:
 3221 030d 00000000 		.4byte	.LVL53
 3222 0311 07000000 		.4byte	.LVL54-1
 3223 0315 0100     		.2byte	0x1
 3224 0317 50       		.byte	0x50
 3225 0318 07000000 		.4byte	.LVL54-1
 3226 031c 18000000 		.4byte	.LVL55
 3227 0320 0100     		.2byte	0x1
 3228 0322 54       		.byte	0x54
 3229 0323 18000000 		.4byte	.LVL55
 3230 0327 28000000 		.4byte	.LFE21
 3231 032b 0400     		.2byte	0x4
 3232 032d F3       		.byte	0xf3
 3233 032e 01       		.uleb128 0x1
 3234 032f 50       		.byte	0x50
 3235 0330 9F       		.byte	0x9f
 3236 0331 00000000 		.4byte	0
 3237 0335 00000000 		.4byte	0
 3238              	.LLST26:
 3239 0339 08000000 		.4byte	.LVL54
 3240 033d 21000000 		.4byte	.LVL56-1
 3241 0341 0100     		.2byte	0x1
 3242 0343 50       		.byte	0x50
 3243 0344 00000000 		.4byte	0
 3244 0348 00000000 		.4byte	0
 3245              	.LLST27:
 3246 034c 00000000 		.4byte	.LVL57
 3247 0350 04000000 		.4byte	.LVL58
 3248 0354 0100     		.2byte	0x1
 3249 0356 50       		.byte	0x50
 3250 0357 04000000 		.4byte	.LVL58
 3251 035b 0C000000 		.4byte	.LFE22
 3252 035f 0400     		.2byte	0x4
 3253 0361 F3       		.byte	0xf3
 3254 0362 01       		.uleb128 0x1
 3255 0363 50       		.byte	0x50
 3256 0364 9F       		.byte	0x9f
 3257 0365 00000000 		.4byte	0
 3258 0369 00000000 		.4byte	0
 3259              	.LLST28:
 3260 036d 00000000 		.4byte	.LVL59
 3261 0371 04000000 		.4byte	.LVL60
 3262 0375 0100     		.2byte	0x1
 3263 0377 50       		.byte	0x50
 3264 0378 04000000 		.4byte	.LVL60
 3265 037c 0C000000 		.4byte	.LFE24
 3266 0380 0400     		.2byte	0x4
 3267 0382 F3       		.byte	0xf3
 3268 0383 01       		.uleb128 0x1
 3269 0384 50       		.byte	0x50
 3270 0385 9F       		.byte	0x9f
 3271 0386 00000000 		.4byte	0
 3272 038a 00000000 		.4byte	0
 3273              	.LLST29:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 87


 3274 038e 00000000 		.4byte	.LVL61
 3275 0392 07000000 		.4byte	.LVL62-1
 3276 0396 0100     		.2byte	0x1
 3277 0398 50       		.byte	0x50
 3278 0399 07000000 		.4byte	.LVL62-1
 3279 039d 16000000 		.4byte	.LVL63
 3280 03a1 0100     		.2byte	0x1
 3281 03a3 54       		.byte	0x54
 3282 03a4 16000000 		.4byte	.LVL63
 3283 03a8 24000000 		.4byte	.LFE28
 3284 03ac 0400     		.2byte	0x4
 3285 03ae F3       		.byte	0xf3
 3286 03af 01       		.uleb128 0x1
 3287 03b0 50       		.byte	0x50
 3288 03b1 9F       		.byte	0x9f
 3289 03b2 00000000 		.4byte	0
 3290 03b6 00000000 		.4byte	0
 3291              	.LLST30:
 3292 03ba 08000000 		.4byte	.LVL62
 3293 03be 1B000000 		.4byte	.LVL64-1
 3294 03c2 0100     		.2byte	0x1
 3295 03c4 50       		.byte	0x50
 3296 03c5 00000000 		.4byte	0
 3297 03c9 00000000 		.4byte	0
 3298              	.LLST31:
 3299 03cd 00000000 		.4byte	.LVL65
 3300 03d1 07000000 		.4byte	.LVL66-1
 3301 03d5 0100     		.2byte	0x1
 3302 03d7 50       		.byte	0x50
 3303 03d8 07000000 		.4byte	.LVL66-1
 3304 03dc 10000000 		.4byte	.LVL67
 3305 03e0 0100     		.2byte	0x1
 3306 03e2 54       		.byte	0x54
 3307 03e3 10000000 		.4byte	.LVL67
 3308 03e7 24000000 		.4byte	.LFE29
 3309 03eb 0400     		.2byte	0x4
 3310 03ed F3       		.byte	0xf3
 3311 03ee 01       		.uleb128 0x1
 3312 03ef 50       		.byte	0x50
 3313 03f0 9F       		.byte	0x9f
 3314 03f1 00000000 		.4byte	0
 3315 03f5 00000000 		.4byte	0
 3316              	.LLST32:
 3317 03f9 08000000 		.4byte	.LVL66
 3318 03fd 1D000000 		.4byte	.LVL68-1
 3319 0401 0100     		.2byte	0x1
 3320 0403 50       		.byte	0x50
 3321 0404 00000000 		.4byte	0
 3322 0408 00000000 		.4byte	0
 3323              	.LLST33:
 3324 040c 00000000 		.4byte	.LVL69
 3325 0410 07000000 		.4byte	.LVL70-1
 3326 0414 0100     		.2byte	0x1
 3327 0416 50       		.byte	0x50
 3328 0417 07000000 		.4byte	.LVL70-1
 3329 041b 10000000 		.4byte	.LVL71
 3330 041f 0100     		.2byte	0x1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 88


 3331 0421 54       		.byte	0x54
 3332 0422 10000000 		.4byte	.LVL71
 3333 0426 28000000 		.4byte	.LFE30
 3334 042a 0400     		.2byte	0x4
 3335 042c F3       		.byte	0xf3
 3336 042d 01       		.uleb128 0x1
 3337 042e 50       		.byte	0x50
 3338 042f 9F       		.byte	0x9f
 3339 0430 00000000 		.4byte	0
 3340 0434 00000000 		.4byte	0
 3341              	.LLST34:
 3342 0438 08000000 		.4byte	.LVL70
 3343 043c 1D000000 		.4byte	.LVL72-1
 3344 0440 0100     		.2byte	0x1
 3345 0442 50       		.byte	0x50
 3346 0443 00000000 		.4byte	0
 3347 0447 00000000 		.4byte	0
 3348              	.LLST35:
 3349 044b 00000000 		.4byte	.LVL73
 3350 044f 07000000 		.4byte	.LVL74-1
 3351 0453 0100     		.2byte	0x1
 3352 0455 50       		.byte	0x50
 3353 0456 07000000 		.4byte	.LVL74-1
 3354 045a 10000000 		.4byte	.LVL75
 3355 045e 0100     		.2byte	0x1
 3356 0460 54       		.byte	0x54
 3357 0461 10000000 		.4byte	.LVL75
 3358 0465 24000000 		.4byte	.LFE31
 3359 0469 0400     		.2byte	0x4
 3360 046b F3       		.byte	0xf3
 3361 046c 01       		.uleb128 0x1
 3362 046d 50       		.byte	0x50
 3363 046e 9F       		.byte	0x9f
 3364 046f 00000000 		.4byte	0
 3365 0473 00000000 		.4byte	0
 3366              	.LLST36:
 3367 0477 08000000 		.4byte	.LVL74
 3368 047b 1D000000 		.4byte	.LVL76-1
 3369 047f 0100     		.2byte	0x1
 3370 0481 50       		.byte	0x50
 3371 0482 00000000 		.4byte	0
 3372 0486 00000000 		.4byte	0
 3373              	.LLST37:
 3374 048a 00000000 		.4byte	.LVL77
 3375 048e 07000000 		.4byte	.LVL78-1
 3376 0492 0100     		.2byte	0x1
 3377 0494 50       		.byte	0x50
 3378 0495 07000000 		.4byte	.LVL78-1
 3379 0499 10000000 		.4byte	.LVL79
 3380 049d 0100     		.2byte	0x1
 3381 049f 54       		.byte	0x54
 3382 04a0 10000000 		.4byte	.LVL79
 3383 04a4 24000000 		.4byte	.LFE32
 3384 04a8 0400     		.2byte	0x4
 3385 04aa F3       		.byte	0xf3
 3386 04ab 01       		.uleb128 0x1
 3387 04ac 50       		.byte	0x50
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 89


 3388 04ad 9F       		.byte	0x9f
 3389 04ae 00000000 		.4byte	0
 3390 04b2 00000000 		.4byte	0
 3391              	.LLST38:
 3392 04b6 08000000 		.4byte	.LVL78
 3393 04ba 1D000000 		.4byte	.LVL80-1
 3394 04be 0100     		.2byte	0x1
 3395 04c0 50       		.byte	0x50
 3396 04c1 00000000 		.4byte	0
 3397 04c5 00000000 		.4byte	0
 3398              	.LLST39:
 3399 04c9 00000000 		.4byte	.LVL81
 3400 04cd 09000000 		.4byte	.LVL82-1
 3401 04d1 0100     		.2byte	0x1
 3402 04d3 50       		.byte	0x50
 3403 04d4 09000000 		.4byte	.LVL82-1
 3404 04d8 0E000000 		.4byte	.LVL83
 3405 04dc 0100     		.2byte	0x1
 3406 04de 55       		.byte	0x55
 3407 04df 0E000000 		.4byte	.LVL83
 3408 04e3 1C000000 		.4byte	.LFE33
 3409 04e7 0400     		.2byte	0x4
 3410 04e9 F3       		.byte	0xf3
 3411 04ea 01       		.uleb128 0x1
 3412 04eb 50       		.byte	0x50
 3413 04ec 9F       		.byte	0x9f
 3414 04ed 00000000 		.4byte	0
 3415 04f1 00000000 		.4byte	0
 3416              	.LLST40:
 3417 04f5 00000000 		.4byte	.LVL81
 3418 04f9 09000000 		.4byte	.LVL82-1
 3419 04fd 0100     		.2byte	0x1
 3420 04ff 51       		.byte	0x51
 3421 0500 09000000 		.4byte	.LVL82-1
 3422 0504 14000000 		.4byte	.LVL85
 3423 0508 0100     		.2byte	0x1
 3424 050a 54       		.byte	0x54
 3425 050b 14000000 		.4byte	.LVL85
 3426 050f 1C000000 		.4byte	.LFE33
 3427 0513 0400     		.2byte	0x4
 3428 0515 F3       		.byte	0xf3
 3429 0516 01       		.uleb128 0x1
 3430 0517 51       		.byte	0x51
 3431 0518 9F       		.byte	0x9f
 3432 0519 00000000 		.4byte	0
 3433 051d 00000000 		.4byte	0
 3434              	.LLST41:
 3435 0521 0A000000 		.4byte	.LVL82
 3436 0525 13000000 		.4byte	.LVL84-1
 3437 0529 0100     		.2byte	0x1
 3438 052b 50       		.byte	0x50
 3439 052c 00000000 		.4byte	0
 3440 0530 00000000 		.4byte	0
 3441              	.LLST42:
 3442 0534 06000000 		.4byte	.LVL86
 3443 0538 13000000 		.4byte	.LVL87-1
 3444 053c 0100     		.2byte	0x1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 90


 3445 053e 50       		.byte	0x50
 3446 053f 00000000 		.4byte	0
 3447 0543 00000000 		.4byte	0
 3448              		.section	.debug_aranges,"",%progbits
 3449 0000 54010000 		.4byte	0x154
 3450 0004 0200     		.2byte	0x2
 3451 0006 00000000 		.4byte	.Ldebug_info0
 3452 000a 04       		.byte	0x4
 3453 000b 00       		.byte	0
 3454 000c 0000     		.2byte	0
 3455 000e 0000     		.2byte	0
 3456 0010 00000000 		.4byte	.LFB0
 3457 0014 38000000 		.4byte	.LFE0-.LFB0
 3458 0018 00000000 		.4byte	.LFB3
 3459 001c 1C000000 		.4byte	.LFE3-.LFB3
 3460 0020 00000000 		.4byte	.LFB4
 3461 0024 28000000 		.4byte	.LFE4-.LFB4
 3462 0028 00000000 		.4byte	.LFB5
 3463 002c 28000000 		.4byte	.LFE5-.LFB5
 3464 0030 00000000 		.4byte	.LFB6
 3465 0034 28000000 		.4byte	.LFE6-.LFB6
 3466 0038 00000000 		.4byte	.LFB7
 3467 003c 2C000000 		.4byte	.LFE7-.LFB7
 3468 0040 00000000 		.4byte	.LFB8
 3469 0044 10000000 		.4byte	.LFE8-.LFB8
 3470 0048 00000000 		.4byte	.LFB9
 3471 004c 28000000 		.4byte	.LFE9-.LFB9
 3472 0050 00000000 		.4byte	.LFB10
 3473 0054 28000000 		.4byte	.LFE10-.LFB10
 3474 0058 00000000 		.4byte	.LFB11
 3475 005c 2C000000 		.4byte	.LFE11-.LFB11
 3476 0060 00000000 		.4byte	.LFB12
 3477 0064 28000000 		.4byte	.LFE12-.LFB12
 3478 0068 00000000 		.4byte	.LFB13
 3479 006c 0C000000 		.4byte	.LFE13-.LFB13
 3480 0070 00000000 		.4byte	.LFB14
 3481 0074 0C000000 		.4byte	.LFE14-.LFB14
 3482 0078 00000000 		.4byte	.LFB15
 3483 007c 28000000 		.4byte	.LFE15-.LFB15
 3484 0080 00000000 		.4byte	.LFB16
 3485 0084 0C000000 		.4byte	.LFE16-.LFB16
 3486 0088 00000000 		.4byte	.LFB17
 3487 008c 0C000000 		.4byte	.LFE17-.LFB17
 3488 0090 00000000 		.4byte	.LFB18
 3489 0094 24000000 		.4byte	.LFE18-.LFB18
 3490 0098 00000000 		.4byte	.LFB19
 3491 009c 0C000000 		.4byte	.LFE19-.LFB19
 3492 00a0 00000000 		.4byte	.LFB20
 3493 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3494 00a8 00000000 		.4byte	.LFB21
 3495 00ac 28000000 		.4byte	.LFE21-.LFB21
 3496 00b0 00000000 		.4byte	.LFB22
 3497 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3498 00b8 00000000 		.4byte	.LFB23
 3499 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3500 00c0 00000000 		.4byte	.LFB24
 3501 00c4 0C000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 91


 3502 00c8 00000000 		.4byte	.LFB25
 3503 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3504 00d0 00000000 		.4byte	.LFB26
 3505 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3506 00d8 00000000 		.4byte	.LFB27
 3507 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3508 00e0 00000000 		.4byte	.LFB28
 3509 00e4 24000000 		.4byte	.LFE28-.LFB28
 3510 00e8 00000000 		.4byte	.LFB29
 3511 00ec 24000000 		.4byte	.LFE29-.LFB29
 3512 00f0 00000000 		.4byte	.LFB30
 3513 00f4 28000000 		.4byte	.LFE30-.LFB30
 3514 00f8 00000000 		.4byte	.LFB31
 3515 00fc 24000000 		.4byte	.LFE31-.LFB31
 3516 0100 00000000 		.4byte	.LFB32
 3517 0104 24000000 		.4byte	.LFE32-.LFB32
 3518 0108 00000000 		.4byte	.LFB33
 3519 010c 1C000000 		.4byte	.LFE33-.LFB33
 3520 0110 00000000 		.4byte	.LFB1
 3521 0114 24000000 		.4byte	.LFE1-.LFB1
 3522 0118 00000000 		.4byte	.LFB2
 3523 011c 1C000000 		.4byte	.LFE2-.LFB2
 3524 0120 00000000 		.4byte	.LFB34
 3525 0124 14000000 		.4byte	.LFE34-.LFB34
 3526 0128 00000000 		.4byte	.LFB35
 3527 012c 0C000000 		.4byte	.LFE35-.LFB35
 3528 0130 00000000 		.4byte	.LFB36
 3529 0134 0C000000 		.4byte	.LFE36-.LFB36
 3530 0138 00000000 		.4byte	.LFB37
 3531 013c 0C000000 		.4byte	.LFE37-.LFB37
 3532 0140 00000000 		.4byte	.LFB38
 3533 0144 0C000000 		.4byte	.LFE38-.LFB38
 3534 0148 00000000 		.4byte	.LFB39
 3535 014c 0C000000 		.4byte	.LFE39-.LFB39
 3536 0150 00000000 		.4byte	0
 3537 0154 00000000 		.4byte	0
 3538              		.section	.debug_ranges,"",%progbits
 3539              	.Ldebug_ranges0:
 3540 0000 00000000 		.4byte	.LFB0
 3541 0004 38000000 		.4byte	.LFE0
 3542 0008 00000000 		.4byte	.LFB3
 3543 000c 1C000000 		.4byte	.LFE3
 3544 0010 00000000 		.4byte	.LFB4
 3545 0014 28000000 		.4byte	.LFE4
 3546 0018 00000000 		.4byte	.LFB5
 3547 001c 28000000 		.4byte	.LFE5
 3548 0020 00000000 		.4byte	.LFB6
 3549 0024 28000000 		.4byte	.LFE6
 3550 0028 00000000 		.4byte	.LFB7
 3551 002c 2C000000 		.4byte	.LFE7
 3552 0030 00000000 		.4byte	.LFB8
 3553 0034 10000000 		.4byte	.LFE8
 3554 0038 00000000 		.4byte	.LFB9
 3555 003c 28000000 		.4byte	.LFE9
 3556 0040 00000000 		.4byte	.LFB10
 3557 0044 28000000 		.4byte	.LFE10
 3558 0048 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 92


 3559 004c 2C000000 		.4byte	.LFE11
 3560 0050 00000000 		.4byte	.LFB12
 3561 0054 28000000 		.4byte	.LFE12
 3562 0058 00000000 		.4byte	.LFB13
 3563 005c 0C000000 		.4byte	.LFE13
 3564 0060 00000000 		.4byte	.LFB14
 3565 0064 0C000000 		.4byte	.LFE14
 3566 0068 00000000 		.4byte	.LFB15
 3567 006c 28000000 		.4byte	.LFE15
 3568 0070 00000000 		.4byte	.LFB16
 3569 0074 0C000000 		.4byte	.LFE16
 3570 0078 00000000 		.4byte	.LFB17
 3571 007c 0C000000 		.4byte	.LFE17
 3572 0080 00000000 		.4byte	.LFB18
 3573 0084 24000000 		.4byte	.LFE18
 3574 0088 00000000 		.4byte	.LFB19
 3575 008c 0C000000 		.4byte	.LFE19
 3576 0090 00000000 		.4byte	.LFB20
 3577 0094 0C000000 		.4byte	.LFE20
 3578 0098 00000000 		.4byte	.LFB21
 3579 009c 28000000 		.4byte	.LFE21
 3580 00a0 00000000 		.4byte	.LFB22
 3581 00a4 0C000000 		.4byte	.LFE22
 3582 00a8 00000000 		.4byte	.LFB23
 3583 00ac 0C000000 		.4byte	.LFE23
 3584 00b0 00000000 		.4byte	.LFB24
 3585 00b4 0C000000 		.4byte	.LFE24
 3586 00b8 00000000 		.4byte	.LFB25
 3587 00bc 0C000000 		.4byte	.LFE25
 3588 00c0 00000000 		.4byte	.LFB26
 3589 00c4 0C000000 		.4byte	.LFE26
 3590 00c8 00000000 		.4byte	.LFB27
 3591 00cc 0C000000 		.4byte	.LFE27
 3592 00d0 00000000 		.4byte	.LFB28
 3593 00d4 24000000 		.4byte	.LFE28
 3594 00d8 00000000 		.4byte	.LFB29
 3595 00dc 24000000 		.4byte	.LFE29
 3596 00e0 00000000 		.4byte	.LFB30
 3597 00e4 28000000 		.4byte	.LFE30
 3598 00e8 00000000 		.4byte	.LFB31
 3599 00ec 24000000 		.4byte	.LFE31
 3600 00f0 00000000 		.4byte	.LFB32
 3601 00f4 24000000 		.4byte	.LFE32
 3602 00f8 00000000 		.4byte	.LFB33
 3603 00fc 1C000000 		.4byte	.LFE33
 3604 0100 00000000 		.4byte	.LFB1
 3605 0104 24000000 		.4byte	.LFE1
 3606 0108 00000000 		.4byte	.LFB2
 3607 010c 1C000000 		.4byte	.LFE2
 3608 0110 00000000 		.4byte	.LFB34
 3609 0114 14000000 		.4byte	.LFE34
 3610 0118 00000000 		.4byte	.LFB35
 3611 011c 0C000000 		.4byte	.LFE35
 3612 0120 00000000 		.4byte	.LFB36
 3613 0124 0C000000 		.4byte	.LFE36
 3614 0128 00000000 		.4byte	.LFB37
 3615 012c 0C000000 		.4byte	.LFE37
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 93


 3616 0130 00000000 		.4byte	.LFB38
 3617 0134 0C000000 		.4byte	.LFE38
 3618 0138 00000000 		.4byte	.LFB39
 3619 013c 0C000000 		.4byte	.LFE39
 3620 0140 00000000 		.4byte	0
 3621 0144 00000000 		.4byte	0
 3622              		.section	.debug_line,"",%progbits
 3623              	.Ldebug_line0:
 3624 0000 DE030000 		.section	.debug_str,"MS",%progbits,1
 3624      02005400 
 3624      00000201 
 3624      FB0E0D00 
 3624      01010101 
 3625              	.LASF21:
 3626 0000 636F756E 		.ascii	"count\000"
 3626      7400
 3627              	.LASF64:
 3628 0006 50504D43 		.ascii	"PPMCounter_SetStartMode\000"
 3628      6F756E74 
 3628      65725F53 
 3628      65745374 
 3628      6172744D 
 3629              	.LASF81:
 3630 001e 43794578 		.ascii	"CyExitCriticalSection\000"
 3630      69744372 
 3630      69746963 
 3630      616C5365 
 3630      6374696F 
 3631              	.LASF53:
 3632 0034 50504D43 		.ascii	"PPMCounter_WriteCompare\000"
 3632      6F756E74 
 3632      65725F57 
 3632      72697465 
 3632      436F6D70 
 3633              	.LASF46:
 3634 004c 50504D43 		.ascii	"PPMCounter_ReadPeriod\000"
 3634      6F756E74 
 3634      65725F52 
 3634      65616450 
 3634      6572696F 
 3635              	.LASF77:
 3636 0062 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PPMCounter.c\000"
 3636      6E657261 
 3636      7465645F 
 3636      536F7572 
 3636      63655C50 
 3637              	.LASF17:
 3638 0088 50504D43 		.ascii	"PPMCounter_WritePeriod\000"
 3638      6F756E74 
 3638      65725F57 
 3638      72697465 
 3638      50657269 
 3639              	.LASF19:
 3640 009f 70657269 		.ascii	"period\000"
 3640      6F6400
 3641              	.LASF7:
 3642 00a6 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 94


 3642      206C6F6E 
 3642      6720756E 
 3642      7369676E 
 3642      65642069 
 3643              	.LASF31:
 3644 00bd 50504D43 		.ascii	"PPMCounter_SetOneShot\000"
 3644      6F756E74 
 3644      65725F53 
 3644      65744F6E 
 3644      6553686F 
 3645              	.LASF28:
 3646 00d3 71644D6F 		.ascii	"qdMode\000"
 3646      646500
 3647              	.LASF72:
 3648 00da 50504D43 		.ascii	"PPMCounter_GetInterruptSourceMasked\000"
 3648      6F756E74 
 3648      65725F47 
 3648      6574496E 
 3648      74657272 
 3649              	.LASF61:
 3650 00fe 50504D43 		.ascii	"PPMCounter_SetCaptureMode\000"
 3650      6F756E74 
 3650      65725F53 
 3650      65744361 
 3650      70747572 
 3651              	.LASF6:
 3652 0118 6C6F6E67 		.ascii	"long long int\000"
 3652      206C6F6E 
 3652      6720696E 
 3652      7400
 3653              	.LASF0:
 3654 0126 7369676E 		.ascii	"signed char\000"
 3654      65642063 
 3654      68617200 
 3655              	.LASF20:
 3656 0132 50504D43 		.ascii	"PPMCounter_WriteCounter\000"
 3656      6F756E74 
 3656      65725F57 
 3656      72697465 
 3656      436F756E 
 3657              	.LASF73:
 3658 014a 50504D43 		.ascii	"PPMCounter_GetInterruptSource\000"
 3658      6F756E74 
 3658      65725F47 
 3658      6574496E 
 3658      74657272 
 3659              	.LASF23:
 3660 0168 50504D43 		.ascii	"PPMCounter_Stop\000"
 3660      6F756E74 
 3660      65725F53 
 3660      746F7000 
 3661              	.LASF4:
 3662 0178 6C6F6E67 		.ascii	"long int\000"
 3662      20696E74 
 3662      00
 3663              	.LASF47:
 3664 0181 50504D43 		.ascii	"PPMCounter_SetCompareSwap\000"
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 95


 3664      6F756E74 
 3664      65725F53 
 3664      6574436F 
 3664      6D706172 
 3665              	.LASF16:
 3666 019b 50504D43 		.ascii	"PPMCounter_SetInterruptMode\000"
 3666      6F756E74 
 3666      65725F53 
 3666      6574496E 
 3666      74657272 
 3667              	.LASF59:
 3668 01b7 50504D43 		.ascii	"PPMCounter_ReadCapture\000"
 3668      6F756E74 
 3668      65725F52 
 3668      65616443 
 3668      61707475 
 3669              	.LASF9:
 3670 01ce 75696E74 		.ascii	"uint8\000"
 3670      3800
 3671              	.LASF24:
 3672 01d4 50504D43 		.ascii	"PPMCounter_SetMode\000"
 3672      6F756E74 
 3672      65725F53 
 3672      65744D6F 
 3672      646500
 3673              	.LASF12:
 3674 01e7 646F7562 		.ascii	"double\000"
 3674      6C6500
 3675              	.LASF10:
 3676 01ee 75696E74 		.ascii	"uint32\000"
 3676      333200
 3677              	.LASF62:
 3678 01f5 74726967 		.ascii	"triggerMode\000"
 3678      6765724D 
 3678      6F646500 
 3679              	.LASF42:
 3680 0201 6D61736B 		.ascii	"mask\000"
 3680      00
 3681              	.LASF35:
 3682 0206 50504D43 		.ascii	"PPMCounter_SetPWMSyncKill\000"
 3682      6F756E74 
 3682      65725F53 
 3682      65745057 
 3682      4D53796E 
 3683              	.LASF41:
 3684 0220 50504D43 		.ascii	"PPMCounter_SetPWMInvert\000"
 3684      6F756E74 
 3684      65725F53 
 3684      65745057 
 3684      4D496E76 
 3685              	.LASF40:
 3686 0238 64656164 		.ascii	"deadTime\000"
 3686      54696D65 
 3686      00
 3687              	.LASF8:
 3688 0241 756E7369 		.ascii	"unsigned int\000"
 3688      676E6564 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 96


 3688      20696E74 
 3688      00
 3689              	.LASF68:
 3690 024e 636F6D6D 		.ascii	"command\000"
 3690      616E6400 
 3691              	.LASF5:
 3692 0256 6C6F6E67 		.ascii	"long unsigned int\000"
 3692      20756E73 
 3692      69676E65 
 3692      6420696E 
 3692      7400
 3693              	.LASF34:
 3694 0268 6D6F6465 		.ascii	"modeMask\000"
 3694      4D61736B 
 3694      00
 3695              	.LASF80:
 3696 0271 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3696      74657243 
 3696      72697469 
 3696      63616C53 
 3696      65637469 
 3697              	.LASF3:
 3698 0288 73686F72 		.ascii	"short unsigned int\000"
 3698      7420756E 
 3698      7369676E 
 3698      65642069 
 3698      6E7400
 3699              	.LASF67:
 3700 029b 50504D43 		.ascii	"PPMCounter_TriggerCommand\000"
 3700      6F756E74 
 3700      65725F54 
 3700      72696767 
 3700      6572436F 
 3701              	.LASF32:
 3702 02b5 6F6E6553 		.ascii	"oneShotEnable\000"
 3702      686F7445 
 3702      6E61626C 
 3702      6500
 3703              	.LASF45:
 3704 02c3 50504D43 		.ascii	"PPMCounter_ReadCounter\000"
 3704      6F756E74 
 3704      65725F52 
 3704      65616443 
 3704      6F756E74 
 3705              	.LASF78:
 3706 02da 453A5C44 		.ascii	"E:\\Dokumente\\GitHub\\T-50_Project\\Software\\T-50"
 3706      6F6B756D 
 3706      656E7465 
 3706      5C476974 
 3706      4875625C 
 3707 0308 5F50726F 		.ascii	"_Project\\T-50_Project.cydsn\000"
 3707      6A656374 
 3707      5C542D35 
 3707      305F5072 
 3707      6F6A6563 
 3708              	.LASF70:
 3709 0324 50504D43 		.ascii	"PPMCounter_Start\000"
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 97


 3709      6F756E74 
 3709      65725F53 
 3709      74617274 
 3709      00
 3710              	.LASF29:
 3711 0335 50504D43 		.ascii	"PPMCounter_SetPrescaler\000"
 3711      6F756E74 
 3711      65725F53 
 3711      65745072 
 3711      65736361 
 3712              	.LASF14:
 3713 034d 72656733 		.ascii	"reg32\000"
 3713      3200
 3714              	.LASF26:
 3715 0353 50504D43 		.ascii	"PPMCounter_SetQDMode\000"
 3715      6F756E74 
 3715      65725F53 
 3715      65745144 
 3715      4D6F6465 
 3716              	.LASF15:
 3717 0368 73697A65 		.ascii	"sizetype\000"
 3717      74797065 
 3717      00
 3718              	.LASF74:
 3719 0371 50504D43 		.ascii	"PPMCounter_ClearInterrupt\000"
 3719      6F756E74 
 3719      65725F43 
 3719      6C656172 
 3719      496E7465 
 3720              	.LASF36:
 3721 038b 73796E63 		.ascii	"syncKillEnable\000"
 3721      4B696C6C 
 3721      456E6162 
 3721      6C6500
 3722              	.LASF33:
 3723 039a 50504D43 		.ascii	"PPMCounter_SetPWMMode\000"
 3723      6F756E74 
 3723      65725F53 
 3723      65745057 
 3723      4D4D6F64 
 3724              	.LASF69:
 3725 03b0 50504D43 		.ascii	"PPMCounter_Enable\000"
 3725      6F756E74 
 3725      65725F45 
 3725      6E61626C 
 3725      6500
 3726              	.LASF54:
 3727 03c2 636F6D70 		.ascii	"compare\000"
 3727      61726500 
 3728              	.LASF56:
 3729 03ca 50504D43 		.ascii	"PPMCounter_WriteCompareBuf\000"
 3729      6F756E74 
 3729      65725F57 
 3729      72697465 
 3729      436F6D70 
 3730              	.LASF55:
 3731 03e5 50504D43 		.ascii	"PPMCounter_ReadCompare\000"
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 98


 3731      6F756E74 
 3731      65725F52 
 3731      65616443 
 3731      6F6D7061 
 3732              	.LASF22:
 3733 03fc 50504D43 		.ascii	"PPMCounter_Init\000"
 3733      6F756E74 
 3733      65725F49 
 3733      6E697400 
 3734              	.LASF11:
 3735 040c 666C6F61 		.ascii	"float\000"
 3735      7400
 3736              	.LASF30:
 3737 0412 70726573 		.ascii	"prescaler\000"
 3737      63616C65 
 3737      7200
 3738              	.LASF65:
 3739 041c 50504D43 		.ascii	"PPMCounter_SetStopMode\000"
 3739      6F756E74 
 3739      65725F53 
 3739      65745374 
 3739      6F704D6F 
 3740              	.LASF52:
 3741 0433 50504D43 		.ascii	"PPMCounter_SetPeriodSwap\000"
 3741      6F756E74 
 3741      65725F53 
 3741      65745065 
 3741      72696F64 
 3742              	.LASF76:
 3743 044c 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3743      4320342E 
 3743      382E3420 
 3743      32303134 
 3743      30353236 
 3744 047f 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3744      20726576 
 3744      6973696F 
 3744      6E203231 
 3744      31333538 
 3745 04b2 73202D66 		.ascii	"s -ffunction-sections -finline-functions\000"
 3745      66756E63 
 3745      74696F6E 
 3745      2D736563 
 3745      74696F6E 
 3746              	.LASF1:
 3747 04db 756E7369 		.ascii	"unsigned char\000"
 3747      676E6564 
 3747      20636861 
 3747      7200
 3748              	.LASF38:
 3749 04e9 73746F70 		.ascii	"stopOnKillEnable\000"
 3749      4F6E4B69 
 3749      6C6C456E 
 3749      61626C65 
 3749      00
 3750              	.LASF2:
 3751 04fa 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 99


 3751      7420696E 
 3751      7400
 3752              	.LASF18:
 3753 0504 696E7465 		.ascii	"interruptMask\000"
 3753      72727570 
 3753      744D6173 
 3753      6B00
 3754              	.LASF49:
 3755 0512 50504D43 		.ascii	"PPMCounter_WritePeriodBuf\000"
 3755      6F756E74 
 3755      65725F57 
 3755      72697465 
 3755      50657269 
 3756              	.LASF13:
 3757 052c 63686172 		.ascii	"char\000"
 3757      00
 3758              	.LASF27:
 3759 0531 6D6F6465 		.ascii	"mode\000"
 3759      00
 3760              	.LASF63:
 3761 0536 50504D43 		.ascii	"PPMCounter_SetReloadMode\000"
 3761      6F756E74 
 3761      65725F53 
 3761      65745265 
 3761      6C6F6164 
 3762              	.LASF44:
 3763 054f 636F756E 		.ascii	"counterMode\000"
 3763      7465724D 
 3763      6F646500 
 3764              	.LASF79:
 3765 055b 50504D43 		.ascii	"PPMCounter_initVar\000"
 3765      6F756E74 
 3765      65725F69 
 3765      6E697456 
 3765      617200
 3766              	.LASF60:
 3767 056e 50504D43 		.ascii	"PPMCounter_ReadCaptureBuf\000"
 3767      6F756E74 
 3767      65725F52 
 3767      65616443 
 3767      61707475 
 3768              	.LASF75:
 3769 0588 50504D43 		.ascii	"PPMCounter_SetInterrupt\000"
 3769      6F756E74 
 3769      65725F53 
 3769      6574496E 
 3769      74657272 
 3770              	.LASF57:
 3771 05a0 636F6D70 		.ascii	"compareBuf\000"
 3771      61726542 
 3771      756600
 3772              	.LASF71:
 3773 05ab 50504D43 		.ascii	"PPMCounter_ReadStatus\000"
 3773      6F756E74 
 3773      65725F52 
 3773      65616453 
 3773      74617475 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\cccm5FMZ.s 			page 100


 3774              	.LASF51:
 3775 05c1 50504D43 		.ascii	"PPMCounter_ReadPeriodBuf\000"
 3775      6F756E74 
 3775      65725F52 
 3775      65616450 
 3775      6572696F 
 3776              	.LASF25:
 3777 05da 656E6162 		.ascii	"enableInterrupts\000"
 3777      6C65496E 
 3777      74657272 
 3777      75707473 
 3777      00
 3778              	.LASF58:
 3779 05eb 50504D43 		.ascii	"PPMCounter_ReadCompareBuf\000"
 3779      6F756E74 
 3779      65725F52 
 3779      65616443 
 3779      6F6D7061 
 3780              	.LASF39:
 3781 0605 50504D43 		.ascii	"PPMCounter_SetPWMDeadTime\000"
 3781      6F756E74 
 3781      65725F53 
 3781      65745057 
 3781      4D446561 
 3782              	.LASF48:
 3783 061f 73776170 		.ascii	"swapEnable\000"
 3783      456E6162 
 3783      6C6500
 3784              	.LASF66:
 3785 062a 50504D43 		.ascii	"PPMCounter_SetCountMode\000"
 3785      6F756E74 
 3785      65725F53 
 3785      6574436F 
 3785      756E744D 
 3786              	.LASF43:
 3787 0642 50504D43 		.ascii	"PPMCounter_SetCounterMode\000"
 3787      6F756E74 
 3787      65725F53 
 3787      6574436F 
 3787      756E7465 
 3788              	.LASF37:
 3789 065c 50504D43 		.ascii	"PPMCounter_SetPWMStopOnKill\000"
 3789      6F756E74 
 3789      65725F53 
 3789      65745057 
 3789      4D53746F 
 3790              	.LASF50:
 3791 0678 70657269 		.ascii	"periodBuf\000"
 3791      6F644275 
 3791      6600
 3792              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
