ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"NavLightPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NavLightPWM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	NavLightPWM_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	NavLightPWM_Init, %function
  23              	NavLightPWM_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\NavLightPWM.c"
   1:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/NavLightPWM.c **** * File Name: NavLightPWM.c
   3:.\Generated_Source\PSoC4/NavLightPWM.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/NavLightPWM.c **** *
   5:.\Generated_Source\PSoC4/NavLightPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/NavLightPWM.c **** *  This file provides the source code to the API for the NavLightPWM
   7:.\Generated_Source\PSoC4/NavLightPWM.c **** *  component
   8:.\Generated_Source\PSoC4/NavLightPWM.c **** *
   9:.\Generated_Source\PSoC4/NavLightPWM.c **** * Note:
  10:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
  11:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  12:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/NavLightPWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/NavLightPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/NavLightPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/NavLightPWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  19:.\Generated_Source\PSoC4/NavLightPWM.c **** #include "NavLightPWM.h"
  20:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  21:.\Generated_Source\PSoC4/NavLightPWM.c **** uint8 NavLightPWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  23:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  24:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Init
  26:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  28:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Initialize/Restore default NavLightPWM configuration.
  30:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  31:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 2


  33:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  34:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
  35:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
  36:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  37:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Init(void)
  39:.\Generated_Source\PSoC4/NavLightPWM.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  41:.\Generated_Source\PSoC4/NavLightPWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__QUAD == NavLightPWM_CONFIG)
  43:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_CONTROL_REG = NavLightPWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/NavLightPWM.c ****         
  45:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  = NavLightPWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  48:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_SetInterruptMode(NavLightPWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/NavLightPWM.c ****         
  51:.\Generated_Source\PSoC4/NavLightPWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_SetCounterMode(NavLightPWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WritePeriod(NavLightPWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WriteCounter(NavLightPWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__QUAD == NavLightPWM_CONFIG) */
  56:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  57:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__TIMER == NavLightPWM_CONFIG)
  58:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_CONTROL_REG = NavLightPWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/NavLightPWM.c ****         
  60:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  = NavLightPWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/NavLightPWM.c ****     
  63:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_SetInterruptMode(NavLightPWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/NavLightPWM.c ****         
  66:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WritePeriod(NavLightPWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  69:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__COMPARE == NavLightPWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCompare(NavLightPWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  72:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (1u == NavLightPWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_WriteCompareBuf(NavLightPWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* (1u == NavLightPWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__COMPARE == NavLightPWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  78:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM_CY_TCPWM_V2 && NavLightPWM_TIMER_UPDOWN_CNT_USED && !NavLightPWM_CY_TCPWM_
  80:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/NavLightPWM.c ****         #elif(NavLightPWM__COUNT_DOWN == NavLightPWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCounter(NavLightPWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/NavLightPWM.c ****         #else
  84:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif /* (NavLightPWM_CY_TCPWM_V2 && NavLightPWM_TIMER_UPDOWN_CNT_USED && !NavLightPWM_CY_
  86:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__TIMER == NavLightPWM_CONFIG) */
  87:.\Generated_Source\PSoC4/NavLightPWM.c **** 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 3


  88:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG)
  89:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_CONTROL_REG = NavLightPWM_CTRL_PWM_BASE_CONFIG;
  28              		.loc 1 89 0
  29 0000 0C4B     		ldr	r3, .L2
  30 0002 8022     		mov	r2, #128
  31 0004 D204     		lsl	r2, r2, #19
  32 0006 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  91:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |= NavLightPWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCounter(NavLightPWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/NavLightPWM.c ****         #else
  95:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |= NavLightPWM_CTRL_PWM_ALIGN | NavLightPWM_CTRL_PWM_KILL_EVENT
  33              		.loc 1 95 0
  34 0008 1A68     		ldr	r2, [r3]
  35              	.LBB10:
  36              	.LBB11:
  96:.\Generated_Source\PSoC4/NavLightPWM.c ****             
  97:.\Generated_Source\PSoC4/NavLightPWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM_CY_TCPWM_V2 && NavLightPWM_PWM_UPDOWN_CNT_USED && !NavLightPWM_CY_TCPW
  99:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/NavLightPWM.c ****             #elif (NavLightPWM__RIGHT == NavLightPWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_WriteCounter(NavLightPWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/NavLightPWM.c ****             #else 
 103:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* (NavLightPWM_CY_TCPWM_V2 && NavLightPWM_PWM_UPDOWN_CNT_USED && !NavLightPWM_
 105:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 107:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM_DT == NavLightPWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |= NavLightPWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM_DT == NavLightPWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 111:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM == NavLightPWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |= NavLightPWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM == NavLightPWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 115:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  = NavLightPWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/NavLightPWM.c ****     
 118:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_SetInterruptMode(NavLightPWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 121:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/NavLightPWM.c ****                     (NavLightPWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/NavLightPWM.c ****                     NavLightPWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/NavLightPWM.c ****                     NavLightPWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/NavLightPWM.c ****         #else
 128:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__LEFT == NavLightPWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* ( NavLightPWM_PWM_LEFT == NavLightPWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 132:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__RIGHT == NavLightPWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* ( NavLightPWM_PWM_RIGHT == NavLightPWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/NavLightPWM.c **** 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 4


 136:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__CENTER == NavLightPWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* ( NavLightPWM_PWM_CENTER == NavLightPWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 140:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__ASYMMETRIC == NavLightPWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* (NavLightPWM__ASYMMETRIC == NavLightPWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 145:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WritePeriod(NavLightPWM_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WriteCompare(NavLightPWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 149:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (1u == NavLightPWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCompareBuf(NavLightPWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (1u == NavLightPWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 154:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (1u == NavLightPWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WritePeriodBuf(NavLightPWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (1u == NavLightPWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG) */
 159:.\Generated_Source\PSoC4/NavLightPWM.c ****     
 160:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 161:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 162:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 163:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Enable
 165:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 167:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Enables the NavLightPWM.
 169:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 170:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 172:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 173:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 174:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 175:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 176:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Enable(void)
 178:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 179:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 181:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG |= NavLightPWM_MASK;
 183:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 185:.\Generated_Source\PSoC4/NavLightPWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG)
 187:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (0u == NavLightPWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TriggerCommand(NavLightPWM_MASK, NavLightPWM_CMD_START);
 189:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif /* (0u == NavLightPWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG) */
 191:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 192:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__TIMER == NavLightPWM_CONFIG)
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 5


 193:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (0u == NavLightPWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TriggerCommand(NavLightPWM_MASK, NavLightPWM_CMD_START);
 195:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif /* (0u == NavLightPWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM__TIMER == NavLightPWM_CONFIG) */
 197:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 198:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 199:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 200:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Start
 202:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 204:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 205:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Initializes the NavLightPWM with default customizer
 206:.\Generated_Source\PSoC4/NavLightPWM.c **** *  values when called the first time and enables the NavLightPWM.
 207:.\Generated_Source\PSoC4/NavLightPWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/NavLightPWM.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 210:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 211:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 212:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 213:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 214:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 215:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 216:.\Generated_Source\PSoC4/NavLightPWM.c **** * Global variables:
 217:.\Generated_Source\PSoC4/NavLightPWM.c **** *  NavLightPWM_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/NavLightPWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/NavLightPWM.c **** *  to 1 the first time NavLightPWM_Start() is called. This allows
 220:.\Generated_Source\PSoC4/NavLightPWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/NavLightPWM.c **** *  calls to the NavLightPWM_Start() routine.
 222:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 223:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Start(void)
 225:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 226:.\Generated_Source\PSoC4/NavLightPWM.c ****     if (0u == NavLightPWM_initVar)
 227:.\Generated_Source\PSoC4/NavLightPWM.c ****     {
 228:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_Init();
 229:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_initVar = 1u;
 230:.\Generated_Source\PSoC4/NavLightPWM.c ****     }
 231:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 232:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_Enable();
 233:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 234:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 235:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 236:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Stop
 238:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 240:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 241:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Disables the NavLightPWM.
 242:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 243:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 244:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 245:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 246:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 247:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 248:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 249:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 6


 250:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Stop(void)
 251:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 252:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 254:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 255:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 256:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG &= (uint32)~NavLightPWM_MASK;
 257:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 258:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 259:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 260:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 261:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 262:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetMode
 264:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 266:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 267:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the operation mode of the NavLightPWM. This function is used when
 268:.\Generated_Source\PSoC4/NavLightPWM.c **** *  configured as a generic NavLightPWM and the actual mode of operation is
 269:.\Generated_Source\PSoC4/NavLightPWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 271:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 272:.\Generated_Source\PSoC4/NavLightPWM.c **** *  mode: Mode for the NavLightPWM to operate in
 273:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 274:.\Generated_Source\PSoC4/NavLightPWM.c **** *   - NavLightPWM_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 283:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 284:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 285:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 286:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 289:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 291:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 292:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 293:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_MODE_MASK;
 294:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mode;
 295:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 296:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 297:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 298:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 299:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 300:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetQDMode
 302:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 304:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 305:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 7


 307:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 308:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 309:.\Generated_Source\PSoC4/NavLightPWM.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 311:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 316:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 317:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 318:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 319:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 322:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 324:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 325:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 326:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_QUAD_MODE_MASK;
 327:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= qdMode;
 328:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 329:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 330:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 331:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 332:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 333:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPrescaler
 335:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 337:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 338:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/NavLightPWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 341:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 342:.\Generated_Source\PSoC4/NavLightPWM.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 344:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 353:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 354:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 355:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 356:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 359:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 361:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 362:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 363:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 8


 364:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= prescaler;
 365:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 366:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 367:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 368:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 369:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 370:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetOneShot
 372:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 374:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 375:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the NavLightPWM runs
 376:.\Generated_Source\PSoC4/NavLightPWM.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/NavLightPWM.c **** *  NavLightPWM operates in the continuous mode.
 378:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 379:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 380:.\Generated_Source\PSoC4/NavLightPWM.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 382:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 385:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 386:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 387:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 388:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 391:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 393:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 394:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 395:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_ONESHOT_MASK;
 396:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((oneShotEnable & NavLightPWM_1BIT_MASK) <<
 397:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                                NavLightPWM_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 399:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 400:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 401:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 402:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 403:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMMode
 405:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 407:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 408:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/NavLightPWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/NavLightPWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/NavLightPWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/NavLightPWM.c **** *  the mode.
 413:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 414:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 415:.\Generated_Source\PSoC4/NavLightPWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/NavLightPWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 418:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 419:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 9


 421:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 439:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 440:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 441:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 442:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 445:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL2_REG = (modeMask & NavLightPWM_6BIT_MASK);
 446:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 447:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 448:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 449:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 450:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 454:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 455:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/NavLightPWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/NavLightPWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/NavLightPWM.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 460:.\Generated_Source\PSoC4/NavLightPWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/NavLightPWM.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 463:.\Generated_Source\PSoC4/NavLightPWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/NavLightPWM.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/NavLightPWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/NavLightPWM.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 468:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 469:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 470:.\Generated_Source\PSoC4/NavLightPWM.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 472:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 475:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 476:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 477:.\Generated_Source\PSoC4/NavLightPWM.c **** *
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 10


 478:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 481:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 483:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 484:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 485:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_SYNC_KILL_MASK;
 486:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((syncKillEnable & NavLightPWM_1BIT_MASK)  <<
 487:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                NavLightPWM_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 489:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 490:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 491:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 492:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 493:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 497:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 498:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/NavLightPWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/NavLightPWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 502:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 503:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 504:.\Generated_Source\PSoC4/NavLightPWM.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 506:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 509:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 510:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 511:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 512:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 515:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 517:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 518:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 519:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_STOP_KILL_MASK;
 520:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & NavLightPWM_1BIT_MASK)  <<
 521:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                          NavLightPWM_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 523:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 524:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 525:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 526:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 527:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 531:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 532:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 533:.\Generated_Source\PSoC4/NavLightPWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/NavLightPWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 11


 535:.\Generated_Source\PSoC4/NavLightPWM.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 537:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 538:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 539:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 542:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 543:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 544:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 545:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 548:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 550:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 551:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 552:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 553:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((deadTime & NavLightPWM_8BIT_MASK) <<
 554:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                           NavLightPWM_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 556:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 557:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 558:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 559:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 560:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMInvert
 562:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 564:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 565:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/NavLightPWM.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/NavLightPWM.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 569:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 570:.\Generated_Source\PSoC4/NavLightPWM.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 572:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 575:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 576:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 577:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 578:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 581:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 583:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 584:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 585:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_INV_OUT_MASK;
 586:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mask;
 587:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 588:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 589:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 590:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 591:.\Generated_Source\PSoC4/NavLightPWM.c **** 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 12


 592:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 593:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WriteCounter
 595:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 597:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 598:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/NavLightPWM.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/NavLightPWM.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 602:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 603:.\Generated_Source\PSoC4/NavLightPWM.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 605:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 606:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 607:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 608:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 611:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COUNTER_REG = (count & NavLightPWM_16BIT_MASK);
  37              		.loc 1 611 0
  38 000a 0B49     		ldr	r1, .L2+4
  39              	.LBE11:
  40              	.LBE10:
  95:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |= NavLightPWM_CTRL_PWM_ALIGN | NavLightPWM_CTRL_PWM_KILL_EVENT
  41              		.loc 1 95 0
  42 000c 1A60     		str	r2, [r3]
  43              	.LVL0:
  44              	.LBB13:
  45              	.LBB12:
  46              		.loc 1 611 0
  47 000e 0022     		mov	r2, #0
  48 0010 0A60     		str	r2, [r1]
  49              	.LBE12:
  50              	.LBE13:
 112:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |= NavLightPWM_CTRL_PWM_PRESCALER;
  51              		.loc 1 112 0
  52 0012 1968     		ldr	r1, [r3]
 160:.\Generated_Source\PSoC4/NavLightPWM.c **** }
  53              		.loc 1 160 0
  54              		@ sp needed
 112:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |= NavLightPWM_CTRL_PWM_PRESCALER;
  55              		.loc 1 112 0
  56 0014 1960     		str	r1, [r3]
 116:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  = NavLightPWM_PWM_SIGNALS_MODES;
  57              		.loc 1 116 0
  58 0016 094B     		ldr	r3, .L2+8
  59 0018 0C21     		mov	r1, #12
  60 001a 1960     		str	r1, [r3]
  61              	.LVL1:
  62              	.LBB14:
  63              	.LBB15:
 612:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 613:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 614:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 615:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCounter
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 13


 617:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 619:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 620:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 622:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 623:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 624:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 625:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 626:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 628:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCounter(void)
 630:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 631:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COUNTER_REG & NavLightPWM_16BIT_MASK);
 632:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 633:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 634:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 635:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCounterMode
 637:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 639:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 640:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/NavLightPWM.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 643:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 644:.\Generated_Source\PSoC4/NavLightPWM.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 646:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_UP       - Counts up
 647:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                         and period
 653:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 654:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 655:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 656:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 657:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 660:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 662:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 663:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 664:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_UPDOWN_MASK;
 665:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= counterMode;
 666:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 667:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 668:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 669:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 670:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 671:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WritePeriod
 673:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 14


 674:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 675:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 676:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/NavLightPWM.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/NavLightPWM.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 680:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 681:.\Generated_Source\PSoC4/NavLightPWM.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 683:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 684:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 685:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 686:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 689:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_REG = (period & NavLightPWM_16BIT_MASK);
 690:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 691:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 692:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 693:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadPeriod
 695:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 697:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 698:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 700:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 701:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 702:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 703:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 704:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Period value
 705:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 706:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 709:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_REG & NavLightPWM_16BIT_MASK);
 710:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 711:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 712:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 713:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCompareSwap
 715:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 717:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 718:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/NavLightPWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/NavLightPWM.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 723:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 726:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 729:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 730:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 15


 731:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 732:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 735:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 737:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 738:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 739:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_CC_MASK;
 740:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= (swapEnable & NavLightPWM_1BIT_MASK);
 741:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 742:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 743:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 744:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 745:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 746:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WritePeriodBuf
 748:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 750:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 751:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 753:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 754:.\Generated_Source\PSoC4/NavLightPWM.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 756:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 757:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 758:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 759:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WritePeriodBuf(uint32 periodBuf)
 761:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 762:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_BUF_REG = (periodBuf & NavLightPWM_16BIT_MASK);
 763:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 764:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 765:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 766:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 770:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 771:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 773:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 774:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 775:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 776:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 777:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Period value
 778:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 779:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 782:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_BUF_REG & NavLightPWM_16BIT_MASK);
 783:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 784:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 785:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 786:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPeriodSwap
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 16


 788:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 790:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 791:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/NavLightPWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/NavLightPWM.c **** *  switch event.
 795:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 796:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 799:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 802:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 803:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 804:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 805:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 808:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 810:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 811:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 812:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_PERIOD_MASK;
 813:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((swapEnable & NavLightPWM_1BIT_MASK) <<
 814:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                             NavLightPWM_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 816:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 817:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 818:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 819:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 820:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WriteCompare
 822:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 824:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 825:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/NavLightPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 828:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 829:.\Generated_Source\PSoC4/NavLightPWM.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 831:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 832:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 833:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 834:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 837:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 841:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 843:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 844:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (((uint32)NavLightPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 17


 845:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 846:.\Generated_Source\PSoC4/NavLightPWM.c ****             compare++;
 847:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 848:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (((uint32)NavLightPWM__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 850:.\Generated_Source\PSoC4/NavLightPWM.c ****             compare--;
 851:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 852:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
 853:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 854:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 855:.\Generated_Source\PSoC4/NavLightPWM.c ****         
 856:.\Generated_Source\PSoC4/NavLightPWM.c ****     
 857:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/NavLightPWM.c ****     
 859:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
 860:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 861:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 862:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 863:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCompare
 865:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 867:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 868:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/NavLightPWM.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 871:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 872:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 873:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 874:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 875:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Compare value
 876:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 877:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCompare(void)
 879:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 880:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 885:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 887:.\Generated_Source\PSoC4/NavLightPWM.c ****         
 888:.\Generated_Source\PSoC4/NavLightPWM.c ****         regVal = NavLightPWM_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/NavLightPWM.c ****         
 890:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (((uint32)NavLightPWM__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 892:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal--;
 893:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 894:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (((uint32)NavLightPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 896:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal++;
 897:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 898:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
 899:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 900:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 901:.\Generated_Source\PSoC4/NavLightPWM.c **** 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 18


 902:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (regVal & NavLightPWM_16BIT_MASK);
 903:.\Generated_Source\PSoC4/NavLightPWM.c ****     #else
 904:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 905:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 907:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 908:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 909:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WriteCompareBuf
 911:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 913:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 914:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/NavLightPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 917:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 918:.\Generated_Source\PSoC4/NavLightPWM.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 920:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 921:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 922:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 923:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 926:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 930:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 932:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 933:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (((uint32)NavLightPWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 935:.\Generated_Source\PSoC4/NavLightPWM.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 937:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (((uint32)NavLightPWM__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 939:.\Generated_Source\PSoC4/NavLightPWM.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 941:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
 942:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 943:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 944:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/NavLightPWM.c ****     
 946:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMP_CAP_BUF_REG = (compareBuf & NavLightPWM_16BIT_MASK);
 947:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 948:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 949:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 950:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCompareBuf
 952:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 954:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 955:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 958:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 19


 959:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 960:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 961:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 962:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 964:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 967:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 972:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 974:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 975:.\Generated_Source\PSoC4/NavLightPWM.c ****         regVal = NavLightPWM_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/NavLightPWM.c ****         
 977:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (((uint32)NavLightPWM__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 979:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal--;
 980:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 981:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (((uint32)NavLightPWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 983:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal++;
 984:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 985:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
 986:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 987:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 988:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 989:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (regVal & NavLightPWM_16BIT_MASK);
 990:.\Generated_Source\PSoC4/NavLightPWM.c ****     #else
 991:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 992:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 994:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 995:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 996:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCapture
 998:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1000:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1001:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1004:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1005:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1006:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1007:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1008:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Capture value
1009:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1010:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCapture(void)
1012:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1013:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
1014:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1015:.\Generated_Source\PSoC4/NavLightPWM.c **** 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 20


1016:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1017:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1021:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1022:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1025:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1026:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1027:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1028:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1029:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1031:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1034:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
1035:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1036:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1037:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1038:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCaptureMode
1040:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1042:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1043:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/NavLightPWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Quadrature Decoder modes.
1046:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1047:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1048:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1050:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1055:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1056:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1057:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1058:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1061:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1063:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1064:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1065:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_CAPTURE_MASK;
1066:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= triggerMode;
1067:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1068:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1069:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1070:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1071:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1072:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 21


1073:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetReloadMode
1074:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1076:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1077:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/NavLightPWM.c **** *  input.
1079:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1080:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1081:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1083:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1088:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1089:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1090:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1091:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1094:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1096:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1097:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1098:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_RELOAD_MASK;
1099:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
1100:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1101:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1102:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1103:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1104:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1105:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetStartMode
1107:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1109:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1110:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/NavLightPWM.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1113:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1114:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1116:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1121:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1122:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1123:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1124:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1127:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1129:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 22


1130:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1131:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_START_MASK;
1132:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
1133:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1134:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1135:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1136:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1137:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1138:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetStopMode
1140:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1142:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1143:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1145:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1146:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1148:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1153:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1154:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1155:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1156:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1159:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1160:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1161:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1162:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1163:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_STOP_MASK;
1164:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
1165:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1166:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1167:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1168:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1169:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1170:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCountMode
1172:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1174:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1175:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/NavLightPWM.c **** *  input.
1177:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1178:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1179:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1181:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1186:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 23


1187:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1188:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1189:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1192:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1194:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1195:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1196:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_COUNT_MASK;
1197:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
1198:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1199:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1200:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1201:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1202:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1203:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_TriggerCommand
1205:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1207:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1208:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/NavLightPWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/NavLightPWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1212:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1213:.\Generated_Source\PSoC4/NavLightPWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/NavLightPWM.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/NavLightPWM.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/NavLightPWM.c **** *        The mask value for a specific instance is available with the MASK
1217:.\Generated_Source\PSoC4/NavLightPWM.c **** *        define.
1218:.\Generated_Source\PSoC4/NavLightPWM.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/NavLightPWM.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1221:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1226:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1227:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1228:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1229:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1232:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1234:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1235:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1236:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMMAND_REG = ((uint32)(mask << command));
1237:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1238:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1239:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1240:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1241:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1242:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadStatus
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 24


1244:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1246:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1247:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the status of the NavLightPWM.
1248:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1249:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1250:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1251:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1252:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1253:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Status
1254:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1255:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1258:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadStatus(void)
1260:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1261:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
1262:.\Generated_Source\PSoC4/NavLightPWM.c ****             (NavLightPWM_STATUS_REG & NavLightPWM_STATUS_DOWN));
1263:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1264:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1265:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1266:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetInterruptMode
1268:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1270:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1271:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/NavLightPWM.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1274:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1275:.\Generated_Source\PSoC4/NavLightPWM.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1277:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1280:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1281:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1282:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1283:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1286:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_MASK_REG =  interruptMask;
  64              		.loc 1 1286 0
  65 001c 084B     		ldr	r3, .L2+12
  66 001e 1A60     		str	r2, [r3]
  67              	.LBE15:
  68              	.LBE14:
 129:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_LEFT;
  69              		.loc 1 129 0
  70 0020 084B     		ldr	r3, .L2+16
  71 0022 3122     		mov	r2, #49
  72 0024 1A60     		str	r2, [r3]
  73              	.LVL2:
  74              	.LBB16:
  75              	.LBB17:
 689:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_REG = (period & NavLightPWM_16BIT_MASK);
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 25


  76              		.loc 1 689 0
  77 0026 084B     		ldr	r3, .L2+20
  78 0028 6422     		mov	r2, #100
  79 002a 1A60     		str	r2, [r3]
  80              	.LVL3:
  81              	.LBE17:
  82              	.LBE16:
  83              	.LBB18:
  84              	.LBB19:
 859:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
  85              		.loc 1 859 0
  86 002c 074B     		ldr	r3, .L2+24
  87 002e 3222     		mov	r2, #50
  88 0030 1A60     		str	r2, [r3]
  89              	.LBE19:
  90              	.LBE18:
 160:.\Generated_Source\PSoC4/NavLightPWM.c **** }
  91              		.loc 1 160 0
  92 0032 7047     		bx	lr
  93              	.L3:
  94              		.align	2
  95              	.L2:
  96 0034 80010540 		.word	1074069888
  97 0038 88010540 		.word	1074069896
  98 003c A4010540 		.word	1074069924
  99 0040 B8010540 		.word	1074069944
 100 0044 A8010540 		.word	1074069928
 101 0048 94010540 		.word	1074069908
 102 004c 8C010540 		.word	1074069900
 103              		.cfi_endproc
 104              	.LFE0:
 105              		.size	NavLightPWM_Init, .-NavLightPWM_Init
 106              		.section	.text.NavLightPWM_Stop,"ax",%progbits
 107              		.align	1
 108              		.global	NavLightPWM_Stop
 109              		.code	16
 110              		.thumb_func
 111              		.type	NavLightPWM_Stop, %function
 112              	NavLightPWM_Stop:
 113              	.LFB3:
 251:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 114              		.loc 1 251 0
 115              		.cfi_startproc
 116 0000 08B5     		push	{r3, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 3, -8
 119              		.cfi_offset 14, -4
 254:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 120              		.loc 1 254 0
 121 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 122              	.LVL4:
 256:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG &= (uint32)~NavLightPWM_MASK;
 123              		.loc 1 256 0
 124 0006 044B     		ldr	r3, .L5
 125 0008 0421     		mov	r1, #4
 126 000a 1A68     		ldr	r2, [r3]
 259:.\Generated_Source\PSoC4/NavLightPWM.c **** }
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 26


 127              		.loc 1 259 0
 128              		@ sp needed
 256:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG &= (uint32)~NavLightPWM_MASK;
 129              		.loc 1 256 0
 130 000c 8A43     		bic	r2, r1
 131 000e 1A60     		str	r2, [r3]
 258:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 132              		.loc 1 258 0
 133 0010 FFF7FEFF 		bl	CyExitCriticalSection
 134              	.LVL5:
 259:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 135              		.loc 1 259 0
 136 0014 08BD     		pop	{r3, pc}
 137              	.L6:
 138 0016 C046     		.align	2
 139              	.L5:
 140 0018 00000540 		.word	1074069504
 141              		.cfi_endproc
 142              	.LFE3:
 143              		.size	NavLightPWM_Stop, .-NavLightPWM_Stop
 144              		.section	.text.NavLightPWM_SetMode,"ax",%progbits
 145              		.align	1
 146              		.global	NavLightPWM_SetMode
 147              		.code	16
 148              		.thumb_func
 149              		.type	NavLightPWM_SetMode, %function
 150              	NavLightPWM_SetMode:
 151              	.LFB4:
 288:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 152              		.loc 1 288 0
 153              		.cfi_startproc
 154              	.LVL6:
 155 0000 10B5     		push	{r4, lr}
 156              		.cfi_def_cfa_offset 8
 157              		.cfi_offset 4, -8
 158              		.cfi_offset 14, -4
 288:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 159              		.loc 1 288 0
 160 0002 041C     		mov	r4, r0
 291:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 161              		.loc 1 291 0
 162 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 163              	.LVL7:
 293:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_MODE_MASK;
 164              		.loc 1 293 0
 165 0008 054B     		ldr	r3, .L8
 166 000a 064A     		ldr	r2, .L8+4
 167 000c 1968     		ldr	r1, [r3]
 297:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 168              		.loc 1 297 0
 169              		@ sp needed
 293:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_MODE_MASK;
 170              		.loc 1 293 0
 171 000e 0A40     		and	r2, r1
 172 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mode;
 173              		.loc 1 294 0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 27


 174 0012 1A68     		ldr	r2, [r3]
 175 0014 1443     		orr	r4, r2
 176              	.LVL8:
 177 0016 1C60     		str	r4, [r3]
 296:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 178              		.loc 1 296 0
 179 0018 FFF7FEFF 		bl	CyExitCriticalSection
 180              	.LVL9:
 297:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 181              		.loc 1 297 0
 182 001c 10BD     		pop	{r4, pc}
 183              	.L9:
 184 001e C046     		.align	2
 185              	.L8:
 186 0020 80010540 		.word	1074069888
 187 0024 FFFFFFF8 		.word	-117440513
 188              		.cfi_endproc
 189              	.LFE4:
 190              		.size	NavLightPWM_SetMode, .-NavLightPWM_SetMode
 191              		.section	.text.NavLightPWM_SetQDMode,"ax",%progbits
 192              		.align	1
 193              		.global	NavLightPWM_SetQDMode
 194              		.code	16
 195              		.thumb_func
 196              		.type	NavLightPWM_SetQDMode, %function
 197              	NavLightPWM_SetQDMode:
 198              	.LFB5:
 321:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 199              		.loc 1 321 0
 200              		.cfi_startproc
 201              	.LVL10:
 202 0000 10B5     		push	{r4, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
 321:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 206              		.loc 1 321 0
 207 0002 041C     		mov	r4, r0
 324:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 208              		.loc 1 324 0
 209 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 210              	.LVL11:
 326:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_QUAD_MODE_MASK;
 211              		.loc 1 326 0
 212 0008 054B     		ldr	r3, .L11
 213 000a 064A     		ldr	r2, .L11+4
 214 000c 1968     		ldr	r1, [r3]
 330:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 215              		.loc 1 330 0
 216              		@ sp needed
 326:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_QUAD_MODE_MASK;
 217              		.loc 1 326 0
 218 000e 0A40     		and	r2, r1
 219 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= qdMode;
 220              		.loc 1 327 0
 221 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 28


 222 0014 1443     		orr	r4, r2
 223              	.LVL12:
 224 0016 1C60     		str	r4, [r3]
 329:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 225              		.loc 1 329 0
 226 0018 FFF7FEFF 		bl	CyExitCriticalSection
 227              	.LVL13:
 330:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 228              		.loc 1 330 0
 229 001c 10BD     		pop	{r4, pc}
 230              	.L12:
 231 001e C046     		.align	2
 232              	.L11:
 233 0020 80010540 		.word	1074069888
 234 0024 FFFF8FFF 		.word	-7340033
 235              		.cfi_endproc
 236              	.LFE5:
 237              		.size	NavLightPWM_SetQDMode, .-NavLightPWM_SetQDMode
 238              		.section	.text.NavLightPWM_SetPrescaler,"ax",%progbits
 239              		.align	1
 240              		.global	NavLightPWM_SetPrescaler
 241              		.code	16
 242              		.thumb_func
 243              		.type	NavLightPWM_SetPrescaler, %function
 244              	NavLightPWM_SetPrescaler:
 245              	.LFB6:
 358:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 246              		.loc 1 358 0
 247              		.cfi_startproc
 248              	.LVL14:
 249 0000 10B5     		push	{r4, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 4, -8
 252              		.cfi_offset 14, -4
 358:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 253              		.loc 1 358 0
 254 0002 041C     		mov	r4, r0
 361:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 255              		.loc 1 361 0
 256 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 257              	.LVL15:
 363:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 258              		.loc 1 363 0
 259 0008 054B     		ldr	r3, .L14
 260 000a 064A     		ldr	r2, .L14+4
 261 000c 1968     		ldr	r1, [r3]
 367:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 262              		.loc 1 367 0
 263              		@ sp needed
 363:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 264              		.loc 1 363 0
 265 000e 0A40     		and	r2, r1
 266 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= prescaler;
 267              		.loc 1 364 0
 268 0012 1A68     		ldr	r2, [r3]
 269 0014 1443     		orr	r4, r2
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 29


 270              	.LVL16:
 271 0016 1C60     		str	r4, [r3]
 366:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 272              		.loc 1 366 0
 273 0018 FFF7FEFF 		bl	CyExitCriticalSection
 274              	.LVL17:
 367:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 275              		.loc 1 367 0
 276 001c 10BD     		pop	{r4, pc}
 277              	.L15:
 278 001e C046     		.align	2
 279              	.L14:
 280 0020 80010540 		.word	1074069888
 281 0024 FF00FFFF 		.word	-65281
 282              		.cfi_endproc
 283              	.LFE6:
 284              		.size	NavLightPWM_SetPrescaler, .-NavLightPWM_SetPrescaler
 285              		.section	.text.NavLightPWM_SetOneShot,"ax",%progbits
 286              		.align	1
 287              		.global	NavLightPWM_SetOneShot
 288              		.code	16
 289              		.thumb_func
 290              		.type	NavLightPWM_SetOneShot, %function
 291              	NavLightPWM_SetOneShot:
 292              	.LFB7:
 390:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 293              		.loc 1 390 0
 294              		.cfi_startproc
 295              	.LVL18:
 296 0000 10B5     		push	{r4, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 4, -8
 299              		.cfi_offset 14, -4
 390:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 300              		.loc 1 390 0
 301 0002 041C     		mov	r4, r0
 393:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 302              		.loc 1 393 0
 303 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 304              	.LVL19:
 395:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_ONESHOT_MASK;
 305              		.loc 1 395 0
 306 0008 064B     		ldr	r3, .L17
 307 000a 074A     		ldr	r2, .L17+4
 308 000c 1968     		ldr	r1, [r3]
 400:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 309              		.loc 1 400 0
 310              		@ sp needed
 395:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_ONESHOT_MASK;
 311              		.loc 1 395 0
 312 000e 0A40     		and	r2, r1
 313 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((oneShotEnable & NavLightPWM_1BIT_MASK) <<
 314              		.loc 1 396 0
 315 0012 0121     		mov	r1, #1
 316 0014 1A68     		ldr	r2, [r3]
 317 0016 0C40     		and	r4, r1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 30


 318              	.LVL20:
 319 0018 A404     		lsl	r4, r4, #18
 320 001a 1443     		orr	r4, r2
 321 001c 1C60     		str	r4, [r3]
 399:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 322              		.loc 1 399 0
 323 001e FFF7FEFF 		bl	CyExitCriticalSection
 324              	.LVL21:
 400:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 325              		.loc 1 400 0
 326 0022 10BD     		pop	{r4, pc}
 327              	.L18:
 328              		.align	2
 329              	.L17:
 330 0024 80010540 		.word	1074069888
 331 0028 FFFFFBFF 		.word	-262145
 332              		.cfi_endproc
 333              	.LFE7:
 334              		.size	NavLightPWM_SetOneShot, .-NavLightPWM_SetOneShot
 335              		.section	.text.NavLightPWM_SetPWMMode,"ax",%progbits
 336              		.align	1
 337              		.global	NavLightPWM_SetPWMMode
 338              		.code	16
 339              		.thumb_func
 340              		.type	NavLightPWM_SetPWMMode, %function
 341              	NavLightPWM_SetPWMMode:
 342              	.LFB8:
 444:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 343              		.loc 1 444 0
 344              		.cfi_startproc
 345              	.LVL22:
 445:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL2_REG = (modeMask & NavLightPWM_6BIT_MASK);
 346              		.loc 1 445 0
 347 0000 3F23     		mov	r3, #63
 348 0002 1840     		and	r0, r3
 349              	.LVL23:
 350 0004 014B     		ldr	r3, .L20
 446:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 351              		.loc 1 446 0
 352              		@ sp needed
 445:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL2_REG = (modeMask & NavLightPWM_6BIT_MASK);
 353              		.loc 1 445 0
 354 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 355              		.loc 1 446 0
 356 0008 7047     		bx	lr
 357              	.L21:
 358 000a C046     		.align	2
 359              	.L20:
 360 000c A8010540 		.word	1074069928
 361              		.cfi_endproc
 362              	.LFE8:
 363              		.size	NavLightPWM_SetPWMMode, .-NavLightPWM_SetPWMMode
 364              		.section	.text.NavLightPWM_SetPWMSyncKill,"ax",%progbits
 365              		.align	1
 366              		.global	NavLightPWM_SetPWMSyncKill
 367              		.code	16
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 31


 368              		.thumb_func
 369              		.type	NavLightPWM_SetPWMSyncKill, %function
 370              	NavLightPWM_SetPWMSyncKill:
 371              	.LFB9:
 480:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 372              		.loc 1 480 0
 373              		.cfi_startproc
 374              	.LVL24:
 375 0000 10B5     		push	{r4, lr}
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 4, -8
 378              		.cfi_offset 14, -4
 480:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 379              		.loc 1 480 0
 380 0002 041C     		mov	r4, r0
 483:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 381              		.loc 1 483 0
 382 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 383              	.LVL25:
 485:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_SYNC_KILL_MASK;
 384              		.loc 1 485 0
 385 0008 064B     		ldr	r3, .L23
 386 000a 0421     		mov	r1, #4
 387 000c 1A68     		ldr	r2, [r3]
 490:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 388              		.loc 1 490 0
 389              		@ sp needed
 485:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_SYNC_KILL_MASK;
 390              		.loc 1 485 0
 391 000e 8A43     		bic	r2, r1
 392 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((syncKillEnable & NavLightPWM_1BIT_MASK)  <<
 393              		.loc 1 486 0
 394 0012 0121     		mov	r1, #1
 395 0014 1A68     		ldr	r2, [r3]
 396 0016 0C40     		and	r4, r1
 397              	.LVL26:
 398 0018 A400     		lsl	r4, r4, #2
 399 001a 1443     		orr	r4, r2
 400 001c 1C60     		str	r4, [r3]
 489:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 401              		.loc 1 489 0
 402 001e FFF7FEFF 		bl	CyExitCriticalSection
 403              	.LVL27:
 490:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 404              		.loc 1 490 0
 405 0022 10BD     		pop	{r4, pc}
 406              	.L24:
 407              		.align	2
 408              	.L23:
 409 0024 80010540 		.word	1074069888
 410              		.cfi_endproc
 411              	.LFE9:
 412              		.size	NavLightPWM_SetPWMSyncKill, .-NavLightPWM_SetPWMSyncKill
 413              		.section	.text.NavLightPWM_SetPWMStopOnKill,"ax",%progbits
 414              		.align	1
 415              		.global	NavLightPWM_SetPWMStopOnKill
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 32


 416              		.code	16
 417              		.thumb_func
 418              		.type	NavLightPWM_SetPWMStopOnKill, %function
 419              	NavLightPWM_SetPWMStopOnKill:
 420              	.LFB10:
 514:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 421              		.loc 1 514 0
 422              		.cfi_startproc
 423              	.LVL28:
 424 0000 10B5     		push	{r4, lr}
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 4, -8
 427              		.cfi_offset 14, -4
 514:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 428              		.loc 1 514 0
 429 0002 041C     		mov	r4, r0
 517:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 430              		.loc 1 517 0
 431 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 432              	.LVL29:
 519:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_STOP_KILL_MASK;
 433              		.loc 1 519 0
 434 0008 064B     		ldr	r3, .L26
 435 000a 0821     		mov	r1, #8
 436 000c 1A68     		ldr	r2, [r3]
 524:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 437              		.loc 1 524 0
 438              		@ sp needed
 519:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_STOP_KILL_MASK;
 439              		.loc 1 519 0
 440 000e 8A43     		bic	r2, r1
 441 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & NavLightPWM_1BIT_MASK)  <<
 442              		.loc 1 520 0
 443 0012 0121     		mov	r1, #1
 444 0014 1A68     		ldr	r2, [r3]
 445 0016 0C40     		and	r4, r1
 446              	.LVL30:
 447 0018 E400     		lsl	r4, r4, #3
 448 001a 1443     		orr	r4, r2
 449 001c 1C60     		str	r4, [r3]
 523:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 450              		.loc 1 523 0
 451 001e FFF7FEFF 		bl	CyExitCriticalSection
 452              	.LVL31:
 524:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 453              		.loc 1 524 0
 454 0022 10BD     		pop	{r4, pc}
 455              	.L27:
 456              		.align	2
 457              	.L26:
 458 0024 80010540 		.word	1074069888
 459              		.cfi_endproc
 460              	.LFE10:
 461              		.size	NavLightPWM_SetPWMStopOnKill, .-NavLightPWM_SetPWMStopOnKill
 462              		.section	.text.NavLightPWM_SetPWMDeadTime,"ax",%progbits
 463              		.align	1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 33


 464              		.global	NavLightPWM_SetPWMDeadTime
 465              		.code	16
 466              		.thumb_func
 467              		.type	NavLightPWM_SetPWMDeadTime, %function
 468              	NavLightPWM_SetPWMDeadTime:
 469              	.LFB11:
 547:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 470              		.loc 1 547 0
 471              		.cfi_startproc
 472              	.LVL32:
 473 0000 10B5     		push	{r4, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 14, -4
 547:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 477              		.loc 1 547 0
 478 0002 041C     		mov	r4, r0
 550:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 479              		.loc 1 550 0
 480 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 481              	.LVL33:
 552:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 482              		.loc 1 552 0
 483 0008 064B     		ldr	r3, .L29
 484 000a 074A     		ldr	r2, .L29+4
 485 000c 1968     		ldr	r1, [r3]
 553:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((deadTime & NavLightPWM_8BIT_MASK) <<
 486              		.loc 1 553 0
 487 000e 2406     		lsl	r4, r4, #24
 488              	.LVL34:
 552:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 489              		.loc 1 552 0
 490 0010 0A40     		and	r2, r1
 491 0012 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((deadTime & NavLightPWM_8BIT_MASK) <<
 492              		.loc 1 553 0
 493 0014 1A68     		ldr	r2, [r3]
 494 0016 240C     		lsr	r4, r4, #16
 495 0018 1443     		orr	r4, r2
 496 001a 1C60     		str	r4, [r3]
 556:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 497              		.loc 1 556 0
 498 001c FFF7FEFF 		bl	CyExitCriticalSection
 499              	.LVL35:
 557:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 500              		.loc 1 557 0
 501              		@ sp needed
 502 0020 10BD     		pop	{r4, pc}
 503              	.L30:
 504 0022 C046     		.align	2
 505              	.L29:
 506 0024 80010540 		.word	1074069888
 507 0028 FF00FFFF 		.word	-65281
 508              		.cfi_endproc
 509              	.LFE11:
 510              		.size	NavLightPWM_SetPWMDeadTime, .-NavLightPWM_SetPWMDeadTime
 511              		.section	.text.NavLightPWM_SetPWMInvert,"ax",%progbits
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 34


 512              		.align	1
 513              		.global	NavLightPWM_SetPWMInvert
 514              		.code	16
 515              		.thumb_func
 516              		.type	NavLightPWM_SetPWMInvert, %function
 517              	NavLightPWM_SetPWMInvert:
 518              	.LFB12:
 580:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 519              		.loc 1 580 0
 520              		.cfi_startproc
 521              	.LVL36:
 522 0000 10B5     		push	{r4, lr}
 523              		.cfi_def_cfa_offset 8
 524              		.cfi_offset 4, -8
 525              		.cfi_offset 14, -4
 580:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 526              		.loc 1 580 0
 527 0002 041C     		mov	r4, r0
 583:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 528              		.loc 1 583 0
 529 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 530              	.LVL37:
 585:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_INV_OUT_MASK;
 531              		.loc 1 585 0
 532 0008 054B     		ldr	r3, .L32
 533 000a 064A     		ldr	r2, .L32+4
 534 000c 1968     		ldr	r1, [r3]
 589:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 535              		.loc 1 589 0
 536              		@ sp needed
 585:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_INV_OUT_MASK;
 537              		.loc 1 585 0
 538 000e 0A40     		and	r2, r1
 539 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mask;
 540              		.loc 1 586 0
 541 0012 1A68     		ldr	r2, [r3]
 542 0014 1443     		orr	r4, r2
 543              	.LVL38:
 544 0016 1C60     		str	r4, [r3]
 588:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 545              		.loc 1 588 0
 546 0018 FFF7FEFF 		bl	CyExitCriticalSection
 547              	.LVL39:
 589:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 548              		.loc 1 589 0
 549 001c 10BD     		pop	{r4, pc}
 550              	.L33:
 551 001e C046     		.align	2
 552              	.L32:
 553 0020 80010540 		.word	1074069888
 554 0024 FFFFCFFF 		.word	-3145729
 555              		.cfi_endproc
 556              	.LFE12:
 557              		.size	NavLightPWM_SetPWMInvert, .-NavLightPWM_SetPWMInvert
 558              		.section	.text.NavLightPWM_WriteCounter,"ax",%progbits
 559              		.align	1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 35


 560              		.global	NavLightPWM_WriteCounter
 561              		.code	16
 562              		.thumb_func
 563              		.type	NavLightPWM_WriteCounter, %function
 564              	NavLightPWM_WriteCounter:
 565              	.LFB13:
 610:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 566              		.loc 1 610 0
 567              		.cfi_startproc
 568              	.LVL40:
 611:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COUNTER_REG = (count & NavLightPWM_16BIT_MASK);
 569              		.loc 1 611 0
 570 0000 014B     		ldr	r3, .L35
 571 0002 80B2     		uxth	r0, r0
 572              	.LVL41:
 573 0004 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 574              		.loc 1 612 0
 575              		@ sp needed
 576 0006 7047     		bx	lr
 577              	.L36:
 578              		.align	2
 579              	.L35:
 580 0008 88010540 		.word	1074069896
 581              		.cfi_endproc
 582              	.LFE13:
 583              		.size	NavLightPWM_WriteCounter, .-NavLightPWM_WriteCounter
 584              		.section	.text.NavLightPWM_ReadCounter,"ax",%progbits
 585              		.align	1
 586              		.global	NavLightPWM_ReadCounter
 587              		.code	16
 588              		.thumb_func
 589              		.type	NavLightPWM_ReadCounter, %function
 590              	NavLightPWM_ReadCounter:
 591              	.LFB14:
 630:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 592              		.loc 1 630 0
 593              		.cfi_startproc
 631:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COUNTER_REG & NavLightPWM_16BIT_MASK);
 594              		.loc 1 631 0
 595 0000 014B     		ldr	r3, .L38
 632:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 596              		.loc 1 632 0
 597              		@ sp needed
 631:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COUNTER_REG & NavLightPWM_16BIT_MASK);
 598              		.loc 1 631 0
 599 0002 1868     		ldr	r0, [r3]
 600 0004 80B2     		uxth	r0, r0
 632:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 601              		.loc 1 632 0
 602 0006 7047     		bx	lr
 603              	.L39:
 604              		.align	2
 605              	.L38:
 606 0008 88010540 		.word	1074069896
 607              		.cfi_endproc
 608              	.LFE14:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 36


 609              		.size	NavLightPWM_ReadCounter, .-NavLightPWM_ReadCounter
 610              		.section	.text.NavLightPWM_SetCounterMode,"ax",%progbits
 611              		.align	1
 612              		.global	NavLightPWM_SetCounterMode
 613              		.code	16
 614              		.thumb_func
 615              		.type	NavLightPWM_SetCounterMode, %function
 616              	NavLightPWM_SetCounterMode:
 617              	.LFB15:
 659:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 618              		.loc 1 659 0
 619              		.cfi_startproc
 620              	.LVL42:
 621 0000 10B5     		push	{r4, lr}
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 4, -8
 624              		.cfi_offset 14, -4
 659:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 625              		.loc 1 659 0
 626 0002 041C     		mov	r4, r0
 662:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 627              		.loc 1 662 0
 628 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 629              	.LVL43:
 664:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_UPDOWN_MASK;
 630              		.loc 1 664 0
 631 0008 054B     		ldr	r3, .L41
 632 000a 064A     		ldr	r2, .L41+4
 633 000c 1968     		ldr	r1, [r3]
 668:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 634              		.loc 1 668 0
 635              		@ sp needed
 664:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_UPDOWN_MASK;
 636              		.loc 1 664 0
 637 000e 0A40     		and	r2, r1
 638 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= counterMode;
 639              		.loc 1 665 0
 640 0012 1A68     		ldr	r2, [r3]
 641 0014 1443     		orr	r4, r2
 642              	.LVL44:
 643 0016 1C60     		str	r4, [r3]
 667:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 644              		.loc 1 667 0
 645 0018 FFF7FEFF 		bl	CyExitCriticalSection
 646              	.LVL45:
 668:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 647              		.loc 1 668 0
 648 001c 10BD     		pop	{r4, pc}
 649              	.L42:
 650 001e C046     		.align	2
 651              	.L41:
 652 0020 80010540 		.word	1074069888
 653 0024 FFFFFCFF 		.word	-196609
 654              		.cfi_endproc
 655              	.LFE15:
 656              		.size	NavLightPWM_SetCounterMode, .-NavLightPWM_SetCounterMode
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 37


 657              		.section	.text.NavLightPWM_WritePeriod,"ax",%progbits
 658              		.align	1
 659              		.global	NavLightPWM_WritePeriod
 660              		.code	16
 661              		.thumb_func
 662              		.type	NavLightPWM_WritePeriod, %function
 663              	NavLightPWM_WritePeriod:
 664              	.LFB16:
 688:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 665              		.loc 1 688 0
 666              		.cfi_startproc
 667              	.LVL46:
 689:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_REG = (period & NavLightPWM_16BIT_MASK);
 668              		.loc 1 689 0
 669 0000 014B     		ldr	r3, .L44
 670 0002 80B2     		uxth	r0, r0
 671              	.LVL47:
 672 0004 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 673              		.loc 1 690 0
 674              		@ sp needed
 675 0006 7047     		bx	lr
 676              	.L45:
 677              		.align	2
 678              	.L44:
 679 0008 94010540 		.word	1074069908
 680              		.cfi_endproc
 681              	.LFE16:
 682              		.size	NavLightPWM_WritePeriod, .-NavLightPWM_WritePeriod
 683              		.section	.text.NavLightPWM_ReadPeriod,"ax",%progbits
 684              		.align	1
 685              		.global	NavLightPWM_ReadPeriod
 686              		.code	16
 687              		.thumb_func
 688              		.type	NavLightPWM_ReadPeriod, %function
 689              	NavLightPWM_ReadPeriod:
 690              	.LFB17:
 708:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 691              		.loc 1 708 0
 692              		.cfi_startproc
 709:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_REG & NavLightPWM_16BIT_MASK);
 693              		.loc 1 709 0
 694 0000 014B     		ldr	r3, .L47
 710:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 695              		.loc 1 710 0
 696              		@ sp needed
 709:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_REG & NavLightPWM_16BIT_MASK);
 697              		.loc 1 709 0
 698 0002 1868     		ldr	r0, [r3]
 699 0004 80B2     		uxth	r0, r0
 710:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 700              		.loc 1 710 0
 701 0006 7047     		bx	lr
 702              	.L48:
 703              		.align	2
 704              	.L47:
 705 0008 94010540 		.word	1074069908
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 38


 706              		.cfi_endproc
 707              	.LFE17:
 708              		.size	NavLightPWM_ReadPeriod, .-NavLightPWM_ReadPeriod
 709              		.section	.text.NavLightPWM_SetCompareSwap,"ax",%progbits
 710              		.align	1
 711              		.global	NavLightPWM_SetCompareSwap
 712              		.code	16
 713              		.thumb_func
 714              		.type	NavLightPWM_SetCompareSwap, %function
 715              	NavLightPWM_SetCompareSwap:
 716              	.LFB18:
 734:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 717              		.loc 1 734 0
 718              		.cfi_startproc
 719              	.LVL48:
 720 0000 10B5     		push	{r4, lr}
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 4, -8
 723              		.cfi_offset 14, -4
 734:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 724              		.loc 1 734 0
 725 0002 041C     		mov	r4, r0
 737:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 726              		.loc 1 737 0
 727 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 728              	.LVL49:
 739:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_CC_MASK;
 729              		.loc 1 739 0
 730 0008 054B     		ldr	r3, .L50
 731 000a 0122     		mov	r2, #1
 732 000c 1968     		ldr	r1, [r3]
 743:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 733              		.loc 1 743 0
 734              		@ sp needed
 739:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_CC_MASK;
 735              		.loc 1 739 0
 736 000e 9143     		bic	r1, r2
 737 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= (swapEnable & NavLightPWM_1BIT_MASK);
 738              		.loc 1 740 0
 739 0012 1968     		ldr	r1, [r3]
 740 0014 2240     		and	r2, r4
 741 0016 0A43     		orr	r2, r1
 742 0018 1A60     		str	r2, [r3]
 742:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 743              		.loc 1 742 0
 744 001a FFF7FEFF 		bl	CyExitCriticalSection
 745              	.LVL50:
 746              	.LVL51:
 743:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 747              		.loc 1 743 0
 748 001e 10BD     		pop	{r4, pc}
 749              	.L51:
 750              		.align	2
 751              	.L50:
 752 0020 80010540 		.word	1074069888
 753              		.cfi_endproc
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 39


 754              	.LFE18:
 755              		.size	NavLightPWM_SetCompareSwap, .-NavLightPWM_SetCompareSwap
 756              		.section	.text.NavLightPWM_WritePeriodBuf,"ax",%progbits
 757              		.align	1
 758              		.global	NavLightPWM_WritePeriodBuf
 759              		.code	16
 760              		.thumb_func
 761              		.type	NavLightPWM_WritePeriodBuf, %function
 762              	NavLightPWM_WritePeriodBuf:
 763              	.LFB19:
 761:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 764              		.loc 1 761 0
 765              		.cfi_startproc
 766              	.LVL52:
 762:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_BUF_REG = (periodBuf & NavLightPWM_16BIT_MASK);
 767              		.loc 1 762 0
 768 0000 014B     		ldr	r3, .L53
 769 0002 80B2     		uxth	r0, r0
 770              	.LVL53:
 771 0004 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 772              		.loc 1 763 0
 773              		@ sp needed
 774 0006 7047     		bx	lr
 775              	.L54:
 776              		.align	2
 777              	.L53:
 778 0008 98010540 		.word	1074069912
 779              		.cfi_endproc
 780              	.LFE19:
 781              		.size	NavLightPWM_WritePeriodBuf, .-NavLightPWM_WritePeriodBuf
 782              		.section	.text.NavLightPWM_ReadPeriodBuf,"ax",%progbits
 783              		.align	1
 784              		.global	NavLightPWM_ReadPeriodBuf
 785              		.code	16
 786              		.thumb_func
 787              		.type	NavLightPWM_ReadPeriodBuf, %function
 788              	NavLightPWM_ReadPeriodBuf:
 789              	.LFB20:
 781:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 790              		.loc 1 781 0
 791              		.cfi_startproc
 782:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_BUF_REG & NavLightPWM_16BIT_MASK);
 792              		.loc 1 782 0
 793 0000 014B     		ldr	r3, .L56
 783:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 794              		.loc 1 783 0
 795              		@ sp needed
 782:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_BUF_REG & NavLightPWM_16BIT_MASK);
 796              		.loc 1 782 0
 797 0002 1868     		ldr	r0, [r3]
 798 0004 80B2     		uxth	r0, r0
 783:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 799              		.loc 1 783 0
 800 0006 7047     		bx	lr
 801              	.L57:
 802              		.align	2
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 40


 803              	.L56:
 804 0008 98010540 		.word	1074069912
 805              		.cfi_endproc
 806              	.LFE20:
 807              		.size	NavLightPWM_ReadPeriodBuf, .-NavLightPWM_ReadPeriodBuf
 808              		.section	.text.NavLightPWM_SetPeriodSwap,"ax",%progbits
 809              		.align	1
 810              		.global	NavLightPWM_SetPeriodSwap
 811              		.code	16
 812              		.thumb_func
 813              		.type	NavLightPWM_SetPeriodSwap, %function
 814              	NavLightPWM_SetPeriodSwap:
 815              	.LFB21:
 807:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 816              		.loc 1 807 0
 817              		.cfi_startproc
 818              	.LVL54:
 819 0000 10B5     		push	{r4, lr}
 820              		.cfi_def_cfa_offset 8
 821              		.cfi_offset 4, -8
 822              		.cfi_offset 14, -4
 807:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 823              		.loc 1 807 0
 824 0002 041C     		mov	r4, r0
 810:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 825              		.loc 1 810 0
 826 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 827              	.LVL55:
 812:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_PERIOD_MASK;
 828              		.loc 1 812 0
 829 0008 064B     		ldr	r3, .L59
 830 000a 0221     		mov	r1, #2
 831 000c 1A68     		ldr	r2, [r3]
 817:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 832              		.loc 1 817 0
 833              		@ sp needed
 812:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_PERIOD_MASK;
 834              		.loc 1 812 0
 835 000e 8A43     		bic	r2, r1
 836 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((swapEnable & NavLightPWM_1BIT_MASK) <<
 837              		.loc 1 813 0
 838 0012 0121     		mov	r1, #1
 839 0014 1A68     		ldr	r2, [r3]
 840 0016 0C40     		and	r4, r1
 841              	.LVL56:
 842 0018 8C40     		lsl	r4, r4, r1
 843 001a 1443     		orr	r4, r2
 844 001c 1C60     		str	r4, [r3]
 816:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 845              		.loc 1 816 0
 846 001e FFF7FEFF 		bl	CyExitCriticalSection
 847              	.LVL57:
 817:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 848              		.loc 1 817 0
 849 0022 10BD     		pop	{r4, pc}
 850              	.L60:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 41


 851              		.align	2
 852              	.L59:
 853 0024 80010540 		.word	1074069888
 854              		.cfi_endproc
 855              	.LFE21:
 856              		.size	NavLightPWM_SetPeriodSwap, .-NavLightPWM_SetPeriodSwap
 857              		.section	.text.NavLightPWM_WriteCompare,"ax",%progbits
 858              		.align	1
 859              		.global	NavLightPWM_WriteCompare
 860              		.code	16
 861              		.thumb_func
 862              		.type	NavLightPWM_WriteCompare, %function
 863              	NavLightPWM_WriteCompare:
 864              	.LFB22:
 836:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 865              		.loc 1 836 0
 866              		.cfi_startproc
 867              	.LVL58:
 859:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
 868              		.loc 1 859 0
 869 0000 014B     		ldr	r3, .L62
 870 0002 80B2     		uxth	r0, r0
 871              	.LVL59:
 872 0004 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 873              		.loc 1 860 0
 874              		@ sp needed
 875 0006 7047     		bx	lr
 876              	.L63:
 877              		.align	2
 878              	.L62:
 879 0008 8C010540 		.word	1074069900
 880              		.cfi_endproc
 881              	.LFE22:
 882              		.size	NavLightPWM_WriteCompare, .-NavLightPWM_WriteCompare
 883              		.section	.text.NavLightPWM_ReadCompare,"ax",%progbits
 884              		.align	1
 885              		.global	NavLightPWM_ReadCompare
 886              		.code	16
 887              		.thumb_func
 888              		.type	NavLightPWM_ReadCompare, %function
 889              	NavLightPWM_ReadCompare:
 890              	.LFB23:
 879:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 891              		.loc 1 879 0
 892              		.cfi_startproc
 904:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 893              		.loc 1 904 0
 894 0000 014B     		ldr	r3, .L65
 906:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 895              		.loc 1 906 0
 896              		@ sp needed
 904:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 897              		.loc 1 904 0
 898 0002 1868     		ldr	r0, [r3]
 899 0004 80B2     		uxth	r0, r0
 906:.\Generated_Source\PSoC4/NavLightPWM.c **** }
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 42


 900              		.loc 1 906 0
 901 0006 7047     		bx	lr
 902              	.L66:
 903              		.align	2
 904              	.L65:
 905 0008 8C010540 		.word	1074069900
 906              		.cfi_endproc
 907              	.LFE23:
 908              		.size	NavLightPWM_ReadCompare, .-NavLightPWM_ReadCompare
 909              		.section	.text.NavLightPWM_WriteCompareBuf,"ax",%progbits
 910              		.align	1
 911              		.global	NavLightPWM_WriteCompareBuf
 912              		.code	16
 913              		.thumb_func
 914              		.type	NavLightPWM_WriteCompareBuf, %function
 915              	NavLightPWM_WriteCompareBuf:
 916              	.LFB24:
 925:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 917              		.loc 1 925 0
 918              		.cfi_startproc
 919              	.LVL60:
 946:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMP_CAP_BUF_REG = (compareBuf & NavLightPWM_16BIT_MASK);
 920              		.loc 1 946 0
 921 0000 014B     		ldr	r3, .L68
 922 0002 80B2     		uxth	r0, r0
 923              	.LVL61:
 924 0004 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 925              		.loc 1 947 0
 926              		@ sp needed
 927 0006 7047     		bx	lr
 928              	.L69:
 929              		.align	2
 930              	.L68:
 931 0008 90010540 		.word	1074069904
 932              		.cfi_endproc
 933              	.LFE24:
 934              		.size	NavLightPWM_WriteCompareBuf, .-NavLightPWM_WriteCompareBuf
 935              		.section	.text.NavLightPWM_ReadCompareBuf,"ax",%progbits
 936              		.align	1
 937              		.global	NavLightPWM_ReadCompareBuf
 938              		.code	16
 939              		.thumb_func
 940              		.type	NavLightPWM_ReadCompareBuf, %function
 941              	NavLightPWM_ReadCompareBuf:
 942              	.LFB25:
 966:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 943              		.loc 1 966 0
 944              		.cfi_startproc
 991:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 945              		.loc 1 991 0
 946 0000 014B     		ldr	r3, .L71
 993:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 947              		.loc 1 993 0
 948              		@ sp needed
 991:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 949              		.loc 1 991 0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 43


 950 0002 1868     		ldr	r0, [r3]
 951 0004 80B2     		uxth	r0, r0
 993:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 952              		.loc 1 993 0
 953 0006 7047     		bx	lr
 954              	.L72:
 955              		.align	2
 956              	.L71:
 957 0008 90010540 		.word	1074069904
 958              		.cfi_endproc
 959              	.LFE25:
 960              		.size	NavLightPWM_ReadCompareBuf, .-NavLightPWM_ReadCompareBuf
 961              		.section	.text.NavLightPWM_ReadCapture,"ax",%progbits
 962              		.align	1
 963              		.global	NavLightPWM_ReadCapture
 964              		.code	16
 965              		.thumb_func
 966              		.type	NavLightPWM_ReadCapture, %function
 967              	NavLightPWM_ReadCapture:
 968              	.LFB26:
1012:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 969              		.loc 1 1012 0
 970              		.cfi_startproc
1013:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 971              		.loc 1 1013 0
 972 0000 014B     		ldr	r3, .L74
1014:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 973              		.loc 1 1014 0
 974              		@ sp needed
1013:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 975              		.loc 1 1013 0
 976 0002 1868     		ldr	r0, [r3]
 977 0004 80B2     		uxth	r0, r0
1014:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 978              		.loc 1 1014 0
 979 0006 7047     		bx	lr
 980              	.L75:
 981              		.align	2
 982              	.L74:
 983 0008 8C010540 		.word	1074069900
 984              		.cfi_endproc
 985              	.LFE26:
 986              		.size	NavLightPWM_ReadCapture, .-NavLightPWM_ReadCapture
 987              		.section	.text.NavLightPWM_ReadCaptureBuf,"ax",%progbits
 988              		.align	1
 989              		.global	NavLightPWM_ReadCaptureBuf
 990              		.code	16
 991              		.thumb_func
 992              		.type	NavLightPWM_ReadCaptureBuf, %function
 993              	NavLightPWM_ReadCaptureBuf:
 994              	.LFB27:
1033:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 995              		.loc 1 1033 0
 996              		.cfi_startproc
1034:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 997              		.loc 1 1034 0
 998 0000 014B     		ldr	r3, .L77
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 44


1035:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 999              		.loc 1 1035 0
 1000              		@ sp needed
1034:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 1001              		.loc 1 1034 0
 1002 0002 1868     		ldr	r0, [r3]
 1003 0004 80B2     		uxth	r0, r0
1035:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1004              		.loc 1 1035 0
 1005 0006 7047     		bx	lr
 1006              	.L78:
 1007              		.align	2
 1008              	.L77:
 1009 0008 90010540 		.word	1074069904
 1010              		.cfi_endproc
 1011              	.LFE27:
 1012              		.size	NavLightPWM_ReadCaptureBuf, .-NavLightPWM_ReadCaptureBuf
 1013              		.section	.text.NavLightPWM_SetCaptureMode,"ax",%progbits
 1014              		.align	1
 1015              		.global	NavLightPWM_SetCaptureMode
 1016              		.code	16
 1017              		.thumb_func
 1018              		.type	NavLightPWM_SetCaptureMode, %function
 1019              	NavLightPWM_SetCaptureMode:
 1020              	.LFB28:
1060:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1021              		.loc 1 1060 0
 1022              		.cfi_startproc
 1023              	.LVL62:
 1024 0000 10B5     		push	{r4, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 4, -8
 1027              		.cfi_offset 14, -4
1060:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1028              		.loc 1 1060 0
 1029 0002 041C     		mov	r4, r0
1063:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1030              		.loc 1 1063 0
 1031 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1032              	.LVL63:
1065:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_CAPTURE_MASK;
 1033              		.loc 1 1065 0
 1034 0008 054B     		ldr	r3, .L80
 1035 000a 0321     		mov	r1, #3
 1036 000c 1A68     		ldr	r2, [r3]
1069:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1037              		.loc 1 1069 0
 1038              		@ sp needed
1065:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_CAPTURE_MASK;
 1039              		.loc 1 1065 0
 1040 000e 8A43     		bic	r2, r1
 1041 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= triggerMode;
 1042              		.loc 1 1066 0
 1043 0012 1A68     		ldr	r2, [r3]
 1044 0014 1443     		orr	r4, r2
 1045              	.LVL64:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 45


 1046 0016 1C60     		str	r4, [r3]
1068:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1047              		.loc 1 1068 0
 1048 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1049              	.LVL65:
1069:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1050              		.loc 1 1069 0
 1051 001c 10BD     		pop	{r4, pc}
 1052              	.L81:
 1053 001e C046     		.align	2
 1054              	.L80:
 1055 0020 A4010540 		.word	1074069924
 1056              		.cfi_endproc
 1057              	.LFE28:
 1058              		.size	NavLightPWM_SetCaptureMode, .-NavLightPWM_SetCaptureMode
 1059              		.section	.text.NavLightPWM_SetReloadMode,"ax",%progbits
 1060              		.align	1
 1061              		.global	NavLightPWM_SetReloadMode
 1062              		.code	16
 1063              		.thumb_func
 1064              		.type	NavLightPWM_SetReloadMode, %function
 1065              	NavLightPWM_SetReloadMode:
 1066              	.LFB29:
1093:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1067              		.loc 1 1093 0
 1068              		.cfi_startproc
 1069              	.LVL66:
 1070 0000 10B5     		push	{r4, lr}
 1071              		.cfi_def_cfa_offset 8
 1072              		.cfi_offset 4, -8
 1073              		.cfi_offset 14, -4
1093:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1074              		.loc 1 1093 0
 1075 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1076              		.loc 1 1096 0
 1077 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1078              	.LVL67:
1098:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_RELOAD_MASK;
 1079              		.loc 1 1098 0
 1080 0008 054B     		ldr	r3, .L83
 1081 000a 3021     		mov	r1, #48
 1082 000c 1A68     		ldr	r2, [r3]
1099:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
 1083              		.loc 1 1099 0
 1084 000e 2401     		lsl	r4, r4, #4
 1085              	.LVL68:
1098:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_RELOAD_MASK;
 1086              		.loc 1 1098 0
 1087 0010 8A43     		bic	r2, r1
 1088 0012 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
 1089              		.loc 1 1099 0
 1090 0014 1A68     		ldr	r2, [r3]
1102:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1091              		.loc 1 1102 0
 1092              		@ sp needed
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 46


1099:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
 1093              		.loc 1 1099 0
 1094 0016 1443     		orr	r4, r2
 1095 0018 1C60     		str	r4, [r3]
1101:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1096              		.loc 1 1101 0
 1097 001a FFF7FEFF 		bl	CyExitCriticalSection
 1098              	.LVL69:
1102:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1099              		.loc 1 1102 0
 1100 001e 10BD     		pop	{r4, pc}
 1101              	.L84:
 1102              		.align	2
 1103              	.L83:
 1104 0020 A4010540 		.word	1074069924
 1105              		.cfi_endproc
 1106              	.LFE29:
 1107              		.size	NavLightPWM_SetReloadMode, .-NavLightPWM_SetReloadMode
 1108              		.section	.text.NavLightPWM_SetStartMode,"ax",%progbits
 1109              		.align	1
 1110              		.global	NavLightPWM_SetStartMode
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	NavLightPWM_SetStartMode, %function
 1114              	NavLightPWM_SetStartMode:
 1115              	.LFB30:
1126:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1116              		.loc 1 1126 0
 1117              		.cfi_startproc
 1118              	.LVL70:
 1119 0000 10B5     		push	{r4, lr}
 1120              		.cfi_def_cfa_offset 8
 1121              		.cfi_offset 4, -8
 1122              		.cfi_offset 14, -4
1126:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1123              		.loc 1 1126 0
 1124 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1129 0
 1126 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL71:
1131:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_START_MASK;
 1128              		.loc 1 1131 0
 1129 0008 054B     		ldr	r3, .L86
 1130 000a 064A     		ldr	r2, .L86+4
 1131 000c 1968     		ldr	r1, [r3]
1132:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
 1132              		.loc 1 1132 0
 1133 000e 2402     		lsl	r4, r4, #8
 1134              	.LVL72:
1131:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_START_MASK;
 1135              		.loc 1 1131 0
 1136 0010 0A40     		and	r2, r1
 1137 0012 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
 1138              		.loc 1 1132 0
 1139 0014 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 47


1135:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1140              		.loc 1 1135 0
 1141              		@ sp needed
1132:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
 1142              		.loc 1 1132 0
 1143 0016 1443     		orr	r4, r2
 1144 0018 1C60     		str	r4, [r3]
1134:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1145              		.loc 1 1134 0
 1146 001a FFF7FEFF 		bl	CyExitCriticalSection
 1147              	.LVL73:
1135:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1148              		.loc 1 1135 0
 1149 001e 10BD     		pop	{r4, pc}
 1150              	.L87:
 1151              		.align	2
 1152              	.L86:
 1153 0020 A4010540 		.word	1074069924
 1154 0024 FFFCFFFF 		.word	-769
 1155              		.cfi_endproc
 1156              	.LFE30:
 1157              		.size	NavLightPWM_SetStartMode, .-NavLightPWM_SetStartMode
 1158              		.section	.text.NavLightPWM_SetStopMode,"ax",%progbits
 1159              		.align	1
 1160              		.global	NavLightPWM_SetStopMode
 1161              		.code	16
 1162              		.thumb_func
 1163              		.type	NavLightPWM_SetStopMode, %function
 1164              	NavLightPWM_SetStopMode:
 1165              	.LFB31:
1158:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1166              		.loc 1 1158 0
 1167              		.cfi_startproc
 1168              	.LVL74:
 1169 0000 10B5     		push	{r4, lr}
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 4, -8
 1172              		.cfi_offset 14, -4
1158:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1173              		.loc 1 1158 0
 1174 0002 041C     		mov	r4, r0
1161:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1175              		.loc 1 1161 0
 1176 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1177              	.LVL75:
1163:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_STOP_MASK;
 1178              		.loc 1 1163 0
 1179 0008 054B     		ldr	r3, .L89
 1180 000a C021     		mov	r1, #192
 1181 000c 1A68     		ldr	r2, [r3]
1164:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
 1182              		.loc 1 1164 0
 1183 000e A401     		lsl	r4, r4, #6
 1184              	.LVL76:
1163:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_STOP_MASK;
 1185              		.loc 1 1163 0
 1186 0010 8A43     		bic	r2, r1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 48


 1187 0012 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
 1188              		.loc 1 1164 0
 1189 0014 1A68     		ldr	r2, [r3]
1167:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1190              		.loc 1 1167 0
 1191              		@ sp needed
1164:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
 1192              		.loc 1 1164 0
 1193 0016 1443     		orr	r4, r2
 1194 0018 1C60     		str	r4, [r3]
1166:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1195              		.loc 1 1166 0
 1196 001a FFF7FEFF 		bl	CyExitCriticalSection
 1197              	.LVL77:
1167:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1198              		.loc 1 1167 0
 1199 001e 10BD     		pop	{r4, pc}
 1200              	.L90:
 1201              		.align	2
 1202              	.L89:
 1203 0020 A4010540 		.word	1074069924
 1204              		.cfi_endproc
 1205              	.LFE31:
 1206              		.size	NavLightPWM_SetStopMode, .-NavLightPWM_SetStopMode
 1207              		.section	.text.NavLightPWM_SetCountMode,"ax",%progbits
 1208              		.align	1
 1209              		.global	NavLightPWM_SetCountMode
 1210              		.code	16
 1211              		.thumb_func
 1212              		.type	NavLightPWM_SetCountMode, %function
 1213              	NavLightPWM_SetCountMode:
 1214              	.LFB32:
1191:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1215              		.loc 1 1191 0
 1216              		.cfi_startproc
 1217              	.LVL78:
 1218 0000 10B5     		push	{r4, lr}
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 4, -8
 1221              		.cfi_offset 14, -4
1191:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1222              		.loc 1 1191 0
 1223 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1224              		.loc 1 1194 0
 1225 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1226              	.LVL79:
1196:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_COUNT_MASK;
 1227              		.loc 1 1196 0
 1228 0008 054B     		ldr	r3, .L92
 1229 000a 0C21     		mov	r1, #12
 1230 000c 1A68     		ldr	r2, [r3]
1197:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
 1231              		.loc 1 1197 0
 1232 000e A400     		lsl	r4, r4, #2
 1233              	.LVL80:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 49


1196:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_COUNT_MASK;
 1234              		.loc 1 1196 0
 1235 0010 8A43     		bic	r2, r1
 1236 0012 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
 1237              		.loc 1 1197 0
 1238 0014 1A68     		ldr	r2, [r3]
1200:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1239              		.loc 1 1200 0
 1240              		@ sp needed
1197:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
 1241              		.loc 1 1197 0
 1242 0016 1443     		orr	r4, r2
 1243 0018 1C60     		str	r4, [r3]
1199:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1244              		.loc 1 1199 0
 1245 001a FFF7FEFF 		bl	CyExitCriticalSection
 1246              	.LVL81:
1200:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1247              		.loc 1 1200 0
 1248 001e 10BD     		pop	{r4, pc}
 1249              	.L93:
 1250              		.align	2
 1251              	.L92:
 1252 0020 A4010540 		.word	1074069924
 1253              		.cfi_endproc
 1254              	.LFE32:
 1255              		.size	NavLightPWM_SetCountMode, .-NavLightPWM_SetCountMode
 1256              		.section	.text.NavLightPWM_TriggerCommand,"ax",%progbits
 1257              		.align	1
 1258              		.global	NavLightPWM_TriggerCommand
 1259              		.code	16
 1260              		.thumb_func
 1261              		.type	NavLightPWM_TriggerCommand, %function
 1262              	NavLightPWM_TriggerCommand:
 1263              	.LFB33:
1231:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1264              		.loc 1 1231 0
 1265              		.cfi_startproc
 1266              	.LVL82:
 1267 0000 38B5     		push	{r3, r4, r5, lr}
 1268              		.cfi_def_cfa_offset 16
 1269              		.cfi_offset 3, -16
 1270              		.cfi_offset 4, -12
 1271              		.cfi_offset 5, -8
 1272              		.cfi_offset 14, -4
1231:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1273              		.loc 1 1231 0
 1274 0002 0C1C     		mov	r4, r1
 1275 0004 051C     		mov	r5, r0
1234:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1276              		.loc 1 1234 0
 1277 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1278              	.LVL83:
1236:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMMAND_REG = ((uint32)(mask << command));
 1279              		.loc 1 1236 0
 1280 000a 034B     		ldr	r3, .L95
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 50


 1281 000c A540     		lsl	r5, r5, r4
 1282              	.LVL84:
 1283 000e 1D60     		str	r5, [r3]
1238:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1284              		.loc 1 1238 0
 1285 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1286              	.LVL85:
1239:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1287              		.loc 1 1239 0
 1288              		@ sp needed
 1289              	.LVL86:
 1290 0014 38BD     		pop	{r3, r4, r5, pc}
 1291              	.L96:
 1292 0016 C046     		.align	2
 1293              	.L95:
 1294 0018 08000540 		.word	1074069512
 1295              		.cfi_endproc
 1296              	.LFE33:
 1297              		.size	NavLightPWM_TriggerCommand, .-NavLightPWM_TriggerCommand
 1298              		.section	.text.NavLightPWM_Enable,"ax",%progbits
 1299              		.align	1
 1300              		.global	NavLightPWM_Enable
 1301              		.code	16
 1302              		.thumb_func
 1303              		.type	NavLightPWM_Enable, %function
 1304              	NavLightPWM_Enable:
 1305              	.LFB1:
 178:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1306              		.loc 1 178 0
 1307              		.cfi_startproc
 1308 0000 10B5     		push	{r4, lr}
 1309              		.cfi_def_cfa_offset 8
 1310              		.cfi_offset 4, -8
 1311              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1312              		.loc 1 181 0
 1313 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1314              	.LVL87:
 182:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG |= NavLightPWM_MASK;
 1315              		.loc 1 182 0
 1316 0006 064B     		ldr	r3, .L98
 1317 0008 0424     		mov	r4, #4
 1318 000a 1A68     		ldr	r2, [r3]
 197:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1319              		.loc 1 197 0
 1320              		@ sp needed
 182:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG |= NavLightPWM_MASK;
 1321              		.loc 1 182 0
 1322 000c 2243     		orr	r2, r4
 1323 000e 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1324              		.loc 1 183 0
 1325 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1326              	.LVL88:
 188:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TriggerCommand(NavLightPWM_MASK, NavLightPWM_CMD_START);
 1327              		.loc 1 188 0
 1328 0014 201C     		mov	r0, r4
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 51


 1329 0016 1821     		mov	r1, #24
 1330 0018 FFF7FEFF 		bl	NavLightPWM_TriggerCommand
 1331              	.LVL89:
 197:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1332              		.loc 1 197 0
 1333 001c 10BD     		pop	{r4, pc}
 1334              	.L99:
 1335 001e C046     		.align	2
 1336              	.L98:
 1337 0020 00000540 		.word	1074069504
 1338              		.cfi_endproc
 1339              	.LFE1:
 1340              		.size	NavLightPWM_Enable, .-NavLightPWM_Enable
 1341              		.section	.text.NavLightPWM_Start,"ax",%progbits
 1342              		.align	1
 1343              		.global	NavLightPWM_Start
 1344              		.code	16
 1345              		.thumb_func
 1346              		.type	NavLightPWM_Start, %function
 1347              	NavLightPWM_Start:
 1348              	.LFB2:
 225:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1349              		.loc 1 225 0
 1350              		.cfi_startproc
 1351 0000 10B5     		push	{r4, lr}
 1352              		.cfi_def_cfa_offset 8
 1353              		.cfi_offset 4, -8
 1354              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/NavLightPWM.c ****     if (0u == NavLightPWM_initVar)
 1355              		.loc 1 226 0
 1356 0002 054C     		ldr	r4, .L103
 1357 0004 2378     		ldrb	r3, [r4]
 1358 0006 002B     		cmp	r3, #0
 1359 0008 03D1     		bne	.L101
 228:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_Init();
 1360              		.loc 1 228 0
 1361 000a FFF7FEFF 		bl	NavLightPWM_Init
 1362              	.LVL90:
 229:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_initVar = 1u;
 1363              		.loc 1 229 0
 1364 000e 0123     		mov	r3, #1
 1365 0010 2370     		strb	r3, [r4]
 1366              	.L101:
 232:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_Enable();
 1367              		.loc 1 232 0
 1368 0012 FFF7FEFF 		bl	NavLightPWM_Enable
 1369              	.LVL91:
 233:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1370              		.loc 1 233 0
 1371              		@ sp needed
 1372 0016 10BD     		pop	{r4, pc}
 1373              	.L104:
 1374              		.align	2
 1375              	.L103:
 1376 0018 00000000 		.word	.LANCHOR0
 1377              		.cfi_endproc
 1378              	.LFE2:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 52


 1379              		.size	NavLightPWM_Start, .-NavLightPWM_Start
 1380              		.section	.text.NavLightPWM_ReadStatus,"ax",%progbits
 1381              		.align	1
 1382              		.global	NavLightPWM_ReadStatus
 1383              		.code	16
 1384              		.thumb_func
 1385              		.type	NavLightPWM_ReadStatus, %function
 1386              	NavLightPWM_ReadStatus:
 1387              	.LFB34:
1260:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1388              		.loc 1 1260 0
 1389              		.cfi_startproc
1261:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
 1390              		.loc 1 1261 0
 1391 0000 034B     		ldr	r3, .L106
1263:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1392              		.loc 1 1263 0
 1393              		@ sp needed
1261:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
 1394              		.loc 1 1261 0
 1395 0002 1A68     		ldr	r2, [r3]
1262:.\Generated_Source\PSoC4/NavLightPWM.c ****             (NavLightPWM_STATUS_REG & NavLightPWM_STATUS_DOWN));
 1396              		.loc 1 1262 0
 1397 0004 1868     		ldr	r0, [r3]
 1398 0006 0123     		mov	r3, #1
 1399 0008 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
 1400              		.loc 1 1261 0
 1401 000a 930F     		lsr	r3, r2, #30
 1402 000c 1843     		orr	r0, r3
1263:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1403              		.loc 1 1263 0
 1404 000e 7047     		bx	lr
 1405              	.L107:
 1406              		.align	2
 1407              	.L106:
 1408 0010 84010540 		.word	1074069892
 1409              		.cfi_endproc
 1410              	.LFE34:
 1411              		.size	NavLightPWM_ReadStatus, .-NavLightPWM_ReadStatus
 1412              		.section	.text.NavLightPWM_SetInterruptMode,"ax",%progbits
 1413              		.align	1
 1414              		.global	NavLightPWM_SetInterruptMode
 1415              		.code	16
 1416              		.thumb_func
 1417              		.type	NavLightPWM_SetInterruptMode, %function
 1418              	NavLightPWM_SetInterruptMode:
 1419              	.LFB35:
1285:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1420              		.loc 1 1285 0
 1421              		.cfi_startproc
 1422              	.LVL92:
 1423              		.loc 1 1286 0
 1424 0000 014B     		ldr	r3, .L109
1287:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1425              		.loc 1 1287 0
 1426              		@ sp needed
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 53


1286:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_MASK_REG =  interruptMask;
 1427              		.loc 1 1286 0
 1428 0002 1860     		str	r0, [r3]
 1429              		.loc 1 1287 0
 1430 0004 7047     		bx	lr
 1431              	.L110:
 1432 0006 C046     		.align	2
 1433              	.L109:
 1434 0008 B8010540 		.word	1074069944
 1435              		.cfi_endproc
 1436              	.LFE35:
 1437              		.size	NavLightPWM_SetInterruptMode, .-NavLightPWM_SetInterruptMode
 1438              		.section	.text.NavLightPWM_GetInterruptSourceMasked,"ax",%progbits
 1439              		.align	1
 1440              		.global	NavLightPWM_GetInterruptSourceMasked
 1441              		.code	16
 1442              		.thumb_func
 1443              		.type	NavLightPWM_GetInterruptSourceMasked, %function
 1444              	NavLightPWM_GetInterruptSourceMasked:
 1445              	.LFB36:
1288:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1289:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1290:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1294:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1295:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1297:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1298:.\Generated_Source\PSoC4/NavLightPWM.c **** *   None
1299:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1300:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1301:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1303:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1306:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1446              		.loc 1 1308 0
 1447              		.cfi_startproc
1309:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_MASKED_REG);
 1448              		.loc 1 1309 0
 1449 0000 014B     		ldr	r3, .L112
1310:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1450              		.loc 1 1310 0
 1451              		@ sp needed
1309:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_MASKED_REG);
 1452              		.loc 1 1309 0
 1453 0002 1868     		ldr	r0, [r3]
 1454              		.loc 1 1310 0
 1455 0004 7047     		bx	lr
 1456              	.L113:
 1457 0006 C046     		.align	2
 1458              	.L112:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 54


 1459 0008 BC010540 		.word	1074069948
 1460              		.cfi_endproc
 1461              	.LFE36:
 1462              		.size	NavLightPWM_GetInterruptSourceMasked, .-NavLightPWM_GetInterruptSourceMasked
 1463              		.section	.text.NavLightPWM_GetInterruptSource,"ax",%progbits
 1464              		.align	1
 1465              		.global	NavLightPWM_GetInterruptSource
 1466              		.code	16
 1467              		.thumb_func
 1468              		.type	NavLightPWM_GetInterruptSource, %function
 1469              	NavLightPWM_GetInterruptSource:
 1470              	.LFB37:
1311:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1312:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1313:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_GetInterruptSource
1315:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1316:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1317:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1318:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1320:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1321:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1322:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1323:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1324:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1326:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1329:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1471              		.loc 1 1331 0
 1472              		.cfi_startproc
1332:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_REQ_REG);
 1473              		.loc 1 1332 0
 1474 0000 014B     		ldr	r3, .L115
1333:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1475              		.loc 1 1333 0
 1476              		@ sp needed
1332:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_REQ_REG);
 1477              		.loc 1 1332 0
 1478 0002 1868     		ldr	r0, [r3]
 1479              		.loc 1 1333 0
 1480 0004 7047     		bx	lr
 1481              	.L116:
 1482 0006 C046     		.align	2
 1483              	.L115:
 1484 0008 B0010540 		.word	1074069936
 1485              		.cfi_endproc
 1486              	.LFE37:
 1487              		.size	NavLightPWM_GetInterruptSource, .-NavLightPWM_GetInterruptSource
 1488              		.section	.text.NavLightPWM_ClearInterrupt,"ax",%progbits
 1489              		.align	1
 1490              		.global	NavLightPWM_ClearInterrupt
 1491              		.code	16
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 55


 1492              		.thumb_func
 1493              		.type	NavLightPWM_ClearInterrupt, %function
 1494              	NavLightPWM_ClearInterrupt:
 1495              	.LFB38:
1334:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1335:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1336:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ClearInterrupt
1338:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1340:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1341:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1343:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1344:.\Generated_Source\PSoC4/NavLightPWM.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1346:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1347:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1349:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1350:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1351:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1352:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1496              		.loc 1 1354 0
 1497              		.cfi_startproc
 1498              	.LVL93:
1355:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_REQ_REG = interruptMask;
 1499              		.loc 1 1355 0
 1500 0000 014B     		ldr	r3, .L118
1356:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1501              		.loc 1 1356 0
 1502              		@ sp needed
1355:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_REQ_REG = interruptMask;
 1503              		.loc 1 1355 0
 1504 0002 1860     		str	r0, [r3]
 1505              		.loc 1 1356 0
 1506 0004 7047     		bx	lr
 1507              	.L119:
 1508 0006 C046     		.align	2
 1509              	.L118:
 1510 0008 B0010540 		.word	1074069936
 1511              		.cfi_endproc
 1512              	.LFE38:
 1513              		.size	NavLightPWM_ClearInterrupt, .-NavLightPWM_ClearInterrupt
 1514              		.section	.text.NavLightPWM_SetInterrupt,"ax",%progbits
 1515              		.align	1
 1516              		.global	NavLightPWM_SetInterrupt
 1517              		.code	16
 1518              		.thumb_func
 1519              		.type	NavLightPWM_SetInterrupt, %function
 1520              	NavLightPWM_SetInterrupt:
 1521              	.LFB39:
1357:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1358:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1359:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 56


1360:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetInterrupt
1361:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1363:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1364:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1366:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1367:.\Generated_Source\PSoC4/NavLightPWM.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1369:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1372:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1373:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1374:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1375:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetInterrupt(uint32 interruptMask)
1377:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1522              		.loc 1 1377 0
 1523              		.cfi_startproc
 1524              	.LVL94:
1378:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_SET_REG = interruptMask;
 1525              		.loc 1 1378 0
 1526 0000 014B     		ldr	r3, .L121
1379:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1527              		.loc 1 1379 0
 1528              		@ sp needed
1378:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_SET_REG = interruptMask;
 1529              		.loc 1 1378 0
 1530 0002 1860     		str	r0, [r3]
 1531              		.loc 1 1379 0
 1532 0004 7047     		bx	lr
 1533              	.L122:
 1534 0006 C046     		.align	2
 1535              	.L121:
 1536 0008 B4010540 		.word	1074069940
 1537              		.cfi_endproc
 1538              	.LFE39:
 1539              		.size	NavLightPWM_SetInterrupt, .-NavLightPWM_SetInterrupt
 1540              		.global	NavLightPWM_initVar
 1541              		.bss
 1542              		.set	.LANCHOR0,. + 0
 1543              		.type	NavLightPWM_initVar, %object
 1544              		.size	NavLightPWM_initVar, 1
 1545              	NavLightPWM_initVar:
 1546 0000 00       		.space	1
 1547              		.text
 1548              	.Letext0:
 1549              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1550              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1551              		.section	.debug_info,"",%progbits
 1552              	.Ldebug_info0:
 1553 0000 57090000 		.4byte	0x957
 1554 0004 0400     		.2byte	0x4
 1555 0006 00000000 		.4byte	.Ldebug_abbrev0
 1556 000a 04       		.byte	0x4
 1557 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 57


 1558 000c 23040000 		.4byte	.LASF76
 1559 0010 01       		.byte	0x1
 1560 0011 F6040000 		.4byte	.LASF77
 1561 0015 2F030000 		.4byte	.LASF78
 1562 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1563 001d 00000000 		.4byte	0
 1564 0021 00000000 		.4byte	.Ldebug_line0
 1565 0025 02       		.uleb128 0x2
 1566 0026 01       		.byte	0x1
 1567 0027 06       		.byte	0x6
 1568 0028 E9000000 		.4byte	.LASF0
 1569 002c 02       		.uleb128 0x2
 1570 002d 01       		.byte	0x1
 1571 002e 08       		.byte	0x8
 1572 002f B2040000 		.4byte	.LASF1
 1573 0033 02       		.uleb128 0x2
 1574 0034 02       		.byte	0x2
 1575 0035 05       		.byte	0x5
 1576 0036 EC040000 		.4byte	.LASF2
 1577 003a 02       		.uleb128 0x2
 1578 003b 02       		.byte	0x2
 1579 003c 07       		.byte	0x7
 1580 003d B3020000 		.4byte	.LASF3
 1581 0041 02       		.uleb128 0x2
 1582 0042 04       		.byte	0x4
 1583 0043 05       		.byte	0x5
 1584 0044 64010000 		.4byte	.LASF4
 1585 0048 02       		.uleb128 0x2
 1586 0049 04       		.byte	0x4
 1587 004a 07       		.byte	0x7
 1588 004b 53020000 		.4byte	.LASF5
 1589 004f 02       		.uleb128 0x2
 1590 0050 08       		.byte	0x8
 1591 0051 05       		.byte	0x5
 1592 0052 DB000000 		.4byte	.LASF6
 1593 0056 02       		.uleb128 0x2
 1594 0057 08       		.byte	0x8
 1595 0058 07       		.byte	0x7
 1596 0059 81000000 		.4byte	.LASF7
 1597 005d 03       		.uleb128 0x3
 1598 005e 04       		.byte	0x4
 1599 005f 05       		.byte	0x5
 1600 0060 696E7400 		.ascii	"int\000"
 1601 0064 02       		.uleb128 0x2
 1602 0065 04       		.byte	0x4
 1603 0066 07       		.byte	0x7
 1604 0067 22020000 		.4byte	.LASF8
 1605 006b 04       		.uleb128 0x4
 1606 006c 87010000 		.4byte	.LASF9
 1607 0070 02       		.byte	0x2
 1608 0071 A1       		.byte	0xa1
 1609 0072 2C000000 		.4byte	0x2c
 1610 0076 04       		.uleb128 0x4
 1611 0077 AB010000 		.4byte	.LASF10
 1612 007b 02       		.byte	0x2
 1613 007c A3       		.byte	0xa3
 1614 007d 48000000 		.4byte	0x48
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 58


 1615 0081 02       		.uleb128 0x2
 1616 0082 04       		.byte	0x4
 1617 0083 04       		.byte	0x4
 1618 0084 13040000 		.4byte	.LASF11
 1619 0088 02       		.uleb128 0x2
 1620 0089 08       		.byte	0x8
 1621 008a 04       		.byte	0x4
 1622 008b 8D010000 		.4byte	.LASF12
 1623 008f 02       		.uleb128 0x2
 1624 0090 01       		.byte	0x1
 1625 0091 08       		.byte	0x8
 1626 0092 82050000 		.4byte	.LASF13
 1627 0096 05       		.uleb128 0x5
 1628 0097 93030000 		.4byte	.LASF14
 1629 009b 02       		.byte	0x2
 1630 009c 4D01     		.2byte	0x14d
 1631 009e A2000000 		.4byte	0xa2
 1632 00a2 06       		.uleb128 0x6
 1633 00a3 76000000 		.4byte	0x76
 1634 00a7 02       		.uleb128 0x2
 1635 00a8 04       		.byte	0x4
 1636 00a9 07       		.byte	0x7
 1637 00aa A5030000 		.4byte	.LASF15
 1638 00ae 07       		.uleb128 0x7
 1639 00af 34000000 		.4byte	.LASF16
 1640 00b3 01       		.byte	0x1
 1641 00b4 6102     		.2byte	0x261
 1642 00b6 01       		.byte	0x1
 1643 00b7 C8000000 		.4byte	0xc8
 1644 00bb 08       		.uleb128 0x8
 1645 00bc 18000000 		.4byte	.LASF18
 1646 00c0 01       		.byte	0x1
 1647 00c1 6102     		.2byte	0x261
 1648 00c3 76000000 		.4byte	0x76
 1649 00c7 00       		.byte	0
 1650 00c8 07       		.uleb128 0x7
 1651 00c9 6E020000 		.4byte	.LASF17
 1652 00cd 01       		.byte	0x1
 1653 00ce 0405     		.2byte	0x504
 1654 00d0 01       		.byte	0x1
 1655 00d1 E2000000 		.4byte	0xe2
 1656 00d5 08       		.uleb128 0x8
 1657 00d6 36050000 		.4byte	.LASF19
 1658 00da 01       		.byte	0x1
 1659 00db 0405     		.2byte	0x504
 1660 00dd 76000000 		.4byte	0x76
 1661 00e1 00       		.byte	0
 1662 00e2 07       		.uleb128 0x7
 1663 00e3 00000000 		.4byte	.LASF20
 1664 00e7 01       		.byte	0x1
 1665 00e8 AF02     		.2byte	0x2af
 1666 00ea 01       		.byte	0x1
 1667 00eb FC000000 		.4byte	0xfc
 1668 00ef 08       		.uleb128 0x8
 1669 00f0 7A000000 		.4byte	.LASF21
 1670 00f4 01       		.byte	0x1
 1671 00f5 AF02     		.2byte	0x2af
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 59


 1672 00f7 76000000 		.4byte	0x76
 1673 00fb 00       		.byte	0
 1674 00fc 07       		.uleb128 0x7
 1675 00fd 38060000 		.4byte	.LASF22
 1676 0101 01       		.byte	0x1
 1677 0102 4303     		.2byte	0x343
 1678 0104 01       		.byte	0x1
 1679 0105 16010000 		.4byte	0x116
 1680 0109 08       		.uleb128 0x8
 1681 010a D8030000 		.4byte	.LASF23
 1682 010e 01       		.byte	0x1
 1683 010f 4303     		.2byte	0x343
 1684 0111 76000000 		.4byte	0x76
 1685 0115 00       		.byte	0
 1686 0116 09       		.uleb128 0x9
 1687 0117 A7050000 		.4byte	.LASF24
 1688 011b 01       		.byte	0x1
 1689 011c 26       		.byte	0x26
 1690 011d 00000000 		.4byte	.LFB0
 1691 0121 50000000 		.4byte	.LFE0-.LFB0
 1692 0125 01       		.uleb128 0x1
 1693 0126 9C       		.byte	0x9c
 1694 0127 90010000 		.4byte	0x190
 1695 012b 0A       		.uleb128 0xa
 1696 012c AE000000 		.4byte	0xae
 1697 0130 0A000000 		.4byte	.LBB10
 1698 0134 00000000 		.4byte	.Ldebug_ranges0+0
 1699 0138 01       		.byte	0x1
 1700 0139 67       		.byte	0x67
 1701 013a 45010000 		.4byte	0x145
 1702 013e 0B       		.uleb128 0xb
 1703 013f BB000000 		.4byte	0xbb
 1704 0143 00       		.byte	0
 1705 0144 00       		.byte	0
 1706 0145 0C       		.uleb128 0xc
 1707 0146 C8000000 		.4byte	0xc8
 1708 014a 1C000000 		.4byte	.LBB14
 1709 014e 04000000 		.4byte	.LBE14-.LBB14
 1710 0152 01       		.byte	0x1
 1711 0153 77       		.byte	0x77
 1712 0154 5F010000 		.4byte	0x15f
 1713 0158 0B       		.uleb128 0xb
 1714 0159 D5000000 		.4byte	0xd5
 1715 015d 00       		.byte	0
 1716 015e 00       		.byte	0
 1717 015f 0C       		.uleb128 0xc
 1718 0160 E2000000 		.4byte	0xe2
 1719 0164 26000000 		.4byte	.LBB16
 1720 0168 06000000 		.4byte	.LBE16-.LBB16
 1721 016c 01       		.byte	0x1
 1722 016d 92       		.byte	0x92
 1723 016e 79010000 		.4byte	0x179
 1724 0172 0B       		.uleb128 0xb
 1725 0173 EF000000 		.4byte	0xef
 1726 0177 64       		.byte	0x64
 1727 0178 00       		.byte	0
 1728 0179 0D       		.uleb128 0xd
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 60


 1729 017a FC000000 		.4byte	0xfc
 1730 017e 2C000000 		.4byte	.LBB18
 1731 0182 06000000 		.4byte	.LBE18-.LBB18
 1732 0186 01       		.byte	0x1
 1733 0187 93       		.byte	0x93
 1734 0188 0B       		.uleb128 0xb
 1735 0189 09010000 		.4byte	0x109
 1736 018d 32       		.byte	0x32
 1737 018e 00       		.byte	0
 1738 018f 00       		.byte	0
 1739 0190 09       		.uleb128 0x9
 1740 0191 A2020000 		.4byte	.LASF25
 1741 0195 01       		.byte	0x1
 1742 0196 FA       		.byte	0xfa
 1743 0197 00000000 		.4byte	.LFB3
 1744 019b 1C000000 		.4byte	.LFE3-.LFB3
 1745 019f 01       		.uleb128 0x1
 1746 01a0 9C       		.byte	0x9c
 1747 01a1 C7010000 		.4byte	0x1c7
 1748 01a5 0E       		.uleb128 0xe
 1749 01a6 0C060000 		.4byte	.LASF27
 1750 01aa 01       		.byte	0x1
 1751 01ab FC       		.byte	0xfc
 1752 01ac 6B000000 		.4byte	0x6b
 1753 01b0 00000000 		.4byte	.LLST0
 1754 01b4 0F       		.uleb128 0xf
 1755 01b5 06000000 		.4byte	.LVL4
 1756 01b9 42090000 		.4byte	0x942
 1757 01bd 0F       		.uleb128 0xf
 1758 01be 14000000 		.4byte	.LVL5
 1759 01c2 4D090000 		.4byte	0x94d
 1760 01c6 00       		.byte	0
 1761 01c7 10       		.uleb128 0x10
 1762 01c8 0E020000 		.4byte	.LASF26
 1763 01cc 01       		.byte	0x1
 1764 01cd 1F01     		.2byte	0x11f
 1765 01cf 00000000 		.4byte	.LFB4
 1766 01d3 28000000 		.4byte	.LFE4-.LFB4
 1767 01d7 01       		.uleb128 0x1
 1768 01d8 9C       		.byte	0x9c
 1769 01d9 10020000 		.4byte	0x210
 1770 01dd 11       		.uleb128 0x11
 1771 01de 87050000 		.4byte	.LASF29
 1772 01e2 01       		.byte	0x1
 1773 01e3 1F01     		.2byte	0x11f
 1774 01e5 76000000 		.4byte	0x76
 1775 01e9 13000000 		.4byte	.LLST1
 1776 01ed 12       		.uleb128 0x12
 1777 01ee 0C060000 		.4byte	.LASF27
 1778 01f2 01       		.byte	0x1
 1779 01f3 2101     		.2byte	0x121
 1780 01f5 6B000000 		.4byte	0x6b
 1781 01f9 3F000000 		.4byte	.LLST2
 1782 01fd 0F       		.uleb128 0xf
 1783 01fe 08000000 		.4byte	.LVL7
 1784 0202 42090000 		.4byte	0x942
 1785 0206 0F       		.uleb128 0xf
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 61


 1786 0207 1C000000 		.4byte	.LVL9
 1787 020b 4D090000 		.4byte	0x94d
 1788 020f 00       		.byte	0
 1789 0210 10       		.uleb128 0x10
 1790 0211 E1020000 		.4byte	.LASF28
 1791 0215 01       		.byte	0x1
 1792 0216 4001     		.2byte	0x140
 1793 0218 00000000 		.4byte	.LFB5
 1794 021c 28000000 		.4byte	.LFE5-.LFB5
 1795 0220 01       		.uleb128 0x1
 1796 0221 9C       		.byte	0x9c
 1797 0222 59020000 		.4byte	0x259
 1798 0226 11       		.uleb128 0x11
 1799 0227 B7000000 		.4byte	.LASF30
 1800 022b 01       		.byte	0x1
 1801 022c 4001     		.2byte	0x140
 1802 022e 76000000 		.4byte	0x76
 1803 0232 52000000 		.4byte	.LLST3
 1804 0236 12       		.uleb128 0x12
 1805 0237 0C060000 		.4byte	.LASF27
 1806 023b 01       		.byte	0x1
 1807 023c 4201     		.2byte	0x142
 1808 023e 6B000000 		.4byte	0x6b
 1809 0242 7E000000 		.4byte	.LLST4
 1810 0246 0F       		.uleb128 0xf
 1811 0247 08000000 		.4byte	.LVL11
 1812 024b 42090000 		.4byte	0x942
 1813 024f 0F       		.uleb128 0xf
 1814 0250 1C000000 		.4byte	.LVL13
 1815 0254 4D090000 		.4byte	0x94d
 1816 0258 00       		.byte	0
 1817 0259 10       		.uleb128 0x10
 1818 025a CC010000 		.4byte	.LASF31
 1819 025e 01       		.byte	0x1
 1820 025f 6501     		.2byte	0x165
 1821 0261 00000000 		.4byte	.LFB6
 1822 0265 28000000 		.4byte	.LFE6-.LFB6
 1823 0269 01       		.uleb128 0x1
 1824 026a 9C       		.byte	0x9c
 1825 026b A2020000 		.4byte	0x2a2
 1826 026f 11       		.uleb128 0x11
 1827 0270 19040000 		.4byte	.LASF32
 1828 0274 01       		.byte	0x1
 1829 0275 6501     		.2byte	0x165
 1830 0277 76000000 		.4byte	0x76
 1831 027b 91000000 		.4byte	.LLST5
 1832 027f 12       		.uleb128 0x12
 1833 0280 0C060000 		.4byte	.LASF27
 1834 0284 01       		.byte	0x1
 1835 0285 6701     		.2byte	0x167
 1836 0287 6B000000 		.4byte	0x6b
 1837 028b BD000000 		.4byte	.LLST6
 1838 028f 0F       		.uleb128 0xf
 1839 0290 08000000 		.4byte	.LVL15
 1840 0294 42090000 		.4byte	0x942
 1841 0298 0F       		.uleb128 0xf
 1842 0299 1C000000 		.4byte	.LVL17
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 62


 1843 029d 4D090000 		.4byte	0x94d
 1844 02a1 00       		.byte	0
 1845 02a2 10       		.uleb128 0x10
 1846 02a3 94010000 		.4byte	.LASF33
 1847 02a7 01       		.byte	0x1
 1848 02a8 8501     		.2byte	0x185
 1849 02aa 00000000 		.4byte	.LFB7
 1850 02ae 2C000000 		.4byte	.LFE7-.LFB7
 1851 02b2 01       		.uleb128 0x1
 1852 02b3 9C       		.byte	0x9c
 1853 02b4 EB020000 		.4byte	0x2eb
 1854 02b8 11       		.uleb128 0x11
 1855 02b9 0E030000 		.4byte	.LASF34
 1856 02bd 01       		.byte	0x1
 1857 02be 8501     		.2byte	0x185
 1858 02c0 76000000 		.4byte	0x76
 1859 02c4 D0000000 		.4byte	.LLST7
 1860 02c8 12       		.uleb128 0x12
 1861 02c9 0C060000 		.4byte	.LASF27
 1862 02cd 01       		.byte	0x1
 1863 02ce 8701     		.2byte	0x187
 1864 02d0 6B000000 		.4byte	0x6b
 1865 02d4 FC000000 		.4byte	.LLST8
 1866 02d8 0F       		.uleb128 0xf
 1867 02d9 08000000 		.4byte	.LVL19
 1868 02dd 42090000 		.4byte	0x942
 1869 02e1 0F       		.uleb128 0xf
 1870 02e2 22000000 		.4byte	.LVL21
 1871 02e6 4D090000 		.4byte	0x94d
 1872 02ea 00       		.byte	0
 1873 02eb 10       		.uleb128 0x10
 1874 02ec 8B020000 		.4byte	.LASF35
 1875 02f0 01       		.byte	0x1
 1876 02f1 BB01     		.2byte	0x1bb
 1877 02f3 00000000 		.4byte	.LFB8
 1878 02f7 10000000 		.4byte	.LFE8-.LFB8
 1879 02fb 01       		.uleb128 0x1
 1880 02fc 9C       		.byte	0x9c
 1881 02fd 12030000 		.4byte	0x312
 1882 0301 11       		.uleb128 0x11
 1883 0302 65020000 		.4byte	.LASF36
 1884 0306 01       		.byte	0x1
 1885 0307 BB01     		.2byte	0x1bb
 1886 0309 76000000 		.4byte	0x76
 1887 030d 0F010000 		.4byte	.LLST9
 1888 0311 00       		.byte	0
 1889 0312 10       		.uleb128 0x10
 1890 0313 F8030000 		.4byte	.LASF37
 1891 0317 01       		.byte	0x1
 1892 0318 DF01     		.2byte	0x1df
 1893 031a 00000000 		.4byte	.LFB9
 1894 031e 28000000 		.4byte	.LFE9-.LFB9
 1895 0322 01       		.uleb128 0x1
 1896 0323 9C       		.byte	0x9c
 1897 0324 5B030000 		.4byte	0x35b
 1898 0328 11       		.uleb128 0x11
 1899 0329 AE030000 		.4byte	.LASF38
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 63


 1900 032d 01       		.byte	0x1
 1901 032e DF01     		.2byte	0x1df
 1902 0330 76000000 		.4byte	0x76
 1903 0334 30010000 		.4byte	.LLST10
 1904 0338 12       		.uleb128 0x12
 1905 0339 0C060000 		.4byte	.LASF27
 1906 033d 01       		.byte	0x1
 1907 033e E101     		.2byte	0x1e1
 1908 0340 6B000000 		.4byte	0x6b
 1909 0344 5C010000 		.4byte	.LLST11
 1910 0348 0F       		.uleb128 0xf
 1911 0349 08000000 		.4byte	.LVL25
 1912 034d 42090000 		.4byte	0x942
 1913 0351 0F       		.uleb128 0xf
 1914 0352 22000000 		.4byte	.LVL27
 1915 0356 4D090000 		.4byte	0x94d
 1916 035a 00       		.byte	0
 1917 035b 10       		.uleb128 0x10
 1918 035c BE000000 		.4byte	.LASF39
 1919 0360 01       		.byte	0x1
 1920 0361 0102     		.2byte	0x201
 1921 0363 00000000 		.4byte	.LFB10
 1922 0367 28000000 		.4byte	.LFE10-.LFB10
 1923 036b 01       		.uleb128 0x1
 1924 036c 9C       		.byte	0x9c
 1925 036d A4030000 		.4byte	0x3a4
 1926 0371 11       		.uleb128 0x11
 1927 0372 DB040000 		.4byte	.LASF40
 1928 0376 01       		.byte	0x1
 1929 0377 0102     		.2byte	0x201
 1930 0379 76000000 		.4byte	0x76
 1931 037d 6F010000 		.4byte	.LLST12
 1932 0381 12       		.uleb128 0x12
 1933 0382 0C060000 		.4byte	.LASF27
 1934 0386 01       		.byte	0x1
 1935 0387 0302     		.2byte	0x203
 1936 0389 6B000000 		.4byte	0x6b
 1937 038d 9B010000 		.4byte	.LLST13
 1938 0391 0F       		.uleb128 0xf
 1939 0392 08000000 		.4byte	.LVL29
 1940 0396 42090000 		.4byte	0x942
 1941 039a 0F       		.uleb128 0xf
 1942 039b 22000000 		.4byte	.LVL31
 1943 039f 4D090000 		.4byte	0x94d
 1944 03a3 00       		.byte	0
 1945 03a4 10       		.uleb128 0x10
 1946 03a5 1D060000 		.4byte	.LASF41
 1947 03a9 01       		.byte	0x1
 1948 03aa 2202     		.2byte	0x222
 1949 03ac 00000000 		.4byte	.LFB11
 1950 03b0 2C000000 		.4byte	.LFE11-.LFB11
 1951 03b4 01       		.uleb128 0x1
 1952 03b5 9C       		.byte	0x9c
 1953 03b6 ED030000 		.4byte	0x3ed
 1954 03ba 11       		.uleb128 0x11
 1955 03bb 05020000 		.4byte	.LASF42
 1956 03bf 01       		.byte	0x1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 64


 1957 03c0 2202     		.2byte	0x222
 1958 03c2 76000000 		.4byte	0x76
 1959 03c6 AE010000 		.4byte	.LLST14
 1960 03ca 12       		.uleb128 0x12
 1961 03cb 0C060000 		.4byte	.LASF27
 1962 03cf 01       		.byte	0x1
 1963 03d0 2402     		.2byte	0x224
 1964 03d2 6B000000 		.4byte	0x6b
 1965 03d6 DA010000 		.4byte	.LLST15
 1966 03da 0F       		.uleb128 0xf
 1967 03db 08000000 		.4byte	.LVL33
 1968 03df 42090000 		.4byte	0x942
 1969 03e3 0F       		.uleb128 0xf
 1970 03e4 20000000 		.4byte	.LVL35
 1971 03e8 4D090000 		.4byte	0x94d
 1972 03ec 00       		.byte	0
 1973 03ed 10       		.uleb128 0x10
 1974 03ee 0D010000 		.4byte	.LASF43
 1975 03f2 01       		.byte	0x1
 1976 03f3 4302     		.2byte	0x243
 1977 03f5 00000000 		.4byte	.LFB12
 1978 03f9 28000000 		.4byte	.LFE12-.LFB12
 1979 03fd 01       		.uleb128 0x1
 1980 03fe 9C       		.byte	0x9c
 1981 03ff 36040000 		.4byte	0x436
 1982 0403 11       		.uleb128 0x11
 1983 0404 E5010000 		.4byte	.LASF44
 1984 0408 01       		.byte	0x1
 1985 0409 4302     		.2byte	0x243
 1986 040b 76000000 		.4byte	0x76
 1987 040f ED010000 		.4byte	.LLST16
 1988 0413 12       		.uleb128 0x12
 1989 0414 0C060000 		.4byte	.LASF27
 1990 0418 01       		.byte	0x1
 1991 0419 4502     		.2byte	0x245
 1992 041b 6B000000 		.4byte	0x6b
 1993 041f 19020000 		.4byte	.LLST17
 1994 0423 0F       		.uleb128 0xf
 1995 0424 08000000 		.4byte	.LVL37
 1996 0428 42090000 		.4byte	0x942
 1997 042c 0F       		.uleb128 0xf
 1998 042d 1C000000 		.4byte	.LVL39
 1999 0431 4D090000 		.4byte	0x94d
 2000 0435 00       		.byte	0
 2001 0436 13       		.uleb128 0x13
 2002 0437 AE000000 		.4byte	0xae
 2003 043b 00000000 		.4byte	.LFB13
 2004 043f 0C000000 		.4byte	.LFE13-.LFB13
 2005 0443 01       		.uleb128 0x1
 2006 0444 9C       		.byte	0x9c
 2007 0445 53040000 		.4byte	0x453
 2008 0449 14       		.uleb128 0x14
 2009 044a BB000000 		.4byte	0xbb
 2010 044e 2C020000 		.4byte	.LLST18
 2011 0452 00       		.byte	0
 2012 0453 15       		.uleb128 0x15
 2013 0454 B8050000 		.4byte	.LASF47
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 65


 2014 0458 01       		.byte	0x1
 2015 0459 7502     		.2byte	0x275
 2016 045b 76000000 		.4byte	0x76
 2017 045f 00000000 		.4byte	.LFB14
 2018 0463 0C000000 		.4byte	.LFE14-.LFB14
 2019 0467 01       		.uleb128 0x1
 2020 0468 9C       		.byte	0x9c
 2021 0469 10       		.uleb128 0x10
 2022 046a BD030000 		.4byte	.LASF45
 2023 046e 01       		.byte	0x1
 2024 046f 9202     		.2byte	0x292
 2025 0471 00000000 		.4byte	.LFB15
 2026 0475 28000000 		.4byte	.LFE15-.LFB15
 2027 0479 01       		.uleb128 0x1
 2028 047a 9C       		.byte	0x9c
 2029 047b B2040000 		.4byte	0x4b2
 2030 047f 11       		.uleb128 0x11
 2031 0480 99030000 		.4byte	.LASF46
 2032 0484 01       		.byte	0x1
 2033 0485 9202     		.2byte	0x292
 2034 0487 76000000 		.4byte	0x76
 2035 048b 4D020000 		.4byte	.LLST19
 2036 048f 12       		.uleb128 0x12
 2037 0490 0C060000 		.4byte	.LASF27
 2038 0494 01       		.byte	0x1
 2039 0495 9402     		.2byte	0x294
 2040 0497 6B000000 		.4byte	0x6b
 2041 049b 79020000 		.4byte	.LLST20
 2042 049f 0F       		.uleb128 0xf
 2043 04a0 08000000 		.4byte	.LVL43
 2044 04a4 42090000 		.4byte	0x942
 2045 04a8 0F       		.uleb128 0xf
 2046 04a9 1C000000 		.4byte	.LVL45
 2047 04ad 4D090000 		.4byte	0x94d
 2048 04b1 00       		.byte	0
 2049 04b2 13       		.uleb128 0x13
 2050 04b3 E2000000 		.4byte	0xe2
 2051 04b7 00000000 		.4byte	.LFB16
 2052 04bb 0C000000 		.4byte	.LFE16-.LFB16
 2053 04bf 01       		.uleb128 0x1
 2054 04c0 9C       		.byte	0x9c
 2055 04c1 CF040000 		.4byte	0x4cf
 2056 04c5 14       		.uleb128 0x14
 2057 04c6 EF000000 		.4byte	0xef
 2058 04ca 8C020000 		.4byte	.LLST21
 2059 04ce 00       		.byte	0
 2060 04cf 15       		.uleb128 0x15
 2061 04d0 6B050000 		.4byte	.LASF48
 2062 04d4 01       		.byte	0x1
 2063 04d5 C302     		.2byte	0x2c3
 2064 04d7 76000000 		.4byte	0x76
 2065 04db 00000000 		.4byte	.LFB17
 2066 04df 0C000000 		.4byte	.LFE17-.LFB17
 2067 04e3 01       		.uleb128 0x1
 2068 04e4 9C       		.byte	0x9c
 2069 04e5 10       		.uleb128 0x10
 2070 04e6 4D000000 		.4byte	.LASF49
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 66


 2071 04ea 01       		.byte	0x1
 2072 04eb DD02     		.2byte	0x2dd
 2073 04ed 00000000 		.4byte	.LFB18
 2074 04f1 24000000 		.4byte	.LFE18-.LFB18
 2075 04f5 01       		.uleb128 0x1
 2076 04f6 9C       		.byte	0x9c
 2077 04f7 2E050000 		.4byte	0x52e
 2078 04fb 11       		.uleb128 0x11
 2079 04fc 65060000 		.4byte	.LASF50
 2080 0500 01       		.byte	0x1
 2081 0501 DD02     		.2byte	0x2dd
 2082 0503 76000000 		.4byte	0x76
 2083 0507 AD020000 		.4byte	.LLST22
 2084 050b 12       		.uleb128 0x12
 2085 050c 0C060000 		.4byte	.LASF27
 2086 0510 01       		.byte	0x1
 2087 0511 DF02     		.2byte	0x2df
 2088 0513 6B000000 		.4byte	0x6b
 2089 0517 D9020000 		.4byte	.LLST23
 2090 051b 0F       		.uleb128 0xf
 2091 051c 08000000 		.4byte	.LVL49
 2092 0520 42090000 		.4byte	0x942
 2093 0524 0F       		.uleb128 0xf
 2094 0525 1E000000 		.4byte	.LVL50
 2095 0529 4D090000 		.4byte	0x94d
 2096 052d 00       		.byte	0
 2097 052e 10       		.uleb128 0x10
 2098 052f EA010000 		.4byte	.LASF51
 2099 0533 01       		.byte	0x1
 2100 0534 F802     		.2byte	0x2f8
 2101 0536 00000000 		.4byte	.LFB19
 2102 053a 0C000000 		.4byte	.LFE19-.LFB19
 2103 053e 01       		.uleb128 0x1
 2104 053f 9C       		.byte	0x9c
 2105 0540 55050000 		.4byte	0x555
 2106 0544 11       		.uleb128 0x11
 2107 0545 70060000 		.4byte	.LASF52
 2108 0549 01       		.byte	0x1
 2109 054a F802     		.2byte	0x2f8
 2110 054c 76000000 		.4byte	0x76
 2111 0550 EC020000 		.4byte	.LLST24
 2112 0554 00       		.byte	0
 2113 0555 15       		.uleb128 0x15
 2114 0556 6D010000 		.4byte	.LASF53
 2115 055a 01       		.byte	0x1
 2116 055b 0C03     		.2byte	0x30c
 2117 055d 76000000 		.4byte	0x76
 2118 0561 00000000 		.4byte	.LFB20
 2119 0565 0C000000 		.4byte	.LFE20-.LFB20
 2120 0569 01       		.uleb128 0x1
 2121 056a 9C       		.byte	0x9c
 2122 056b 10       		.uleb128 0x10
 2123 056c B2010000 		.4byte	.LASF54
 2124 0570 01       		.byte	0x1
 2125 0571 2603     		.2byte	0x326
 2126 0573 00000000 		.4byte	.LFB21
 2127 0577 28000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 67


 2128 057b 01       		.uleb128 0x1
 2129 057c 9C       		.byte	0x9c
 2130 057d B4050000 		.4byte	0x5b4
 2131 0581 11       		.uleb128 0x11
 2132 0582 65060000 		.4byte	.LASF50
 2133 0586 01       		.byte	0x1
 2134 0587 2603     		.2byte	0x326
 2135 0589 76000000 		.4byte	0x76
 2136 058d 0D030000 		.4byte	.LLST25
 2137 0591 12       		.uleb128 0x12
 2138 0592 0C060000 		.4byte	.LASF27
 2139 0596 01       		.byte	0x1
 2140 0597 2803     		.2byte	0x328
 2141 0599 6B000000 		.4byte	0x6b
 2142 059d 39030000 		.4byte	.LLST26
 2143 05a1 0F       		.uleb128 0xf
 2144 05a2 08000000 		.4byte	.LVL55
 2145 05a6 42090000 		.4byte	0x942
 2146 05aa 0F       		.uleb128 0xf
 2147 05ab 22000000 		.4byte	.LVL57
 2148 05af 4D090000 		.4byte	0x94d
 2149 05b3 00       		.byte	0
 2150 05b4 13       		.uleb128 0x13
 2151 05b5 FC000000 		.4byte	0xfc
 2152 05b9 00000000 		.4byte	.LFB22
 2153 05bd 0C000000 		.4byte	.LFE22-.LFB22
 2154 05c1 01       		.uleb128 0x1
 2155 05c2 9C       		.byte	0x9c
 2156 05c3 D1050000 		.4byte	0x5d1
 2157 05c7 14       		.uleb128 0x14
 2158 05c8 09010000 		.4byte	0x109
 2159 05cc 4C030000 		.4byte	.LLST27
 2160 05d0 00       		.byte	0
 2161 05d1 15       		.uleb128 0x15
 2162 05d2 E0030000 		.4byte	.LASF55
 2163 05d6 01       		.byte	0x1
 2164 05d7 6E03     		.2byte	0x36e
 2165 05d9 76000000 		.4byte	0x76
 2166 05dd 00000000 		.4byte	.LFB23
 2167 05e1 0C000000 		.4byte	.LFE23-.LFB23
 2168 05e5 01       		.uleb128 0x1
 2169 05e6 9C       		.byte	0x9c
 2170 05e7 10       		.uleb128 0x10
 2171 05e8 37020000 		.4byte	.LASF56
 2172 05ec 01       		.byte	0x1
 2173 05ed 9C03     		.2byte	0x39c
 2174 05ef 00000000 		.4byte	.LFB24
 2175 05f3 0C000000 		.4byte	.LFE24-.LFB24
 2176 05f7 01       		.uleb128 0x1
 2177 05f8 9C       		.byte	0x9c
 2178 05f9 0E060000 		.4byte	0x60e
 2179 05fd 11       		.uleb128 0x11
 2180 05fe D0050000 		.4byte	.LASF57
 2181 0602 01       		.byte	0x1
 2182 0603 9C03     		.2byte	0x39c
 2183 0605 76000000 		.4byte	0x76
 2184 0609 6D030000 		.4byte	.LLST28
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 68


 2185 060d 00       		.byte	0
 2186 060e 15       		.uleb128 0x15
 2187 060f 8C050000 		.4byte	.LASF58
 2188 0613 01       		.byte	0x1
 2189 0614 C503     		.2byte	0x3c5
 2190 0616 76000000 		.4byte	0x76
 2191 061a 00000000 		.4byte	.LFB25
 2192 061e 0C000000 		.4byte	.LFE25-.LFB25
 2193 0622 01       		.uleb128 0x1
 2194 0623 9C       		.byte	0x9c
 2195 0624 15       		.uleb128 0x15
 2196 0625 F5000000 		.4byte	.LASF59
 2197 0629 01       		.byte	0x1
 2198 062a F303     		.2byte	0x3f3
 2199 062c 76000000 		.4byte	0x76
 2200 0630 00000000 		.4byte	.LFB26
 2201 0634 0C000000 		.4byte	.LFE26-.LFB26
 2202 0638 01       		.uleb128 0x1
 2203 0639 9C       		.byte	0x9c
 2204 063a 15       		.uleb128 0x15
 2205 063b C6020000 		.4byte	.LASF60
 2206 063f 01       		.byte	0x1
 2207 0640 0804     		.2byte	0x408
 2208 0642 76000000 		.4byte	0x76
 2209 0646 00000000 		.4byte	.LFB27
 2210 064a 0C000000 		.4byte	.LFE27-.LFB27
 2211 064e 01       		.uleb128 0x1
 2212 064f 9C       		.byte	0x9c
 2213 0650 10       		.uleb128 0x10
 2214 0651 C0040000 		.4byte	.LASF61
 2215 0655 01       		.byte	0x1
 2216 0656 2304     		.2byte	0x423
 2217 0658 00000000 		.4byte	.LFB28
 2218 065c 24000000 		.4byte	.LFE28-.LFB28
 2219 0660 01       		.uleb128 0x1
 2220 0661 9C       		.byte	0x9c
 2221 0662 99060000 		.4byte	0x699
 2222 0666 11       		.uleb128 0x11
 2223 0667 5F050000 		.4byte	.LASF62
 2224 066b 01       		.byte	0x1
 2225 066c 2304     		.2byte	0x423
 2226 066e 76000000 		.4byte	0x76
 2227 0672 8E030000 		.4byte	.LLST29
 2228 0676 12       		.uleb128 0x12
 2229 0677 0C060000 		.4byte	.LASF27
 2230 067b 01       		.byte	0x1
 2231 067c 2504     		.2byte	0x425
 2232 067e 6B000000 		.4byte	0x6b
 2233 0682 BA030000 		.4byte	.LLST30
 2234 0686 0F       		.uleb128 0xf
 2235 0687 08000000 		.4byte	.LVL63
 2236 068b 42090000 		.4byte	0x942
 2237 068f 0F       		.uleb128 0xf
 2238 0690 1C000000 		.4byte	.LVL65
 2239 0694 4D090000 		.4byte	0x94d
 2240 0698 00       		.byte	0
 2241 0699 10       		.uleb128 0x10
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 69


 2242 069a 79030000 		.4byte	.LASF63
 2243 069e 01       		.byte	0x1
 2244 069f 4404     		.2byte	0x444
 2245 06a1 00000000 		.4byte	.LFB29
 2246 06a5 24000000 		.4byte	.LFE29-.LFB29
 2247 06a9 01       		.uleb128 0x1
 2248 06aa 9C       		.byte	0x9c
 2249 06ab E2060000 		.4byte	0x6e2
 2250 06af 11       		.uleb128 0x11
 2251 06b0 5F050000 		.4byte	.LASF62
 2252 06b4 01       		.byte	0x1
 2253 06b5 4404     		.2byte	0x444
 2254 06b7 76000000 		.4byte	0x76
 2255 06bb CD030000 		.4byte	.LLST31
 2256 06bf 12       		.uleb128 0x12
 2257 06c0 0C060000 		.4byte	.LASF27
 2258 06c4 01       		.byte	0x1
 2259 06c5 4604     		.2byte	0x446
 2260 06c7 6B000000 		.4byte	0x6b
 2261 06cb F9030000 		.4byte	.LLST32
 2262 06cf 0F       		.uleb128 0xf
 2263 06d0 08000000 		.4byte	.LVL67
 2264 06d4 42090000 		.4byte	0x942
 2265 06d8 0F       		.uleb128 0xf
 2266 06d9 1E000000 		.4byte	.LVL69
 2267 06dd 4D090000 		.4byte	0x94d
 2268 06e1 00       		.byte	0
 2269 06e2 10       		.uleb128 0x10
 2270 06e3 26010000 		.4byte	.LASF64
 2271 06e7 01       		.byte	0x1
 2272 06e8 6504     		.2byte	0x465
 2273 06ea 00000000 		.4byte	.LFB30
 2274 06ee 28000000 		.4byte	.LFE30-.LFB30
 2275 06f2 01       		.uleb128 0x1
 2276 06f3 9C       		.byte	0x9c
 2277 06f4 2B070000 		.4byte	0x72b
 2278 06f8 11       		.uleb128 0x11
 2279 06f9 5F050000 		.4byte	.LASF62
 2280 06fd 01       		.byte	0x1
 2281 06fe 6504     		.2byte	0x465
 2282 0700 76000000 		.4byte	0x76
 2283 0704 0C040000 		.4byte	.LLST33
 2284 0708 12       		.uleb128 0x12
 2285 0709 0C060000 		.4byte	.LASF27
 2286 070d 01       		.byte	0x1
 2287 070e 6704     		.2byte	0x467
 2288 0710 6B000000 		.4byte	0x6b
 2289 0714 38040000 		.4byte	.LLST34
 2290 0718 0F       		.uleb128 0xf
 2291 0719 08000000 		.4byte	.LVL71
 2292 071d 42090000 		.4byte	0x942
 2293 0721 0F       		.uleb128 0xf
 2294 0722 1E000000 		.4byte	.LVL73
 2295 0726 4D090000 		.4byte	0x94d
 2296 072a 00       		.byte	0
 2297 072b 10       		.uleb128 0x10
 2298 072c DB050000 		.4byte	.LASF65
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 70


 2299 0730 01       		.byte	0x1
 2300 0731 8504     		.2byte	0x485
 2301 0733 00000000 		.4byte	.LFB31
 2302 0737 24000000 		.4byte	.LFE31-.LFB31
 2303 073b 01       		.uleb128 0x1
 2304 073c 9C       		.byte	0x9c
 2305 073d 74070000 		.4byte	0x774
 2306 0741 11       		.uleb128 0x11
 2307 0742 5F050000 		.4byte	.LASF62
 2308 0746 01       		.byte	0x1
 2309 0747 8504     		.2byte	0x485
 2310 0749 76000000 		.4byte	0x76
 2311 074d 4B040000 		.4byte	.LLST35
 2312 0751 12       		.uleb128 0x12
 2313 0752 0C060000 		.4byte	.LASF27
 2314 0756 01       		.byte	0x1
 2315 0757 8704     		.2byte	0x487
 2316 0759 6B000000 		.4byte	0x6b
 2317 075d 77040000 		.4byte	.LLST36
 2318 0761 0F       		.uleb128 0xf
 2319 0762 08000000 		.4byte	.LVL75
 2320 0766 42090000 		.4byte	0x942
 2321 076a 0F       		.uleb128 0xf
 2322 076b 1E000000 		.4byte	.LVL77
 2323 076f 4D090000 		.4byte	0x94d
 2324 0773 00       		.byte	0
 2325 0774 10       		.uleb128 0x10
 2326 0775 F3050000 		.4byte	.LASF66
 2327 0779 01       		.byte	0x1
 2328 077a A604     		.2byte	0x4a6
 2329 077c 00000000 		.4byte	.LFB32
 2330 0780 24000000 		.4byte	.LFE32-.LFB32
 2331 0784 01       		.uleb128 0x1
 2332 0785 9C       		.byte	0x9c
 2333 0786 BD070000 		.4byte	0x7bd
 2334 078a 11       		.uleb128 0x11
 2335 078b 5F050000 		.4byte	.LASF62
 2336 078f 01       		.byte	0x1
 2337 0790 A604     		.2byte	0x4a6
 2338 0792 76000000 		.4byte	0x76
 2339 0796 8A040000 		.4byte	.LLST37
 2340 079a 12       		.uleb128 0x12
 2341 079b 0C060000 		.4byte	.LASF27
 2342 079f 01       		.byte	0x1
 2343 07a0 A804     		.2byte	0x4a8
 2344 07a2 6B000000 		.4byte	0x6b
 2345 07a6 B6040000 		.4byte	.LLST38
 2346 07aa 0F       		.uleb128 0xf
 2347 07ab 08000000 		.4byte	.LVL79
 2348 07af 42090000 		.4byte	0x942
 2349 07b3 0F       		.uleb128 0xf
 2350 07b4 1E000000 		.4byte	.LVL81
 2351 07b8 4D090000 		.4byte	0x94d
 2352 07bc 00       		.byte	0
 2353 07bd 10       		.uleb128 0x10
 2354 07be 7A060000 		.4byte	.LASF67
 2355 07c2 01       		.byte	0x1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 71


 2356 07c3 CE04     		.2byte	0x4ce
 2357 07c5 00000000 		.4byte	.LFB33
 2358 07c9 1C000000 		.4byte	.LFE33-.LFB33
 2359 07cd 01       		.uleb128 0x1
 2360 07ce 9C       		.byte	0x9c
 2361 07cf 16080000 		.4byte	0x816
 2362 07d3 11       		.uleb128 0x11
 2363 07d4 E5010000 		.4byte	.LASF44
 2364 07d8 01       		.byte	0x1
 2365 07d9 CE04     		.2byte	0x4ce
 2366 07db 76000000 		.4byte	0x76
 2367 07df C9040000 		.4byte	.LLST39
 2368 07e3 11       		.uleb128 0x11
 2369 07e4 2F020000 		.4byte	.LASF68
 2370 07e8 01       		.byte	0x1
 2371 07e9 CE04     		.2byte	0x4ce
 2372 07eb 76000000 		.4byte	0x76
 2373 07ef F5040000 		.4byte	.LLST40
 2374 07f3 12       		.uleb128 0x12
 2375 07f4 0C060000 		.4byte	.LASF27
 2376 07f8 01       		.byte	0x1
 2377 07f9 D004     		.2byte	0x4d0
 2378 07fb 6B000000 		.4byte	0x6b
 2379 07ff 21050000 		.4byte	.LLST41
 2380 0803 0F       		.uleb128 0xf
 2381 0804 0A000000 		.4byte	.LVL83
 2382 0808 42090000 		.4byte	0x942
 2383 080c 0F       		.uleb128 0xf
 2384 080d 14000000 		.4byte	.LVL85
 2385 0811 4D090000 		.4byte	0x94d
 2386 0815 00       		.byte	0
 2387 0816 09       		.uleb128 0x9
 2388 0817 1C030000 		.4byte	.LASF69
 2389 081b 01       		.byte	0x1
 2390 081c B1       		.byte	0xb1
 2391 081d 00000000 		.4byte	.LFB1
 2392 0821 24000000 		.4byte	.LFE1-.LFB1
 2393 0825 01       		.uleb128 0x1
 2394 0826 9C       		.byte	0x9c
 2395 0827 62080000 		.4byte	0x862
 2396 082b 0E       		.uleb128 0xe
 2397 082c 0C060000 		.4byte	.LASF27
 2398 0830 01       		.byte	0x1
 2399 0831 B3       		.byte	0xb3
 2400 0832 6B000000 		.4byte	0x6b
 2401 0836 34050000 		.4byte	.LLST42
 2402 083a 0F       		.uleb128 0xf
 2403 083b 06000000 		.4byte	.LVL87
 2404 083f 42090000 		.4byte	0x942
 2405 0843 0F       		.uleb128 0xf
 2406 0844 14000000 		.4byte	.LVL88
 2407 0848 4D090000 		.4byte	0x94d
 2408 084c 16       		.uleb128 0x16
 2409 084d 1C000000 		.4byte	.LVL89
 2410 0851 BD070000 		.4byte	0x7bd
 2411 0855 17       		.uleb128 0x17
 2412 0856 01       		.uleb128 0x1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 72


 2413 0857 51       		.byte	0x51
 2414 0858 01       		.uleb128 0x1
 2415 0859 48       		.byte	0x48
 2416 085a 17       		.uleb128 0x17
 2417 085b 01       		.uleb128 0x1
 2418 085c 50       		.byte	0x50
 2419 085d 02       		.uleb128 0x2
 2420 085e 74       		.byte	0x74
 2421 085f 00       		.sleb128 0
 2422 0860 00       		.byte	0
 2423 0861 00       		.byte	0
 2424 0862 09       		.uleb128 0x9
 2425 0863 68000000 		.4byte	.LASF70
 2426 0867 01       		.byte	0x1
 2427 0868 E0       		.byte	0xe0
 2428 0869 00000000 		.4byte	.LFB2
 2429 086d 1C000000 		.4byte	.LFE2-.LFB2
 2430 0871 01       		.uleb128 0x1
 2431 0872 9C       		.byte	0x9c
 2432 0873 8A080000 		.4byte	0x88a
 2433 0877 0F       		.uleb128 0xf
 2434 0878 0E000000 		.4byte	.LVL90
 2435 087c 16010000 		.4byte	0x116
 2436 0880 0F       		.uleb128 0xf
 2437 0881 16000000 		.4byte	.LVL91
 2438 0885 16080000 		.4byte	0x816
 2439 0889 00       		.byte	0
 2440 088a 15       		.uleb128 0x15
 2441 088b 95060000 		.4byte	.LASF71
 2442 088f 01       		.byte	0x1
 2443 0890 EB04     		.2byte	0x4eb
 2444 0892 76000000 		.4byte	0x76
 2445 0896 00000000 		.4byte	.LFB34
 2446 089a 14000000 		.4byte	.LFE34-.LFB34
 2447 089e 01       		.uleb128 0x1
 2448 089f 9C       		.byte	0x9c
 2449 08a0 13       		.uleb128 0x13
 2450 08a1 C8000000 		.4byte	0xc8
 2451 08a5 00000000 		.4byte	.LFB35
 2452 08a9 0C000000 		.4byte	.LFE35-.LFB35
 2453 08ad 01       		.uleb128 0x1
 2454 08ae 9C       		.byte	0x9c
 2455 08af BB080000 		.4byte	0x8bb
 2456 08b3 18       		.uleb128 0x18
 2457 08b4 D5000000 		.4byte	0xd5
 2458 08b8 01       		.uleb128 0x1
 2459 08b9 50       		.byte	0x50
 2460 08ba 00       		.byte	0
 2461 08bb 15       		.uleb128 0x15
 2462 08bc 3F010000 		.4byte	.LASF72
 2463 08c0 01       		.byte	0x1
 2464 08c1 1B05     		.2byte	0x51b
 2465 08c3 76000000 		.4byte	0x76
 2466 08c7 00000000 		.4byte	.LFB36
 2467 08cb 0C000000 		.4byte	.LFE36-.LFB36
 2468 08cf 01       		.uleb128 0x1
 2469 08d0 9C       		.byte	0x9c
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 73


 2470 08d1 15       		.uleb128 0x15
 2471 08d2 98000000 		.4byte	.LASF73
 2472 08d6 01       		.byte	0x1
 2473 08d7 3205     		.2byte	0x532
 2474 08d9 76000000 		.4byte	0x76
 2475 08dd 00000000 		.4byte	.LFB37
 2476 08e1 0C000000 		.4byte	.LFE37-.LFB37
 2477 08e5 01       		.uleb128 0x1
 2478 08e6 9C       		.byte	0x9c
 2479 08e7 10       		.uleb128 0x10
 2480 08e8 44050000 		.4byte	.LASF74
 2481 08ec 01       		.byte	0x1
 2482 08ed 4905     		.2byte	0x549
 2483 08ef 00000000 		.4byte	.LFB38
 2484 08f3 0C000000 		.4byte	.LFE38-.LFB38
 2485 08f7 01       		.uleb128 0x1
 2486 08f8 9C       		.byte	0x9c
 2487 08f9 0C090000 		.4byte	0x90c
 2488 08fd 19       		.uleb128 0x19
 2489 08fe 36050000 		.4byte	.LASF19
 2490 0902 01       		.byte	0x1
 2491 0903 4905     		.2byte	0x549
 2492 0905 76000000 		.4byte	0x76
 2493 0909 01       		.uleb128 0x1
 2494 090a 50       		.byte	0x50
 2495 090b 00       		.byte	0
 2496 090c 10       		.uleb128 0x10
 2497 090d 1D050000 		.4byte	.LASF75
 2498 0911 01       		.byte	0x1
 2499 0912 6005     		.2byte	0x560
 2500 0914 00000000 		.4byte	.LFB39
 2501 0918 0C000000 		.4byte	.LFE39-.LFB39
 2502 091c 01       		.uleb128 0x1
 2503 091d 9C       		.byte	0x9c
 2504 091e 31090000 		.4byte	0x931
 2505 0922 19       		.uleb128 0x19
 2506 0923 36050000 		.4byte	.LASF19
 2507 0927 01       		.byte	0x1
 2508 0928 6005     		.2byte	0x560
 2509 092a 76000000 		.4byte	0x76
 2510 092e 01       		.uleb128 0x1
 2511 092f 50       		.byte	0x50
 2512 0930 00       		.byte	0
 2513 0931 1A       		.uleb128 0x1a
 2514 0932 51060000 		.4byte	.LASF79
 2515 0936 01       		.byte	0x1
 2516 0937 15       		.byte	0x15
 2517 0938 6B000000 		.4byte	0x6b
 2518 093c 05       		.uleb128 0x5
 2519 093d 03       		.byte	0x3
 2520 093e 00000000 		.4byte	NavLightPWM_initVar
 2521 0942 1B       		.uleb128 0x1b
 2522 0943 F7020000 		.4byte	.LASF80
 2523 0947 03       		.byte	0x3
 2524 0948 82       		.byte	0x82
 2525 0949 6B000000 		.4byte	0x6b
 2526 094d 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 74


 2527 094e 1E000000 		.4byte	.LASF81
 2528 0952 03       		.byte	0x3
 2529 0953 83       		.byte	0x83
 2530 0954 1D       		.uleb128 0x1d
 2531 0955 6B000000 		.4byte	0x6b
 2532 0959 00       		.byte	0
 2533 095a 00       		.byte	0
 2534              		.section	.debug_abbrev,"",%progbits
 2535              	.Ldebug_abbrev0:
 2536 0000 01       		.uleb128 0x1
 2537 0001 11       		.uleb128 0x11
 2538 0002 01       		.byte	0x1
 2539 0003 25       		.uleb128 0x25
 2540 0004 0E       		.uleb128 0xe
 2541 0005 13       		.uleb128 0x13
 2542 0006 0B       		.uleb128 0xb
 2543 0007 03       		.uleb128 0x3
 2544 0008 0E       		.uleb128 0xe
 2545 0009 1B       		.uleb128 0x1b
 2546 000a 0E       		.uleb128 0xe
 2547 000b 55       		.uleb128 0x55
 2548 000c 17       		.uleb128 0x17
 2549 000d 11       		.uleb128 0x11
 2550 000e 01       		.uleb128 0x1
 2551 000f 10       		.uleb128 0x10
 2552 0010 17       		.uleb128 0x17
 2553 0011 00       		.byte	0
 2554 0012 00       		.byte	0
 2555 0013 02       		.uleb128 0x2
 2556 0014 24       		.uleb128 0x24
 2557 0015 00       		.byte	0
 2558 0016 0B       		.uleb128 0xb
 2559 0017 0B       		.uleb128 0xb
 2560 0018 3E       		.uleb128 0x3e
 2561 0019 0B       		.uleb128 0xb
 2562 001a 03       		.uleb128 0x3
 2563 001b 0E       		.uleb128 0xe
 2564 001c 00       		.byte	0
 2565 001d 00       		.byte	0
 2566 001e 03       		.uleb128 0x3
 2567 001f 24       		.uleb128 0x24
 2568 0020 00       		.byte	0
 2569 0021 0B       		.uleb128 0xb
 2570 0022 0B       		.uleb128 0xb
 2571 0023 3E       		.uleb128 0x3e
 2572 0024 0B       		.uleb128 0xb
 2573 0025 03       		.uleb128 0x3
 2574 0026 08       		.uleb128 0x8
 2575 0027 00       		.byte	0
 2576 0028 00       		.byte	0
 2577 0029 04       		.uleb128 0x4
 2578 002a 16       		.uleb128 0x16
 2579 002b 00       		.byte	0
 2580 002c 03       		.uleb128 0x3
 2581 002d 0E       		.uleb128 0xe
 2582 002e 3A       		.uleb128 0x3a
 2583 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 75


 2584 0030 3B       		.uleb128 0x3b
 2585 0031 0B       		.uleb128 0xb
 2586 0032 49       		.uleb128 0x49
 2587 0033 13       		.uleb128 0x13
 2588 0034 00       		.byte	0
 2589 0035 00       		.byte	0
 2590 0036 05       		.uleb128 0x5
 2591 0037 16       		.uleb128 0x16
 2592 0038 00       		.byte	0
 2593 0039 03       		.uleb128 0x3
 2594 003a 0E       		.uleb128 0xe
 2595 003b 3A       		.uleb128 0x3a
 2596 003c 0B       		.uleb128 0xb
 2597 003d 3B       		.uleb128 0x3b
 2598 003e 05       		.uleb128 0x5
 2599 003f 49       		.uleb128 0x49
 2600 0040 13       		.uleb128 0x13
 2601 0041 00       		.byte	0
 2602 0042 00       		.byte	0
 2603 0043 06       		.uleb128 0x6
 2604 0044 35       		.uleb128 0x35
 2605 0045 00       		.byte	0
 2606 0046 49       		.uleb128 0x49
 2607 0047 13       		.uleb128 0x13
 2608 0048 00       		.byte	0
 2609 0049 00       		.byte	0
 2610 004a 07       		.uleb128 0x7
 2611 004b 2E       		.uleb128 0x2e
 2612 004c 01       		.byte	0x1
 2613 004d 3F       		.uleb128 0x3f
 2614 004e 19       		.uleb128 0x19
 2615 004f 03       		.uleb128 0x3
 2616 0050 0E       		.uleb128 0xe
 2617 0051 3A       		.uleb128 0x3a
 2618 0052 0B       		.uleb128 0xb
 2619 0053 3B       		.uleb128 0x3b
 2620 0054 05       		.uleb128 0x5
 2621 0055 27       		.uleb128 0x27
 2622 0056 19       		.uleb128 0x19
 2623 0057 20       		.uleb128 0x20
 2624 0058 0B       		.uleb128 0xb
 2625 0059 01       		.uleb128 0x1
 2626 005a 13       		.uleb128 0x13
 2627 005b 00       		.byte	0
 2628 005c 00       		.byte	0
 2629 005d 08       		.uleb128 0x8
 2630 005e 05       		.uleb128 0x5
 2631 005f 00       		.byte	0
 2632 0060 03       		.uleb128 0x3
 2633 0061 0E       		.uleb128 0xe
 2634 0062 3A       		.uleb128 0x3a
 2635 0063 0B       		.uleb128 0xb
 2636 0064 3B       		.uleb128 0x3b
 2637 0065 05       		.uleb128 0x5
 2638 0066 49       		.uleb128 0x49
 2639 0067 13       		.uleb128 0x13
 2640 0068 00       		.byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 76


 2641 0069 00       		.byte	0
 2642 006a 09       		.uleb128 0x9
 2643 006b 2E       		.uleb128 0x2e
 2644 006c 01       		.byte	0x1
 2645 006d 3F       		.uleb128 0x3f
 2646 006e 19       		.uleb128 0x19
 2647 006f 03       		.uleb128 0x3
 2648 0070 0E       		.uleb128 0xe
 2649 0071 3A       		.uleb128 0x3a
 2650 0072 0B       		.uleb128 0xb
 2651 0073 3B       		.uleb128 0x3b
 2652 0074 0B       		.uleb128 0xb
 2653 0075 27       		.uleb128 0x27
 2654 0076 19       		.uleb128 0x19
 2655 0077 11       		.uleb128 0x11
 2656 0078 01       		.uleb128 0x1
 2657 0079 12       		.uleb128 0x12
 2658 007a 06       		.uleb128 0x6
 2659 007b 40       		.uleb128 0x40
 2660 007c 18       		.uleb128 0x18
 2661 007d 9742     		.uleb128 0x2117
 2662 007f 19       		.uleb128 0x19
 2663 0080 01       		.uleb128 0x1
 2664 0081 13       		.uleb128 0x13
 2665 0082 00       		.byte	0
 2666 0083 00       		.byte	0
 2667 0084 0A       		.uleb128 0xa
 2668 0085 1D       		.uleb128 0x1d
 2669 0086 01       		.byte	0x1
 2670 0087 31       		.uleb128 0x31
 2671 0088 13       		.uleb128 0x13
 2672 0089 52       		.uleb128 0x52
 2673 008a 01       		.uleb128 0x1
 2674 008b 55       		.uleb128 0x55
 2675 008c 17       		.uleb128 0x17
 2676 008d 58       		.uleb128 0x58
 2677 008e 0B       		.uleb128 0xb
 2678 008f 59       		.uleb128 0x59
 2679 0090 0B       		.uleb128 0xb
 2680 0091 01       		.uleb128 0x1
 2681 0092 13       		.uleb128 0x13
 2682 0093 00       		.byte	0
 2683 0094 00       		.byte	0
 2684 0095 0B       		.uleb128 0xb
 2685 0096 05       		.uleb128 0x5
 2686 0097 00       		.byte	0
 2687 0098 31       		.uleb128 0x31
 2688 0099 13       		.uleb128 0x13
 2689 009a 1C       		.uleb128 0x1c
 2690 009b 0B       		.uleb128 0xb
 2691 009c 00       		.byte	0
 2692 009d 00       		.byte	0
 2693 009e 0C       		.uleb128 0xc
 2694 009f 1D       		.uleb128 0x1d
 2695 00a0 01       		.byte	0x1
 2696 00a1 31       		.uleb128 0x31
 2697 00a2 13       		.uleb128 0x13
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 77


 2698 00a3 11       		.uleb128 0x11
 2699 00a4 01       		.uleb128 0x1
 2700 00a5 12       		.uleb128 0x12
 2701 00a6 06       		.uleb128 0x6
 2702 00a7 58       		.uleb128 0x58
 2703 00a8 0B       		.uleb128 0xb
 2704 00a9 59       		.uleb128 0x59
 2705 00aa 0B       		.uleb128 0xb
 2706 00ab 01       		.uleb128 0x1
 2707 00ac 13       		.uleb128 0x13
 2708 00ad 00       		.byte	0
 2709 00ae 00       		.byte	0
 2710 00af 0D       		.uleb128 0xd
 2711 00b0 1D       		.uleb128 0x1d
 2712 00b1 01       		.byte	0x1
 2713 00b2 31       		.uleb128 0x31
 2714 00b3 13       		.uleb128 0x13
 2715 00b4 11       		.uleb128 0x11
 2716 00b5 01       		.uleb128 0x1
 2717 00b6 12       		.uleb128 0x12
 2718 00b7 06       		.uleb128 0x6
 2719 00b8 58       		.uleb128 0x58
 2720 00b9 0B       		.uleb128 0xb
 2721 00ba 59       		.uleb128 0x59
 2722 00bb 0B       		.uleb128 0xb
 2723 00bc 00       		.byte	0
 2724 00bd 00       		.byte	0
 2725 00be 0E       		.uleb128 0xe
 2726 00bf 34       		.uleb128 0x34
 2727 00c0 00       		.byte	0
 2728 00c1 03       		.uleb128 0x3
 2729 00c2 0E       		.uleb128 0xe
 2730 00c3 3A       		.uleb128 0x3a
 2731 00c4 0B       		.uleb128 0xb
 2732 00c5 3B       		.uleb128 0x3b
 2733 00c6 0B       		.uleb128 0xb
 2734 00c7 49       		.uleb128 0x49
 2735 00c8 13       		.uleb128 0x13
 2736 00c9 02       		.uleb128 0x2
 2737 00ca 17       		.uleb128 0x17
 2738 00cb 00       		.byte	0
 2739 00cc 00       		.byte	0
 2740 00cd 0F       		.uleb128 0xf
 2741 00ce 898201   		.uleb128 0x4109
 2742 00d1 00       		.byte	0
 2743 00d2 11       		.uleb128 0x11
 2744 00d3 01       		.uleb128 0x1
 2745 00d4 31       		.uleb128 0x31
 2746 00d5 13       		.uleb128 0x13
 2747 00d6 00       		.byte	0
 2748 00d7 00       		.byte	0
 2749 00d8 10       		.uleb128 0x10
 2750 00d9 2E       		.uleb128 0x2e
 2751 00da 01       		.byte	0x1
 2752 00db 3F       		.uleb128 0x3f
 2753 00dc 19       		.uleb128 0x19
 2754 00dd 03       		.uleb128 0x3
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 78


 2755 00de 0E       		.uleb128 0xe
 2756 00df 3A       		.uleb128 0x3a
 2757 00e0 0B       		.uleb128 0xb
 2758 00e1 3B       		.uleb128 0x3b
 2759 00e2 05       		.uleb128 0x5
 2760 00e3 27       		.uleb128 0x27
 2761 00e4 19       		.uleb128 0x19
 2762 00e5 11       		.uleb128 0x11
 2763 00e6 01       		.uleb128 0x1
 2764 00e7 12       		.uleb128 0x12
 2765 00e8 06       		.uleb128 0x6
 2766 00e9 40       		.uleb128 0x40
 2767 00ea 18       		.uleb128 0x18
 2768 00eb 9742     		.uleb128 0x2117
 2769 00ed 19       		.uleb128 0x19
 2770 00ee 01       		.uleb128 0x1
 2771 00ef 13       		.uleb128 0x13
 2772 00f0 00       		.byte	0
 2773 00f1 00       		.byte	0
 2774 00f2 11       		.uleb128 0x11
 2775 00f3 05       		.uleb128 0x5
 2776 00f4 00       		.byte	0
 2777 00f5 03       		.uleb128 0x3
 2778 00f6 0E       		.uleb128 0xe
 2779 00f7 3A       		.uleb128 0x3a
 2780 00f8 0B       		.uleb128 0xb
 2781 00f9 3B       		.uleb128 0x3b
 2782 00fa 05       		.uleb128 0x5
 2783 00fb 49       		.uleb128 0x49
 2784 00fc 13       		.uleb128 0x13
 2785 00fd 02       		.uleb128 0x2
 2786 00fe 17       		.uleb128 0x17
 2787 00ff 00       		.byte	0
 2788 0100 00       		.byte	0
 2789 0101 12       		.uleb128 0x12
 2790 0102 34       		.uleb128 0x34
 2791 0103 00       		.byte	0
 2792 0104 03       		.uleb128 0x3
 2793 0105 0E       		.uleb128 0xe
 2794 0106 3A       		.uleb128 0x3a
 2795 0107 0B       		.uleb128 0xb
 2796 0108 3B       		.uleb128 0x3b
 2797 0109 05       		.uleb128 0x5
 2798 010a 49       		.uleb128 0x49
 2799 010b 13       		.uleb128 0x13
 2800 010c 02       		.uleb128 0x2
 2801 010d 17       		.uleb128 0x17
 2802 010e 00       		.byte	0
 2803 010f 00       		.byte	0
 2804 0110 13       		.uleb128 0x13
 2805 0111 2E       		.uleb128 0x2e
 2806 0112 01       		.byte	0x1
 2807 0113 31       		.uleb128 0x31
 2808 0114 13       		.uleb128 0x13
 2809 0115 11       		.uleb128 0x11
 2810 0116 01       		.uleb128 0x1
 2811 0117 12       		.uleb128 0x12
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 79


 2812 0118 06       		.uleb128 0x6
 2813 0119 40       		.uleb128 0x40
 2814 011a 18       		.uleb128 0x18
 2815 011b 9742     		.uleb128 0x2117
 2816 011d 19       		.uleb128 0x19
 2817 011e 01       		.uleb128 0x1
 2818 011f 13       		.uleb128 0x13
 2819 0120 00       		.byte	0
 2820 0121 00       		.byte	0
 2821 0122 14       		.uleb128 0x14
 2822 0123 05       		.uleb128 0x5
 2823 0124 00       		.byte	0
 2824 0125 31       		.uleb128 0x31
 2825 0126 13       		.uleb128 0x13
 2826 0127 02       		.uleb128 0x2
 2827 0128 17       		.uleb128 0x17
 2828 0129 00       		.byte	0
 2829 012a 00       		.byte	0
 2830 012b 15       		.uleb128 0x15
 2831 012c 2E       		.uleb128 0x2e
 2832 012d 00       		.byte	0
 2833 012e 3F       		.uleb128 0x3f
 2834 012f 19       		.uleb128 0x19
 2835 0130 03       		.uleb128 0x3
 2836 0131 0E       		.uleb128 0xe
 2837 0132 3A       		.uleb128 0x3a
 2838 0133 0B       		.uleb128 0xb
 2839 0134 3B       		.uleb128 0x3b
 2840 0135 05       		.uleb128 0x5
 2841 0136 27       		.uleb128 0x27
 2842 0137 19       		.uleb128 0x19
 2843 0138 49       		.uleb128 0x49
 2844 0139 13       		.uleb128 0x13
 2845 013a 11       		.uleb128 0x11
 2846 013b 01       		.uleb128 0x1
 2847 013c 12       		.uleb128 0x12
 2848 013d 06       		.uleb128 0x6
 2849 013e 40       		.uleb128 0x40
 2850 013f 18       		.uleb128 0x18
 2851 0140 9742     		.uleb128 0x2117
 2852 0142 19       		.uleb128 0x19
 2853 0143 00       		.byte	0
 2854 0144 00       		.byte	0
 2855 0145 16       		.uleb128 0x16
 2856 0146 898201   		.uleb128 0x4109
 2857 0149 01       		.byte	0x1
 2858 014a 11       		.uleb128 0x11
 2859 014b 01       		.uleb128 0x1
 2860 014c 31       		.uleb128 0x31
 2861 014d 13       		.uleb128 0x13
 2862 014e 00       		.byte	0
 2863 014f 00       		.byte	0
 2864 0150 17       		.uleb128 0x17
 2865 0151 8A8201   		.uleb128 0x410a
 2866 0154 00       		.byte	0
 2867 0155 02       		.uleb128 0x2
 2868 0156 18       		.uleb128 0x18
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 80


 2869 0157 9142     		.uleb128 0x2111
 2870 0159 18       		.uleb128 0x18
 2871 015a 00       		.byte	0
 2872 015b 00       		.byte	0
 2873 015c 18       		.uleb128 0x18
 2874 015d 05       		.uleb128 0x5
 2875 015e 00       		.byte	0
 2876 015f 31       		.uleb128 0x31
 2877 0160 13       		.uleb128 0x13
 2878 0161 02       		.uleb128 0x2
 2879 0162 18       		.uleb128 0x18
 2880 0163 00       		.byte	0
 2881 0164 00       		.byte	0
 2882 0165 19       		.uleb128 0x19
 2883 0166 05       		.uleb128 0x5
 2884 0167 00       		.byte	0
 2885 0168 03       		.uleb128 0x3
 2886 0169 0E       		.uleb128 0xe
 2887 016a 3A       		.uleb128 0x3a
 2888 016b 0B       		.uleb128 0xb
 2889 016c 3B       		.uleb128 0x3b
 2890 016d 05       		.uleb128 0x5
 2891 016e 49       		.uleb128 0x49
 2892 016f 13       		.uleb128 0x13
 2893 0170 02       		.uleb128 0x2
 2894 0171 18       		.uleb128 0x18
 2895 0172 00       		.byte	0
 2896 0173 00       		.byte	0
 2897 0174 1A       		.uleb128 0x1a
 2898 0175 34       		.uleb128 0x34
 2899 0176 00       		.byte	0
 2900 0177 03       		.uleb128 0x3
 2901 0178 0E       		.uleb128 0xe
 2902 0179 3A       		.uleb128 0x3a
 2903 017a 0B       		.uleb128 0xb
 2904 017b 3B       		.uleb128 0x3b
 2905 017c 0B       		.uleb128 0xb
 2906 017d 49       		.uleb128 0x49
 2907 017e 13       		.uleb128 0x13
 2908 017f 3F       		.uleb128 0x3f
 2909 0180 19       		.uleb128 0x19
 2910 0181 02       		.uleb128 0x2
 2911 0182 18       		.uleb128 0x18
 2912 0183 00       		.byte	0
 2913 0184 00       		.byte	0
 2914 0185 1B       		.uleb128 0x1b
 2915 0186 2E       		.uleb128 0x2e
 2916 0187 00       		.byte	0
 2917 0188 3F       		.uleb128 0x3f
 2918 0189 19       		.uleb128 0x19
 2919 018a 03       		.uleb128 0x3
 2920 018b 0E       		.uleb128 0xe
 2921 018c 3A       		.uleb128 0x3a
 2922 018d 0B       		.uleb128 0xb
 2923 018e 3B       		.uleb128 0x3b
 2924 018f 0B       		.uleb128 0xb
 2925 0190 27       		.uleb128 0x27
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 81


 2926 0191 19       		.uleb128 0x19
 2927 0192 49       		.uleb128 0x49
 2928 0193 13       		.uleb128 0x13
 2929 0194 3C       		.uleb128 0x3c
 2930 0195 19       		.uleb128 0x19
 2931 0196 00       		.byte	0
 2932 0197 00       		.byte	0
 2933 0198 1C       		.uleb128 0x1c
 2934 0199 2E       		.uleb128 0x2e
 2935 019a 01       		.byte	0x1
 2936 019b 3F       		.uleb128 0x3f
 2937 019c 19       		.uleb128 0x19
 2938 019d 03       		.uleb128 0x3
 2939 019e 0E       		.uleb128 0xe
 2940 019f 3A       		.uleb128 0x3a
 2941 01a0 0B       		.uleb128 0xb
 2942 01a1 3B       		.uleb128 0x3b
 2943 01a2 0B       		.uleb128 0xb
 2944 01a3 27       		.uleb128 0x27
 2945 01a4 19       		.uleb128 0x19
 2946 01a5 3C       		.uleb128 0x3c
 2947 01a6 19       		.uleb128 0x19
 2948 01a7 00       		.byte	0
 2949 01a8 00       		.byte	0
 2950 01a9 1D       		.uleb128 0x1d
 2951 01aa 05       		.uleb128 0x5
 2952 01ab 00       		.byte	0
 2953 01ac 49       		.uleb128 0x49
 2954 01ad 13       		.uleb128 0x13
 2955 01ae 00       		.byte	0
 2956 01af 00       		.byte	0
 2957 01b0 00       		.byte	0
 2958              		.section	.debug_loc,"",%progbits
 2959              	.Ldebug_loc0:
 2960              	.LLST0:
 2961 0000 06000000 		.4byte	.LVL4
 2962 0004 13000000 		.4byte	.LVL5-1
 2963 0008 0100     		.2byte	0x1
 2964 000a 50       		.byte	0x50
 2965 000b 00000000 		.4byte	0
 2966 000f 00000000 		.4byte	0
 2967              	.LLST1:
 2968 0013 00000000 		.4byte	.LVL6
 2969 0017 07000000 		.4byte	.LVL7-1
 2970 001b 0100     		.2byte	0x1
 2971 001d 50       		.byte	0x50
 2972 001e 07000000 		.4byte	.LVL7-1
 2973 0022 16000000 		.4byte	.LVL8
 2974 0026 0100     		.2byte	0x1
 2975 0028 54       		.byte	0x54
 2976 0029 16000000 		.4byte	.LVL8
 2977 002d 28000000 		.4byte	.LFE4
 2978 0031 0400     		.2byte	0x4
 2979 0033 F3       		.byte	0xf3
 2980 0034 01       		.uleb128 0x1
 2981 0035 50       		.byte	0x50
 2982 0036 9F       		.byte	0x9f
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 82


 2983 0037 00000000 		.4byte	0
 2984 003b 00000000 		.4byte	0
 2985              	.LLST2:
 2986 003f 08000000 		.4byte	.LVL7
 2987 0043 1B000000 		.4byte	.LVL9-1
 2988 0047 0100     		.2byte	0x1
 2989 0049 50       		.byte	0x50
 2990 004a 00000000 		.4byte	0
 2991 004e 00000000 		.4byte	0
 2992              	.LLST3:
 2993 0052 00000000 		.4byte	.LVL10
 2994 0056 07000000 		.4byte	.LVL11-1
 2995 005a 0100     		.2byte	0x1
 2996 005c 50       		.byte	0x50
 2997 005d 07000000 		.4byte	.LVL11-1
 2998 0061 16000000 		.4byte	.LVL12
 2999 0065 0100     		.2byte	0x1
 3000 0067 54       		.byte	0x54
 3001 0068 16000000 		.4byte	.LVL12
 3002 006c 28000000 		.4byte	.LFE5
 3003 0070 0400     		.2byte	0x4
 3004 0072 F3       		.byte	0xf3
 3005 0073 01       		.uleb128 0x1
 3006 0074 50       		.byte	0x50
 3007 0075 9F       		.byte	0x9f
 3008 0076 00000000 		.4byte	0
 3009 007a 00000000 		.4byte	0
 3010              	.LLST4:
 3011 007e 08000000 		.4byte	.LVL11
 3012 0082 1B000000 		.4byte	.LVL13-1
 3013 0086 0100     		.2byte	0x1
 3014 0088 50       		.byte	0x50
 3015 0089 00000000 		.4byte	0
 3016 008d 00000000 		.4byte	0
 3017              	.LLST5:
 3018 0091 00000000 		.4byte	.LVL14
 3019 0095 07000000 		.4byte	.LVL15-1
 3020 0099 0100     		.2byte	0x1
 3021 009b 50       		.byte	0x50
 3022 009c 07000000 		.4byte	.LVL15-1
 3023 00a0 16000000 		.4byte	.LVL16
 3024 00a4 0100     		.2byte	0x1
 3025 00a6 54       		.byte	0x54
 3026 00a7 16000000 		.4byte	.LVL16
 3027 00ab 28000000 		.4byte	.LFE6
 3028 00af 0400     		.2byte	0x4
 3029 00b1 F3       		.byte	0xf3
 3030 00b2 01       		.uleb128 0x1
 3031 00b3 50       		.byte	0x50
 3032 00b4 9F       		.byte	0x9f
 3033 00b5 00000000 		.4byte	0
 3034 00b9 00000000 		.4byte	0
 3035              	.LLST6:
 3036 00bd 08000000 		.4byte	.LVL15
 3037 00c1 1B000000 		.4byte	.LVL17-1
 3038 00c5 0100     		.2byte	0x1
 3039 00c7 50       		.byte	0x50
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 83


 3040 00c8 00000000 		.4byte	0
 3041 00cc 00000000 		.4byte	0
 3042              	.LLST7:
 3043 00d0 00000000 		.4byte	.LVL18
 3044 00d4 07000000 		.4byte	.LVL19-1
 3045 00d8 0100     		.2byte	0x1
 3046 00da 50       		.byte	0x50
 3047 00db 07000000 		.4byte	.LVL19-1
 3048 00df 18000000 		.4byte	.LVL20
 3049 00e3 0100     		.2byte	0x1
 3050 00e5 54       		.byte	0x54
 3051 00e6 18000000 		.4byte	.LVL20
 3052 00ea 2C000000 		.4byte	.LFE7
 3053 00ee 0400     		.2byte	0x4
 3054 00f0 F3       		.byte	0xf3
 3055 00f1 01       		.uleb128 0x1
 3056 00f2 50       		.byte	0x50
 3057 00f3 9F       		.byte	0x9f
 3058 00f4 00000000 		.4byte	0
 3059 00f8 00000000 		.4byte	0
 3060              	.LLST8:
 3061 00fc 08000000 		.4byte	.LVL19
 3062 0100 21000000 		.4byte	.LVL21-1
 3063 0104 0100     		.2byte	0x1
 3064 0106 50       		.byte	0x50
 3065 0107 00000000 		.4byte	0
 3066 010b 00000000 		.4byte	0
 3067              	.LLST9:
 3068 010f 00000000 		.4byte	.LVL22
 3069 0113 04000000 		.4byte	.LVL23
 3070 0117 0100     		.2byte	0x1
 3071 0119 50       		.byte	0x50
 3072 011a 04000000 		.4byte	.LVL23
 3073 011e 10000000 		.4byte	.LFE8
 3074 0122 0400     		.2byte	0x4
 3075 0124 F3       		.byte	0xf3
 3076 0125 01       		.uleb128 0x1
 3077 0126 50       		.byte	0x50
 3078 0127 9F       		.byte	0x9f
 3079 0128 00000000 		.4byte	0
 3080 012c 00000000 		.4byte	0
 3081              	.LLST10:
 3082 0130 00000000 		.4byte	.LVL24
 3083 0134 07000000 		.4byte	.LVL25-1
 3084 0138 0100     		.2byte	0x1
 3085 013a 50       		.byte	0x50
 3086 013b 07000000 		.4byte	.LVL25-1
 3087 013f 18000000 		.4byte	.LVL26
 3088 0143 0100     		.2byte	0x1
 3089 0145 54       		.byte	0x54
 3090 0146 18000000 		.4byte	.LVL26
 3091 014a 28000000 		.4byte	.LFE9
 3092 014e 0400     		.2byte	0x4
 3093 0150 F3       		.byte	0xf3
 3094 0151 01       		.uleb128 0x1
 3095 0152 50       		.byte	0x50
 3096 0153 9F       		.byte	0x9f
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 84


 3097 0154 00000000 		.4byte	0
 3098 0158 00000000 		.4byte	0
 3099              	.LLST11:
 3100 015c 08000000 		.4byte	.LVL25
 3101 0160 21000000 		.4byte	.LVL27-1
 3102 0164 0100     		.2byte	0x1
 3103 0166 50       		.byte	0x50
 3104 0167 00000000 		.4byte	0
 3105 016b 00000000 		.4byte	0
 3106              	.LLST12:
 3107 016f 00000000 		.4byte	.LVL28
 3108 0173 07000000 		.4byte	.LVL29-1
 3109 0177 0100     		.2byte	0x1
 3110 0179 50       		.byte	0x50
 3111 017a 07000000 		.4byte	.LVL29-1
 3112 017e 18000000 		.4byte	.LVL30
 3113 0182 0100     		.2byte	0x1
 3114 0184 54       		.byte	0x54
 3115 0185 18000000 		.4byte	.LVL30
 3116 0189 28000000 		.4byte	.LFE10
 3117 018d 0400     		.2byte	0x4
 3118 018f F3       		.byte	0xf3
 3119 0190 01       		.uleb128 0x1
 3120 0191 50       		.byte	0x50
 3121 0192 9F       		.byte	0x9f
 3122 0193 00000000 		.4byte	0
 3123 0197 00000000 		.4byte	0
 3124              	.LLST13:
 3125 019b 08000000 		.4byte	.LVL29
 3126 019f 21000000 		.4byte	.LVL31-1
 3127 01a3 0100     		.2byte	0x1
 3128 01a5 50       		.byte	0x50
 3129 01a6 00000000 		.4byte	0
 3130 01aa 00000000 		.4byte	0
 3131              	.LLST14:
 3132 01ae 00000000 		.4byte	.LVL32
 3133 01b2 07000000 		.4byte	.LVL33-1
 3134 01b6 0100     		.2byte	0x1
 3135 01b8 50       		.byte	0x50
 3136 01b9 07000000 		.4byte	.LVL33-1
 3137 01bd 10000000 		.4byte	.LVL34
 3138 01c1 0100     		.2byte	0x1
 3139 01c3 54       		.byte	0x54
 3140 01c4 10000000 		.4byte	.LVL34
 3141 01c8 2C000000 		.4byte	.LFE11
 3142 01cc 0400     		.2byte	0x4
 3143 01ce F3       		.byte	0xf3
 3144 01cf 01       		.uleb128 0x1
 3145 01d0 50       		.byte	0x50
 3146 01d1 9F       		.byte	0x9f
 3147 01d2 00000000 		.4byte	0
 3148 01d6 00000000 		.4byte	0
 3149              	.LLST15:
 3150 01da 08000000 		.4byte	.LVL33
 3151 01de 1F000000 		.4byte	.LVL35-1
 3152 01e2 0100     		.2byte	0x1
 3153 01e4 50       		.byte	0x50
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 85


 3154 01e5 00000000 		.4byte	0
 3155 01e9 00000000 		.4byte	0
 3156              	.LLST16:
 3157 01ed 00000000 		.4byte	.LVL36
 3158 01f1 07000000 		.4byte	.LVL37-1
 3159 01f5 0100     		.2byte	0x1
 3160 01f7 50       		.byte	0x50
 3161 01f8 07000000 		.4byte	.LVL37-1
 3162 01fc 16000000 		.4byte	.LVL38
 3163 0200 0100     		.2byte	0x1
 3164 0202 54       		.byte	0x54
 3165 0203 16000000 		.4byte	.LVL38
 3166 0207 28000000 		.4byte	.LFE12
 3167 020b 0400     		.2byte	0x4
 3168 020d F3       		.byte	0xf3
 3169 020e 01       		.uleb128 0x1
 3170 020f 50       		.byte	0x50
 3171 0210 9F       		.byte	0x9f
 3172 0211 00000000 		.4byte	0
 3173 0215 00000000 		.4byte	0
 3174              	.LLST17:
 3175 0219 08000000 		.4byte	.LVL37
 3176 021d 1B000000 		.4byte	.LVL39-1
 3177 0221 0100     		.2byte	0x1
 3178 0223 50       		.byte	0x50
 3179 0224 00000000 		.4byte	0
 3180 0228 00000000 		.4byte	0
 3181              	.LLST18:
 3182 022c 00000000 		.4byte	.LVL40
 3183 0230 04000000 		.4byte	.LVL41
 3184 0234 0100     		.2byte	0x1
 3185 0236 50       		.byte	0x50
 3186 0237 04000000 		.4byte	.LVL41
 3187 023b 0C000000 		.4byte	.LFE13
 3188 023f 0400     		.2byte	0x4
 3189 0241 F3       		.byte	0xf3
 3190 0242 01       		.uleb128 0x1
 3191 0243 50       		.byte	0x50
 3192 0244 9F       		.byte	0x9f
 3193 0245 00000000 		.4byte	0
 3194 0249 00000000 		.4byte	0
 3195              	.LLST19:
 3196 024d 00000000 		.4byte	.LVL42
 3197 0251 07000000 		.4byte	.LVL43-1
 3198 0255 0100     		.2byte	0x1
 3199 0257 50       		.byte	0x50
 3200 0258 07000000 		.4byte	.LVL43-1
 3201 025c 16000000 		.4byte	.LVL44
 3202 0260 0100     		.2byte	0x1
 3203 0262 54       		.byte	0x54
 3204 0263 16000000 		.4byte	.LVL44
 3205 0267 28000000 		.4byte	.LFE15
 3206 026b 0400     		.2byte	0x4
 3207 026d F3       		.byte	0xf3
 3208 026e 01       		.uleb128 0x1
 3209 026f 50       		.byte	0x50
 3210 0270 9F       		.byte	0x9f
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 86


 3211 0271 00000000 		.4byte	0
 3212 0275 00000000 		.4byte	0
 3213              	.LLST20:
 3214 0279 08000000 		.4byte	.LVL43
 3215 027d 1B000000 		.4byte	.LVL45-1
 3216 0281 0100     		.2byte	0x1
 3217 0283 50       		.byte	0x50
 3218 0284 00000000 		.4byte	0
 3219 0288 00000000 		.4byte	0
 3220              	.LLST21:
 3221 028c 00000000 		.4byte	.LVL46
 3222 0290 04000000 		.4byte	.LVL47
 3223 0294 0100     		.2byte	0x1
 3224 0296 50       		.byte	0x50
 3225 0297 04000000 		.4byte	.LVL47
 3226 029b 0C000000 		.4byte	.LFE16
 3227 029f 0400     		.2byte	0x4
 3228 02a1 F3       		.byte	0xf3
 3229 02a2 01       		.uleb128 0x1
 3230 02a3 50       		.byte	0x50
 3231 02a4 9F       		.byte	0x9f
 3232 02a5 00000000 		.4byte	0
 3233 02a9 00000000 		.4byte	0
 3234              	.LLST22:
 3235 02ad 00000000 		.4byte	.LVL48
 3236 02b1 07000000 		.4byte	.LVL49-1
 3237 02b5 0100     		.2byte	0x1
 3238 02b7 50       		.byte	0x50
 3239 02b8 07000000 		.4byte	.LVL49-1
 3240 02bc 1E000000 		.4byte	.LVL51
 3241 02c0 0100     		.2byte	0x1
 3242 02c2 54       		.byte	0x54
 3243 02c3 1E000000 		.4byte	.LVL51
 3244 02c7 24000000 		.4byte	.LFE18
 3245 02cb 0400     		.2byte	0x4
 3246 02cd F3       		.byte	0xf3
 3247 02ce 01       		.uleb128 0x1
 3248 02cf 50       		.byte	0x50
 3249 02d0 9F       		.byte	0x9f
 3250 02d1 00000000 		.4byte	0
 3251 02d5 00000000 		.4byte	0
 3252              	.LLST23:
 3253 02d9 08000000 		.4byte	.LVL49
 3254 02dd 1D000000 		.4byte	.LVL50-1
 3255 02e1 0100     		.2byte	0x1
 3256 02e3 50       		.byte	0x50
 3257 02e4 00000000 		.4byte	0
 3258 02e8 00000000 		.4byte	0
 3259              	.LLST24:
 3260 02ec 00000000 		.4byte	.LVL52
 3261 02f0 04000000 		.4byte	.LVL53
 3262 02f4 0100     		.2byte	0x1
 3263 02f6 50       		.byte	0x50
 3264 02f7 04000000 		.4byte	.LVL53
 3265 02fb 0C000000 		.4byte	.LFE19
 3266 02ff 0400     		.2byte	0x4
 3267 0301 F3       		.byte	0xf3
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 87


 3268 0302 01       		.uleb128 0x1
 3269 0303 50       		.byte	0x50
 3270 0304 9F       		.byte	0x9f
 3271 0305 00000000 		.4byte	0
 3272 0309 00000000 		.4byte	0
 3273              	.LLST25:
 3274 030d 00000000 		.4byte	.LVL54
 3275 0311 07000000 		.4byte	.LVL55-1
 3276 0315 0100     		.2byte	0x1
 3277 0317 50       		.byte	0x50
 3278 0318 07000000 		.4byte	.LVL55-1
 3279 031c 18000000 		.4byte	.LVL56
 3280 0320 0100     		.2byte	0x1
 3281 0322 54       		.byte	0x54
 3282 0323 18000000 		.4byte	.LVL56
 3283 0327 28000000 		.4byte	.LFE21
 3284 032b 0400     		.2byte	0x4
 3285 032d F3       		.byte	0xf3
 3286 032e 01       		.uleb128 0x1
 3287 032f 50       		.byte	0x50
 3288 0330 9F       		.byte	0x9f
 3289 0331 00000000 		.4byte	0
 3290 0335 00000000 		.4byte	0
 3291              	.LLST26:
 3292 0339 08000000 		.4byte	.LVL55
 3293 033d 21000000 		.4byte	.LVL57-1
 3294 0341 0100     		.2byte	0x1
 3295 0343 50       		.byte	0x50
 3296 0344 00000000 		.4byte	0
 3297 0348 00000000 		.4byte	0
 3298              	.LLST27:
 3299 034c 00000000 		.4byte	.LVL58
 3300 0350 04000000 		.4byte	.LVL59
 3301 0354 0100     		.2byte	0x1
 3302 0356 50       		.byte	0x50
 3303 0357 04000000 		.4byte	.LVL59
 3304 035b 0C000000 		.4byte	.LFE22
 3305 035f 0400     		.2byte	0x4
 3306 0361 F3       		.byte	0xf3
 3307 0362 01       		.uleb128 0x1
 3308 0363 50       		.byte	0x50
 3309 0364 9F       		.byte	0x9f
 3310 0365 00000000 		.4byte	0
 3311 0369 00000000 		.4byte	0
 3312              	.LLST28:
 3313 036d 00000000 		.4byte	.LVL60
 3314 0371 04000000 		.4byte	.LVL61
 3315 0375 0100     		.2byte	0x1
 3316 0377 50       		.byte	0x50
 3317 0378 04000000 		.4byte	.LVL61
 3318 037c 0C000000 		.4byte	.LFE24
 3319 0380 0400     		.2byte	0x4
 3320 0382 F3       		.byte	0xf3
 3321 0383 01       		.uleb128 0x1
 3322 0384 50       		.byte	0x50
 3323 0385 9F       		.byte	0x9f
 3324 0386 00000000 		.4byte	0
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 88


 3325 038a 00000000 		.4byte	0
 3326              	.LLST29:
 3327 038e 00000000 		.4byte	.LVL62
 3328 0392 07000000 		.4byte	.LVL63-1
 3329 0396 0100     		.2byte	0x1
 3330 0398 50       		.byte	0x50
 3331 0399 07000000 		.4byte	.LVL63-1
 3332 039d 16000000 		.4byte	.LVL64
 3333 03a1 0100     		.2byte	0x1
 3334 03a3 54       		.byte	0x54
 3335 03a4 16000000 		.4byte	.LVL64
 3336 03a8 24000000 		.4byte	.LFE28
 3337 03ac 0400     		.2byte	0x4
 3338 03ae F3       		.byte	0xf3
 3339 03af 01       		.uleb128 0x1
 3340 03b0 50       		.byte	0x50
 3341 03b1 9F       		.byte	0x9f
 3342 03b2 00000000 		.4byte	0
 3343 03b6 00000000 		.4byte	0
 3344              	.LLST30:
 3345 03ba 08000000 		.4byte	.LVL63
 3346 03be 1B000000 		.4byte	.LVL65-1
 3347 03c2 0100     		.2byte	0x1
 3348 03c4 50       		.byte	0x50
 3349 03c5 00000000 		.4byte	0
 3350 03c9 00000000 		.4byte	0
 3351              	.LLST31:
 3352 03cd 00000000 		.4byte	.LVL66
 3353 03d1 07000000 		.4byte	.LVL67-1
 3354 03d5 0100     		.2byte	0x1
 3355 03d7 50       		.byte	0x50
 3356 03d8 07000000 		.4byte	.LVL67-1
 3357 03dc 10000000 		.4byte	.LVL68
 3358 03e0 0100     		.2byte	0x1
 3359 03e2 54       		.byte	0x54
 3360 03e3 10000000 		.4byte	.LVL68
 3361 03e7 24000000 		.4byte	.LFE29
 3362 03eb 0400     		.2byte	0x4
 3363 03ed F3       		.byte	0xf3
 3364 03ee 01       		.uleb128 0x1
 3365 03ef 50       		.byte	0x50
 3366 03f0 9F       		.byte	0x9f
 3367 03f1 00000000 		.4byte	0
 3368 03f5 00000000 		.4byte	0
 3369              	.LLST32:
 3370 03f9 08000000 		.4byte	.LVL67
 3371 03fd 1D000000 		.4byte	.LVL69-1
 3372 0401 0100     		.2byte	0x1
 3373 0403 50       		.byte	0x50
 3374 0404 00000000 		.4byte	0
 3375 0408 00000000 		.4byte	0
 3376              	.LLST33:
 3377 040c 00000000 		.4byte	.LVL70
 3378 0410 07000000 		.4byte	.LVL71-1
 3379 0414 0100     		.2byte	0x1
 3380 0416 50       		.byte	0x50
 3381 0417 07000000 		.4byte	.LVL71-1
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 89


 3382 041b 10000000 		.4byte	.LVL72
 3383 041f 0100     		.2byte	0x1
 3384 0421 54       		.byte	0x54
 3385 0422 10000000 		.4byte	.LVL72
 3386 0426 28000000 		.4byte	.LFE30
 3387 042a 0400     		.2byte	0x4
 3388 042c F3       		.byte	0xf3
 3389 042d 01       		.uleb128 0x1
 3390 042e 50       		.byte	0x50
 3391 042f 9F       		.byte	0x9f
 3392 0430 00000000 		.4byte	0
 3393 0434 00000000 		.4byte	0
 3394              	.LLST34:
 3395 0438 08000000 		.4byte	.LVL71
 3396 043c 1D000000 		.4byte	.LVL73-1
 3397 0440 0100     		.2byte	0x1
 3398 0442 50       		.byte	0x50
 3399 0443 00000000 		.4byte	0
 3400 0447 00000000 		.4byte	0
 3401              	.LLST35:
 3402 044b 00000000 		.4byte	.LVL74
 3403 044f 07000000 		.4byte	.LVL75-1
 3404 0453 0100     		.2byte	0x1
 3405 0455 50       		.byte	0x50
 3406 0456 07000000 		.4byte	.LVL75-1
 3407 045a 10000000 		.4byte	.LVL76
 3408 045e 0100     		.2byte	0x1
 3409 0460 54       		.byte	0x54
 3410 0461 10000000 		.4byte	.LVL76
 3411 0465 24000000 		.4byte	.LFE31
 3412 0469 0400     		.2byte	0x4
 3413 046b F3       		.byte	0xf3
 3414 046c 01       		.uleb128 0x1
 3415 046d 50       		.byte	0x50
 3416 046e 9F       		.byte	0x9f
 3417 046f 00000000 		.4byte	0
 3418 0473 00000000 		.4byte	0
 3419              	.LLST36:
 3420 0477 08000000 		.4byte	.LVL75
 3421 047b 1D000000 		.4byte	.LVL77-1
 3422 047f 0100     		.2byte	0x1
 3423 0481 50       		.byte	0x50
 3424 0482 00000000 		.4byte	0
 3425 0486 00000000 		.4byte	0
 3426              	.LLST37:
 3427 048a 00000000 		.4byte	.LVL78
 3428 048e 07000000 		.4byte	.LVL79-1
 3429 0492 0100     		.2byte	0x1
 3430 0494 50       		.byte	0x50
 3431 0495 07000000 		.4byte	.LVL79-1
 3432 0499 10000000 		.4byte	.LVL80
 3433 049d 0100     		.2byte	0x1
 3434 049f 54       		.byte	0x54
 3435 04a0 10000000 		.4byte	.LVL80
 3436 04a4 24000000 		.4byte	.LFE32
 3437 04a8 0400     		.2byte	0x4
 3438 04aa F3       		.byte	0xf3
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 90


 3439 04ab 01       		.uleb128 0x1
 3440 04ac 50       		.byte	0x50
 3441 04ad 9F       		.byte	0x9f
 3442 04ae 00000000 		.4byte	0
 3443 04b2 00000000 		.4byte	0
 3444              	.LLST38:
 3445 04b6 08000000 		.4byte	.LVL79
 3446 04ba 1D000000 		.4byte	.LVL81-1
 3447 04be 0100     		.2byte	0x1
 3448 04c0 50       		.byte	0x50
 3449 04c1 00000000 		.4byte	0
 3450 04c5 00000000 		.4byte	0
 3451              	.LLST39:
 3452 04c9 00000000 		.4byte	.LVL82
 3453 04cd 09000000 		.4byte	.LVL83-1
 3454 04d1 0100     		.2byte	0x1
 3455 04d3 50       		.byte	0x50
 3456 04d4 09000000 		.4byte	.LVL83-1
 3457 04d8 0E000000 		.4byte	.LVL84
 3458 04dc 0100     		.2byte	0x1
 3459 04de 55       		.byte	0x55
 3460 04df 0E000000 		.4byte	.LVL84
 3461 04e3 1C000000 		.4byte	.LFE33
 3462 04e7 0400     		.2byte	0x4
 3463 04e9 F3       		.byte	0xf3
 3464 04ea 01       		.uleb128 0x1
 3465 04eb 50       		.byte	0x50
 3466 04ec 9F       		.byte	0x9f
 3467 04ed 00000000 		.4byte	0
 3468 04f1 00000000 		.4byte	0
 3469              	.LLST40:
 3470 04f5 00000000 		.4byte	.LVL82
 3471 04f9 09000000 		.4byte	.LVL83-1
 3472 04fd 0100     		.2byte	0x1
 3473 04ff 51       		.byte	0x51
 3474 0500 09000000 		.4byte	.LVL83-1
 3475 0504 14000000 		.4byte	.LVL86
 3476 0508 0100     		.2byte	0x1
 3477 050a 54       		.byte	0x54
 3478 050b 14000000 		.4byte	.LVL86
 3479 050f 1C000000 		.4byte	.LFE33
 3480 0513 0400     		.2byte	0x4
 3481 0515 F3       		.byte	0xf3
 3482 0516 01       		.uleb128 0x1
 3483 0517 51       		.byte	0x51
 3484 0518 9F       		.byte	0x9f
 3485 0519 00000000 		.4byte	0
 3486 051d 00000000 		.4byte	0
 3487              	.LLST41:
 3488 0521 0A000000 		.4byte	.LVL83
 3489 0525 13000000 		.4byte	.LVL85-1
 3490 0529 0100     		.2byte	0x1
 3491 052b 50       		.byte	0x50
 3492 052c 00000000 		.4byte	0
 3493 0530 00000000 		.4byte	0
 3494              	.LLST42:
 3495 0534 06000000 		.4byte	.LVL87
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 91


 3496 0538 13000000 		.4byte	.LVL88-1
 3497 053c 0100     		.2byte	0x1
 3498 053e 50       		.byte	0x50
 3499 053f 00000000 		.4byte	0
 3500 0543 00000000 		.4byte	0
 3501              		.section	.debug_aranges,"",%progbits
 3502 0000 54010000 		.4byte	0x154
 3503 0004 0200     		.2byte	0x2
 3504 0006 00000000 		.4byte	.Ldebug_info0
 3505 000a 04       		.byte	0x4
 3506 000b 00       		.byte	0
 3507 000c 0000     		.2byte	0
 3508 000e 0000     		.2byte	0
 3509 0010 00000000 		.4byte	.LFB0
 3510 0014 50000000 		.4byte	.LFE0-.LFB0
 3511 0018 00000000 		.4byte	.LFB3
 3512 001c 1C000000 		.4byte	.LFE3-.LFB3
 3513 0020 00000000 		.4byte	.LFB4
 3514 0024 28000000 		.4byte	.LFE4-.LFB4
 3515 0028 00000000 		.4byte	.LFB5
 3516 002c 28000000 		.4byte	.LFE5-.LFB5
 3517 0030 00000000 		.4byte	.LFB6
 3518 0034 28000000 		.4byte	.LFE6-.LFB6
 3519 0038 00000000 		.4byte	.LFB7
 3520 003c 2C000000 		.4byte	.LFE7-.LFB7
 3521 0040 00000000 		.4byte	.LFB8
 3522 0044 10000000 		.4byte	.LFE8-.LFB8
 3523 0048 00000000 		.4byte	.LFB9
 3524 004c 28000000 		.4byte	.LFE9-.LFB9
 3525 0050 00000000 		.4byte	.LFB10
 3526 0054 28000000 		.4byte	.LFE10-.LFB10
 3527 0058 00000000 		.4byte	.LFB11
 3528 005c 2C000000 		.4byte	.LFE11-.LFB11
 3529 0060 00000000 		.4byte	.LFB12
 3530 0064 28000000 		.4byte	.LFE12-.LFB12
 3531 0068 00000000 		.4byte	.LFB13
 3532 006c 0C000000 		.4byte	.LFE13-.LFB13
 3533 0070 00000000 		.4byte	.LFB14
 3534 0074 0C000000 		.4byte	.LFE14-.LFB14
 3535 0078 00000000 		.4byte	.LFB15
 3536 007c 28000000 		.4byte	.LFE15-.LFB15
 3537 0080 00000000 		.4byte	.LFB16
 3538 0084 0C000000 		.4byte	.LFE16-.LFB16
 3539 0088 00000000 		.4byte	.LFB17
 3540 008c 0C000000 		.4byte	.LFE17-.LFB17
 3541 0090 00000000 		.4byte	.LFB18
 3542 0094 24000000 		.4byte	.LFE18-.LFB18
 3543 0098 00000000 		.4byte	.LFB19
 3544 009c 0C000000 		.4byte	.LFE19-.LFB19
 3545 00a0 00000000 		.4byte	.LFB20
 3546 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3547 00a8 00000000 		.4byte	.LFB21
 3548 00ac 28000000 		.4byte	.LFE21-.LFB21
 3549 00b0 00000000 		.4byte	.LFB22
 3550 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3551 00b8 00000000 		.4byte	.LFB23
 3552 00bc 0C000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 92


 3553 00c0 00000000 		.4byte	.LFB24
 3554 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3555 00c8 00000000 		.4byte	.LFB25
 3556 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3557 00d0 00000000 		.4byte	.LFB26
 3558 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3559 00d8 00000000 		.4byte	.LFB27
 3560 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3561 00e0 00000000 		.4byte	.LFB28
 3562 00e4 24000000 		.4byte	.LFE28-.LFB28
 3563 00e8 00000000 		.4byte	.LFB29
 3564 00ec 24000000 		.4byte	.LFE29-.LFB29
 3565 00f0 00000000 		.4byte	.LFB30
 3566 00f4 28000000 		.4byte	.LFE30-.LFB30
 3567 00f8 00000000 		.4byte	.LFB31
 3568 00fc 24000000 		.4byte	.LFE31-.LFB31
 3569 0100 00000000 		.4byte	.LFB32
 3570 0104 24000000 		.4byte	.LFE32-.LFB32
 3571 0108 00000000 		.4byte	.LFB33
 3572 010c 1C000000 		.4byte	.LFE33-.LFB33
 3573 0110 00000000 		.4byte	.LFB1
 3574 0114 24000000 		.4byte	.LFE1-.LFB1
 3575 0118 00000000 		.4byte	.LFB2
 3576 011c 1C000000 		.4byte	.LFE2-.LFB2
 3577 0120 00000000 		.4byte	.LFB34
 3578 0124 14000000 		.4byte	.LFE34-.LFB34
 3579 0128 00000000 		.4byte	.LFB35
 3580 012c 0C000000 		.4byte	.LFE35-.LFB35
 3581 0130 00000000 		.4byte	.LFB36
 3582 0134 0C000000 		.4byte	.LFE36-.LFB36
 3583 0138 00000000 		.4byte	.LFB37
 3584 013c 0C000000 		.4byte	.LFE37-.LFB37
 3585 0140 00000000 		.4byte	.LFB38
 3586 0144 0C000000 		.4byte	.LFE38-.LFB38
 3587 0148 00000000 		.4byte	.LFB39
 3588 014c 0C000000 		.4byte	.LFE39-.LFB39
 3589 0150 00000000 		.4byte	0
 3590 0154 00000000 		.4byte	0
 3591              		.section	.debug_ranges,"",%progbits
 3592              	.Ldebug_ranges0:
 3593 0000 0A000000 		.4byte	.LBB10
 3594 0004 0C000000 		.4byte	.LBE10
 3595 0008 0E000000 		.4byte	.LBB13
 3596 000c 12000000 		.4byte	.LBE13
 3597 0010 00000000 		.4byte	0
 3598 0014 00000000 		.4byte	0
 3599 0018 00000000 		.4byte	.LFB0
 3600 001c 50000000 		.4byte	.LFE0
 3601 0020 00000000 		.4byte	.LFB3
 3602 0024 1C000000 		.4byte	.LFE3
 3603 0028 00000000 		.4byte	.LFB4
 3604 002c 28000000 		.4byte	.LFE4
 3605 0030 00000000 		.4byte	.LFB5
 3606 0034 28000000 		.4byte	.LFE5
 3607 0038 00000000 		.4byte	.LFB6
 3608 003c 28000000 		.4byte	.LFE6
 3609 0040 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 93


 3610 0044 2C000000 		.4byte	.LFE7
 3611 0048 00000000 		.4byte	.LFB8
 3612 004c 10000000 		.4byte	.LFE8
 3613 0050 00000000 		.4byte	.LFB9
 3614 0054 28000000 		.4byte	.LFE9
 3615 0058 00000000 		.4byte	.LFB10
 3616 005c 28000000 		.4byte	.LFE10
 3617 0060 00000000 		.4byte	.LFB11
 3618 0064 2C000000 		.4byte	.LFE11
 3619 0068 00000000 		.4byte	.LFB12
 3620 006c 28000000 		.4byte	.LFE12
 3621 0070 00000000 		.4byte	.LFB13
 3622 0074 0C000000 		.4byte	.LFE13
 3623 0078 00000000 		.4byte	.LFB14
 3624 007c 0C000000 		.4byte	.LFE14
 3625 0080 00000000 		.4byte	.LFB15
 3626 0084 28000000 		.4byte	.LFE15
 3627 0088 00000000 		.4byte	.LFB16
 3628 008c 0C000000 		.4byte	.LFE16
 3629 0090 00000000 		.4byte	.LFB17
 3630 0094 0C000000 		.4byte	.LFE17
 3631 0098 00000000 		.4byte	.LFB18
 3632 009c 24000000 		.4byte	.LFE18
 3633 00a0 00000000 		.4byte	.LFB19
 3634 00a4 0C000000 		.4byte	.LFE19
 3635 00a8 00000000 		.4byte	.LFB20
 3636 00ac 0C000000 		.4byte	.LFE20
 3637 00b0 00000000 		.4byte	.LFB21
 3638 00b4 28000000 		.4byte	.LFE21
 3639 00b8 00000000 		.4byte	.LFB22
 3640 00bc 0C000000 		.4byte	.LFE22
 3641 00c0 00000000 		.4byte	.LFB23
 3642 00c4 0C000000 		.4byte	.LFE23
 3643 00c8 00000000 		.4byte	.LFB24
 3644 00cc 0C000000 		.4byte	.LFE24
 3645 00d0 00000000 		.4byte	.LFB25
 3646 00d4 0C000000 		.4byte	.LFE25
 3647 00d8 00000000 		.4byte	.LFB26
 3648 00dc 0C000000 		.4byte	.LFE26
 3649 00e0 00000000 		.4byte	.LFB27
 3650 00e4 0C000000 		.4byte	.LFE27
 3651 00e8 00000000 		.4byte	.LFB28
 3652 00ec 24000000 		.4byte	.LFE28
 3653 00f0 00000000 		.4byte	.LFB29
 3654 00f4 24000000 		.4byte	.LFE29
 3655 00f8 00000000 		.4byte	.LFB30
 3656 00fc 28000000 		.4byte	.LFE30
 3657 0100 00000000 		.4byte	.LFB31
 3658 0104 24000000 		.4byte	.LFE31
 3659 0108 00000000 		.4byte	.LFB32
 3660 010c 24000000 		.4byte	.LFE32
 3661 0110 00000000 		.4byte	.LFB33
 3662 0114 1C000000 		.4byte	.LFE33
 3663 0118 00000000 		.4byte	.LFB1
 3664 011c 24000000 		.4byte	.LFE1
 3665 0120 00000000 		.4byte	.LFB2
 3666 0124 1C000000 		.4byte	.LFE2
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 94


 3667 0128 00000000 		.4byte	.LFB34
 3668 012c 14000000 		.4byte	.LFE34
 3669 0130 00000000 		.4byte	.LFB35
 3670 0134 0C000000 		.4byte	.LFE35
 3671 0138 00000000 		.4byte	.LFB36
 3672 013c 0C000000 		.4byte	.LFE36
 3673 0140 00000000 		.4byte	.LFB37
 3674 0144 0C000000 		.4byte	.LFE37
 3675 0148 00000000 		.4byte	.LFB38
 3676 014c 0C000000 		.4byte	.LFE38
 3677 0150 00000000 		.4byte	.LFB39
 3678 0154 0C000000 		.4byte	.LFE39
 3679 0158 00000000 		.4byte	0
 3680 015c 00000000 		.4byte	0
 3681              		.section	.debug_line,"",%progbits
 3682              	.Ldebug_line0:
 3683 0000 FA030000 		.section	.debug_str,"MS",%progbits,1
 3683      02005500 
 3683      00000201 
 3683      FB0E0D00 
 3683      01010101 
 3684              	.LASF20:
 3685 0000 4E61764C 		.ascii	"NavLightPWM_WritePeriod\000"
 3685      69676874 
 3685      50574D5F 
 3685      57726974 
 3685      65506572 
 3686              	.LASF18:
 3687 0018 636F756E 		.ascii	"count\000"
 3687      7400
 3688              	.LASF81:
 3689 001e 43794578 		.ascii	"CyExitCriticalSection\000"
 3689      69744372 
 3689      69746963 
 3689      616C5365 
 3689      6374696F 
 3690              	.LASF16:
 3691 0034 4E61764C 		.ascii	"NavLightPWM_WriteCounter\000"
 3691      69676874 
 3691      50574D5F 
 3691      57726974 
 3691      65436F75 
 3692              	.LASF49:
 3693 004d 4E61764C 		.ascii	"NavLightPWM_SetCompareSwap\000"
 3693      69676874 
 3693      50574D5F 
 3693      53657443 
 3693      6F6D7061 
 3694              	.LASF70:
 3695 0068 4E61764C 		.ascii	"NavLightPWM_Start\000"
 3695      69676874 
 3695      50574D5F 
 3695      53746172 
 3695      7400
 3696              	.LASF21:
 3697 007a 70657269 		.ascii	"period\000"
 3697      6F6400
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 95


 3698              	.LASF7:
 3699 0081 6C6F6E67 		.ascii	"long long unsigned int\000"
 3699      206C6F6E 
 3699      6720756E 
 3699      7369676E 
 3699      65642069 
 3700              	.LASF73:
 3701 0098 4E61764C 		.ascii	"NavLightPWM_GetInterruptSource\000"
 3701      69676874 
 3701      50574D5F 
 3701      47657449 
 3701      6E746572 
 3702              	.LASF30:
 3703 00b7 71644D6F 		.ascii	"qdMode\000"
 3703      646500
 3704              	.LASF39:
 3705 00be 4E61764C 		.ascii	"NavLightPWM_SetPWMStopOnKill\000"
 3705      69676874 
 3705      50574D5F 
 3705      53657450 
 3705      574D5374 
 3706              	.LASF6:
 3707 00db 6C6F6E67 		.ascii	"long long int\000"
 3707      206C6F6E 
 3707      6720696E 
 3707      7400
 3708              	.LASF0:
 3709 00e9 7369676E 		.ascii	"signed char\000"
 3709      65642063 
 3709      68617200 
 3710              	.LASF59:
 3711 00f5 4E61764C 		.ascii	"NavLightPWM_ReadCapture\000"
 3711      69676874 
 3711      50574D5F 
 3711      52656164 
 3711      43617074 
 3712              	.LASF43:
 3713 010d 4E61764C 		.ascii	"NavLightPWM_SetPWMInvert\000"
 3713      69676874 
 3713      50574D5F 
 3713      53657450 
 3713      574D496E 
 3714              	.LASF64:
 3715 0126 4E61764C 		.ascii	"NavLightPWM_SetStartMode\000"
 3715      69676874 
 3715      50574D5F 
 3715      53657453 
 3715      74617274 
 3716              	.LASF72:
 3717 013f 4E61764C 		.ascii	"NavLightPWM_GetInterruptSourceMasked\000"
 3717      69676874 
 3717      50574D5F 
 3717      47657449 
 3717      6E746572 
 3718              	.LASF4:
 3719 0164 6C6F6E67 		.ascii	"long int\000"
 3719      20696E74 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 96


 3719      00
 3720              	.LASF53:
 3721 016d 4E61764C 		.ascii	"NavLightPWM_ReadPeriodBuf\000"
 3721      69676874 
 3721      50574D5F 
 3721      52656164 
 3721      50657269 
 3722              	.LASF9:
 3723 0187 75696E74 		.ascii	"uint8\000"
 3723      3800
 3724              	.LASF12:
 3725 018d 646F7562 		.ascii	"double\000"
 3725      6C6500
 3726              	.LASF33:
 3727 0194 4E61764C 		.ascii	"NavLightPWM_SetOneShot\000"
 3727      69676874 
 3727      50574D5F 
 3727      5365744F 
 3727      6E655368 
 3728              	.LASF10:
 3729 01ab 75696E74 		.ascii	"uint32\000"
 3729      333200
 3730              	.LASF54:
 3731 01b2 4E61764C 		.ascii	"NavLightPWM_SetPeriodSwap\000"
 3731      69676874 
 3731      50574D5F 
 3731      53657450 
 3731      6572696F 
 3732              	.LASF31:
 3733 01cc 4E61764C 		.ascii	"NavLightPWM_SetPrescaler\000"
 3733      69676874 
 3733      50574D5F 
 3733      53657450 
 3733      72657363 
 3734              	.LASF44:
 3735 01e5 6D61736B 		.ascii	"mask\000"
 3735      00
 3736              	.LASF51:
 3737 01ea 4E61764C 		.ascii	"NavLightPWM_WritePeriodBuf\000"
 3737      69676874 
 3737      50574D5F 
 3737      57726974 
 3737      65506572 
 3738              	.LASF42:
 3739 0205 64656164 		.ascii	"deadTime\000"
 3739      54696D65 
 3739      00
 3740              	.LASF26:
 3741 020e 4E61764C 		.ascii	"NavLightPWM_SetMode\000"
 3741      69676874 
 3741      50574D5F 
 3741      5365744D 
 3741      6F646500 
 3742              	.LASF8:
 3743 0222 756E7369 		.ascii	"unsigned int\000"
 3743      676E6564 
 3743      20696E74 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 97


 3743      00
 3744              	.LASF68:
 3745 022f 636F6D6D 		.ascii	"command\000"
 3745      616E6400 
 3746              	.LASF56:
 3747 0237 4E61764C 		.ascii	"NavLightPWM_WriteCompareBuf\000"
 3747      69676874 
 3747      50574D5F 
 3747      57726974 
 3747      65436F6D 
 3748              	.LASF5:
 3749 0253 6C6F6E67 		.ascii	"long unsigned int\000"
 3749      20756E73 
 3749      69676E65 
 3749      6420696E 
 3749      7400
 3750              	.LASF36:
 3751 0265 6D6F6465 		.ascii	"modeMask\000"
 3751      4D61736B 
 3751      00
 3752              	.LASF17:
 3753 026e 4E61764C 		.ascii	"NavLightPWM_SetInterruptMode\000"
 3753      69676874 
 3753      50574D5F 
 3753      53657449 
 3753      6E746572 
 3754              	.LASF35:
 3755 028b 4E61764C 		.ascii	"NavLightPWM_SetPWMMode\000"
 3755      69676874 
 3755      50574D5F 
 3755      53657450 
 3755      574D4D6F 
 3756              	.LASF25:
 3757 02a2 4E61764C 		.ascii	"NavLightPWM_Stop\000"
 3757      69676874 
 3757      50574D5F 
 3757      53746F70 
 3757      00
 3758              	.LASF3:
 3759 02b3 73686F72 		.ascii	"short unsigned int\000"
 3759      7420756E 
 3759      7369676E 
 3759      65642069 
 3759      6E7400
 3760              	.LASF60:
 3761 02c6 4E61764C 		.ascii	"NavLightPWM_ReadCaptureBuf\000"
 3761      69676874 
 3761      50574D5F 
 3761      52656164 
 3761      43617074 
 3762              	.LASF28:
 3763 02e1 4E61764C 		.ascii	"NavLightPWM_SetQDMode\000"
 3763      69676874 
 3763      50574D5F 
 3763      53657451 
 3763      444D6F64 
 3764              	.LASF80:
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 98


 3765 02f7 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3765      74657243 
 3765      72697469 
 3765      63616C53 
 3765      65637469 
 3766              	.LASF34:
 3767 030e 6F6E6553 		.ascii	"oneShotEnable\000"
 3767      686F7445 
 3767      6E61626C 
 3767      6500
 3768              	.LASF69:
 3769 031c 4E61764C 		.ascii	"NavLightPWM_Enable\000"
 3769      69676874 
 3769      50574D5F 
 3769      456E6162 
 3769      6C6500
 3770              	.LASF78:
 3771 032f 453A5C44 		.ascii	"E:\\Dokumente\\GitHub\\T-50_Project\\Software\\T-50"
 3771      6F6B756D 
 3771      656E7465 
 3771      5C476974 
 3771      4875625C 
 3772 035d 5F50726F 		.ascii	"_Project\\T-50_Project.cydsn\000"
 3772      6A656374 
 3772      5C542D35 
 3772      305F5072 
 3772      6F6A6563 
 3773              	.LASF63:
 3774 0379 4E61764C 		.ascii	"NavLightPWM_SetReloadMode\000"
 3774      69676874 
 3774      50574D5F 
 3774      53657452 
 3774      656C6F61 
 3775              	.LASF14:
 3776 0393 72656733 		.ascii	"reg32\000"
 3776      3200
 3777              	.LASF46:
 3778 0399 636F756E 		.ascii	"counterMode\000"
 3778      7465724D 
 3778      6F646500 
 3779              	.LASF15:
 3780 03a5 73697A65 		.ascii	"sizetype\000"
 3780      74797065 
 3780      00
 3781              	.LASF38:
 3782 03ae 73796E63 		.ascii	"syncKillEnable\000"
 3782      4B696C6C 
 3782      456E6162 
 3782      6C6500
 3783              	.LASF45:
 3784 03bd 4E61764C 		.ascii	"NavLightPWM_SetCounterMode\000"
 3784      69676874 
 3784      50574D5F 
 3784      53657443 
 3784      6F756E74 
 3785              	.LASF23:
 3786 03d8 636F6D70 		.ascii	"compare\000"
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 99


 3786      61726500 
 3787              	.LASF55:
 3788 03e0 4E61764C 		.ascii	"NavLightPWM_ReadCompare\000"
 3788      69676874 
 3788      50574D5F 
 3788      52656164 
 3788      436F6D70 
 3789              	.LASF37:
 3790 03f8 4E61764C 		.ascii	"NavLightPWM_SetPWMSyncKill\000"
 3790      69676874 
 3790      50574D5F 
 3790      53657450 
 3790      574D5379 
 3791              	.LASF11:
 3792 0413 666C6F61 		.ascii	"float\000"
 3792      7400
 3793              	.LASF32:
 3794 0419 70726573 		.ascii	"prescaler\000"
 3794      63616C65 
 3794      7200
 3795              	.LASF76:
 3796 0423 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3796      4320342E 
 3796      382E3420 
 3796      32303134 
 3796      30353236 
 3797 0456 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3797      20726576 
 3797      6973696F 
 3797      6E203231 
 3797      31333538 
 3798 0489 73202D66 		.ascii	"s -ffunction-sections -finline-functions\000"
 3798      66756E63 
 3798      74696F6E 
 3798      2D736563 
 3798      74696F6E 
 3799              	.LASF1:
 3800 04b2 756E7369 		.ascii	"unsigned char\000"
 3800      676E6564 
 3800      20636861 
 3800      7200
 3801              	.LASF61:
 3802 04c0 4E61764C 		.ascii	"NavLightPWM_SetCaptureMode\000"
 3802      69676874 
 3802      50574D5F 
 3802      53657443 
 3802      61707475 
 3803              	.LASF40:
 3804 04db 73746F70 		.ascii	"stopOnKillEnable\000"
 3804      4F6E4B69 
 3804      6C6C456E 
 3804      61626C65 
 3804      00
 3805              	.LASF2:
 3806 04ec 73686F72 		.ascii	"short int\000"
 3806      7420696E 
 3806      7400
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 100


 3807              	.LASF77:
 3808 04f6 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\NavLightPWM.c\000"
 3808      6E657261 
 3808      7465645F 
 3808      536F7572 
 3808      63655C50 
 3809              	.LASF75:
 3810 051d 4E61764C 		.ascii	"NavLightPWM_SetInterrupt\000"
 3810      69676874 
 3810      50574D5F 
 3810      53657449 
 3810      6E746572 
 3811              	.LASF19:
 3812 0536 696E7465 		.ascii	"interruptMask\000"
 3812      72727570 
 3812      744D6173 
 3812      6B00
 3813              	.LASF74:
 3814 0544 4E61764C 		.ascii	"NavLightPWM_ClearInterrupt\000"
 3814      69676874 
 3814      50574D5F 
 3814      436C6561 
 3814      72496E74 
 3815              	.LASF62:
 3816 055f 74726967 		.ascii	"triggerMode\000"
 3816      6765724D 
 3816      6F646500 
 3817              	.LASF48:
 3818 056b 4E61764C 		.ascii	"NavLightPWM_ReadPeriod\000"
 3818      69676874 
 3818      50574D5F 
 3818      52656164 
 3818      50657269 
 3819              	.LASF13:
 3820 0582 63686172 		.ascii	"char\000"
 3820      00
 3821              	.LASF29:
 3822 0587 6D6F6465 		.ascii	"mode\000"
 3822      00
 3823              	.LASF58:
 3824 058c 4E61764C 		.ascii	"NavLightPWM_ReadCompareBuf\000"
 3824      69676874 
 3824      50574D5F 
 3824      52656164 
 3824      436F6D70 
 3825              	.LASF24:
 3826 05a7 4E61764C 		.ascii	"NavLightPWM_Init\000"
 3826      69676874 
 3826      50574D5F 
 3826      496E6974 
 3826      00
 3827              	.LASF47:
 3828 05b8 4E61764C 		.ascii	"NavLightPWM_ReadCounter\000"
 3828      69676874 
 3828      50574D5F 
 3828      52656164 
 3828      436F756E 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 101


 3829              	.LASF57:
 3830 05d0 636F6D70 		.ascii	"compareBuf\000"
 3830      61726542 
 3830      756600
 3831              	.LASF65:
 3832 05db 4E61764C 		.ascii	"NavLightPWM_SetStopMode\000"
 3832      69676874 
 3832      50574D5F 
 3832      53657453 
 3832      746F704D 
 3833              	.LASF66:
 3834 05f3 4E61764C 		.ascii	"NavLightPWM_SetCountMode\000"
 3834      69676874 
 3834      50574D5F 
 3834      53657443 
 3834      6F756E74 
 3835              	.LASF27:
 3836 060c 656E6162 		.ascii	"enableInterrupts\000"
 3836      6C65496E 
 3836      74657272 
 3836      75707473 
 3836      00
 3837              	.LASF41:
 3838 061d 4E61764C 		.ascii	"NavLightPWM_SetPWMDeadTime\000"
 3838      69676874 
 3838      50574D5F 
 3838      53657450 
 3838      574D4465 
 3839              	.LASF22:
 3840 0638 4E61764C 		.ascii	"NavLightPWM_WriteCompare\000"
 3840      69676874 
 3840      50574D5F 
 3840      57726974 
 3840      65436F6D 
 3841              	.LASF79:
 3842 0651 4E61764C 		.ascii	"NavLightPWM_initVar\000"
 3842      69676874 
 3842      50574D5F 
 3842      696E6974 
 3842      56617200 
 3843              	.LASF50:
 3844 0665 73776170 		.ascii	"swapEnable\000"
 3844      456E6162 
 3844      6C6500
 3845              	.LASF52:
 3846 0670 70657269 		.ascii	"periodBuf\000"
 3846      6F644275 
 3846      6600
 3847              	.LASF67:
 3848 067a 4E61764C 		.ascii	"NavLightPWM_TriggerCommand\000"
 3848      69676874 
 3848      50574D5F 
 3848      54726967 
 3848      67657243 
 3849              	.LASF71:
 3850 0695 4E61764C 		.ascii	"NavLightPWM_ReadStatus\000"
 3850      69676874 
ARM GAS  C:\Users\Sven\AppData\Local\Temp\ccslNjJF.s 			page 102


 3850      50574D5F 
 3850      52656164 
 3850      53746174 
 3851              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
