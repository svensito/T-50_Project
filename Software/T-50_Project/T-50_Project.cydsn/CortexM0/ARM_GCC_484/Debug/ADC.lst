ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000300u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 4, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****         };
 136:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 137:.\Generated_Source\PSoC4/ADC.c **** 
 138:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 139:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 140:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 4


  32              		.loc 1 140 0
  33 0002 0E20     		mov	r0, #14
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 141:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 141 0
  38 000a 1A49     		ldr	r1, .L2
  39 000c 0E20     		mov	r0, #14
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 142:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 143:.\Generated_Source\PSoC4/ADC.c **** 
 144:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 145:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 145 0
  43 0012 194A     		ldr	r2, .L2+4
  44 0014 0123     		mov	r3, #1
  45 0016 1360     		str	r3, [r2]
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
  46              		.loc 1 146 0
  47 0018 1849     		ldr	r1, .L2+8
  48 001a 194A     		ldr	r2, .L2+12
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 148:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 149:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  49              		.loc 1 150 0
  50 001c 1948     		ldr	r0, .L2+16
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
  51              		.loc 1 146 0
  52 001e 1160     		str	r1, [r2]
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  53              		.loc 1 147 0
  54 0020 1949     		ldr	r1, .L2+20
  55 0022 1A4A     		ldr	r2, .L2+24
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 152:.\Generated_Source\PSoC4/ADC.c ****     
 153:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 156:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 159:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 161:.\Generated_Source\PSoC4/ADC.c **** 
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 165:.\Generated_Source\PSoC4/ADC.c **** 
 166:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 167:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 171:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 5


 172:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 173:.\Generated_Source\PSoC4/ADC.c ****     
 174:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4)
 175:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 176:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 177:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 178:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 179:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 180:.\Generated_Source\PSoC4/ADC.c ****     #else
 181:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 182:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 183:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 184:.\Generated_Source\PSoC4/ADC.c ****         #else
 185:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 186:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 187:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 188:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 189:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_PSOC4) */
 190:.\Generated_Source\PSoC4/ADC.c ****     
 191:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 192:.\Generated_Source\PSoC4/ADC.c **** 
 193:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 194:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 198:.\Generated_Source\PSoC4/ADC.c ****     {
 199:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 200:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 201:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 202:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 203:.\Generated_Source\PSoC4/ADC.c ****         
 204:.\Generated_Source\PSoC4/ADC.c ****         
 205:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 206:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 207:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 208:.\Generated_Source\PSoC4/ADC.c ****         */
 209:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 210:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 212:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 213:.\Generated_Source\PSoC4/ADC.c **** 
 214:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 215:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 216:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 217:.\Generated_Source\PSoC4/ADC.c ****         {
 218:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 219:.\Generated_Source\PSoC4/ADC.c **** 
 220:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 221:.\Generated_Source\PSoC4/ADC.c ****             {
 222:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 223:.\Generated_Source\PSoC4/ADC.c ****             }
 224:.\Generated_Source\PSoC4/ADC.c **** 
 225:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 226:.\Generated_Source\PSoC4/ADC.c ****             {
 227:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 228:.\Generated_Source\PSoC4/ADC.c ****             }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 6


 229:.\Generated_Source\PSoC4/ADC.c ****         }
 230:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 231:.\Generated_Source\PSoC4/ADC.c ****             else
 232:.\Generated_Source\PSoC4/ADC.c ****             {
 233:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 234:.\Generated_Source\PSoC4/ADC.c **** 
 235:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 236:.\Generated_Source\PSoC4/ADC.c ****                 {
 237:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 238:.\Generated_Source\PSoC4/ADC.c ****                 }
 239:.\Generated_Source\PSoC4/ADC.c **** 
 240:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 241:.\Generated_Source\PSoC4/ADC.c ****                 {
 242:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 243:.\Generated_Source\PSoC4/ADC.c ****                 }
 244:.\Generated_Source\PSoC4/ADC.c ****             }
 245:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 246:.\Generated_Source\PSoC4/ADC.c **** 
 247:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 248:.\Generated_Source\PSoC4/ADC.c ****         {
 249:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 250:.\Generated_Source\PSoC4/ADC.c ****         }
 251:.\Generated_Source\PSoC4/ADC.c ****         else
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 254:.\Generated_Source\PSoC4/ADC.c ****         }
 255:.\Generated_Source\PSoC4/ADC.c **** 
 256:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 257:.\Generated_Source\PSoC4/ADC.c ****         {
 258:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 259:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 260:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 261:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 262:.\Generated_Source\PSoC4/ADC.c ****             #else
 263:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 264:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 265:.\Generated_Source\PSoC4/ADC.c ****         }
 266:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 267:.\Generated_Source\PSoC4/ADC.c ****         {
 268:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 269:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 270:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 271:.\Generated_Source\PSoC4/ADC.c ****             #else
 272:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 273:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 274:.\Generated_Source\PSoC4/ADC.c ****         }
 275:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 276:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 277:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 278:.\Generated_Source\PSoC4/ADC.c ****     }
 279:.\Generated_Source\PSoC4/ADC.c **** }
  56              		.loc 1 279 0
  57              		@ sp needed
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  58              		.loc 1 147 0
  59 0024 1160     		str	r1, [r2]
 148:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 7


  60              		.loc 1 148 0
  61 0026 1A49     		ldr	r1, .L2+28
  62 0028 1A4A     		ldr	r2, .L2+32
  63 002a 1160     		str	r1, [r2]
 149:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  64              		.loc 1 149 0
  65 002c 1A49     		ldr	r1, .L2+36
  66 002e 0022     		mov	r2, #0
  67 0030 0A60     		str	r2, [r1]
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  68              		.loc 1 150 0
  69 0032 1A49     		ldr	r1, .L2+40
  70 0034 0160     		str	r1, [r0]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  71              		.loc 1 151 0
  72 0036 1A48     		ldr	r0, .L2+44
  73 0038 0160     		str	r1, [r0]
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  74              		.loc 1 162 0
  75 003a 1A49     		ldr	r1, .L2+48
 172:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
  76              		.loc 1 172 0
  77 003c 1A48     		ldr	r0, .L2+52
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  78              		.loc 1 162 0
  79 003e 0A60     		str	r2, [r1]
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  80              		.loc 1 163 0
  81 0040 1A49     		ldr	r1, .L2+56
  82 0042 0A60     		str	r2, [r1]
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  83              		.loc 1 164 0
  84 0044 1A4A     		ldr	r2, .L2+60
 167:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
  85              		.loc 1 167 0
  86 0046 1B49     		ldr	r1, .L2+64
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  87              		.loc 1 164 0
  88 0048 1360     		str	r3, [r2]
 167:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
  89              		.loc 1 167 0
  90 004a 0222     		mov	r2, #2
  91 004c 0A60     		str	r2, [r1]
 171:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
  92              		.loc 1 171 0
  93 004e 1A49     		ldr	r1, .L2+68
  94 0050 0C68     		ldr	r4, [r1]
  95              	.LVL2:
 172:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
  96              		.loc 1 172 0
  97 0052 2040     		and	r0, r4
  98              	.LVL3:
 178:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
  99              		.loc 1 178 0
 100 0054 0343     		orr	r3, r0
 101              	.LVL4:
 191:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 8


 102              		.loc 1 191 0
 103 0056 0B60     		str	r3, [r1]
 194:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 104              		.loc 1 194 0
 105 0058 184B     		ldr	r3, .L2+72
 106              	.LVL5:
 107 005a 1A60     		str	r2, [r3]
 108              	.LVL6:
 218:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 109              		.loc 1 218 0
 110 005c 184B     		ldr	r3, .L2+76
 111 005e C022     		mov	r2, #192
 112 0060 9200     		lsl	r2, r2, #2
 113 0062 1A60     		str	r2, [r3]
 114              	.LVL7:
 270:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 115              		.loc 1 270 0
 116 0064 174B     		ldr	r3, .L2+80
 117 0066 8022     		mov	r2, #128
 118 0068 1A80     		strh	r2, [r3]
 276:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 119              		.loc 1 276 0
 120 006a 174B     		ldr	r3, .L2+84
 121 006c C222     		mov	r2, #194
 122 006e 5200     		lsl	r2, r2, #1
 123 0070 1A60     		str	r2, [r3]
 124              	.LVL8:
 125              		.loc 1 279 0
 126 0072 10BD     		pop	{r4, pc}
 127              	.L3:
 128              		.align	2
 129              	.L2:
 130 0074 00000000 		.word	ADC_ISR
 131 0078 20001A40 		.word	1075445792
 132 007c 70020053 		.word	1392509552
 133 0080 00001A40 		.word	1075445760
 134 0084 10001A40 		.word	1075445776
 135 0088 84000080 		.word	-2147483516
 136 008c 04001A40 		.word	1075445764
 137 0090 0000FF07 		.word	134152192
 138 0094 18001A40 		.word	1075445784
 139 0098 1C001A40 		.word	1075445788
 140 009c 02000200 		.word	131074
 141 00a0 14001A40 		.word	1075445780
 142 00a4 28021A40 		.word	1075446312
 143 00a8 FFFFFFDF 		.word	-536870913
 144 00ac 38021A40 		.word	1075446328
 145 00b0 18021A40 		.word	1075446296
 146 00b4 000F1A40 		.word	1075449600
 147 00b8 30001A40 		.word	1075445808
 148 00bc 040F1A40 		.word	1075449604
 149 00c0 80001A40 		.word	1075445888
 150 00c4 00000000 		.word	ADC_offset
 151 00c8 00000000 		.word	ADC_countsPer10Volt
 152              		.cfi_endproc
 153              	.LFE1:
 154              		.size	ADC_Init, .-ADC_Init
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 9


 155              		.section	.text.ADC_Enable,"ax",%progbits
 156              		.align	1
 157              		.global	ADC_Enable
 158              		.code	16
 159              		.thumb_func
 160              		.type	ADC_Enable, %function
 161              	ADC_Enable:
 162              	.LFB2:
 280:.\Generated_Source\PSoC4/ADC.c **** 
 281:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 283:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 284:.\Generated_Source\PSoC4/ADC.c **** *
 285:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 286:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 287:.\Generated_Source\PSoC4/ADC.c **** *
 288:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 289:.\Generated_Source\PSoC4/ADC.c **** *  None.
 290:.\Generated_Source\PSoC4/ADC.c **** *
 291:.\Generated_Source\PSoC4/ADC.c **** * Return:
 292:.\Generated_Source\PSoC4/ADC.c **** *  None.
 293:.\Generated_Source\PSoC4/ADC.c **** *
 294:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 296:.\Generated_Source\PSoC4/ADC.c **** {
 163              		.loc 1 296 0
 164              		.cfi_startproc
 165 0000 08B5     		push	{r3, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 3, -8
 168              		.cfi_offset 14, -4
 297:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 169              		.loc 1 297 0
 170 0002 064B     		ldr	r3, .L7
 171 0004 1A68     		ldr	r2, [r3]
 172 0006 002A     		cmp	r2, #0
 173 0008 07DB     		blt	.L4
 298:.\Generated_Source\PSoC4/ADC.c ****     {
 299:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4)
 300:.\Generated_Source\PSoC4/ADC.c **** 
 301:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 302:.\Generated_Source\PSoC4/ADC.c ****             {
 303:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle for to avoid deadlock */
 304:.\Generated_Source\PSoC4/ADC.c ****             }
 305:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_PSOC4) */
 306:.\Generated_Source\PSoC4/ADC.c ****         
 307:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 174              		.loc 1 307 0
 175 000a 1968     		ldr	r1, [r3]
 176 000c 8022     		mov	r2, #128
 177 000e 1206     		lsl	r2, r2, #24
 178 0010 0A43     		orr	r2, r1
 179 0012 1A60     		str	r2, [r3]
 308:.\Generated_Source\PSoC4/ADC.c ****         
 309:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 310:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 180              		.loc 1 310 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 10


 181 0014 0A20     		mov	r0, #10
 182 0016 FFF7FEFF 		bl	CyDelayUs
 183              	.LVL9:
 184              	.L4:
 311:.\Generated_Source\PSoC4/ADC.c ****     }
 312:.\Generated_Source\PSoC4/ADC.c **** }
 185              		.loc 1 312 0
 186              		@ sp needed
 187 001a 08BD     		pop	{r3, pc}
 188              	.L8:
 189              		.align	2
 190              	.L7:
 191 001c 00001A40 		.word	1075445760
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	ADC_Enable, .-ADC_Enable
 195              		.section	.text.ADC_Start,"ax",%progbits
 196              		.align	1
 197              		.global	ADC_Start
 198              		.code	16
 199              		.thumb_func
 200              		.type	ADC_Start, %function
 201              	ADC_Start:
 202              	.LFB0:
  64:.\Generated_Source\PSoC4/ADC.c **** {
 203              		.loc 1 64 0
 204              		.cfi_startproc
 205 0000 10B5     		push	{r4, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 4, -8
 208              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
 209              		.loc 1 66 0
 210 0002 054C     		ldr	r4, .L11
 211 0004 2378     		ldrb	r3, [r4]
 212 0006 002B     		cmp	r3, #0
 213 0008 03D1     		bne	.L10
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 214              		.loc 1 68 0
 215 000a FFF7FEFF 		bl	ADC_Init
 216              	.LVL10:
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 217              		.loc 1 69 0
 218 000e 0123     		mov	r3, #1
 219 0010 2370     		strb	r3, [r4]
 220              	.L10:
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 221              		.loc 1 71 0
 222 0012 FFF7FEFF 		bl	ADC_Enable
 223              	.LVL11:
  72:.\Generated_Source\PSoC4/ADC.c **** }
 224              		.loc 1 72 0
 225              		@ sp needed
 226 0016 10BD     		pop	{r4, pc}
 227              	.L12:
 228              		.align	2
 229              	.L11:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 11


 230 0018 00000000 		.word	.LANCHOR0
 231              		.cfi_endproc
 232              	.LFE0:
 233              		.size	ADC_Start, .-ADC_Start
 234              		.section	.text.ADC_Stop,"ax",%progbits
 235              		.align	1
 236              		.global	ADC_Stop
 237              		.code	16
 238              		.thumb_func
 239              		.type	ADC_Stop, %function
 240              	ADC_Stop:
 241              	.LFB3:
 313:.\Generated_Source\PSoC4/ADC.c **** 
 314:.\Generated_Source\PSoC4/ADC.c **** 
 315:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 316:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 317:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 318:.\Generated_Source\PSoC4/ADC.c **** *
 319:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 320:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 321:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 242              		.loc 1 331 0
 243              		.cfi_startproc
 332:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 244              		.loc 1 332 0
 245 0000 024B     		ldr	r3, .L14
 333:.\Generated_Source\PSoC4/ADC.c **** }
 246              		.loc 1 333 0
 247              		@ sp needed
 332:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 248              		.loc 1 332 0
 249 0002 1A68     		ldr	r2, [r3]
 250 0004 5200     		lsl	r2, r2, #1
 251 0006 5208     		lsr	r2, r2, #1
 252 0008 1A60     		str	r2, [r3]
 253              		.loc 1 333 0
 254 000a 7047     		bx	lr
 255              	.L15:
 256              		.align	2
 257              	.L14:
 258 000c 00001A40 		.word	1075445760
 259              		.cfi_endproc
 260              	.LFE3:
 261              		.size	ADC_Stop, .-ADC_Stop
 262              		.section	.text.ADC_StartConvert,"ax",%progbits
 263              		.align	1
 264              		.global	ADC_StartConvert
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 12


 265              		.code	16
 266              		.thumb_func
 267              		.type	ADC_StartConvert, %function
 268              	ADC_StartConvert:
 269              	.LFB4:
 334:.\Generated_Source\PSoC4/ADC.c **** 
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 337:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 338:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 339:.\Generated_Source\PSoC4/ADC.c **** *
 340:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 341:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 342:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 343:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 344:.\Generated_Source\PSoC4/ADC.c **** *
 345:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 346:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 347:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 348:.\Generated_Source\PSoC4/ADC.c **** *
 349:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 350:.\Generated_Source\PSoC4/ADC.c **** *  None.
 351:.\Generated_Source\PSoC4/ADC.c **** *
 352:.\Generated_Source\PSoC4/ADC.c **** * Return:
 353:.\Generated_Source\PSoC4/ADC.c **** *  None.
 354:.\Generated_Source\PSoC4/ADC.c **** *
 355:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 357:.\Generated_Source\PSoC4/ADC.c **** {
 270              		.loc 1 357 0
 271              		.cfi_startproc
 358:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 359:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 272              		.loc 1 359 0
 273 0000 034B     		ldr	r3, .L17
 274 0002 8022     		mov	r2, #128
 275 0004 1968     		ldr	r1, [r3]
 276 0006 5202     		lsl	r2, r2, #9
 277 0008 0A43     		orr	r2, r1
 278 000a 1A60     		str	r2, [r3]
 360:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 361:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 362:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 363:.\Generated_Source\PSoC4/ADC.c **** 
 364:.\Generated_Source\PSoC4/ADC.c **** }
 279              		.loc 1 364 0
 280              		@ sp needed
 281 000c 7047     		bx	lr
 282              	.L18:
 283 000e C046     		.align	2
 284              	.L17:
 285 0010 04001A40 		.word	1075445764
 286              		.cfi_endproc
 287              	.LFE4:
 288              		.size	ADC_StartConvert, .-ADC_StartConvert
 289              		.section	.text.ADC_StopConvert,"ax",%progbits
 290              		.align	1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 13


 291              		.global	ADC_StopConvert
 292              		.code	16
 293              		.thumb_func
 294              		.type	ADC_StopConvert, %function
 295              	ADC_StopConvert:
 296              	.LFB5:
 365:.\Generated_Source\PSoC4/ADC.c **** 
 366:.\Generated_Source\PSoC4/ADC.c **** 
 367:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 368:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 369:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 370:.\Generated_Source\PSoC4/ADC.c **** *
 371:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 372:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 373:.\Generated_Source\PSoC4/ADC.c **** *
 374:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 375:.\Generated_Source\PSoC4/ADC.c **** *  None.
 376:.\Generated_Source\PSoC4/ADC.c **** *
 377:.\Generated_Source\PSoC4/ADC.c **** * Return:
 378:.\Generated_Source\PSoC4/ADC.c **** *  None.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 381:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 382:.\Generated_Source\PSoC4/ADC.c **** {
 297              		.loc 1 382 0
 298              		.cfi_startproc
 383:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 384:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 299              		.loc 1 384 0
 300 0000 024B     		ldr	r3, .L20
 301 0002 034A     		ldr	r2, .L20+4
 302 0004 1968     		ldr	r1, [r3]
 385:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 386:.\Generated_Source\PSoC4/ADC.c **** }
 303              		.loc 1 386 0
 304              		@ sp needed
 384:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 305              		.loc 1 384 0
 306 0006 0A40     		and	r2, r1
 307 0008 1A60     		str	r2, [r3]
 308              		.loc 1 386 0
 309 000a 7047     		bx	lr
 310              	.L21:
 311              		.align	2
 312              	.L20:
 313 000c 04001A40 		.word	1075445764
 314 0010 FFFFFEFF 		.word	-65537
 315              		.cfi_endproc
 316              	.LFE5:
 317              		.size	ADC_StopConvert, .-ADC_StopConvert
 318              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 319              		.align	1
 320              		.global	ADC_IsEndConversion
 321              		.code	16
 322              		.thumb_func
 323              		.type	ADC_IsEndConversion, %function
 324              	ADC_IsEndConversion:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 14


 325              	.LFB6:
 387:.\Generated_Source\PSoC4/ADC.c **** 
 388:.\Generated_Source\PSoC4/ADC.c **** 
 389:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 390:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 391:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 392:.\Generated_Source\PSoC4/ADC.c **** *
 393:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 394:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 395:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 396:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 397:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 398:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 399:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 400:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 401:.\Generated_Source\PSoC4/ADC.c **** *
 402:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 403:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 404:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 405:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 406:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 407:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 408:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 409:.\Generated_Source\PSoC4/ADC.c **** *
 410:.\Generated_Source\PSoC4/ADC.c **** * Return:
 411:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 412:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 413:.\Generated_Source\PSoC4/ADC.c **** *
 414:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 415:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 416:.\Generated_Source\PSoC4/ADC.c **** {
 326              		.loc 1 416 0
 327              		.cfi_startproc
 328              	.LVL12:
 329              		.loc 1 416 0
 330 0000 011C     		mov	r1, r0
 417:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 331              		.loc 1 417 0
 332 0002 0020     		mov	r0, #0
 333              	.LVL13:
 418:.\Generated_Source\PSoC4/ADC.c **** 
 419:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 334              		.loc 1 419 0
 335 0004 8B07     		lsl	r3, r1, #30
 336 0006 09D0     		beq	.L28
 337              	.LVL14:
 338              	.L25:
 420:.\Generated_Source\PSoC4/ADC.c ****     {
 421:.\Generated_Source\PSoC4/ADC.c ****         do
 422:.\Generated_Source\PSoC4/ADC.c ****         {
 423:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 339              		.loc 1 423 0
 340 0008 054A     		ldr	r2, .L32
 341 000a 0123     		mov	r3, #1
 342 000c 1068     		ldr	r0, [r2]
 343 000e 1840     		and	r0, r3
 344              	.LVL15:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 15


 424:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 345              		.loc 1 424 0
 346 0010 02D1     		bne	.L24
 347              		.loc 1 424 0 is_stmt 0 discriminator 1
 348 0012 8B07     		lsl	r3, r1, #30
 349 0014 F8D4     		bmi	.L25
 350 0016 01E0     		b	.L28
 351              	.L24:
 425:.\Generated_Source\PSoC4/ADC.c **** 
 426:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 427:.\Generated_Source\PSoC4/ADC.c ****         {
 428:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 429:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 352              		.loc 1 429 0 is_stmt 1
 353 0018 1360     		str	r3, [r2]
 354 001a 181C     		mov	r0, r3
 355              	.LVL16:
 356              	.L28:
 430:.\Generated_Source\PSoC4/ADC.c ****         }
 431:.\Generated_Source\PSoC4/ADC.c ****     }
 432:.\Generated_Source\PSoC4/ADC.c **** 
 433:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 434:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 435:.\Generated_Source\PSoC4/ADC.c ****         {
 436:.\Generated_Source\PSoC4/ADC.c ****             do
 437:.\Generated_Source\PSoC4/ADC.c ****             {
 438:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 439:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 440:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 441:.\Generated_Source\PSoC4/ADC.c **** 
 442:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 443:.\Generated_Source\PSoC4/ADC.c ****             {
 444:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 445:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 446:.\Generated_Source\PSoC4/ADC.c ****             }
 447:.\Generated_Source\PSoC4/ADC.c ****         }
 448:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 449:.\Generated_Source\PSoC4/ADC.c **** 
 450:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 451:.\Generated_Source\PSoC4/ADC.c **** }
 357              		.loc 1 451 0
 358              		@ sp needed
 359 001c 7047     		bx	lr
 360              	.L33:
 361 001e C046     		.align	2
 362              	.L32:
 363 0020 10021A40 		.word	1075446288
 364              		.cfi_endproc
 365              	.LFE6:
 366              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 367              		.section	.text.ADC_GetResult16,"ax",%progbits
 368              		.align	1
 369              		.global	ADC_GetResult16
 370              		.code	16
 371              		.thumb_func
 372              		.type	ADC_GetResult16, %function
 373              	ADC_GetResult16:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 16


 374              	.LFB7:
 452:.\Generated_Source\PSoC4/ADC.c **** 
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 456:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 457:.\Generated_Source\PSoC4/ADC.c **** *
 458:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 459:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 460:.\Generated_Source\PSoC4/ADC.c **** *
 461:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 462:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 463:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 464:.\Generated_Source\PSoC4/ADC.c **** *
 465:.\Generated_Source\PSoC4/ADC.c **** * Return:
 466:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 469:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 470:.\Generated_Source\PSoC4/ADC.c **** {
 375              		.loc 1 470 0
 376              		.cfi_startproc
 377              	.LVL17:
 378 0000 08B5     		push	{r3, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 3, -8
 381              		.cfi_offset 14, -4
 471:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 472:.\Generated_Source\PSoC4/ADC.c **** 
 473:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 474:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 382              		.loc 1 474 0
 383 0002 0028     		cmp	r0, #0
 384 0004 05D0     		beq	.L35
 385              		.loc 1 474 0 is_stmt 0 discriminator 1
 386 0006 0020     		mov	r0, #0
 387              	.LVL18:
 388 0008 FFF7FEFF 		bl	CyHalt
 389              	.LVL19:
 475:.\Generated_Source\PSoC4/ADC.c **** 
 476:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 477:.\Generated_Source\PSoC4/ADC.c ****     {
 478:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 479:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 480:.\Generated_Source\PSoC4/ADC.c ****     }
 481:.\Generated_Source\PSoC4/ADC.c ****     else
 482:.\Generated_Source\PSoC4/ADC.c ****     {
 483:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 484:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 485:.\Generated_Source\PSoC4/ADC.c ****         #else
 486:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 390              		.loc 1 486 0 is_stmt 1 discriminator 1
 391 000c 0020     		mov	r0, #0
 392              	.L36:
 393              	.LVL20:
 487:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 488:.\Generated_Source\PSoC4/ADC.c ****     }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 17


 489:.\Generated_Source\PSoC4/ADC.c **** 
 490:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 394              		.loc 1 490 0
 395 000e 00B2     		sxth	r0, r0
 396              	.LVL21:
 491:.\Generated_Source\PSoC4/ADC.c **** }
 397              		.loc 1 491 0
 398              		@ sp needed
 399 0010 08BD     		pop	{r3, pc}
 400              	.LVL22:
 401              	.L35:
 478:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 402              		.loc 1 478 0
 403 0012 024B     		ldr	r3, .L38
 404 0014 1868     		ldr	r0, [r3]
 405              	.LVL23:
 406 0016 80B2     		uxth	r0, r0
 407              	.LVL24:
 408 0018 F9E7     		b	.L36
 409              	.L39:
 410 001a C046     		.align	2
 411              	.L38:
 412 001c 80011A40 		.word	1075446144
 413              		.cfi_endproc
 414              	.LFE7:
 415              		.size	ADC_GetResult16, .-ADC_GetResult16
 416              		.section	.text.ADC_SetChanMask,"ax",%progbits
 417              		.align	1
 418              		.global	ADC_SetChanMask
 419              		.code	16
 420              		.thumb_func
 421              		.type	ADC_SetChanMask, %function
 422              	ADC_SetChanMask:
 423              	.LFB8:
 492:.\Generated_Source\PSoC4/ADC.c **** 
 493:.\Generated_Source\PSoC4/ADC.c **** 
 494:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 496:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 497:.\Generated_Source\PSoC4/ADC.c **** *
 498:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 499:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 500:.\Generated_Source\PSoC4/ADC.c **** *
 501:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 502:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 503:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 504:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 505:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 506:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 507:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 508:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 509:.\Generated_Source\PSoC4/ADC.c **** *
 510:.\Generated_Source\PSoC4/ADC.c **** * Return:
 511:.\Generated_Source\PSoC4/ADC.c **** *  None.
 512:.\Generated_Source\PSoC4/ADC.c **** *
 513:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 514:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 18


 515:.\Generated_Source\PSoC4/ADC.c **** {
 424              		.loc 1 515 0
 425              		.cfi_startproc
 426              	.LVL25:
 516:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 427              		.loc 1 516 0
 428 0000 0123     		mov	r3, #1
 429 0002 1840     		and	r0, r3
 430              	.LVL26:
 431 0004 014B     		ldr	r3, .L41
 517:.\Generated_Source\PSoC4/ADC.c **** }
 432              		.loc 1 517 0
 433              		@ sp needed
 516:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 434              		.loc 1 516 0
 435 0006 1860     		str	r0, [r3]
 436              		.loc 1 517 0
 437 0008 7047     		bx	lr
 438              	.L42:
 439 000a C046     		.align	2
 440              	.L41:
 441 000c 20001A40 		.word	1075445792
 442              		.cfi_endproc
 443              	.LFE8:
 444              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 445              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 446              		.align	1
 447              		.global	ADC_SetLowLimit
 448              		.code	16
 449              		.thumb_func
 450              		.type	ADC_SetLowLimit, %function
 451              	ADC_SetLowLimit:
 452              	.LFB9:
 518:.\Generated_Source\PSoC4/ADC.c **** 
 519:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 520:.\Generated_Source\PSoC4/ADC.c **** 
 521:.\Generated_Source\PSoC4/ADC.c **** 
 522:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 523:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 524:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 525:.\Generated_Source\PSoC4/ADC.c ****     *
 526:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 527:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 528:.\Generated_Source\PSoC4/ADC.c ****     *
 529:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 530:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 531:.\Generated_Source\PSoC4/ADC.c ****     *
 532:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 533:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 534:.\Generated_Source\PSoC4/ADC.c ****     *
 535:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 536:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 537:.\Generated_Source\PSoC4/ADC.c ****     {
 538:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 539:.\Generated_Source\PSoC4/ADC.c ****     }
 540:.\Generated_Source\PSoC4/ADC.c **** 
 541:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 19


 542:.\Generated_Source\PSoC4/ADC.c **** 
 543:.\Generated_Source\PSoC4/ADC.c **** 
 544:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 545:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 546:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 549:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 550:.\Generated_Source\PSoC4/ADC.c **** *
 551:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 552:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 553:.\Generated_Source\PSoC4/ADC.c **** *
 554:.\Generated_Source\PSoC4/ADC.c **** * Return:
 555:.\Generated_Source\PSoC4/ADC.c **** *  None.
 556:.\Generated_Source\PSoC4/ADC.c **** *
 557:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 558:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 559:.\Generated_Source\PSoC4/ADC.c **** {
 453              		.loc 1 559 0
 454              		.cfi_startproc
 455              	.LVL27:
 560:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 456              		.loc 1 560 0
 457 0000 044B     		ldr	r3, .L44
 561:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 458              		.loc 1 561 0
 459 0002 80B2     		uxth	r0, r0
 460              	.LVL28:
 560:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 461              		.loc 1 560 0
 462 0004 1A68     		ldr	r2, [r3]
 562:.\Generated_Source\PSoC4/ADC.c **** }
 463              		.loc 1 562 0
 464              		@ sp needed
 560:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 465              		.loc 1 560 0
 466 0006 120C     		lsr	r2, r2, #16
 467 0008 1204     		lsl	r2, r2, #16
 468 000a 1A60     		str	r2, [r3]
 561:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 469              		.loc 1 561 0
 470 000c 1A68     		ldr	r2, [r3]
 471 000e 1043     		orr	r0, r2
 472 0010 1860     		str	r0, [r3]
 473              		.loc 1 562 0
 474 0012 7047     		bx	lr
 475              	.L45:
 476              		.align	2
 477              	.L44:
 478 0014 18001A40 		.word	1075445784
 479              		.cfi_endproc
 480              	.LFE9:
 481              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 482              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 483              		.align	1
 484              		.global	ADC_SetHighLimit
 485              		.code	16
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 20


 486              		.thumb_func
 487              		.type	ADC_SetHighLimit, %function
 488              	ADC_SetHighLimit:
 489              	.LFB10:
 563:.\Generated_Source\PSoC4/ADC.c **** 
 564:.\Generated_Source\PSoC4/ADC.c **** 
 565:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 566:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 567:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 568:.\Generated_Source\PSoC4/ADC.c **** *
 569:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 570:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 573:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 574:.\Generated_Source\PSoC4/ADC.c **** *
 575:.\Generated_Source\PSoC4/ADC.c **** * Return:
 576:.\Generated_Source\PSoC4/ADC.c **** *  None.
 577:.\Generated_Source\PSoC4/ADC.c **** *
 578:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 580:.\Generated_Source\PSoC4/ADC.c **** {
 490              		.loc 1 580 0
 491              		.cfi_startproc
 492              	.LVL29:
 581:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 493              		.loc 1 581 0
 494 0000 044B     		ldr	r3, .L47
 582:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 495              		.loc 1 582 0
 496 0002 0004     		lsl	r0, r0, #16
 497              	.LVL30:
 581:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 498              		.loc 1 581 0
 499 0004 1A68     		ldr	r2, [r3]
 583:.\Generated_Source\PSoC4/ADC.c **** }
 500              		.loc 1 583 0
 501              		@ sp needed
 581:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 502              		.loc 1 581 0
 503 0006 92B2     		uxth	r2, r2
 504 0008 1A60     		str	r2, [r3]
 582:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 505              		.loc 1 582 0
 506 000a 1A68     		ldr	r2, [r3]
 507 000c 1043     		orr	r0, r2
 508 000e 1860     		str	r0, [r3]
 509              		.loc 1 583 0
 510 0010 7047     		bx	lr
 511              	.L48:
 512 0012 C046     		.align	2
 513              	.L47:
 514 0014 18001A40 		.word	1075445784
 515              		.cfi_endproc
 516              	.LFE10:
 517              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 518              		.section	.text.ADC_SetLimitMask,"ax",%progbits
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 21


 519              		.align	1
 520              		.global	ADC_SetLimitMask
 521              		.code	16
 522              		.thumb_func
 523              		.type	ADC_SetLimitMask, %function
 524              	ADC_SetLimitMask:
 525              	.LFB11:
 584:.\Generated_Source\PSoC4/ADC.c **** 
 585:.\Generated_Source\PSoC4/ADC.c **** 
 586:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 588:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 589:.\Generated_Source\PSoC4/ADC.c **** *
 590:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 591:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 592:.\Generated_Source\PSoC4/ADC.c **** *
 593:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 594:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 595:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 596:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 597:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 598:.\Generated_Source\PSoC4/ADC.c **** *
 599:.\Generated_Source\PSoC4/ADC.c **** * Return:
 600:.\Generated_Source\PSoC4/ADC.c **** *  None.
 601:.\Generated_Source\PSoC4/ADC.c **** *
 602:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 603:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 604:.\Generated_Source\PSoC4/ADC.c **** {
 526              		.loc 1 604 0
 527              		.cfi_startproc
 528              	.LVL31:
 605:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 529              		.loc 1 605 0
 530 0000 0123     		mov	r3, #1
 531 0002 1840     		and	r0, r3
 532              	.LVL32:
 533 0004 014B     		ldr	r3, .L50
 606:.\Generated_Source\PSoC4/ADC.c **** }
 534              		.loc 1 606 0
 535              		@ sp needed
 605:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 536              		.loc 1 605 0
 537 0006 1860     		str	r0, [r3]
 538              		.loc 1 606 0
 539 0008 7047     		bx	lr
 540              	.L51:
 541 000a C046     		.align	2
 542              	.L50:
 543 000c 38021A40 		.word	1075446328
 544              		.cfi_endproc
 545              	.LFE11:
 546              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 547              		.section	.text.ADC_SetSatMask,"ax",%progbits
 548              		.align	1
 549              		.global	ADC_SetSatMask
 550              		.code	16
 551              		.thumb_func
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 22


 552              		.type	ADC_SetSatMask, %function
 553              	ADC_SetSatMask:
 554              	.LFB12:
 607:.\Generated_Source\PSoC4/ADC.c **** 
 608:.\Generated_Source\PSoC4/ADC.c **** 
 609:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 610:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 611:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 614:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 615:.\Generated_Source\PSoC4/ADC.c **** *
 616:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 617:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 618:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 619:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 620:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 621:.\Generated_Source\PSoC4/ADC.c **** *
 622:.\Generated_Source\PSoC4/ADC.c **** * Return:
 623:.\Generated_Source\PSoC4/ADC.c **** *  None.
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 626:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 627:.\Generated_Source\PSoC4/ADC.c **** {
 555              		.loc 1 627 0
 556              		.cfi_startproc
 557              	.LVL33:
 628:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 558              		.loc 1 628 0
 559 0000 0123     		mov	r3, #1
 560 0002 1840     		and	r0, r3
 561              	.LVL34:
 562 0004 014B     		ldr	r3, .L53
 629:.\Generated_Source\PSoC4/ADC.c **** }
 563              		.loc 1 629 0
 564              		@ sp needed
 628:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 565              		.loc 1 628 0
 566 0006 1860     		str	r0, [r3]
 567              		.loc 1 629 0
 568 0008 7047     		bx	lr
 569              	.L54:
 570 000a C046     		.align	2
 571              	.L53:
 572 000c 28021A40 		.word	1075446312
 573              		.cfi_endproc
 574              	.LFE12:
 575              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 576              		.section	.text.ADC_SetOffset,"ax",%progbits
 577              		.align	1
 578              		.global	ADC_SetOffset
 579              		.code	16
 580              		.thumb_func
 581              		.type	ADC_SetOffset, %function
 582              	ADC_SetOffset:
 583              	.LFB13:
 630:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 23


 631:.\Generated_Source\PSoC4/ADC.c **** 
 632:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 633:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 634:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/ADC.c **** *
 636:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 637:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 638:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 639:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 640:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 641:.\Generated_Source\PSoC4/ADC.c **** *
 642:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 643:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 644:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 645:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 646:.\Generated_Source\PSoC4/ADC.c **** *
 647:.\Generated_Source\PSoC4/ADC.c **** * Return:
 648:.\Generated_Source\PSoC4/ADC.c **** *  None.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 651:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 654:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 655:.\Generated_Source\PSoC4/ADC.c **** {
 584              		.loc 1 655 0
 585              		.cfi_startproc
 586              	.LVL35:
 587 0000 38B5     		push	{r3, r4, r5, lr}
 588              		.cfi_def_cfa_offset 16
 589              		.cfi_offset 3, -16
 590              		.cfi_offset 4, -12
 591              		.cfi_offset 5, -8
 592              		.cfi_offset 14, -4
 593              		.loc 1 655 0
 594 0002 041C     		mov	r4, r0
 595 0004 0D1C     		mov	r5, r1
 656:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 657:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 596              		.loc 1 657 0
 597 0006 0028     		cmp	r0, #0
 598 0008 02D0     		beq	.L56
 599              		.loc 1 657 0 is_stmt 0 discriminator 1
 600 000a 0020     		mov	r0, #0
 601              	.LVL36:
 602 000c FFF7FEFF 		bl	CyHalt
 603              	.LVL37:
 604              	.L56:
 658:.\Generated_Source\PSoC4/ADC.c **** 
 659:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 605              		.loc 1 659 0 is_stmt 1
 606 0010 014B     		ldr	r3, .L60
 607 0012 6400     		lsl	r4, r4, #1
 608              	.LVL38:
 609 0014 E552     		strh	r5, [r4, r3]
 660:.\Generated_Source\PSoC4/ADC.c **** }
 610              		.loc 1 660 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 24


 611              		@ sp needed
 612 0016 38BD     		pop	{r3, r4, r5, pc}
 613              	.L61:
 614              		.align	2
 615              	.L60:
 616 0018 00000000 		.word	ADC_offset
 617              		.cfi_endproc
 618              	.LFE13:
 619              		.size	ADC_SetOffset, .-ADC_SetOffset
 620              		.section	.text.ADC_SetGain,"ax",%progbits
 621              		.align	1
 622              		.global	ADC_SetGain
 623              		.code	16
 624              		.thumb_func
 625              		.type	ADC_SetGain, %function
 626              	ADC_SetGain:
 627              	.LFB14:
 661:.\Generated_Source\PSoC4/ADC.c **** 
 662:.\Generated_Source\PSoC4/ADC.c **** 
 663:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 664:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 665:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 666:.\Generated_Source\PSoC4/ADC.c **** *
 667:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 668:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 669:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 670:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 671:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 672:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 673:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 674:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 675:.\Generated_Source\PSoC4/ADC.c **** *
 676:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 677:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 678:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 679:.\Generated_Source\PSoC4/ADC.c **** *
 680:.\Generated_Source\PSoC4/ADC.c **** * Return:
 681:.\Generated_Source\PSoC4/ADC.c **** *  None.
 682:.\Generated_Source\PSoC4/ADC.c **** *
 683:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 684:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 685:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 686:.\Generated_Source\PSoC4/ADC.c **** *
 687:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 689:.\Generated_Source\PSoC4/ADC.c **** {
 628              		.loc 1 689 0
 629              		.cfi_startproc
 630              	.LVL39:
 631 0000 38B5     		push	{r3, r4, r5, lr}
 632              		.cfi_def_cfa_offset 16
 633              		.cfi_offset 3, -16
 634              		.cfi_offset 4, -12
 635              		.cfi_offset 5, -8
 636              		.cfi_offset 14, -4
 637              		.loc 1 689 0
 638 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 25


 639 0004 0D1C     		mov	r5, r1
 690:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 691:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 640              		.loc 1 691 0
 641 0006 0028     		cmp	r0, #0
 642 0008 02D0     		beq	.L63
 643              		.loc 1 691 0 is_stmt 0 discriminator 1
 644 000a 0020     		mov	r0, #0
 645              	.LVL40:
 646 000c FFF7FEFF 		bl	CyHalt
 647              	.LVL41:
 648              	.L63:
 692:.\Generated_Source\PSoC4/ADC.c **** 
 693:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 649              		.loc 1 693 0 is_stmt 1
 650 0010 014B     		ldr	r3, .L67
 651 0012 A400     		lsl	r4, r4, #2
 652              	.LVL42:
 653 0014 E550     		str	r5, [r4, r3]
 694:.\Generated_Source\PSoC4/ADC.c **** }
 654              		.loc 1 694 0
 655              		@ sp needed
 656              	.LVL43:
 657 0016 38BD     		pop	{r3, r4, r5, pc}
 658              	.L68:
 659              		.align	2
 660              	.L67:
 661 0018 00000000 		.word	ADC_countsPer10Volt
 662              		.cfi_endproc
 663              	.LFE14:
 664              		.size	ADC_SetGain, .-ADC_SetGain
 665              		.global	__aeabi_idiv
 666              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 667              		.align	1
 668              		.global	ADC_CountsTo_mVolts
 669              		.code	16
 670              		.thumb_func
 671              		.type	ADC_CountsTo_mVolts, %function
 672              	ADC_CountsTo_mVolts:
 673              	.LFB15:
 695:.\Generated_Source\PSoC4/ADC.c **** 
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 698:.\Generated_Source\PSoC4/ADC.c **** 
 699:.\Generated_Source\PSoC4/ADC.c **** 
 700:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 702:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 703:.\Generated_Source\PSoC4/ADC.c ****     *
 704:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 705:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 706:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 707:.\Generated_Source\PSoC4/ADC.c ****     *
 708:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 709:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 710:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 711:.\Generated_Source\PSoC4/ADC.c ****     *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 26


 712:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 713:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 714:.\Generated_Source\PSoC4/ADC.c ****     *
 715:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 716:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 717:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 718:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 719:.\Generated_Source\PSoC4/ADC.c ****     *
 720:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 721:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 722:.\Generated_Source\PSoC4/ADC.c ****     {
 674              		.loc 1 722 0
 675              		.cfi_startproc
 676              	.LVL44:
 677 0000 38B5     		push	{r3, r4, r5, lr}
 678              		.cfi_def_cfa_offset 16
 679              		.cfi_offset 3, -16
 680              		.cfi_offset 4, -12
 681              		.cfi_offset 5, -8
 682              		.cfi_offset 14, -4
 683              		.loc 1 722 0
 684 0002 041C     		mov	r4, r0
 685 0004 0D1C     		mov	r5, r1
 723:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 724:.\Generated_Source\PSoC4/ADC.c **** 
 725:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 686              		.loc 1 726 0
 687 0006 0028     		cmp	r0, #0
 688 0008 02D0     		beq	.L70
 689              		.loc 1 726 0 is_stmt 0 discriminator 1
 690 000a 0020     		mov	r0, #0
 691              	.LVL45:
 692 000c FFF7FEFF 		bl	CyHalt
 693              	.LVL46:
 694              	.L70:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 729:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 730:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 731:.\Generated_Source\PSoC4/ADC.c ****             {
 732:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 733:.\Generated_Source\PSoC4/ADC.c ****             }
 734:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 735:.\Generated_Source\PSoC4/ADC.c **** 
 736:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 737:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 695              		.loc 1 737 0 is_stmt 1
 696 0010 0D4B     		ldr	r3, .L76
 697 0012 6200     		lsl	r2, r4, #1
 698 0014 D15A     		ldrh	r1, [r2, r3]
 738:.\Generated_Source\PSoC4/ADC.c **** 
 739:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 699              		.loc 1 739 0
 700 0016 0D48     		ldr	r0, .L76+4
 737:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 701              		.loc 1 737 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 27


 702 0018 691A     		sub	r1, r5, r1
 703 001a 09B2     		sxth	r1, r1
 704              	.LVL47:
 705              		.loc 1 739 0
 706 001c 4843     		mul	r0, r1
 707 001e 0C4B     		ldr	r3, .L76+8
 708 0020 A400     		lsl	r4, r4, #2
 709              	.LVL48:
 740:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 710              		.loc 1 740 0
 711 0022 0029     		cmp	r1, #0
 712 0024 04DD     		ble	.L71
 713              		.loc 1 740 0 is_stmt 0 discriminator 1
 714 0026 1959     		ldr	r1, [r3, r4]
 715              	.LVL49:
 716 0028 CA0F     		lsr	r2, r1, #31
 717 002a 5218     		add	r2, r2, r1
 718 002c 5210     		asr	r2, r2, #1
 719 002e 04E0     		b	.L72
 720              	.LVL50:
 721              	.L71:
 722              		.loc 1 740 0 discriminator 2
 723 0030 1959     		ldr	r1, [r3, r4]
 724              	.LVL51:
 725 0032 CA0F     		lsr	r2, r1, #31
 726 0034 5218     		add	r2, r2, r1
 727 0036 5210     		asr	r2, r2, #1
 728 0038 5242     		neg	r2, r2
 729              	.L72:
 741:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 730              		.loc 1 741 0 is_stmt 1
 731 003a 1959     		ldr	r1, [r3, r4]
 732              	.LVL52:
 739:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 733              		.loc 1 739 0
 734 003c 8018     		add	r0, r0, r2
 735              	.LVL53:
 736              		.loc 1 741 0
 737 003e FFF7FEFF 		bl	__aeabi_idiv
 738              	.LVL54:
 742:.\Generated_Source\PSoC4/ADC.c **** 
 743:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 744:.\Generated_Source\PSoC4/ADC.c ****     }
 739              		.loc 1 744 0
 740              		@ sp needed
 743:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 741              		.loc 1 743 0
 742 0042 00B2     		sxth	r0, r0
 743              		.loc 1 744 0
 744 0044 38BD     		pop	{r3, r4, r5, pc}
 745              	.L77:
 746 0046 C046     		.align	2
 747              	.L76:
 748 0048 00000000 		.word	ADC_offset
 749 004c 10270000 		.word	10000
 750 0050 00000000 		.word	ADC_countsPer10Volt
 751              		.cfi_endproc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 28


 752              	.LFE15:
 753              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 754              		.global	__aeabi_lmul
 755              		.global	__aeabi_ldivmod
 756              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 757              		.align	1
 758              		.global	ADC_CountsTo_uVolts
 759              		.code	16
 760              		.thumb_func
 761              		.type	ADC_CountsTo_uVolts, %function
 762              	ADC_CountsTo_uVolts:
 763              	.LFB16:
 745:.\Generated_Source\PSoC4/ADC.c **** 
 746:.\Generated_Source\PSoC4/ADC.c **** 
 747:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 748:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 750:.\Generated_Source\PSoC4/ADC.c ****     *
 751:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 752:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 753:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 756:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 757:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 758:.\Generated_Source\PSoC4/ADC.c ****     *
 759:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 760:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 761:.\Generated_Source\PSoC4/ADC.c ****     *
 762:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 763:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 764:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 765:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 766:.\Generated_Source\PSoC4/ADC.c ****     *
 767:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 768:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 769:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 770:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 771:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 772:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 773:.\Generated_Source\PSoC4/ADC.c ****     *
 774:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 775:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 776:.\Generated_Source\PSoC4/ADC.c ****     {
 764              		.loc 1 776 0
 765              		.cfi_startproc
 766              	.LVL55:
 767 0000 38B5     		push	{r3, r4, r5, lr}
 768              		.cfi_def_cfa_offset 16
 769              		.cfi_offset 3, -16
 770              		.cfi_offset 4, -12
 771              		.cfi_offset 5, -8
 772              		.cfi_offset 14, -4
 773              		.loc 1 776 0
 774 0002 041C     		mov	r4, r0
 775 0004 0D1C     		mov	r5, r1
 777:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 29


 778:.\Generated_Source\PSoC4/ADC.c **** 
 779:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 780:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 776              		.loc 1 780 0
 777 0006 0028     		cmp	r0, #0
 778 0008 02D0     		beq	.L79
 779              		.loc 1 780 0 is_stmt 0 discriminator 1
 780 000a 0020     		mov	r0, #0
 781              	.LVL56:
 782 000c FFF7FEFF 		bl	CyHalt
 783              	.LVL57:
 784              	.L79:
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 783:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 784:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 785:.\Generated_Source\PSoC4/ADC.c ****             {
 786:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 787:.\Generated_Source\PSoC4/ADC.c ****             }
 788:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 789:.\Generated_Source\PSoC4/ADC.c **** 
 790:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 791:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 785              		.loc 1 791 0 is_stmt 1
 786 0010 0B4B     		ldr	r3, .L83+8
 787 0012 6200     		lsl	r2, r4, #1
 788 0014 D05A     		ldrh	r0, [r2, r3]
 792:.\Generated_Source\PSoC4/ADC.c **** 
 793:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 789              		.loc 1 793 0
 790 0016 0B4B     		ldr	r3, .L83+12
 791:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 791              		.loc 1 791 0
 792 0018 281A     		sub	r0, r5, r0
 793              	.LVL58:
 794              		.loc 1 793 0
 795 001a A400     		lsl	r4, r4, #2
 796              	.LVL59:
 797 001c E458     		ldr	r4, [r4, r3]
 798              	.LVL60:
 799 001e 00B2     		sxth	r0, r0
 800              	.LVL61:
 801 0020 064B     		ldr	r3, .L83+4
 802 0022 054A     		ldr	r2, .L83
 803 0024 C117     		asr	r1, r0, #31
 804 0026 FFF7FEFF 		bl	__aeabi_lmul
 805              	.LVL62:
 806 002a E317     		asr	r3, r4, #31
 807 002c 221C     		mov	r2, r4
 808 002e FFF7FEFF 		bl	__aeabi_ldivmod
 809              	.LVL63:
 794:.\Generated_Source\PSoC4/ADC.c **** 
 795:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 796:.\Generated_Source\PSoC4/ADC.c ****     }
 810              		.loc 1 796 0
 811              		@ sp needed
 812 0032 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 30


 813              	.L84:
 814 0034 C046C046 		.align	3
 815              	.L83:
 816 0038 80969800 		.word	10000000
 817 003c 00000000 		.word	0
 818 0040 00000000 		.word	ADC_offset
 819 0044 00000000 		.word	ADC_countsPer10Volt
 820              		.cfi_endproc
 821              	.LFE16:
 822              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 823              		.global	__aeabi_i2f
 824              		.global	__aeabi_fmul
 825              		.global	__aeabi_fdiv
 826              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 827              		.align	1
 828              		.global	ADC_CountsTo_Volts
 829              		.code	16
 830              		.thumb_func
 831              		.type	ADC_CountsTo_Volts, %function
 832              	ADC_CountsTo_Volts:
 833              	.LFB17:
 797:.\Generated_Source\PSoC4/ADC.c **** 
 798:.\Generated_Source\PSoC4/ADC.c **** 
 799:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 800:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 801:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 802:.\Generated_Source\PSoC4/ADC.c ****     *
 803:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 804:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 805:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 806:.\Generated_Source\PSoC4/ADC.c ****     *
 807:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 808:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 809:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 810:.\Generated_Source\PSoC4/ADC.c ****     *
 811:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 812:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 813:.\Generated_Source\PSoC4/ADC.c ****     *
 814:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 815:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 816:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 817:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 818:.\Generated_Source\PSoC4/ADC.c ****     *
 819:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 820:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 821:.\Generated_Source\PSoC4/ADC.c ****     {
 834              		.loc 1 821 0
 835              		.cfi_startproc
 836              	.LVL64:
 837 0000 38B5     		push	{r3, r4, r5, lr}
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 3, -16
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 5, -8
 842              		.cfi_offset 14, -4
 843              		.loc 1 821 0
 844 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 31


 845 0004 0D1C     		mov	r5, r1
 822:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 823:.\Generated_Source\PSoC4/ADC.c **** 
 824:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 825:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 846              		.loc 1 825 0
 847 0006 0028     		cmp	r0, #0
 848 0008 02D0     		beq	.L86
 849              		.loc 1 825 0 is_stmt 0 discriminator 1
 850 000a 0020     		mov	r0, #0
 851              	.LVL65:
 852 000c FFF7FEFF 		bl	CyHalt
 853              	.LVL66:
 854              	.L86:
 826:.\Generated_Source\PSoC4/ADC.c **** 
 827:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 828:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 829:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 830:.\Generated_Source\PSoC4/ADC.c ****             {
 831:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 832:.\Generated_Source\PSoC4/ADC.c ****             }
 833:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 834:.\Generated_Source\PSoC4/ADC.c **** 
 835:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 836:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 855              		.loc 1 836 0 is_stmt 1
 856 0010 0A4B     		ldr	r3, .L90
 857 0012 6200     		lsl	r2, r4, #1
 858 0014 D05A     		ldrh	r0, [r2, r3]
 837:.\Generated_Source\PSoC4/ADC.c **** 
 838:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 859              		.loc 1 838 0
 860 0016 0A4B     		ldr	r3, .L90+4
 836:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 861              		.loc 1 836 0
 862 0018 281A     		sub	r0, r5, r0
 863              	.LVL67:
 864              		.loc 1 838 0
 865 001a A400     		lsl	r4, r4, #2
 866              	.LVL68:
 867 001c 00B2     		sxth	r0, r0
 868              	.LVL69:
 869 001e E558     		ldr	r5, [r4, r3]
 870 0020 FFF7FEFF 		bl	__aeabi_i2f
 871              	.LVL70:
 872 0024 0749     		ldr	r1, .L90+8
 873 0026 FFF7FEFF 		bl	__aeabi_fmul
 874              	.LVL71:
 875 002a 041C     		add	r4, r0, #0
 876 002c 281C     		mov	r0, r5
 877 002e FFF7FEFF 		bl	__aeabi_i2f
 878              	.LVL72:
 879 0032 011C     		add	r1, r0, #0
 880 0034 201C     		add	r0, r4, #0
 881 0036 FFF7FEFF 		bl	__aeabi_fdiv
 882              	.LVL73:
 839:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 32


 840:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 841:.\Generated_Source\PSoC4/ADC.c ****     }
 883              		.loc 1 841 0
 884              		@ sp needed
 885 003a 38BD     		pop	{r3, r4, r5, pc}
 886              	.L91:
 887              		.align	2
 888              	.L90:
 889 003c 00000000 		.word	ADC_offset
 890 0040 00000000 		.word	ADC_countsPer10Volt
 891 0044 00002041 		.word	1092616192
 892              		.cfi_endproc
 893              	.LFE17:
 894              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 895              		.comm	ADC_countsPer10Volt,4,4
 896              		.comm	ADC_offset,2,2
 897              		.global	ADC_initVar
 898              		.bss
 899              		.set	.LANCHOR0,. + 0
 900              		.type	ADC_initVar, %object
 901              		.size	ADC_initVar, 1
 902              	ADC_initVar:
 903 0000 00       		.space	1
 904              		.text
 905              	.Letext0:
 906              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 907              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 908              		.section	.debug_info,"",%progbits
 909              	.Ldebug_info0:
 910 0000 8A050000 		.4byte	0x58a
 911 0004 0400     		.2byte	0x4
 912 0006 00000000 		.4byte	.Ldebug_abbrev0
 913 000a 04       		.byte	0x4
 914 000b 01       		.uleb128 0x1
 915 000c 70020000 		.4byte	.LASF62
 916 0010 01       		.byte	0x1
 917 0011 16030000 		.4byte	.LASF63
 918 0015 7B000000 		.4byte	.LASF64
 919 0019 00000000 		.4byte	.Ldebug_ranges0+0
 920 001d 00000000 		.4byte	0
 921 0021 00000000 		.4byte	.Ldebug_line0
 922 0025 02       		.uleb128 0x2
 923 0026 08       		.byte	0x8
 924 0027 07       		.byte	0x7
 925 0028 32000000 		.4byte	.LASF0
 926 002c 02       		.uleb128 0x2
 927 002d 08       		.byte	0x8
 928 002e 05       		.byte	0x5
 929 002f 5A000000 		.4byte	.LASF1
 930 0033 03       		.uleb128 0x3
 931 0034 04       		.byte	0x4
 932 0035 05       		.byte	0x5
 933 0036 696E7400 		.ascii	"int\000"
 934 003a 02       		.uleb128 0x2
 935 003b 02       		.byte	0x2
 936 003c 05       		.byte	0x5
 937 003d 4E030000 		.4byte	.LASF2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 33


 938 0041 02       		.uleb128 0x2
 939 0042 01       		.byte	0x1
 940 0043 06       		.byte	0x6
 941 0044 68000000 		.4byte	.LASF3
 942 0048 02       		.uleb128 0x2
 943 0049 01       		.byte	0x1
 944 004a 08       		.byte	0x8
 945 004b 35030000 		.4byte	.LASF4
 946 004f 02       		.uleb128 0x2
 947 0050 02       		.byte	0x2
 948 0051 07       		.byte	0x7
 949 0052 9B010000 		.4byte	.LASF5
 950 0056 02       		.uleb128 0x2
 951 0057 04       		.byte	0x4
 952 0058 05       		.byte	0x5
 953 0059 DD000000 		.4byte	.LASF6
 954 005d 02       		.uleb128 0x2
 955 005e 04       		.byte	0x4
 956 005f 07       		.byte	0x7
 957 0060 6A010000 		.4byte	.LASF7
 958 0064 02       		.uleb128 0x2
 959 0065 04       		.byte	0x4
 960 0066 07       		.byte	0x7
 961 0067 56010000 		.4byte	.LASF8
 962 006b 04       		.uleb128 0x4
 963 006c 0E010000 		.4byte	.LASF9
 964 0070 02       		.byte	0x2
 965 0071 A1       		.byte	0xa1
 966 0072 48000000 		.4byte	0x48
 967 0076 04       		.uleb128 0x4
 968 0077 00000000 		.4byte	.LASF10
 969 007b 02       		.byte	0x2
 970 007c A2       		.byte	0xa2
 971 007d 4F000000 		.4byte	0x4f
 972 0081 04       		.uleb128 0x4
 973 0082 25010000 		.4byte	.LASF11
 974 0086 02       		.byte	0x2
 975 0087 A3       		.byte	0xa3
 976 0088 5D000000 		.4byte	0x5d
 977 008c 04       		.uleb128 0x4
 978 008d AD030000 		.4byte	.LASF12
 979 0091 02       		.byte	0x2
 980 0092 A5       		.byte	0xa5
 981 0093 3A000000 		.4byte	0x3a
 982 0097 04       		.uleb128 0x4
 983 0098 CD000000 		.4byte	.LASF13
 984 009c 02       		.byte	0x2
 985 009d A6       		.byte	0xa6
 986 009e 56000000 		.4byte	0x56
 987 00a2 04       		.uleb128 0x4
 988 00a3 DA010000 		.4byte	.LASF14
 989 00a7 02       		.byte	0x2
 990 00a8 A7       		.byte	0xa7
 991 00a9 AD000000 		.4byte	0xad
 992 00ad 02       		.uleb128 0x2
 993 00ae 04       		.byte	0x4
 994 00af 04       		.byte	0x4
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 34


 995 00b0 4C020000 		.4byte	.LASF15
 996 00b4 02       		.uleb128 0x2
 997 00b5 08       		.byte	0x8
 998 00b6 04       		.byte	0x4
 999 00b7 1E010000 		.4byte	.LASF16
 1000 00bb 04       		.uleb128 0x4
 1001 00bc 19020000 		.4byte	.LASF17
 1002 00c0 02       		.byte	0x2
 1003 00c1 AC       		.byte	0xac
 1004 00c2 2C000000 		.4byte	0x2c
 1005 00c6 02       		.uleb128 0x2
 1006 00c7 01       		.byte	0x1
 1007 00c8 08       		.byte	0x8
 1008 00c9 6C030000 		.4byte	.LASF18
 1009 00cd 05       		.uleb128 0x5
 1010 00ce D4010000 		.4byte	.LASF19
 1011 00d2 02       		.byte	0x2
 1012 00d3 4D01     		.2byte	0x14d
 1013 00d5 D9000000 		.4byte	0xd9
 1014 00d9 06       		.uleb128 0x6
 1015 00da 81000000 		.4byte	0x81
 1016 00de 05       		.uleb128 0x5
 1017 00df 71030000 		.4byte	.LASF20
 1018 00e3 02       		.byte	0x2
 1019 00e4 5D01     		.2byte	0x15d
 1020 00e6 EA000000 		.4byte	0xea
 1021 00ea 07       		.uleb128 0x7
 1022 00eb 04       		.byte	0x4
 1023 00ec F0000000 		.4byte	0xf0
 1024 00f0 08       		.uleb128 0x8
 1025 00f1 02       		.uleb128 0x2
 1026 00f2 04       		.byte	0x4
 1027 00f3 07       		.byte	0x7
 1028 00f4 E2010000 		.4byte	.LASF21
 1029 00f8 09       		.uleb128 0x9
 1030 00f9 29000000 		.4byte	.LASF25
 1031 00fd 01       		.byte	0x1
 1032 00fe 5E       		.byte	0x5e
 1033 00ff 00000000 		.4byte	.LFB1
 1034 0103 CC000000 		.4byte	.LFE1-.LFB1
 1035 0107 01       		.uleb128 0x1
 1036 0108 9C       		.byte	0x9c
 1037 0109 60010000 		.4byte	0x160
 1038 010d 0A       		.uleb128 0xa
 1039 010e 61030000 		.4byte	.LASF22
 1040 0112 01       		.byte	0x1
 1041 0113 60       		.byte	0x60
 1042 0114 81000000 		.4byte	0x81
 1043 0118 00000000 		.4byte	.LLST0
 1044 011c 0A       		.uleb128 0xa
 1045 011d 91010000 		.4byte	.LASF23
 1046 0121 01       		.byte	0x1
 1047 0122 61       		.byte	0x61
 1048 0123 81000000 		.4byte	0x81
 1049 0127 20000000 		.4byte	.LLST1
 1050 012b 0B       		.uleb128 0xb
 1051 012c 0F000000 		.4byte	.LASF24
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 35


 1052 0130 01       		.byte	0x1
 1053 0131 62       		.byte	0x62
 1054 0132 97000000 		.4byte	0x97
 1055 0136 0001     		.2byte	0x100
 1056 0138 0C       		.uleb128 0xc
 1057 0139 0A000000 		.4byte	.LVL0
 1058 013d 3F050000 		.4byte	0x53f
 1059 0141 50010000 		.4byte	0x150
 1060 0145 0D       		.uleb128 0xd
 1061 0146 01       		.uleb128 0x1
 1062 0147 51       		.byte	0x51
 1063 0148 01       		.uleb128 0x1
 1064 0149 33       		.byte	0x33
 1065 014a 0D       		.uleb128 0xd
 1066 014b 01       		.uleb128 0x1
 1067 014c 50       		.byte	0x50
 1068 014d 01       		.uleb128 0x1
 1069 014e 3E       		.byte	0x3e
 1070 014f 00       		.byte	0
 1071 0150 0E       		.uleb128 0xe
 1072 0151 12000000 		.4byte	.LVL1
 1073 0155 55050000 		.4byte	0x555
 1074 0159 0D       		.uleb128 0xd
 1075 015a 01       		.uleb128 0x1
 1076 015b 50       		.byte	0x50
 1077 015c 01       		.uleb128 0x1
 1078 015d 3E       		.byte	0x3e
 1079 015e 00       		.byte	0
 1080 015f 00       		.byte	0
 1081 0160 0F       		.uleb128 0xf
 1082 0161 A2030000 		.4byte	.LASF26
 1083 0165 01       		.byte	0x1
 1084 0166 2701     		.2byte	0x127
 1085 0168 00000000 		.4byte	.LFB2
 1086 016c 20000000 		.4byte	.LFE2-.LFB2
 1087 0170 01       		.uleb128 0x1
 1088 0171 9C       		.byte	0x9c
 1089 0172 86010000 		.4byte	0x186
 1090 0176 0E       		.uleb128 0xe
 1091 0177 1A000000 		.4byte	.LVL9
 1092 017b 6F050000 		.4byte	0x56f
 1093 017f 0D       		.uleb128 0xd
 1094 0180 01       		.uleb128 0x1
 1095 0181 50       		.byte	0x50
 1096 0182 01       		.uleb128 0x1
 1097 0183 3A       		.byte	0x3a
 1098 0184 00       		.byte	0
 1099 0185 00       		.byte	0
 1100 0186 09       		.uleb128 0x9
 1101 0187 D3000000 		.4byte	.LASF27
 1102 018b 01       		.byte	0x1
 1103 018c 3F       		.byte	0x3f
 1104 018d 00000000 		.4byte	.LFB0
 1105 0191 1C000000 		.4byte	.LFE0-.LFB0
 1106 0195 01       		.uleb128 0x1
 1107 0196 9C       		.byte	0x9c
 1108 0197 AE010000 		.4byte	0x1ae
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 36


 1109 019b 10       		.uleb128 0x10
 1110 019c 0E000000 		.4byte	.LVL10
 1111 01a0 F8000000 		.4byte	0xf8
 1112 01a4 10       		.uleb128 0x10
 1113 01a5 16000000 		.4byte	.LVL11
 1114 01a9 60010000 		.4byte	0x160
 1115 01ad 00       		.byte	0
 1116 01ae 11       		.uleb128 0x11
 1117 01af 58030000 		.4byte	.LASF28
 1118 01b3 01       		.byte	0x1
 1119 01b4 4A01     		.2byte	0x14a
 1120 01b6 00000000 		.4byte	.LFB3
 1121 01ba 10000000 		.4byte	.LFE3-.LFB3
 1122 01be 01       		.uleb128 0x1
 1123 01bf 9C       		.byte	0x9c
 1124 01c0 11       		.uleb128 0x11
 1125 01c1 49000000 		.4byte	.LASF29
 1126 01c5 01       		.byte	0x1
 1127 01c6 6401     		.2byte	0x164
 1128 01c8 00000000 		.4byte	.LFB4
 1129 01cc 14000000 		.4byte	.LFE4-.LFB4
 1130 01d0 01       		.uleb128 0x1
 1131 01d1 9C       		.byte	0x9c
 1132 01d2 11       		.uleb128 0x11
 1133 01d3 BD010000 		.4byte	.LASF30
 1134 01d7 01       		.byte	0x1
 1135 01d8 7D01     		.2byte	0x17d
 1136 01da 00000000 		.4byte	.LFB5
 1137 01de 14000000 		.4byte	.LFE5-.LFB5
 1138 01e2 01       		.uleb128 0x1
 1139 01e3 9C       		.byte	0x9c
 1140 01e4 12       		.uleb128 0x12
 1141 01e5 05020000 		.4byte	.LASF32
 1142 01e9 01       		.byte	0x1
 1143 01ea 9F01     		.2byte	0x19f
 1144 01ec 81000000 		.4byte	0x81
 1145 01f0 00000000 		.4byte	.LFB6
 1146 01f4 24000000 		.4byte	.LFE6-.LFB6
 1147 01f8 01       		.uleb128 0x1
 1148 01f9 9C       		.byte	0x9c
 1149 01fa 1F020000 		.4byte	0x21f
 1150 01fe 13       		.uleb128 0x13
 1151 01ff 3D010000 		.4byte	.LASF34
 1152 0203 01       		.byte	0x1
 1153 0204 9F01     		.2byte	0x19f
 1154 0206 81000000 		.4byte	0x81
 1155 020a 63000000 		.4byte	.LLST2
 1156 020e 14       		.uleb128 0x14
 1157 020f 74000000 		.4byte	.LASF31
 1158 0213 01       		.byte	0x1
 1159 0214 A101     		.2byte	0x1a1
 1160 0216 81000000 		.4byte	0x81
 1161 021a 81000000 		.4byte	.LLST3
 1162 021e 00       		.byte	0
 1163 021f 12       		.uleb128 0x12
 1164 0220 C8030000 		.4byte	.LASF33
 1165 0224 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 37


 1166 0225 D501     		.2byte	0x1d5
 1167 0227 8C000000 		.4byte	0x8c
 1168 022b 00000000 		.4byte	.LFB7
 1169 022f 20000000 		.4byte	.LFE7-.LFB7
 1170 0233 01       		.uleb128 0x1
 1171 0234 9C       		.byte	0x9c
 1172 0235 69020000 		.4byte	0x269
 1173 0239 13       		.uleb128 0x13
 1174 023a 67030000 		.4byte	.LASF35
 1175 023e 01       		.byte	0x1
 1176 023f D501     		.2byte	0x1d5
 1177 0241 81000000 		.4byte	0x81
 1178 0245 A0000000 		.4byte	.LLST4
 1179 0249 14       		.uleb128 0x14
 1180 024a C1030000 		.4byte	.LASF36
 1181 024e 01       		.byte	0x1
 1182 024f D701     		.2byte	0x1d7
 1183 0251 81000000 		.4byte	0x81
 1184 0255 DA000000 		.4byte	.LLST5
 1185 0259 0E       		.uleb128 0xe
 1186 025a 0C000000 		.4byte	.LVL19
 1187 025e 80050000 		.4byte	0x580
 1188 0262 0D       		.uleb128 0xd
 1189 0263 01       		.uleb128 0x1
 1190 0264 50       		.byte	0x50
 1191 0265 01       		.uleb128 0x1
 1192 0266 30       		.byte	0x30
 1193 0267 00       		.byte	0
 1194 0268 00       		.byte	0
 1195 0269 0F       		.uleb128 0xf
 1196 026a 30020000 		.4byte	.LASF37
 1197 026e 01       		.byte	0x1
 1198 026f 0202     		.2byte	0x202
 1199 0271 00000000 		.4byte	.LFB8
 1200 0275 10000000 		.4byte	.LFE8-.LFB8
 1201 0279 01       		.uleb128 0x1
 1202 027a 9C       		.byte	0x9c
 1203 027b 90020000 		.4byte	0x290
 1204 027f 13       		.uleb128 0x13
 1205 0280 2C010000 		.4byte	.LASF38
 1206 0284 01       		.byte	0x1
 1207 0285 0202     		.2byte	0x202
 1208 0287 81000000 		.4byte	0x81
 1209 028b F8000000 		.4byte	.LLST6
 1210 028f 00       		.byte	0
 1211 0290 0F       		.uleb128 0xf
 1212 0291 FF020000 		.4byte	.LASF39
 1213 0295 01       		.byte	0x1
 1214 0296 2E02     		.2byte	0x22e
 1215 0298 00000000 		.4byte	.LFB9
 1216 029c 18000000 		.4byte	.LFE9-.LFB9
 1217 02a0 01       		.uleb128 0x1
 1218 02a1 9C       		.byte	0x9c
 1219 02a2 B7020000 		.4byte	0x2b7
 1220 02a6 13       		.uleb128 0x13
 1221 02a7 EB010000 		.4byte	.LASF40
 1222 02ab 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 38


 1223 02ac 2E02     		.2byte	0x22e
 1224 02ae 81000000 		.4byte	0x81
 1225 02b2 19010000 		.4byte	.LLST7
 1226 02b6 00       		.byte	0
 1227 02b7 0F       		.uleb128 0xf
 1228 02b8 F4010000 		.4byte	.LASF41
 1229 02bc 01       		.byte	0x1
 1230 02bd 4302     		.2byte	0x243
 1231 02bf 00000000 		.4byte	.LFB10
 1232 02c3 18000000 		.4byte	.LFE10-.LFB10
 1233 02c7 01       		.uleb128 0x1
 1234 02c8 9C       		.byte	0x9c
 1235 02c9 DE020000 		.4byte	0x2de
 1236 02cd 13       		.uleb128 0x13
 1237 02ce 52020000 		.4byte	.LASF42
 1238 02d2 01       		.byte	0x1
 1239 02d3 4302     		.2byte	0x243
 1240 02d5 81000000 		.4byte	0x81
 1241 02d9 3A010000 		.4byte	.LLST8
 1242 02dd 00       		.byte	0
 1243 02de 0F       		.uleb128 0xf
 1244 02df 45010000 		.4byte	.LASF43
 1245 02e3 01       		.byte	0x1
 1246 02e4 5B02     		.2byte	0x25b
 1247 02e6 00000000 		.4byte	.LFB11
 1248 02ea 10000000 		.4byte	.LFE11-.LFB11
 1249 02ee 01       		.uleb128 0x1
 1250 02ef 9C       		.byte	0x9c
 1251 02f0 05030000 		.4byte	0x305
 1252 02f4 13       		.uleb128 0x13
 1253 02f5 2C010000 		.4byte	.LASF38
 1254 02f9 01       		.byte	0x1
 1255 02fa 5B02     		.2byte	0x25b
 1256 02fc 81000000 		.4byte	0x81
 1257 0300 5B010000 		.4byte	.LLST9
 1258 0304 00       		.byte	0
 1259 0305 0F       		.uleb128 0xf
 1260 0306 7C010000 		.4byte	.LASF44
 1261 030a 01       		.byte	0x1
 1262 030b 7202     		.2byte	0x272
 1263 030d 00000000 		.4byte	.LFB12
 1264 0311 10000000 		.4byte	.LFE12-.LFB12
 1265 0315 01       		.uleb128 0x1
 1266 0316 9C       		.byte	0x9c
 1267 0317 2C030000 		.4byte	0x32c
 1268 031b 13       		.uleb128 0x13
 1269 031c 2C010000 		.4byte	.LASF38
 1270 0320 01       		.byte	0x1
 1271 0321 7202     		.2byte	0x272
 1272 0323 81000000 		.4byte	0x81
 1273 0327 7C010000 		.4byte	.LLST10
 1274 032b 00       		.byte	0
 1275 032c 0F       		.uleb128 0xf
 1276 032d B3030000 		.4byte	.LASF45
 1277 0331 01       		.byte	0x1
 1278 0332 8E02     		.2byte	0x28e
 1279 0334 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 39


 1280 0338 1C000000 		.4byte	.LFE13-.LFB13
 1281 033c 01       		.uleb128 0x1
 1282 033d 9C       		.byte	0x9c
 1283 033e 72030000 		.4byte	0x372
 1284 0342 13       		.uleb128 0x13
 1285 0343 67030000 		.4byte	.LASF35
 1286 0347 01       		.byte	0x1
 1287 0348 8E02     		.2byte	0x28e
 1288 034a 81000000 		.4byte	0x81
 1289 034e 9D010000 		.4byte	.LLST11
 1290 0352 13       		.uleb128 0x13
 1291 0353 91030000 		.4byte	.LASF46
 1292 0357 01       		.byte	0x1
 1293 0358 8E02     		.2byte	0x28e
 1294 035a 8C000000 		.4byte	0x8c
 1295 035e C9010000 		.4byte	.LLST12
 1296 0362 0E       		.uleb128 0xe
 1297 0363 10000000 		.4byte	.LVL37
 1298 0367 80050000 		.4byte	0x580
 1299 036b 0D       		.uleb128 0xd
 1300 036c 01       		.uleb128 0x1
 1301 036d 50       		.byte	0x50
 1302 036e 01       		.uleb128 0x1
 1303 036f 30       		.byte	0x30
 1304 0370 00       		.byte	0
 1305 0371 00       		.byte	0
 1306 0372 0F       		.uleb128 0xf
 1307 0373 40020000 		.4byte	.LASF47
 1308 0377 01       		.byte	0x1
 1309 0378 B002     		.2byte	0x2b0
 1310 037a 00000000 		.4byte	.LFB14
 1311 037e 1C000000 		.4byte	.LFE14-.LFB14
 1312 0382 01       		.uleb128 0x1
 1313 0383 9C       		.byte	0x9c
 1314 0384 B8030000 		.4byte	0x3b8
 1315 0388 13       		.uleb128 0x13
 1316 0389 67030000 		.4byte	.LASF35
 1317 038d 01       		.byte	0x1
 1318 038e B002     		.2byte	0x2b0
 1319 0390 81000000 		.4byte	0x81
 1320 0394 EA010000 		.4byte	.LLST13
 1321 0398 13       		.uleb128 0x13
 1322 0399 07000000 		.4byte	.LASF48
 1323 039d 01       		.byte	0x1
 1324 039e B002     		.2byte	0x2b0
 1325 03a0 97000000 		.4byte	0x97
 1326 03a4 16020000 		.4byte	.LLST14
 1327 03a8 0E       		.uleb128 0xe
 1328 03a9 10000000 		.4byte	.LVL41
 1329 03ad 80050000 		.4byte	0x580
 1330 03b1 0D       		.uleb128 0xd
 1331 03b2 01       		.uleb128 0x1
 1332 03b3 50       		.byte	0x50
 1333 03b4 01       		.uleb128 0x1
 1334 03b5 30       		.byte	0x30
 1335 03b6 00       		.byte	0
 1336 03b7 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 40


 1337 03b8 15       		.uleb128 0x15
 1338 03b9 5C020000 		.4byte	.LASF49
 1339 03bd 01       		.byte	0x1
 1340 03be D102     		.2byte	0x2d1
 1341 03c0 8C000000 		.4byte	0x8c
 1342 03c4 00000000 		.4byte	.LFB15
 1343 03c8 54000000 		.4byte	.LFE15-.LFB15
 1344 03cc 01       		.uleb128 0x1
 1345 03cd 9C       		.byte	0x9c
 1346 03ce 12040000 		.4byte	0x412
 1347 03d2 13       		.uleb128 0x13
 1348 03d3 67030000 		.4byte	.LASF35
 1349 03d7 01       		.byte	0x1
 1350 03d8 D102     		.2byte	0x2d1
 1351 03da 81000000 		.4byte	0x81
 1352 03de 46020000 		.4byte	.LLST15
 1353 03e2 13       		.uleb128 0x13
 1354 03e3 98030000 		.4byte	.LASF50
 1355 03e7 01       		.byte	0x1
 1356 03e8 D102     		.2byte	0x2d1
 1357 03ea 8C000000 		.4byte	0x8c
 1358 03ee 72020000 		.4byte	.LLST16
 1359 03f2 14       		.uleb128 0x14
 1360 03f3 CD010000 		.4byte	.LASF51
 1361 03f7 01       		.byte	0x1
 1362 03f8 D302     		.2byte	0x2d3
 1363 03fa 8C000000 		.4byte	0x8c
 1364 03fe A9020000 		.4byte	.LLST17
 1365 0402 0E       		.uleb128 0xe
 1366 0403 10000000 		.4byte	.LVL46
 1367 0407 80050000 		.4byte	0x580
 1368 040b 0D       		.uleb128 0xd
 1369 040c 01       		.uleb128 0x1
 1370 040d 50       		.byte	0x50
 1371 040e 01       		.uleb128 0x1
 1372 040f 30       		.byte	0x30
 1373 0410 00       		.byte	0
 1374 0411 00       		.byte	0
 1375 0412 15       		.uleb128 0x15
 1376 0413 E6000000 		.4byte	.LASF52
 1377 0417 01       		.byte	0x1
 1378 0418 0703     		.2byte	0x307
 1379 041a 97000000 		.4byte	0x97
 1380 041e 00000000 		.4byte	.LFB16
 1381 0422 48000000 		.4byte	.LFE16-.LFB16
 1382 0426 01       		.uleb128 0x1
 1383 0427 9C       		.byte	0x9c
 1384 0428 6C040000 		.4byte	0x46c
 1385 042c 13       		.uleb128 0x13
 1386 042d 67030000 		.4byte	.LASF35
 1387 0431 01       		.byte	0x1
 1388 0432 0703     		.2byte	0x307
 1389 0434 81000000 		.4byte	0x81
 1390 0438 C4020000 		.4byte	.LLST18
 1391 043c 13       		.uleb128 0x13
 1392 043d 98030000 		.4byte	.LASF50
 1393 0441 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 41


 1394 0442 0703     		.2byte	0x307
 1395 0444 8C000000 		.4byte	0x8c
 1396 0448 F0020000 		.4byte	.LLST19
 1397 044c 14       		.uleb128 0x14
 1398 044d 63010000 		.4byte	.LASF53
 1399 0451 01       		.byte	0x1
 1400 0452 0903     		.2byte	0x309
 1401 0454 BB000000 		.4byte	0xbb
 1402 0458 1C030000 		.4byte	.LLST20
 1403 045c 0E       		.uleb128 0xe
 1404 045d 10000000 		.4byte	.LVL57
 1405 0461 80050000 		.4byte	0x580
 1406 0465 0D       		.uleb128 0xd
 1407 0466 01       		.uleb128 0x1
 1408 0467 50       		.byte	0x50
 1409 0468 01       		.uleb128 0x1
 1410 0469 30       		.byte	0x30
 1411 046a 00       		.byte	0
 1412 046b 00       		.byte	0
 1413 046c 15       		.uleb128 0x15
 1414 046d 16000000 		.4byte	.LASF54
 1415 0471 01       		.byte	0x1
 1416 0472 3403     		.2byte	0x334
 1417 0474 A2000000 		.4byte	0xa2
 1418 0478 00000000 		.4byte	.LFB17
 1419 047c 48000000 		.4byte	.LFE17-.LFB17
 1420 0480 01       		.uleb128 0x1
 1421 0481 9C       		.byte	0x9c
 1422 0482 C2040000 		.4byte	0x4c2
 1423 0486 13       		.uleb128 0x13
 1424 0487 67030000 		.4byte	.LASF35
 1425 048b 01       		.byte	0x1
 1426 048c 3403     		.2byte	0x334
 1427 048e 81000000 		.4byte	0x81
 1428 0492 48030000 		.4byte	.LLST21
 1429 0496 13       		.uleb128 0x13
 1430 0497 98030000 		.4byte	.LASF50
 1431 049b 01       		.byte	0x1
 1432 049c 3403     		.2byte	0x334
 1433 049e 8C000000 		.4byte	0x8c
 1434 04a2 74030000 		.4byte	.LLST22
 1435 04a6 16       		.uleb128 0x16
 1436 04a7 8B010000 		.4byte	.LASF55
 1437 04ab 01       		.byte	0x1
 1438 04ac 3603     		.2byte	0x336
 1439 04ae A2000000 		.4byte	0xa2
 1440 04b2 0E       		.uleb128 0xe
 1441 04b3 10000000 		.4byte	.LVL66
 1442 04b7 80050000 		.4byte	0x580
 1443 04bb 0D       		.uleb128 0xd
 1444 04bc 01       		.uleb128 0x1
 1445 04bd 50       		.byte	0x50
 1446 04be 01       		.uleb128 0x1
 1447 04bf 30       		.byte	0x30
 1448 04c0 00       		.byte	0
 1449 04c1 00       		.byte	0
 1450 04c2 17       		.uleb128 0x17
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 42


 1451 04c3 81000000 		.4byte	0x81
 1452 04c7 D2040000 		.4byte	0x4d2
 1453 04cb 18       		.uleb128 0x18
 1454 04cc F1000000 		.4byte	0xf1
 1455 04d0 00       		.byte	0
 1456 04d1 00       		.byte	0
 1457 04d2 19       		.uleb128 0x19
 1458 04d3 7E030000 		.4byte	.LASF56
 1459 04d7 01       		.byte	0x1
 1460 04d8 21       		.byte	0x21
 1461 04d9 DD040000 		.4byte	0x4dd
 1462 04dd 1A       		.uleb128 0x1a
 1463 04de C2040000 		.4byte	0x4c2
 1464 04e2 1B       		.uleb128 0x1b
 1465 04e3 31010000 		.4byte	.LASF57
 1466 04e7 01       		.byte	0x1
 1467 04e8 18       		.byte	0x18
 1468 04e9 6B000000 		.4byte	0x6b
 1469 04ed 05       		.uleb128 0x5
 1470 04ee 03       		.byte	0x3
 1471 04ef 00000000 		.4byte	ADC_initVar
 1472 04f3 17       		.uleb128 0x17
 1473 04f4 8C000000 		.4byte	0x8c
 1474 04f8 03050000 		.4byte	0x503
 1475 04fc 18       		.uleb128 0x18
 1476 04fd F1000000 		.4byte	0xf1
 1477 0501 00       		.byte	0
 1478 0502 00       		.byte	0
 1479 0503 1B       		.uleb128 0x1b
 1480 0504 43030000 		.4byte	.LASF58
 1481 0508 01       		.byte	0x1
 1482 0509 19       		.byte	0x19
 1483 050a 14050000 		.4byte	0x514
 1484 050e 05       		.uleb128 0x5
 1485 050f 03       		.byte	0x3
 1486 0510 00000000 		.4byte	ADC_offset
 1487 0514 06       		.uleb128 0x6
 1488 0515 F3040000 		.4byte	0x4f3
 1489 0519 17       		.uleb128 0x17
 1490 051a 97000000 		.4byte	0x97
 1491 051e 29050000 		.4byte	0x529
 1492 0522 18       		.uleb128 0x18
 1493 0523 F1000000 		.4byte	0xf1
 1494 0527 00       		.byte	0
 1495 0528 00       		.byte	0
 1496 0529 1B       		.uleb128 0x1b
 1497 052a FA000000 		.4byte	.LASF59
 1498 052e 01       		.byte	0x1
 1499 052f 1A       		.byte	0x1a
 1500 0530 3A050000 		.4byte	0x53a
 1501 0534 05       		.uleb128 0x5
 1502 0535 03       		.byte	0x3
 1503 0536 00000000 		.4byte	ADC_countsPer10Volt
 1504 053a 06       		.uleb128 0x6
 1505 053b 19050000 		.4byte	0x519
 1506 053f 1C       		.uleb128 0x1c
 1507 0540 1F020000 		.4byte	.LASF60
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 43


 1508 0544 03       		.byte	0x3
 1509 0545 6D       		.byte	0x6d
 1510 0546 55050000 		.4byte	0x555
 1511 054a 1D       		.uleb128 0x1d
 1512 054b 6B000000 		.4byte	0x6b
 1513 054f 1D       		.uleb128 0x1d
 1514 0550 6B000000 		.4byte	0x6b
 1515 0554 00       		.byte	0
 1516 0555 1E       		.uleb128 0x1e
 1517 0556 AE010000 		.4byte	.LASF65
 1518 055a 03       		.byte	0x3
 1519 055b 6A       		.byte	0x6a
 1520 055c DE000000 		.4byte	0xde
 1521 0560 6F050000 		.4byte	0x56f
 1522 0564 1D       		.uleb128 0x1d
 1523 0565 6B000000 		.4byte	0x6b
 1524 0569 1D       		.uleb128 0x1d
 1525 056a DE000000 		.4byte	0xde
 1526 056e 00       		.byte	0
 1527 056f 1C       		.uleb128 0x1c
 1528 0570 14010000 		.4byte	.LASF61
 1529 0574 03       		.byte	0x3
 1530 0575 7C       		.byte	0x7c
 1531 0576 80050000 		.4byte	0x580
 1532 057a 1D       		.uleb128 0x1d
 1533 057b 76000000 		.4byte	0x76
 1534 057f 00       		.byte	0
 1535 0580 1F       		.uleb128 0x1f
 1536 0581 0F030000 		.4byte	.LASF66
 1537 0585 03       		.byte	0x3
 1538 0586 84       		.byte	0x84
 1539 0587 1D       		.uleb128 0x1d
 1540 0588 6B000000 		.4byte	0x6b
 1541 058c 00       		.byte	0
 1542 058d 00       		.byte	0
 1543              		.section	.debug_abbrev,"",%progbits
 1544              	.Ldebug_abbrev0:
 1545 0000 01       		.uleb128 0x1
 1546 0001 11       		.uleb128 0x11
 1547 0002 01       		.byte	0x1
 1548 0003 25       		.uleb128 0x25
 1549 0004 0E       		.uleb128 0xe
 1550 0005 13       		.uleb128 0x13
 1551 0006 0B       		.uleb128 0xb
 1552 0007 03       		.uleb128 0x3
 1553 0008 0E       		.uleb128 0xe
 1554 0009 1B       		.uleb128 0x1b
 1555 000a 0E       		.uleb128 0xe
 1556 000b 55       		.uleb128 0x55
 1557 000c 17       		.uleb128 0x17
 1558 000d 11       		.uleb128 0x11
 1559 000e 01       		.uleb128 0x1
 1560 000f 10       		.uleb128 0x10
 1561 0010 17       		.uleb128 0x17
 1562 0011 00       		.byte	0
 1563 0012 00       		.byte	0
 1564 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 44


 1565 0014 24       		.uleb128 0x24
 1566 0015 00       		.byte	0
 1567 0016 0B       		.uleb128 0xb
 1568 0017 0B       		.uleb128 0xb
 1569 0018 3E       		.uleb128 0x3e
 1570 0019 0B       		.uleb128 0xb
 1571 001a 03       		.uleb128 0x3
 1572 001b 0E       		.uleb128 0xe
 1573 001c 00       		.byte	0
 1574 001d 00       		.byte	0
 1575 001e 03       		.uleb128 0x3
 1576 001f 24       		.uleb128 0x24
 1577 0020 00       		.byte	0
 1578 0021 0B       		.uleb128 0xb
 1579 0022 0B       		.uleb128 0xb
 1580 0023 3E       		.uleb128 0x3e
 1581 0024 0B       		.uleb128 0xb
 1582 0025 03       		.uleb128 0x3
 1583 0026 08       		.uleb128 0x8
 1584 0027 00       		.byte	0
 1585 0028 00       		.byte	0
 1586 0029 04       		.uleb128 0x4
 1587 002a 16       		.uleb128 0x16
 1588 002b 00       		.byte	0
 1589 002c 03       		.uleb128 0x3
 1590 002d 0E       		.uleb128 0xe
 1591 002e 3A       		.uleb128 0x3a
 1592 002f 0B       		.uleb128 0xb
 1593 0030 3B       		.uleb128 0x3b
 1594 0031 0B       		.uleb128 0xb
 1595 0032 49       		.uleb128 0x49
 1596 0033 13       		.uleb128 0x13
 1597 0034 00       		.byte	0
 1598 0035 00       		.byte	0
 1599 0036 05       		.uleb128 0x5
 1600 0037 16       		.uleb128 0x16
 1601 0038 00       		.byte	0
 1602 0039 03       		.uleb128 0x3
 1603 003a 0E       		.uleb128 0xe
 1604 003b 3A       		.uleb128 0x3a
 1605 003c 0B       		.uleb128 0xb
 1606 003d 3B       		.uleb128 0x3b
 1607 003e 05       		.uleb128 0x5
 1608 003f 49       		.uleb128 0x49
 1609 0040 13       		.uleb128 0x13
 1610 0041 00       		.byte	0
 1611 0042 00       		.byte	0
 1612 0043 06       		.uleb128 0x6
 1613 0044 35       		.uleb128 0x35
 1614 0045 00       		.byte	0
 1615 0046 49       		.uleb128 0x49
 1616 0047 13       		.uleb128 0x13
 1617 0048 00       		.byte	0
 1618 0049 00       		.byte	0
 1619 004a 07       		.uleb128 0x7
 1620 004b 0F       		.uleb128 0xf
 1621 004c 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 45


 1622 004d 0B       		.uleb128 0xb
 1623 004e 0B       		.uleb128 0xb
 1624 004f 49       		.uleb128 0x49
 1625 0050 13       		.uleb128 0x13
 1626 0051 00       		.byte	0
 1627 0052 00       		.byte	0
 1628 0053 08       		.uleb128 0x8
 1629 0054 15       		.uleb128 0x15
 1630 0055 00       		.byte	0
 1631 0056 27       		.uleb128 0x27
 1632 0057 19       		.uleb128 0x19
 1633 0058 00       		.byte	0
 1634 0059 00       		.byte	0
 1635 005a 09       		.uleb128 0x9
 1636 005b 2E       		.uleb128 0x2e
 1637 005c 01       		.byte	0x1
 1638 005d 3F       		.uleb128 0x3f
 1639 005e 19       		.uleb128 0x19
 1640 005f 03       		.uleb128 0x3
 1641 0060 0E       		.uleb128 0xe
 1642 0061 3A       		.uleb128 0x3a
 1643 0062 0B       		.uleb128 0xb
 1644 0063 3B       		.uleb128 0x3b
 1645 0064 0B       		.uleb128 0xb
 1646 0065 27       		.uleb128 0x27
 1647 0066 19       		.uleb128 0x19
 1648 0067 11       		.uleb128 0x11
 1649 0068 01       		.uleb128 0x1
 1650 0069 12       		.uleb128 0x12
 1651 006a 06       		.uleb128 0x6
 1652 006b 40       		.uleb128 0x40
 1653 006c 18       		.uleb128 0x18
 1654 006d 9742     		.uleb128 0x2117
 1655 006f 19       		.uleb128 0x19
 1656 0070 01       		.uleb128 0x1
 1657 0071 13       		.uleb128 0x13
 1658 0072 00       		.byte	0
 1659 0073 00       		.byte	0
 1660 0074 0A       		.uleb128 0xa
 1661 0075 34       		.uleb128 0x34
 1662 0076 00       		.byte	0
 1663 0077 03       		.uleb128 0x3
 1664 0078 0E       		.uleb128 0xe
 1665 0079 3A       		.uleb128 0x3a
 1666 007a 0B       		.uleb128 0xb
 1667 007b 3B       		.uleb128 0x3b
 1668 007c 0B       		.uleb128 0xb
 1669 007d 49       		.uleb128 0x49
 1670 007e 13       		.uleb128 0x13
 1671 007f 02       		.uleb128 0x2
 1672 0080 17       		.uleb128 0x17
 1673 0081 00       		.byte	0
 1674 0082 00       		.byte	0
 1675 0083 0B       		.uleb128 0xb
 1676 0084 34       		.uleb128 0x34
 1677 0085 00       		.byte	0
 1678 0086 03       		.uleb128 0x3
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 46


 1679 0087 0E       		.uleb128 0xe
 1680 0088 3A       		.uleb128 0x3a
 1681 0089 0B       		.uleb128 0xb
 1682 008a 3B       		.uleb128 0x3b
 1683 008b 0B       		.uleb128 0xb
 1684 008c 49       		.uleb128 0x49
 1685 008d 13       		.uleb128 0x13
 1686 008e 1C       		.uleb128 0x1c
 1687 008f 05       		.uleb128 0x5
 1688 0090 00       		.byte	0
 1689 0091 00       		.byte	0
 1690 0092 0C       		.uleb128 0xc
 1691 0093 898201   		.uleb128 0x4109
 1692 0096 01       		.byte	0x1
 1693 0097 11       		.uleb128 0x11
 1694 0098 01       		.uleb128 0x1
 1695 0099 31       		.uleb128 0x31
 1696 009a 13       		.uleb128 0x13
 1697 009b 01       		.uleb128 0x1
 1698 009c 13       		.uleb128 0x13
 1699 009d 00       		.byte	0
 1700 009e 00       		.byte	0
 1701 009f 0D       		.uleb128 0xd
 1702 00a0 8A8201   		.uleb128 0x410a
 1703 00a3 00       		.byte	0
 1704 00a4 02       		.uleb128 0x2
 1705 00a5 18       		.uleb128 0x18
 1706 00a6 9142     		.uleb128 0x2111
 1707 00a8 18       		.uleb128 0x18
 1708 00a9 00       		.byte	0
 1709 00aa 00       		.byte	0
 1710 00ab 0E       		.uleb128 0xe
 1711 00ac 898201   		.uleb128 0x4109
 1712 00af 01       		.byte	0x1
 1713 00b0 11       		.uleb128 0x11
 1714 00b1 01       		.uleb128 0x1
 1715 00b2 31       		.uleb128 0x31
 1716 00b3 13       		.uleb128 0x13
 1717 00b4 00       		.byte	0
 1718 00b5 00       		.byte	0
 1719 00b6 0F       		.uleb128 0xf
 1720 00b7 2E       		.uleb128 0x2e
 1721 00b8 01       		.byte	0x1
 1722 00b9 3F       		.uleb128 0x3f
 1723 00ba 19       		.uleb128 0x19
 1724 00bb 03       		.uleb128 0x3
 1725 00bc 0E       		.uleb128 0xe
 1726 00bd 3A       		.uleb128 0x3a
 1727 00be 0B       		.uleb128 0xb
 1728 00bf 3B       		.uleb128 0x3b
 1729 00c0 05       		.uleb128 0x5
 1730 00c1 27       		.uleb128 0x27
 1731 00c2 19       		.uleb128 0x19
 1732 00c3 11       		.uleb128 0x11
 1733 00c4 01       		.uleb128 0x1
 1734 00c5 12       		.uleb128 0x12
 1735 00c6 06       		.uleb128 0x6
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 47


 1736 00c7 40       		.uleb128 0x40
 1737 00c8 18       		.uleb128 0x18
 1738 00c9 9742     		.uleb128 0x2117
 1739 00cb 19       		.uleb128 0x19
 1740 00cc 01       		.uleb128 0x1
 1741 00cd 13       		.uleb128 0x13
 1742 00ce 00       		.byte	0
 1743 00cf 00       		.byte	0
 1744 00d0 10       		.uleb128 0x10
 1745 00d1 898201   		.uleb128 0x4109
 1746 00d4 00       		.byte	0
 1747 00d5 11       		.uleb128 0x11
 1748 00d6 01       		.uleb128 0x1
 1749 00d7 31       		.uleb128 0x31
 1750 00d8 13       		.uleb128 0x13
 1751 00d9 00       		.byte	0
 1752 00da 00       		.byte	0
 1753 00db 11       		.uleb128 0x11
 1754 00dc 2E       		.uleb128 0x2e
 1755 00dd 00       		.byte	0
 1756 00de 3F       		.uleb128 0x3f
 1757 00df 19       		.uleb128 0x19
 1758 00e0 03       		.uleb128 0x3
 1759 00e1 0E       		.uleb128 0xe
 1760 00e2 3A       		.uleb128 0x3a
 1761 00e3 0B       		.uleb128 0xb
 1762 00e4 3B       		.uleb128 0x3b
 1763 00e5 05       		.uleb128 0x5
 1764 00e6 27       		.uleb128 0x27
 1765 00e7 19       		.uleb128 0x19
 1766 00e8 11       		.uleb128 0x11
 1767 00e9 01       		.uleb128 0x1
 1768 00ea 12       		.uleb128 0x12
 1769 00eb 06       		.uleb128 0x6
 1770 00ec 40       		.uleb128 0x40
 1771 00ed 18       		.uleb128 0x18
 1772 00ee 9742     		.uleb128 0x2117
 1773 00f0 19       		.uleb128 0x19
 1774 00f1 00       		.byte	0
 1775 00f2 00       		.byte	0
 1776 00f3 12       		.uleb128 0x12
 1777 00f4 2E       		.uleb128 0x2e
 1778 00f5 01       		.byte	0x1
 1779 00f6 3F       		.uleb128 0x3f
 1780 00f7 19       		.uleb128 0x19
 1781 00f8 03       		.uleb128 0x3
 1782 00f9 0E       		.uleb128 0xe
 1783 00fa 3A       		.uleb128 0x3a
 1784 00fb 0B       		.uleb128 0xb
 1785 00fc 3B       		.uleb128 0x3b
 1786 00fd 05       		.uleb128 0x5
 1787 00fe 27       		.uleb128 0x27
 1788 00ff 19       		.uleb128 0x19
 1789 0100 49       		.uleb128 0x49
 1790 0101 13       		.uleb128 0x13
 1791 0102 11       		.uleb128 0x11
 1792 0103 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 48


 1793 0104 12       		.uleb128 0x12
 1794 0105 06       		.uleb128 0x6
 1795 0106 40       		.uleb128 0x40
 1796 0107 18       		.uleb128 0x18
 1797 0108 9742     		.uleb128 0x2117
 1798 010a 19       		.uleb128 0x19
 1799 010b 01       		.uleb128 0x1
 1800 010c 13       		.uleb128 0x13
 1801 010d 00       		.byte	0
 1802 010e 00       		.byte	0
 1803 010f 13       		.uleb128 0x13
 1804 0110 05       		.uleb128 0x5
 1805 0111 00       		.byte	0
 1806 0112 03       		.uleb128 0x3
 1807 0113 0E       		.uleb128 0xe
 1808 0114 3A       		.uleb128 0x3a
 1809 0115 0B       		.uleb128 0xb
 1810 0116 3B       		.uleb128 0x3b
 1811 0117 05       		.uleb128 0x5
 1812 0118 49       		.uleb128 0x49
 1813 0119 13       		.uleb128 0x13
 1814 011a 02       		.uleb128 0x2
 1815 011b 17       		.uleb128 0x17
 1816 011c 00       		.byte	0
 1817 011d 00       		.byte	0
 1818 011e 14       		.uleb128 0x14
 1819 011f 34       		.uleb128 0x34
 1820 0120 00       		.byte	0
 1821 0121 03       		.uleb128 0x3
 1822 0122 0E       		.uleb128 0xe
 1823 0123 3A       		.uleb128 0x3a
 1824 0124 0B       		.uleb128 0xb
 1825 0125 3B       		.uleb128 0x3b
 1826 0126 05       		.uleb128 0x5
 1827 0127 49       		.uleb128 0x49
 1828 0128 13       		.uleb128 0x13
 1829 0129 02       		.uleb128 0x2
 1830 012a 17       		.uleb128 0x17
 1831 012b 00       		.byte	0
 1832 012c 00       		.byte	0
 1833 012d 15       		.uleb128 0x15
 1834 012e 2E       		.uleb128 0x2e
 1835 012f 01       		.byte	0x1
 1836 0130 3F       		.uleb128 0x3f
 1837 0131 19       		.uleb128 0x19
 1838 0132 03       		.uleb128 0x3
 1839 0133 0E       		.uleb128 0xe
 1840 0134 3A       		.uleb128 0x3a
 1841 0135 0B       		.uleb128 0xb
 1842 0136 3B       		.uleb128 0x3b
 1843 0137 05       		.uleb128 0x5
 1844 0138 27       		.uleb128 0x27
 1845 0139 19       		.uleb128 0x19
 1846 013a 49       		.uleb128 0x49
 1847 013b 13       		.uleb128 0x13
 1848 013c 11       		.uleb128 0x11
 1849 013d 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 49


 1850 013e 12       		.uleb128 0x12
 1851 013f 06       		.uleb128 0x6
 1852 0140 40       		.uleb128 0x40
 1853 0141 18       		.uleb128 0x18
 1854 0142 9642     		.uleb128 0x2116
 1855 0144 19       		.uleb128 0x19
 1856 0145 01       		.uleb128 0x1
 1857 0146 13       		.uleb128 0x13
 1858 0147 00       		.byte	0
 1859 0148 00       		.byte	0
 1860 0149 16       		.uleb128 0x16
 1861 014a 34       		.uleb128 0x34
 1862 014b 00       		.byte	0
 1863 014c 03       		.uleb128 0x3
 1864 014d 0E       		.uleb128 0xe
 1865 014e 3A       		.uleb128 0x3a
 1866 014f 0B       		.uleb128 0xb
 1867 0150 3B       		.uleb128 0x3b
 1868 0151 05       		.uleb128 0x5
 1869 0152 49       		.uleb128 0x49
 1870 0153 13       		.uleb128 0x13
 1871 0154 00       		.byte	0
 1872 0155 00       		.byte	0
 1873 0156 17       		.uleb128 0x17
 1874 0157 01       		.uleb128 0x1
 1875 0158 01       		.byte	0x1
 1876 0159 49       		.uleb128 0x49
 1877 015a 13       		.uleb128 0x13
 1878 015b 01       		.uleb128 0x1
 1879 015c 13       		.uleb128 0x13
 1880 015d 00       		.byte	0
 1881 015e 00       		.byte	0
 1882 015f 18       		.uleb128 0x18
 1883 0160 21       		.uleb128 0x21
 1884 0161 00       		.byte	0
 1885 0162 49       		.uleb128 0x49
 1886 0163 13       		.uleb128 0x13
 1887 0164 2F       		.uleb128 0x2f
 1888 0165 0B       		.uleb128 0xb
 1889 0166 00       		.byte	0
 1890 0167 00       		.byte	0
 1891 0168 19       		.uleb128 0x19
 1892 0169 34       		.uleb128 0x34
 1893 016a 00       		.byte	0
 1894 016b 03       		.uleb128 0x3
 1895 016c 0E       		.uleb128 0xe
 1896 016d 3A       		.uleb128 0x3a
 1897 016e 0B       		.uleb128 0xb
 1898 016f 3B       		.uleb128 0x3b
 1899 0170 0B       		.uleb128 0xb
 1900 0171 49       		.uleb128 0x49
 1901 0172 13       		.uleb128 0x13
 1902 0173 00       		.byte	0
 1903 0174 00       		.byte	0
 1904 0175 1A       		.uleb128 0x1a
 1905 0176 26       		.uleb128 0x26
 1906 0177 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 50


 1907 0178 49       		.uleb128 0x49
 1908 0179 13       		.uleb128 0x13
 1909 017a 00       		.byte	0
 1910 017b 00       		.byte	0
 1911 017c 1B       		.uleb128 0x1b
 1912 017d 34       		.uleb128 0x34
 1913 017e 00       		.byte	0
 1914 017f 03       		.uleb128 0x3
 1915 0180 0E       		.uleb128 0xe
 1916 0181 3A       		.uleb128 0x3a
 1917 0182 0B       		.uleb128 0xb
 1918 0183 3B       		.uleb128 0x3b
 1919 0184 0B       		.uleb128 0xb
 1920 0185 49       		.uleb128 0x49
 1921 0186 13       		.uleb128 0x13
 1922 0187 3F       		.uleb128 0x3f
 1923 0188 19       		.uleb128 0x19
 1924 0189 02       		.uleb128 0x2
 1925 018a 18       		.uleb128 0x18
 1926 018b 00       		.byte	0
 1927 018c 00       		.byte	0
 1928 018d 1C       		.uleb128 0x1c
 1929 018e 2E       		.uleb128 0x2e
 1930 018f 01       		.byte	0x1
 1931 0190 3F       		.uleb128 0x3f
 1932 0191 19       		.uleb128 0x19
 1933 0192 03       		.uleb128 0x3
 1934 0193 0E       		.uleb128 0xe
 1935 0194 3A       		.uleb128 0x3a
 1936 0195 0B       		.uleb128 0xb
 1937 0196 3B       		.uleb128 0x3b
 1938 0197 0B       		.uleb128 0xb
 1939 0198 27       		.uleb128 0x27
 1940 0199 19       		.uleb128 0x19
 1941 019a 3C       		.uleb128 0x3c
 1942 019b 19       		.uleb128 0x19
 1943 019c 01       		.uleb128 0x1
 1944 019d 13       		.uleb128 0x13
 1945 019e 00       		.byte	0
 1946 019f 00       		.byte	0
 1947 01a0 1D       		.uleb128 0x1d
 1948 01a1 05       		.uleb128 0x5
 1949 01a2 00       		.byte	0
 1950 01a3 49       		.uleb128 0x49
 1951 01a4 13       		.uleb128 0x13
 1952 01a5 00       		.byte	0
 1953 01a6 00       		.byte	0
 1954 01a7 1E       		.uleb128 0x1e
 1955 01a8 2E       		.uleb128 0x2e
 1956 01a9 01       		.byte	0x1
 1957 01aa 3F       		.uleb128 0x3f
 1958 01ab 19       		.uleb128 0x19
 1959 01ac 03       		.uleb128 0x3
 1960 01ad 0E       		.uleb128 0xe
 1961 01ae 3A       		.uleb128 0x3a
 1962 01af 0B       		.uleb128 0xb
 1963 01b0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 51


 1964 01b1 0B       		.uleb128 0xb
 1965 01b2 27       		.uleb128 0x27
 1966 01b3 19       		.uleb128 0x19
 1967 01b4 49       		.uleb128 0x49
 1968 01b5 13       		.uleb128 0x13
 1969 01b6 3C       		.uleb128 0x3c
 1970 01b7 19       		.uleb128 0x19
 1971 01b8 01       		.uleb128 0x1
 1972 01b9 13       		.uleb128 0x13
 1973 01ba 00       		.byte	0
 1974 01bb 00       		.byte	0
 1975 01bc 1F       		.uleb128 0x1f
 1976 01bd 2E       		.uleb128 0x2e
 1977 01be 01       		.byte	0x1
 1978 01bf 3F       		.uleb128 0x3f
 1979 01c0 19       		.uleb128 0x19
 1980 01c1 03       		.uleb128 0x3
 1981 01c2 0E       		.uleb128 0xe
 1982 01c3 3A       		.uleb128 0x3a
 1983 01c4 0B       		.uleb128 0xb
 1984 01c5 3B       		.uleb128 0x3b
 1985 01c6 0B       		.uleb128 0xb
 1986 01c7 27       		.uleb128 0x27
 1987 01c8 19       		.uleb128 0x19
 1988 01c9 3C       		.uleb128 0x3c
 1989 01ca 19       		.uleb128 0x19
 1990 01cb 00       		.byte	0
 1991 01cc 00       		.byte	0
 1992 01cd 00       		.byte	0
 1993              		.section	.debug_loc,"",%progbits
 1994              	.Ldebug_loc0:
 1995              	.LLST0:
 1996 0000 5C000000 		.4byte	.LVL6
 1997 0004 72000000 		.4byte	.LVL8
 1998 0008 0200     		.2byte	0x2
 1999 000a 30       		.byte	0x30
 2000 000b 9F       		.byte	0x9f
 2001 000c 72000000 		.4byte	.LVL8
 2002 0010 CC000000 		.4byte	.LFE1
 2003 0014 0200     		.2byte	0x2
 2004 0016 31       		.byte	0x31
 2005 0017 9F       		.byte	0x9f
 2006 0018 00000000 		.4byte	0
 2007 001c 00000000 		.4byte	0
 2008              	.LLST1:
 2009 0020 52000000 		.4byte	.LVL2
 2010 0024 54000000 		.4byte	.LVL3
 2011 0028 0100     		.2byte	0x1
 2012 002a 54       		.byte	0x54
 2013 002b 54000000 		.4byte	.LVL3
 2014 002f 56000000 		.4byte	.LVL4
 2015 0033 0100     		.2byte	0x1
 2016 0035 50       		.byte	0x50
 2017 0036 56000000 		.4byte	.LVL4
 2018 003a 5A000000 		.4byte	.LVL5
 2019 003e 0100     		.2byte	0x1
 2020 0040 53       		.byte	0x53
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 52


 2021 0041 5A000000 		.4byte	.LVL5
 2022 0045 5C000000 		.4byte	.LVL6
 2023 0049 0200     		.2byte	0x2
 2024 004b 71       		.byte	0x71
 2025 004c 00       		.sleb128 0
 2026 004d 5C000000 		.4byte	.LVL6
 2027 0051 CC000000 		.4byte	.LFE1
 2028 0055 0400     		.2byte	0x4
 2029 0057 0A       		.byte	0xa
 2030 0058 0003     		.2byte	0x300
 2031 005a 9F       		.byte	0x9f
 2032 005b 00000000 		.4byte	0
 2033 005f 00000000 		.4byte	0
 2034              	.LLST2:
 2035 0063 00000000 		.4byte	.LVL12
 2036 0067 04000000 		.4byte	.LVL13
 2037 006b 0100     		.2byte	0x1
 2038 006d 50       		.byte	0x50
 2039 006e 04000000 		.4byte	.LVL13
 2040 0072 24000000 		.4byte	.LFE6
 2041 0076 0100     		.2byte	0x1
 2042 0078 51       		.byte	0x51
 2043 0079 00000000 		.4byte	0
 2044 007d 00000000 		.4byte	0
 2045              	.LLST3:
 2046 0081 00000000 		.4byte	.LVL12
 2047 0085 08000000 		.4byte	.LVL14
 2048 0089 0200     		.2byte	0x2
 2049 008b 30       		.byte	0x30
 2050 008c 9F       		.byte	0x9f
 2051 008d 10000000 		.4byte	.LVL15
 2052 0091 1C000000 		.4byte	.LVL16
 2053 0095 0100     		.2byte	0x1
 2054 0097 50       		.byte	0x50
 2055 0098 00000000 		.4byte	0
 2056 009c 00000000 		.4byte	0
 2057              	.LLST4:
 2058 00a0 00000000 		.4byte	.LVL17
 2059 00a4 08000000 		.4byte	.LVL18
 2060 00a8 0100     		.2byte	0x1
 2061 00aa 50       		.byte	0x50
 2062 00ab 08000000 		.4byte	.LVL18
 2063 00af 12000000 		.4byte	.LVL22
 2064 00b3 0400     		.2byte	0x4
 2065 00b5 F3       		.byte	0xf3
 2066 00b6 01       		.uleb128 0x1
 2067 00b7 50       		.byte	0x50
 2068 00b8 9F       		.byte	0x9f
 2069 00b9 12000000 		.4byte	.LVL22
 2070 00bd 16000000 		.4byte	.LVL23
 2071 00c1 0100     		.2byte	0x1
 2072 00c3 50       		.byte	0x50
 2073 00c4 16000000 		.4byte	.LVL23
 2074 00c8 20000000 		.4byte	.LFE7
 2075 00cc 0400     		.2byte	0x4
 2076 00ce F3       		.byte	0xf3
 2077 00cf 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 53


 2078 00d0 50       		.byte	0x50
 2079 00d1 9F       		.byte	0x9f
 2080 00d2 00000000 		.4byte	0
 2081 00d6 00000000 		.4byte	0
 2082              	.LLST5:
 2083 00da 0E000000 		.4byte	.LVL20
 2084 00de 10000000 		.4byte	.LVL21
 2085 00e2 0100     		.2byte	0x1
 2086 00e4 50       		.byte	0x50
 2087 00e5 18000000 		.4byte	.LVL24
 2088 00e9 20000000 		.4byte	.LFE7
 2089 00ed 0100     		.2byte	0x1
 2090 00ef 50       		.byte	0x50
 2091 00f0 00000000 		.4byte	0
 2092 00f4 00000000 		.4byte	0
 2093              	.LLST6:
 2094 00f8 00000000 		.4byte	.LVL25
 2095 00fc 04000000 		.4byte	.LVL26
 2096 0100 0100     		.2byte	0x1
 2097 0102 50       		.byte	0x50
 2098 0103 04000000 		.4byte	.LVL26
 2099 0107 10000000 		.4byte	.LFE8
 2100 010b 0400     		.2byte	0x4
 2101 010d F3       		.byte	0xf3
 2102 010e 01       		.uleb128 0x1
 2103 010f 50       		.byte	0x50
 2104 0110 9F       		.byte	0x9f
 2105 0111 00000000 		.4byte	0
 2106 0115 00000000 		.4byte	0
 2107              	.LLST7:
 2108 0119 00000000 		.4byte	.LVL27
 2109 011d 04000000 		.4byte	.LVL28
 2110 0121 0100     		.2byte	0x1
 2111 0123 50       		.byte	0x50
 2112 0124 04000000 		.4byte	.LVL28
 2113 0128 18000000 		.4byte	.LFE9
 2114 012c 0400     		.2byte	0x4
 2115 012e F3       		.byte	0xf3
 2116 012f 01       		.uleb128 0x1
 2117 0130 50       		.byte	0x50
 2118 0131 9F       		.byte	0x9f
 2119 0132 00000000 		.4byte	0
 2120 0136 00000000 		.4byte	0
 2121              	.LLST8:
 2122 013a 00000000 		.4byte	.LVL29
 2123 013e 04000000 		.4byte	.LVL30
 2124 0142 0100     		.2byte	0x1
 2125 0144 50       		.byte	0x50
 2126 0145 04000000 		.4byte	.LVL30
 2127 0149 18000000 		.4byte	.LFE10
 2128 014d 0400     		.2byte	0x4
 2129 014f F3       		.byte	0xf3
 2130 0150 01       		.uleb128 0x1
 2131 0151 50       		.byte	0x50
 2132 0152 9F       		.byte	0x9f
 2133 0153 00000000 		.4byte	0
 2134 0157 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 54


 2135              	.LLST9:
 2136 015b 00000000 		.4byte	.LVL31
 2137 015f 04000000 		.4byte	.LVL32
 2138 0163 0100     		.2byte	0x1
 2139 0165 50       		.byte	0x50
 2140 0166 04000000 		.4byte	.LVL32
 2141 016a 10000000 		.4byte	.LFE11
 2142 016e 0400     		.2byte	0x4
 2143 0170 F3       		.byte	0xf3
 2144 0171 01       		.uleb128 0x1
 2145 0172 50       		.byte	0x50
 2146 0173 9F       		.byte	0x9f
 2147 0174 00000000 		.4byte	0
 2148 0178 00000000 		.4byte	0
 2149              	.LLST10:
 2150 017c 00000000 		.4byte	.LVL33
 2151 0180 04000000 		.4byte	.LVL34
 2152 0184 0100     		.2byte	0x1
 2153 0186 50       		.byte	0x50
 2154 0187 04000000 		.4byte	.LVL34
 2155 018b 10000000 		.4byte	.LFE12
 2156 018f 0400     		.2byte	0x4
 2157 0191 F3       		.byte	0xf3
 2158 0192 01       		.uleb128 0x1
 2159 0193 50       		.byte	0x50
 2160 0194 9F       		.byte	0x9f
 2161 0195 00000000 		.4byte	0
 2162 0199 00000000 		.4byte	0
 2163              	.LLST11:
 2164 019d 00000000 		.4byte	.LVL35
 2165 01a1 0C000000 		.4byte	.LVL36
 2166 01a5 0100     		.2byte	0x1
 2167 01a7 50       		.byte	0x50
 2168 01a8 0C000000 		.4byte	.LVL36
 2169 01ac 14000000 		.4byte	.LVL38
 2170 01b0 0100     		.2byte	0x1
 2171 01b2 54       		.byte	0x54
 2172 01b3 14000000 		.4byte	.LVL38
 2173 01b7 1C000000 		.4byte	.LFE13
 2174 01bb 0400     		.2byte	0x4
 2175 01bd F3       		.byte	0xf3
 2176 01be 01       		.uleb128 0x1
 2177 01bf 50       		.byte	0x50
 2178 01c0 9F       		.byte	0x9f
 2179 01c1 00000000 		.4byte	0
 2180 01c5 00000000 		.4byte	0
 2181              	.LLST12:
 2182 01c9 00000000 		.4byte	.LVL35
 2183 01cd 0F000000 		.4byte	.LVL37-1
 2184 01d1 0100     		.2byte	0x1
 2185 01d3 51       		.byte	0x51
 2186 01d4 0F000000 		.4byte	.LVL37-1
 2187 01d8 1C000000 		.4byte	.LFE13
 2188 01dc 0400     		.2byte	0x4
 2189 01de F3       		.byte	0xf3
 2190 01df 01       		.uleb128 0x1
 2191 01e0 51       		.byte	0x51
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 55


 2192 01e1 9F       		.byte	0x9f
 2193 01e2 00000000 		.4byte	0
 2194 01e6 00000000 		.4byte	0
 2195              	.LLST13:
 2196 01ea 00000000 		.4byte	.LVL39
 2197 01ee 0C000000 		.4byte	.LVL40
 2198 01f2 0100     		.2byte	0x1
 2199 01f4 50       		.byte	0x50
 2200 01f5 0C000000 		.4byte	.LVL40
 2201 01f9 14000000 		.4byte	.LVL42
 2202 01fd 0100     		.2byte	0x1
 2203 01ff 54       		.byte	0x54
 2204 0200 14000000 		.4byte	.LVL42
 2205 0204 1C000000 		.4byte	.LFE14
 2206 0208 0400     		.2byte	0x4
 2207 020a F3       		.byte	0xf3
 2208 020b 01       		.uleb128 0x1
 2209 020c 50       		.byte	0x50
 2210 020d 9F       		.byte	0x9f
 2211 020e 00000000 		.4byte	0
 2212 0212 00000000 		.4byte	0
 2213              	.LLST14:
 2214 0216 00000000 		.4byte	.LVL39
 2215 021a 0F000000 		.4byte	.LVL41-1
 2216 021e 0100     		.2byte	0x1
 2217 0220 51       		.byte	0x51
 2218 0221 0F000000 		.4byte	.LVL41-1
 2219 0225 16000000 		.4byte	.LVL43
 2220 0229 0100     		.2byte	0x1
 2221 022b 55       		.byte	0x55
 2222 022c 16000000 		.4byte	.LVL43
 2223 0230 1C000000 		.4byte	.LFE14
 2224 0234 0800     		.2byte	0x8
 2225 0236 F3       		.byte	0xf3
 2226 0237 01       		.uleb128 0x1
 2227 0238 50       		.byte	0x50
 2228 0239 32       		.byte	0x32
 2229 023a 24       		.byte	0x24
 2230 023b 73       		.byte	0x73
 2231 023c 00       		.sleb128 0
 2232 023d 22       		.byte	0x22
 2233 023e 00000000 		.4byte	0
 2234 0242 00000000 		.4byte	0
 2235              	.LLST15:
 2236 0246 00000000 		.4byte	.LVL44
 2237 024a 0C000000 		.4byte	.LVL45
 2238 024e 0100     		.2byte	0x1
 2239 0250 50       		.byte	0x50
 2240 0251 0C000000 		.4byte	.LVL45
 2241 0255 22000000 		.4byte	.LVL48
 2242 0259 0100     		.2byte	0x1
 2243 025b 54       		.byte	0x54
 2244 025c 22000000 		.4byte	.LVL48
 2245 0260 54000000 		.4byte	.LFE15
 2246 0264 0400     		.2byte	0x4
 2247 0266 F3       		.byte	0xf3
 2248 0267 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 56


 2249 0268 50       		.byte	0x50
 2250 0269 9F       		.byte	0x9f
 2251 026a 00000000 		.4byte	0
 2252 026e 00000000 		.4byte	0
 2253              	.LLST16:
 2254 0272 00000000 		.4byte	.LVL44
 2255 0276 0F000000 		.4byte	.LVL46-1
 2256 027a 0100     		.2byte	0x1
 2257 027c 51       		.byte	0x51
 2258 027d 0F000000 		.4byte	.LVL46-1
 2259 0281 1C000000 		.4byte	.LVL47
 2260 0285 0400     		.2byte	0x4
 2261 0287 F3       		.byte	0xf3
 2262 0288 01       		.uleb128 0x1
 2263 0289 51       		.byte	0x51
 2264 028a 9F       		.byte	0x9f
 2265 028b 1C000000 		.4byte	.LVL47
 2266 028f 28000000 		.4byte	.LVL49
 2267 0293 0100     		.2byte	0x1
 2268 0295 51       		.byte	0x51
 2269 0296 30000000 		.4byte	.LVL50
 2270 029a 32000000 		.4byte	.LVL51
 2271 029e 0100     		.2byte	0x1
 2272 02a0 51       		.byte	0x51
 2273 02a1 00000000 		.4byte	0
 2274 02a5 00000000 		.4byte	0
 2275              	.LLST17:
 2276 02a9 3C000000 		.4byte	.LVL52
 2277 02ad 3E000000 		.4byte	.LVL53
 2278 02b1 0900     		.2byte	0x9
 2279 02b3 70       		.byte	0x70
 2280 02b4 00       		.sleb128 0
 2281 02b5 72       		.byte	0x72
 2282 02b6 00       		.sleb128 0
 2283 02b7 22       		.byte	0x22
 2284 02b8 71       		.byte	0x71
 2285 02b9 00       		.sleb128 0
 2286 02ba 1B       		.byte	0x1b
 2287 02bb 9F       		.byte	0x9f
 2288 02bc 00000000 		.4byte	0
 2289 02c0 00000000 		.4byte	0
 2290              	.LLST18:
 2291 02c4 00000000 		.4byte	.LVL55
 2292 02c8 0C000000 		.4byte	.LVL56
 2293 02cc 0100     		.2byte	0x1
 2294 02ce 50       		.byte	0x50
 2295 02cf 0C000000 		.4byte	.LVL56
 2296 02d3 1C000000 		.4byte	.LVL59
 2297 02d7 0100     		.2byte	0x1
 2298 02d9 54       		.byte	0x54
 2299 02da 1C000000 		.4byte	.LVL59
 2300 02de 48000000 		.4byte	.LFE16
 2301 02e2 0400     		.2byte	0x4
 2302 02e4 F3       		.byte	0xf3
 2303 02e5 01       		.uleb128 0x1
 2304 02e6 50       		.byte	0x50
 2305 02e7 9F       		.byte	0x9f
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 57


 2306 02e8 00000000 		.4byte	0
 2307 02ec 00000000 		.4byte	0
 2308              	.LLST19:
 2309 02f0 00000000 		.4byte	.LVL55
 2310 02f4 0F000000 		.4byte	.LVL57-1
 2311 02f8 0100     		.2byte	0x1
 2312 02fa 51       		.byte	0x51
 2313 02fb 0F000000 		.4byte	.LVL57-1
 2314 02ff 1A000000 		.4byte	.LVL58
 2315 0303 0400     		.2byte	0x4
 2316 0305 F3       		.byte	0xf3
 2317 0306 01       		.uleb128 0x1
 2318 0307 51       		.byte	0x51
 2319 0308 9F       		.byte	0x9f
 2320 0309 1A000000 		.4byte	.LVL58
 2321 030d 20000000 		.4byte	.LVL61
 2322 0311 0100     		.2byte	0x1
 2323 0313 50       		.byte	0x50
 2324 0314 00000000 		.4byte	0
 2325 0318 00000000 		.4byte	0
 2326              	.LLST20:
 2327 031c 1E000000 		.4byte	.LVL60
 2328 0320 20000000 		.4byte	.LVL61
 2329 0324 1A00     		.2byte	0x1a
 2330 0326 70       		.byte	0x70
 2331 0327 00       		.sleb128 0
 2332 0328 F7       		.byte	0xf7
 2333 0329 3A       		.uleb128 0x3a
 2334 032a F7       		.byte	0xf7
 2335 032b 25       		.uleb128 0x25
 2336 032c 0C       		.byte	0xc
 2337 032d 80969800 		.4byte	0x989680
 2338 0331 F7       		.byte	0xf7
 2339 0332 25       		.uleb128 0x25
 2340 0333 1E       		.byte	0x1e
 2341 0334 F7       		.byte	0xf7
 2342 0335 2C       		.uleb128 0x2c
 2343 0336 74       		.byte	0x74
 2344 0337 00       		.sleb128 0
 2345 0338 F7       		.byte	0xf7
 2346 0339 33       		.uleb128 0x33
 2347 033a F7       		.byte	0xf7
 2348 033b 2C       		.uleb128 0x2c
 2349 033c 1B       		.byte	0x1b
 2350 033d F7       		.byte	0xf7
 2351 033e 25       		.uleb128 0x25
 2352 033f 9F       		.byte	0x9f
 2353 0340 00000000 		.4byte	0
 2354 0344 00000000 		.4byte	0
 2355              	.LLST21:
 2356 0348 00000000 		.4byte	.LVL64
 2357 034c 0C000000 		.4byte	.LVL65
 2358 0350 0100     		.2byte	0x1
 2359 0352 50       		.byte	0x50
 2360 0353 0C000000 		.4byte	.LVL65
 2361 0357 1C000000 		.4byte	.LVL68
 2362 035b 0100     		.2byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 58


 2363 035d 54       		.byte	0x54
 2364 035e 1C000000 		.4byte	.LVL68
 2365 0362 48000000 		.4byte	.LFE17
 2366 0366 0400     		.2byte	0x4
 2367 0368 F3       		.byte	0xf3
 2368 0369 01       		.uleb128 0x1
 2369 036a 50       		.byte	0x50
 2370 036b 9F       		.byte	0x9f
 2371 036c 00000000 		.4byte	0
 2372 0370 00000000 		.4byte	0
 2373              	.LLST22:
 2374 0374 00000000 		.4byte	.LVL64
 2375 0378 0F000000 		.4byte	.LVL66-1
 2376 037c 0100     		.2byte	0x1
 2377 037e 51       		.byte	0x51
 2378 037f 0F000000 		.4byte	.LVL66-1
 2379 0383 1A000000 		.4byte	.LVL67
 2380 0387 0400     		.2byte	0x4
 2381 0389 F3       		.byte	0xf3
 2382 038a 01       		.uleb128 0x1
 2383 038b 51       		.byte	0x51
 2384 038c 9F       		.byte	0x9f
 2385 038d 1A000000 		.4byte	.LVL67
 2386 0391 1E000000 		.4byte	.LVL69
 2387 0395 0100     		.2byte	0x1
 2388 0397 50       		.byte	0x50
 2389 0398 00000000 		.4byte	0
 2390 039c 00000000 		.4byte	0
 2391              		.section	.debug_aranges,"",%progbits
 2392 0000 A4000000 		.4byte	0xa4
 2393 0004 0200     		.2byte	0x2
 2394 0006 00000000 		.4byte	.Ldebug_info0
 2395 000a 04       		.byte	0x4
 2396 000b 00       		.byte	0
 2397 000c 0000     		.2byte	0
 2398 000e 0000     		.2byte	0
 2399 0010 00000000 		.4byte	.LFB1
 2400 0014 CC000000 		.4byte	.LFE1-.LFB1
 2401 0018 00000000 		.4byte	.LFB2
 2402 001c 20000000 		.4byte	.LFE2-.LFB2
 2403 0020 00000000 		.4byte	.LFB0
 2404 0024 1C000000 		.4byte	.LFE0-.LFB0
 2405 0028 00000000 		.4byte	.LFB3
 2406 002c 10000000 		.4byte	.LFE3-.LFB3
 2407 0030 00000000 		.4byte	.LFB4
 2408 0034 14000000 		.4byte	.LFE4-.LFB4
 2409 0038 00000000 		.4byte	.LFB5
 2410 003c 14000000 		.4byte	.LFE5-.LFB5
 2411 0040 00000000 		.4byte	.LFB6
 2412 0044 24000000 		.4byte	.LFE6-.LFB6
 2413 0048 00000000 		.4byte	.LFB7
 2414 004c 20000000 		.4byte	.LFE7-.LFB7
 2415 0050 00000000 		.4byte	.LFB8
 2416 0054 10000000 		.4byte	.LFE8-.LFB8
 2417 0058 00000000 		.4byte	.LFB9
 2418 005c 18000000 		.4byte	.LFE9-.LFB9
 2419 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 59


 2420 0064 18000000 		.4byte	.LFE10-.LFB10
 2421 0068 00000000 		.4byte	.LFB11
 2422 006c 10000000 		.4byte	.LFE11-.LFB11
 2423 0070 00000000 		.4byte	.LFB12
 2424 0074 10000000 		.4byte	.LFE12-.LFB12
 2425 0078 00000000 		.4byte	.LFB13
 2426 007c 1C000000 		.4byte	.LFE13-.LFB13
 2427 0080 00000000 		.4byte	.LFB14
 2428 0084 1C000000 		.4byte	.LFE14-.LFB14
 2429 0088 00000000 		.4byte	.LFB15
 2430 008c 54000000 		.4byte	.LFE15-.LFB15
 2431 0090 00000000 		.4byte	.LFB16
 2432 0094 48000000 		.4byte	.LFE16-.LFB16
 2433 0098 00000000 		.4byte	.LFB17
 2434 009c 48000000 		.4byte	.LFE17-.LFB17
 2435 00a0 00000000 		.4byte	0
 2436 00a4 00000000 		.4byte	0
 2437              		.section	.debug_ranges,"",%progbits
 2438              	.Ldebug_ranges0:
 2439 0000 00000000 		.4byte	.LFB1
 2440 0004 CC000000 		.4byte	.LFE1
 2441 0008 00000000 		.4byte	.LFB2
 2442 000c 20000000 		.4byte	.LFE2
 2443 0010 00000000 		.4byte	.LFB0
 2444 0014 1C000000 		.4byte	.LFE0
 2445 0018 00000000 		.4byte	.LFB3
 2446 001c 10000000 		.4byte	.LFE3
 2447 0020 00000000 		.4byte	.LFB4
 2448 0024 14000000 		.4byte	.LFE4
 2449 0028 00000000 		.4byte	.LFB5
 2450 002c 14000000 		.4byte	.LFE5
 2451 0030 00000000 		.4byte	.LFB6
 2452 0034 24000000 		.4byte	.LFE6
 2453 0038 00000000 		.4byte	.LFB7
 2454 003c 20000000 		.4byte	.LFE7
 2455 0040 00000000 		.4byte	.LFB8
 2456 0044 10000000 		.4byte	.LFE8
 2457 0048 00000000 		.4byte	.LFB9
 2458 004c 18000000 		.4byte	.LFE9
 2459 0050 00000000 		.4byte	.LFB10
 2460 0054 18000000 		.4byte	.LFE10
 2461 0058 00000000 		.4byte	.LFB11
 2462 005c 10000000 		.4byte	.LFE11
 2463 0060 00000000 		.4byte	.LFB12
 2464 0064 10000000 		.4byte	.LFE12
 2465 0068 00000000 		.4byte	.LFB13
 2466 006c 1C000000 		.4byte	.LFE13
 2467 0070 00000000 		.4byte	.LFB14
 2468 0074 1C000000 		.4byte	.LFE14
 2469 0078 00000000 		.4byte	.LFB15
 2470 007c 54000000 		.4byte	.LFE15
 2471 0080 00000000 		.4byte	.LFB16
 2472 0084 48000000 		.4byte	.LFE16
 2473 0088 00000000 		.4byte	.LFB17
 2474 008c 48000000 		.4byte	.LFE17
 2475 0090 00000000 		.4byte	0
 2476 0094 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 60


 2477              		.section	.debug_line,"",%progbits
 2478              	.Ldebug_line0:
 2479 0000 4F020000 		.section	.debug_str,"MS",%progbits,1
 2479      02004D00 
 2479      00000201 
 2479      FB0E0D00 
 2479      01010101 
 2480              	.LASF10:
 2481 0000 75696E74 		.ascii	"uint16\000"
 2481      313600
 2482              	.LASF48:
 2483 0007 61646347 		.ascii	"adcGain\000"
 2483      61696E00 
 2484              	.LASF24:
 2485 000f 636F756E 		.ascii	"counts\000"
 2485      747300
 2486              	.LASF54:
 2487 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2487      436F756E 
 2487      7473546F 
 2487      5F566F6C 
 2487      747300
 2488              	.LASF25:
 2489 0029 4144435F 		.ascii	"ADC_Init\000"
 2489      496E6974 
 2489      00
 2490              	.LASF0:
 2491 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2491      206C6F6E 
 2491      6720756E 
 2491      7369676E 
 2491      65642069 
 2492              	.LASF29:
 2493 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2493      53746172 
 2493      74436F6E 
 2493      76657274 
 2493      00
 2494              	.LASF1:
 2495 005a 6C6F6E67 		.ascii	"long long int\000"
 2495      206C6F6E 
 2495      6720696E 
 2495      7400
 2496              	.LASF3:
 2497 0068 7369676E 		.ascii	"signed char\000"
 2497      65642063 
 2497      68617200 
 2498              	.LASF31:
 2499 0074 73746174 		.ascii	"status\000"
 2499      757300
 2500              	.LASF64:
 2501 007b 433A5C55 		.ascii	"C:\\Users\\SNFU\\Documents\\T-50_UAV_Project\\Softw"
 2501      73657273 
 2501      5C534E46 
 2501      555C446F 
 2501      63756D65 
 2502 00a9 6172655C 		.ascii	"are\\T-50_Project\\T-50_Project.cydsn\000"
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 61


 2502      542D3530 
 2502      5F50726F 
 2502      6A656374 
 2502      5C542D35 
 2503              	.LASF13:
 2504 00cd 696E7433 		.ascii	"int32\000"
 2504      3200
 2505              	.LASF27:
 2506 00d3 4144435F 		.ascii	"ADC_Start\000"
 2506      53746172 
 2506      7400
 2507              	.LASF6:
 2508 00dd 6C6F6E67 		.ascii	"long int\000"
 2508      20696E74 
 2508      00
 2509              	.LASF52:
 2510 00e6 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2510      436F756E 
 2510      7473546F 
 2510      5F75566F 
 2510      6C747300 
 2511              	.LASF59:
 2512 00fa 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2512      636F756E 
 2512      74735065 
 2512      72313056 
 2512      6F6C7400 
 2513              	.LASF9:
 2514 010e 75696E74 		.ascii	"uint8\000"
 2514      3800
 2515              	.LASF61:
 2516 0114 43794465 		.ascii	"CyDelayUs\000"
 2516      6C617955 
 2516      7300
 2517              	.LASF16:
 2518 011e 646F7562 		.ascii	"double\000"
 2518      6C6500
 2519              	.LASF11:
 2520 0125 75696E74 		.ascii	"uint32\000"
 2520      333200
 2521              	.LASF38:
 2522 012c 6D61736B 		.ascii	"mask\000"
 2522      00
 2523              	.LASF57:
 2524 0131 4144435F 		.ascii	"ADC_initVar\000"
 2524      696E6974 
 2524      56617200 
 2525              	.LASF34:
 2526 013d 7265744D 		.ascii	"retMode\000"
 2526      6F646500 
 2527              	.LASF43:
 2528 0145 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2528      5365744C 
 2528      696D6974 
 2528      4D61736B 
 2528      00
 2529              	.LASF8:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 62


 2530 0156 756E7369 		.ascii	"unsigned int\000"
 2530      676E6564 
 2530      20696E74 
 2530      00
 2531              	.LASF53:
 2532 0163 75566F6C 		.ascii	"uVolts\000"
 2532      747300
 2533              	.LASF7:
 2534 016a 6C6F6E67 		.ascii	"long unsigned int\000"
 2534      20756E73 
 2534      69676E65 
 2534      6420696E 
 2534      7400
 2535              	.LASF44:
 2536 017c 4144435F 		.ascii	"ADC_SetSatMask\000"
 2536      53657453 
 2536      61744D61 
 2536      736B00
 2537              	.LASF55:
 2538 018b 766F6C74 		.ascii	"volts\000"
 2538      7300
 2539              	.LASF23:
 2540 0191 746D7052 		.ascii	"tmpRegVal\000"
 2540      65675661 
 2540      6C00
 2541              	.LASF5:
 2542 019b 73686F72 		.ascii	"short unsigned int\000"
 2542      7420756E 
 2542      7369676E 
 2542      65642069 
 2542      6E7400
 2543              	.LASF65:
 2544 01ae 4379496E 		.ascii	"CyIntSetVector\000"
 2544      74536574 
 2544      56656374 
 2544      6F7200
 2545              	.LASF30:
 2546 01bd 4144435F 		.ascii	"ADC_StopConvert\000"
 2546      53746F70 
 2546      436F6E76 
 2546      65727400 
 2547              	.LASF51:
 2548 01cd 6D566F6C 		.ascii	"mVolts\000"
 2548      747300
 2549              	.LASF19:
 2550 01d4 72656733 		.ascii	"reg32\000"
 2550      3200
 2551              	.LASF14:
 2552 01da 666C6F61 		.ascii	"float32\000"
 2552      74333200 
 2553              	.LASF21:
 2554 01e2 73697A65 		.ascii	"sizetype\000"
 2554      74797065 
 2554      00
 2555              	.LASF40:
 2556 01eb 6C6F774C 		.ascii	"lowLimit\000"
 2556      696D6974 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 63


 2556      00
 2557              	.LASF41:
 2558 01f4 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2558      53657448 
 2558      6967684C 
 2558      696D6974 
 2558      00
 2559              	.LASF32:
 2560 0205 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2560      4973456E 
 2560      64436F6E 
 2560      76657273 
 2560      696F6E00 
 2561              	.LASF17:
 2562 0219 696E7436 		.ascii	"int64\000"
 2562      3400
 2563              	.LASF60:
 2564 021f 4379496E 		.ascii	"CyIntSetPriority\000"
 2564      74536574 
 2564      5072696F 
 2564      72697479 
 2564      00
 2565              	.LASF37:
 2566 0230 4144435F 		.ascii	"ADC_SetChanMask\000"
 2566      53657443 
 2566      68616E4D 
 2566      61736B00 
 2567              	.LASF47:
 2568 0240 4144435F 		.ascii	"ADC_SetGain\000"
 2568      53657447 
 2568      61696E00 
 2569              	.LASF15:
 2570 024c 666C6F61 		.ascii	"float\000"
 2570      7400
 2571              	.LASF42:
 2572 0252 68696768 		.ascii	"highLimit\000"
 2572      4C696D69 
 2572      7400
 2573              	.LASF49:
 2574 025c 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2574      436F756E 
 2574      7473546F 
 2574      5F6D566F 
 2574      6C747300 
 2575              	.LASF62:
 2576 0270 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2576      4320342E 
 2576      382E3420 
 2576      32303134 
 2576      30353236 
 2577 02a3 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 2577      20726576 
 2577      6973696F 
 2577      6E203231 
 2577      31333538 
 2578 02d6 73202D66 		.ascii	"s -ffunction-sections -finline-functions\000"
 2578      66756E63 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 64


 2578      74696F6E 
 2578      2D736563 
 2578      74696F6E 
 2579              	.LASF39:
 2580 02ff 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2580      5365744C 
 2580      6F774C69 
 2580      6D697400 
 2581              	.LASF66:
 2582 030f 43794861 		.ascii	"CyHalt\000"
 2582      6C7400
 2583              	.LASF63:
 2584 0316 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2584      6E657261 
 2584      7465645F 
 2584      536F7572 
 2584      63655C50 
 2585              	.LASF4:
 2586 0335 756E7369 		.ascii	"unsigned char\000"
 2586      676E6564 
 2586      20636861 
 2586      7200
 2587              	.LASF58:
 2588 0343 4144435F 		.ascii	"ADC_offset\000"
 2588      6F666673 
 2588      657400
 2589              	.LASF2:
 2590 034e 73686F72 		.ascii	"short int\000"
 2590      7420696E 
 2590      7400
 2591              	.LASF28:
 2592 0358 4144435F 		.ascii	"ADC_Stop\000"
 2592      53746F70 
 2592      00
 2593              	.LASF22:
 2594 0361 63684E75 		.ascii	"chNum\000"
 2594      6D00
 2595              	.LASF35:
 2596 0367 6368616E 		.ascii	"chan\000"
 2596      00
 2597              	.LASF18:
 2598 036c 63686172 		.ascii	"char\000"
 2598      00
 2599              	.LASF20:
 2600 0371 63796973 		.ascii	"cyisraddress\000"
 2600      72616464 
 2600      72657373 
 2600      00
 2601              	.LASF56:
 2602 037e 4144435F 		.ascii	"ADC_channelsConfig\000"
 2602      6368616E 
 2602      6E656C73 
 2602      436F6E66 
 2602      696700
 2603              	.LASF46:
 2604 0391 6F666673 		.ascii	"offset\000"
 2604      657400
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\cccpROyA.s 			page 65


 2605              	.LASF50:
 2606 0398 61646343 		.ascii	"adcCounts\000"
 2606      6F756E74 
 2606      7300
 2607              	.LASF26:
 2608 03a2 4144435F 		.ascii	"ADC_Enable\000"
 2608      456E6162 
 2608      6C6500
 2609              	.LASF12:
 2610 03ad 696E7431 		.ascii	"int16\000"
 2610      3600
 2611              	.LASF45:
 2612 03b3 4144435F 		.ascii	"ADC_SetOffset\000"
 2612      5365744F 
 2612      66667365 
 2612      7400
 2613              	.LASF36:
 2614 03c1 72657375 		.ascii	"result\000"
 2614      6C7400
 2615              	.LASF33:
 2616 03c8 4144435F 		.ascii	"ADC_GetResult16\000"
 2616      47657452 
 2616      6573756C 
 2616      74313600 
 2617              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
