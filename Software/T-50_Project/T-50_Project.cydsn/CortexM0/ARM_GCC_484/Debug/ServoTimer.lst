ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ServoTimer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ServoTimer_Init,"ax",%progbits
  18              		.align	1
  19              		.global	ServoTimer_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ServoTimer_Init, %function
  23              	ServoTimer_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ServoTimer.c"
   1:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ServoTimer.c **** * File Name: ServoTimer.c
   3:.\Generated_Source\PSoC4/ServoTimer.c **** * Version 2.0
   4:.\Generated_Source\PSoC4/ServoTimer.c **** *
   5:.\Generated_Source\PSoC4/ServoTimer.c **** * Description:
   6:.\Generated_Source\PSoC4/ServoTimer.c **** *  This file provides the source code to the API for the ServoTimer
   7:.\Generated_Source\PSoC4/ServoTimer.c **** *  component
   8:.\Generated_Source\PSoC4/ServoTimer.c **** *
   9:.\Generated_Source\PSoC4/ServoTimer.c **** * Note:
  10:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
  11:.\Generated_Source\PSoC4/ServoTimer.c **** *
  12:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/ServoTimer.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/ServoTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/ServoTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/ServoTimer.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/ServoTimer.c **** 
  19:.\Generated_Source\PSoC4/ServoTimer.c **** #include "ServoTimer.h"
  20:.\Generated_Source\PSoC4/ServoTimer.c **** 
  21:.\Generated_Source\PSoC4/ServoTimer.c **** uint8 ServoTimer_initVar = 0u;
  22:.\Generated_Source\PSoC4/ServoTimer.c **** 
  23:.\Generated_Source\PSoC4/ServoTimer.c **** 
  24:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Init
  26:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/ServoTimer.c **** *
  28:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
  29:.\Generated_Source\PSoC4/ServoTimer.c **** *  Initialize/Restore default ServoTimer configuration.
  30:.\Generated_Source\PSoC4/ServoTimer.c **** *
  31:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
  32:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 2


  33:.\Generated_Source\PSoC4/ServoTimer.c **** *
  34:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
  35:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
  36:.\Generated_Source\PSoC4/ServoTimer.c **** *
  37:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Init(void)
  39:.\Generated_Source\PSoC4/ServoTimer.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:.\Generated_Source\PSoC4/ServoTimer.c **** 
  41:.\Generated_Source\PSoC4/ServoTimer.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__QUAD == ServoTimer_CONFIG)
  43:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_CONTROL_REG = ServoTimer_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/ServoTimer.c ****         
  45:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  = ServoTimer_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/ServoTimer.c **** 
  48:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_SetInterruptMode(ServoTimer_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/ServoTimer.c ****         
  51:.\Generated_Source\PSoC4/ServoTimer.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_SetCounterMode(ServoTimer_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WritePeriod(ServoTimer_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WriteCounter(ServoTimer_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__QUAD == ServoTimer_CONFIG) */
  56:.\Generated_Source\PSoC4/ServoTimer.c **** 
  57:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__TIMER == ServoTimer_CONFIG)
  58:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_CONTROL_REG = ServoTimer_CTRL_TIMER_BASE_CONFIG;
  28              		.loc 1 58 0
  29 0000 084A     		ldr	r2, .L2
  30 0002 0023     		mov	r3, #0
  31 0004 1360     		str	r3, [r2]
  59:.\Generated_Source\PSoC4/ServoTimer.c ****         
  60:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  = ServoTimer_TIMER_SIGNALS_MODES;
  32              		.loc 1 61 0
  33 0006 084A     		ldr	r2, .L2+4
  34 0008 0C21     		mov	r1, #12
  35 000a 1160     		str	r1, [r2]
  36              	.LVL0:
  37              	.LBB10:
  38              	.LBB11:
  62:.\Generated_Source\PSoC4/ServoTimer.c ****     
  63:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_SetInterruptMode(ServoTimer_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/ServoTimer.c ****         
  66:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WritePeriod(ServoTimer_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/ServoTimer.c **** 
  69:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__COMPARE == ServoTimer_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCompare(ServoTimer_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/ServoTimer.c **** 
  72:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (1u == ServoTimer_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_WriteCompareBuf(ServoTimer_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* (1u == ServoTimer_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__COMPARE == ServoTimer_TC_COMP_CAP_MODE) */
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 3


  77:.\Generated_Source\PSoC4/ServoTimer.c **** 
  78:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer_CY_TCPWM_V2 && ServoTimer_TIMER_UPDOWN_CNT_USED && !ServoTimer_CY_TCPWM_400
  80:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/ServoTimer.c ****         #elif(ServoTimer__COUNT_DOWN == ServoTimer_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCounter(ServoTimer_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/ServoTimer.c ****         #else
  84:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif /* (ServoTimer_CY_TCPWM_V2 && ServoTimer_TIMER_UPDOWN_CNT_USED && !ServoTimer_CY_TCP
  86:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__TIMER == ServoTimer_CONFIG) */
  87:.\Generated_Source\PSoC4/ServoTimer.c **** 
  88:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__PWM_SEL == ServoTimer_CONFIG)
  89:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_CONTROL_REG = ServoTimer_CTRL_PWM_BASE_CONFIG;
  90:.\Generated_Source\PSoC4/ServoTimer.c **** 
  91:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM_PR == ServoTimer_PWM_MODE)
  92:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |= ServoTimer_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCounter(ServoTimer_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/ServoTimer.c ****         #else
  95:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |= ServoTimer_CTRL_PWM_ALIGN | ServoTimer_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/ServoTimer.c ****             
  97:.\Generated_Source\PSoC4/ServoTimer.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer_CY_TCPWM_V2 && ServoTimer_PWM_UPDOWN_CNT_USED && !ServoTimer_CY_TCPWM_4
  99:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/ServoTimer.c ****             #elif (ServoTimer__RIGHT == ServoTimer_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_WriteCounter(ServoTimer_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/ServoTimer.c ****             #else 
 103:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* (ServoTimer_CY_TCPWM_V2 && ServoTimer_PWM_UPDOWN_CNT_USED && !ServoTimer_CY_
 105:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM_PR == ServoTimer_PWM_MODE) */
 106:.\Generated_Source\PSoC4/ServoTimer.c **** 
 107:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM_DT == ServoTimer_PWM_MODE)
 108:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |= ServoTimer_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM_DT == ServoTimer_PWM_MODE) */
 110:.\Generated_Source\PSoC4/ServoTimer.c **** 
 111:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM == ServoTimer_PWM_MODE)
 112:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |= ServoTimer_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM == ServoTimer_PWM_MODE) */
 114:.\Generated_Source\PSoC4/ServoTimer.c **** 
 115:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  = ServoTimer_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/ServoTimer.c ****     
 118:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_SetInterruptMode(ServoTimer_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/ServoTimer.c **** 
 121:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM_PR == ServoTimer_PWM_MODE)
 123:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/ServoTimer.c ****                     (ServoTimer_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/ServoTimer.c ****                     ServoTimer_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/ServoTimer.c ****                     ServoTimer_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/ServoTimer.c ****         #else
 128:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__LEFT == ServoTimer_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* ( ServoTimer_PWM_LEFT == ServoTimer_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/ServoTimer.c **** 
 132:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__RIGHT == ServoTimer_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_RIGHT;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 4


 134:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* ( ServoTimer_PWM_RIGHT == ServoTimer_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/ServoTimer.c **** 
 136:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__CENTER == ServoTimer_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* ( ServoTimer_PWM_CENTER == ServoTimer_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/ServoTimer.c **** 
 140:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__ASYMMETRIC == ServoTimer_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* (ServoTimer__ASYMMETRIC == ServoTimer_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM_PR == ServoTimer_PWM_MODE) */
 144:.\Generated_Source\PSoC4/ServoTimer.c **** 
 145:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WritePeriod(ServoTimer_PWM_PERIOD_VALUE );
 147:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WriteCompare(ServoTimer_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/ServoTimer.c **** 
 149:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (1u == ServoTimer_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCompareBuf(ServoTimer_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (1u == ServoTimer_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/ServoTimer.c **** 
 154:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (1u == ServoTimer_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WritePeriodBuf(ServoTimer_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (1u == ServoTimer_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__PWM_SEL == ServoTimer_CONFIG) */
 159:.\Generated_Source\PSoC4/ServoTimer.c ****     
 160:.\Generated_Source\PSoC4/ServoTimer.c **** }
 161:.\Generated_Source\PSoC4/ServoTimer.c **** 
 162:.\Generated_Source\PSoC4/ServoTimer.c **** 
 163:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Enable
 165:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/ServoTimer.c **** *
 167:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 168:.\Generated_Source\PSoC4/ServoTimer.c **** *  Enables the ServoTimer.
 169:.\Generated_Source\PSoC4/ServoTimer.c **** *
 170:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 171:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 172:.\Generated_Source\PSoC4/ServoTimer.c **** *
 173:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 174:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 175:.\Generated_Source\PSoC4/ServoTimer.c **** *
 176:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Enable(void)
 178:.\Generated_Source\PSoC4/ServoTimer.c **** {
 179:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/ServoTimer.c **** 
 181:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG |= ServoTimer_MASK;
 183:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/ServoTimer.c **** 
 185:.\Generated_Source\PSoC4/ServoTimer.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__PWM_SEL == ServoTimer_CONFIG)
 187:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (0u == ServoTimer_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TriggerCommand(ServoTimer_MASK, ServoTimer_CMD_START);
 189:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif /* (0u == ServoTimer_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer__PWM_SEL == ServoTimer_CONFIG) */
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 5


 191:.\Generated_Source\PSoC4/ServoTimer.c **** 
 192:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__TIMER == ServoTimer_CONFIG)
 193:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (0u == ServoTimer_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TriggerCommand(ServoTimer_MASK, ServoTimer_CMD_START);
 195:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif /* (0u == ServoTimer_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer__TIMER == ServoTimer_CONFIG) */
 197:.\Generated_Source\PSoC4/ServoTimer.c **** }
 198:.\Generated_Source\PSoC4/ServoTimer.c **** 
 199:.\Generated_Source\PSoC4/ServoTimer.c **** 
 200:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Start
 202:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/ServoTimer.c **** *
 204:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 205:.\Generated_Source\PSoC4/ServoTimer.c **** *  Initializes the ServoTimer with default customizer
 206:.\Generated_Source\PSoC4/ServoTimer.c **** *  values when called the first time and enables the ServoTimer.
 207:.\Generated_Source\PSoC4/ServoTimer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 208:.\Generated_Source\PSoC4/ServoTimer.c **** *  just enabled.
 209:.\Generated_Source\PSoC4/ServoTimer.c **** *
 210:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 211:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 212:.\Generated_Source\PSoC4/ServoTimer.c **** *
 213:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 214:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 215:.\Generated_Source\PSoC4/ServoTimer.c **** *
 216:.\Generated_Source\PSoC4/ServoTimer.c **** * Global variables:
 217:.\Generated_Source\PSoC4/ServoTimer.c **** *  ServoTimer_initVar: global variable is used to indicate initial
 218:.\Generated_Source\PSoC4/ServoTimer.c **** *  configuration of this component.  The variable is initialized to zero and set
 219:.\Generated_Source\PSoC4/ServoTimer.c **** *  to 1 the first time ServoTimer_Start() is called. This allows
 220:.\Generated_Source\PSoC4/ServoTimer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 221:.\Generated_Source\PSoC4/ServoTimer.c **** *  calls to the ServoTimer_Start() routine.
 222:.\Generated_Source\PSoC4/ServoTimer.c **** *
 223:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 224:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Start(void)
 225:.\Generated_Source\PSoC4/ServoTimer.c **** {
 226:.\Generated_Source\PSoC4/ServoTimer.c ****     if (0u == ServoTimer_initVar)
 227:.\Generated_Source\PSoC4/ServoTimer.c ****     {
 228:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_Init();
 229:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_initVar = 1u;
 230:.\Generated_Source\PSoC4/ServoTimer.c ****     }
 231:.\Generated_Source\PSoC4/ServoTimer.c **** 
 232:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_Enable();
 233:.\Generated_Source\PSoC4/ServoTimer.c **** }
 234:.\Generated_Source\PSoC4/ServoTimer.c **** 
 235:.\Generated_Source\PSoC4/ServoTimer.c **** 
 236:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Stop
 238:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 239:.\Generated_Source\PSoC4/ServoTimer.c **** *
 240:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 241:.\Generated_Source\PSoC4/ServoTimer.c **** *  Disables the ServoTimer.
 242:.\Generated_Source\PSoC4/ServoTimer.c **** *
 243:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 244:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 245:.\Generated_Source\PSoC4/ServoTimer.c **** *
 246:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 247:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 6


 248:.\Generated_Source\PSoC4/ServoTimer.c **** *
 249:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 250:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Stop(void)
 251:.\Generated_Source\PSoC4/ServoTimer.c **** {
 252:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 253:.\Generated_Source\PSoC4/ServoTimer.c **** 
 254:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 255:.\Generated_Source\PSoC4/ServoTimer.c **** 
 256:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG &= (uint32)~ServoTimer_MASK;
 257:.\Generated_Source\PSoC4/ServoTimer.c **** 
 258:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 259:.\Generated_Source\PSoC4/ServoTimer.c **** }
 260:.\Generated_Source\PSoC4/ServoTimer.c **** 
 261:.\Generated_Source\PSoC4/ServoTimer.c **** 
 262:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetMode
 264:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/ServoTimer.c **** *
 266:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 267:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the operation mode of the ServoTimer. This function is used when
 268:.\Generated_Source\PSoC4/ServoTimer.c **** *  configured as a generic ServoTimer and the actual mode of operation is
 269:.\Generated_Source\PSoC4/ServoTimer.c **** *  set at runtime. The mode must be set while the component is disabled.
 270:.\Generated_Source\PSoC4/ServoTimer.c **** *
 271:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 272:.\Generated_Source\PSoC4/ServoTimer.c **** *  mode: Mode for the ServoTimer to operate in
 273:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 274:.\Generated_Source\PSoC4/ServoTimer.c **** *   - ServoTimer_MODE_TIMER_COMPARE - Timer / Counter with
 275:.\Generated_Source\PSoC4/ServoTimer.c **** *                                                 compare capability
 276:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_TIMER_CAPTURE - Timer / Counter with
 277:.\Generated_Source\PSoC4/ServoTimer.c **** *                                                 capture capability
 278:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_QUAD - Quadrature decoder
 279:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_PWM - PWM
 280:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_PWM_DT - PWM with dead time
 281:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_PWM_PR - PWM with pseudo random capability
 282:.\Generated_Source\PSoC4/ServoTimer.c **** *
 283:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 284:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 285:.\Generated_Source\PSoC4/ServoTimer.c **** *
 286:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 287:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetMode(uint32 mode)
 288:.\Generated_Source\PSoC4/ServoTimer.c **** {
 289:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 290:.\Generated_Source\PSoC4/ServoTimer.c **** 
 291:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 292:.\Generated_Source\PSoC4/ServoTimer.c **** 
 293:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_MODE_MASK;
 294:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mode;
 295:.\Generated_Source\PSoC4/ServoTimer.c **** 
 296:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 297:.\Generated_Source\PSoC4/ServoTimer.c **** }
 298:.\Generated_Source\PSoC4/ServoTimer.c **** 
 299:.\Generated_Source\PSoC4/ServoTimer.c **** 
 300:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 301:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetQDMode
 302:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 303:.\Generated_Source\PSoC4/ServoTimer.c **** *
 304:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 7


 305:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 306:.\Generated_Source\PSoC4/ServoTimer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 307:.\Generated_Source\PSoC4/ServoTimer.c **** *
 308:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 309:.\Generated_Source\PSoC4/ServoTimer.c **** *  qdMode: Quadrature Decoder mode
 310:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 311:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_X1 - Counts on phi 1 rising
 312:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 313:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_X4 - Counts on both edges of phi1 and phi2
 314:.\Generated_Source\PSoC4/ServoTimer.c **** *                                        (4x faster)
 315:.\Generated_Source\PSoC4/ServoTimer.c **** *
 316:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 317:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 318:.\Generated_Source\PSoC4/ServoTimer.c **** *
 319:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 320:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetQDMode(uint32 qdMode)
 321:.\Generated_Source\PSoC4/ServoTimer.c **** {
 322:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 323:.\Generated_Source\PSoC4/ServoTimer.c **** 
 324:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 325:.\Generated_Source\PSoC4/ServoTimer.c **** 
 326:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_QUAD_MODE_MASK;
 327:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= qdMode;
 328:.\Generated_Source\PSoC4/ServoTimer.c **** 
 329:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 330:.\Generated_Source\PSoC4/ServoTimer.c **** }
 331:.\Generated_Source\PSoC4/ServoTimer.c **** 
 332:.\Generated_Source\PSoC4/ServoTimer.c **** 
 333:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 334:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPrescaler
 335:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 336:.\Generated_Source\PSoC4/ServoTimer.c **** *
 337:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 338:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 339:.\Generated_Source\PSoC4/ServoTimer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 340:.\Generated_Source\PSoC4/ServoTimer.c **** *
 341:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 342:.\Generated_Source\PSoC4/ServoTimer.c **** *  prescaler: Prescaler divider value
 343:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 344:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 345:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY2    - Divide by 2
 346:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY4    - Divide by 4
 347:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY8    - Divide by 8
 348:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY16   - Divide by 16
 349:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY32   - Divide by 32
 350:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY64   - Divide by 64
 351:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY128  - Divide by 128
 352:.\Generated_Source\PSoC4/ServoTimer.c **** *
 353:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 354:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 355:.\Generated_Source\PSoC4/ServoTimer.c **** *
 356:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPrescaler(uint32 prescaler)
 358:.\Generated_Source\PSoC4/ServoTimer.c **** {
 359:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 360:.\Generated_Source\PSoC4/ServoTimer.c **** 
 361:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 8


 362:.\Generated_Source\PSoC4/ServoTimer.c **** 
 363:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 364:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= prescaler;
 365:.\Generated_Source\PSoC4/ServoTimer.c **** 
 366:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 367:.\Generated_Source\PSoC4/ServoTimer.c **** }
 368:.\Generated_Source\PSoC4/ServoTimer.c **** 
 369:.\Generated_Source\PSoC4/ServoTimer.c **** 
 370:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 371:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetOneShot
 372:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 373:.\Generated_Source\PSoC4/ServoTimer.c **** *
 374:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 375:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the ServoTimer runs
 376:.\Generated_Source\PSoC4/ServoTimer.c **** *  continuously or stops when terminal count is reached.  By default the
 377:.\Generated_Source\PSoC4/ServoTimer.c **** *  ServoTimer operates in the continuous mode.
 378:.\Generated_Source\PSoC4/ServoTimer.c **** *
 379:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 380:.\Generated_Source\PSoC4/ServoTimer.c **** *  oneShotEnable
 381:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 382:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Continuous
 383:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Enable One Shot
 384:.\Generated_Source\PSoC4/ServoTimer.c **** *
 385:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 386:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 387:.\Generated_Source\PSoC4/ServoTimer.c **** *
 388:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 389:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetOneShot(uint32 oneShotEnable)
 390:.\Generated_Source\PSoC4/ServoTimer.c **** {
 391:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 392:.\Generated_Source\PSoC4/ServoTimer.c **** 
 393:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 394:.\Generated_Source\PSoC4/ServoTimer.c **** 
 395:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_ONESHOT_MASK;
 396:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((oneShotEnable & ServoTimer_1BIT_MASK) <<
 397:.\Generated_Source\PSoC4/ServoTimer.c ****                                                                ServoTimer_ONESHOT_SHIFT));
 398:.\Generated_Source\PSoC4/ServoTimer.c **** 
 399:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 400:.\Generated_Source\PSoC4/ServoTimer.c **** }
 401:.\Generated_Source\PSoC4/ServoTimer.c **** 
 402:.\Generated_Source\PSoC4/ServoTimer.c **** 
 403:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 404:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMMode
 405:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 406:.\Generated_Source\PSoC4/ServoTimer.c **** *
 407:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 408:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the control register that determines what mode of operation the PWM
 409:.\Generated_Source\PSoC4/ServoTimer.c **** *  output lines are driven in.  There is a setting for what to do on a
 410:.\Generated_Source\PSoC4/ServoTimer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 411:.\Generated_Source\PSoC4/ServoTimer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 412:.\Generated_Source\PSoC4/ServoTimer.c **** *  the mode.
 413:.\Generated_Source\PSoC4/ServoTimer.c **** *
 414:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 415:.\Generated_Source\PSoC4/ServoTimer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 416:.\Generated_Source\PSoC4/ServoTimer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 417:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 418:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_SET        - Set on comparison match
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 9


 419:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 420:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 421:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 422:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_SET         - Set on overflow
 423:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 424:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_INVERT      - Invert on overflow
 425:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 426:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_SET       - Set on underflow
 427:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 428:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 429:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 430:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 431:.\Generated_Source\PSoC4/ServoTimer.c **** *                             with up counting mode
 432:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 433:.\Generated_Source\PSoC4/ServoTimer.c **** *                             with down counting mode
 434:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 435:.\Generated_Source\PSoC4/ServoTimer.c **** *                             combined with up/down 0 mode
 436:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 437:.\Generated_Source\PSoC4/ServoTimer.c **** *                             with up/down 1 mode
 438:.\Generated_Source\PSoC4/ServoTimer.c **** *
 439:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 440:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 441:.\Generated_Source\PSoC4/ServoTimer.c **** *
 442:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 443:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMMode(uint32 modeMask)
 444:.\Generated_Source\PSoC4/ServoTimer.c **** {
 445:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL2_REG = (modeMask & ServoTimer_6BIT_MASK);
 446:.\Generated_Source\PSoC4/ServoTimer.c **** }
 447:.\Generated_Source\PSoC4/ServoTimer.c **** 
 448:.\Generated_Source\PSoC4/ServoTimer.c **** 
 449:.\Generated_Source\PSoC4/ServoTimer.c **** 
 450:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMSyncKill
 452:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 453:.\Generated_Source\PSoC4/ServoTimer.c **** *
 454:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 455:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 456:.\Generated_Source\PSoC4/ServoTimer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 457:.\Generated_Source\PSoC4/ServoTimer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 458:.\Generated_Source\PSoC4/ServoTimer.c **** *  and PWM with dead time modes.
 459:.\Generated_Source\PSoC4/ServoTimer.c **** *
 460:.\Generated_Source\PSoC4/ServoTimer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 461:.\Generated_Source\PSoC4/ServoTimer.c **** *  signals until the next terminal count.
 462:.\Generated_Source\PSoC4/ServoTimer.c **** *
 463:.\Generated_Source\PSoC4/ServoTimer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 464:.\Generated_Source\PSoC4/ServoTimer.c **** *  signals when the kill signal is present.  This mode should only be used
 465:.\Generated_Source\PSoC4/ServoTimer.c **** *  when the kill signal (stop input) is configured in the pass through mode
 466:.\Generated_Source\PSoC4/ServoTimer.c **** *  (Level sensitive signal).
 467:.\Generated_Source\PSoC4/ServoTimer.c **** 
 468:.\Generated_Source\PSoC4/ServoTimer.c **** *
 469:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 470:.\Generated_Source\PSoC4/ServoTimer.c **** *  syncKillEnable
 471:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 472:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Asynchronous
 473:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Synchronous
 474:.\Generated_Source\PSoC4/ServoTimer.c **** *
 475:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 10


 476:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 477:.\Generated_Source\PSoC4/ServoTimer.c **** *
 478:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 479:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMSyncKill(uint32 syncKillEnable)
 480:.\Generated_Source\PSoC4/ServoTimer.c **** {
 481:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 482:.\Generated_Source\PSoC4/ServoTimer.c **** 
 483:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 484:.\Generated_Source\PSoC4/ServoTimer.c **** 
 485:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_SYNC_KILL_MASK;
 486:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((syncKillEnable & ServoTimer_1BIT_MASK)  <<
 487:.\Generated_Source\PSoC4/ServoTimer.c ****                                                ServoTimer_PWM_SYNC_KILL_SHIFT));
 488:.\Generated_Source\PSoC4/ServoTimer.c **** 
 489:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 490:.\Generated_Source\PSoC4/ServoTimer.c **** }
 491:.\Generated_Source\PSoC4/ServoTimer.c **** 
 492:.\Generated_Source\PSoC4/ServoTimer.c **** 
 493:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 494:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMStopOnKill
 495:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 496:.\Generated_Source\PSoC4/ServoTimer.c **** *
 497:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 498:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 499:.\Generated_Source\PSoC4/ServoTimer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 500:.\Generated_Source\PSoC4/ServoTimer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 501:.\Generated_Source\PSoC4/ServoTimer.c **** *
 502:.\Generated_Source\PSoC4/ServoTimer.c **** *
 503:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 504:.\Generated_Source\PSoC4/ServoTimer.c **** *  stopOnKillEnable
 505:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 506:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Don't stop
 507:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Stop
 508:.\Generated_Source\PSoC4/ServoTimer.c **** *
 509:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 510:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 511:.\Generated_Source\PSoC4/ServoTimer.c **** *
 512:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 513:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 514:.\Generated_Source\PSoC4/ServoTimer.c **** {
 515:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 516:.\Generated_Source\PSoC4/ServoTimer.c **** 
 517:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 518:.\Generated_Source\PSoC4/ServoTimer.c **** 
 519:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_STOP_KILL_MASK;
 520:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((stopOnKillEnable & ServoTimer_1BIT_MASK)  <<
 521:.\Generated_Source\PSoC4/ServoTimer.c ****                                                          ServoTimer_PWM_STOP_KILL_SHIFT));
 522:.\Generated_Source\PSoC4/ServoTimer.c **** 
 523:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 524:.\Generated_Source\PSoC4/ServoTimer.c **** }
 525:.\Generated_Source\PSoC4/ServoTimer.c **** 
 526:.\Generated_Source\PSoC4/ServoTimer.c **** 
 527:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 528:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMDeadTime
 529:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 530:.\Generated_Source\PSoC4/ServoTimer.c **** *
 531:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 532:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the dead time control value.  This value delays the rising edge of
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 11


 533:.\Generated_Source\PSoC4/ServoTimer.c **** *  both the line and line_n signals the designated number of cycles resulting
 534:.\Generated_Source\PSoC4/ServoTimer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 535:.\Generated_Source\PSoC4/ServoTimer.c **** *  only applicable to the PWM in the dead time mode.
 536:.\Generated_Source\PSoC4/ServoTimer.c **** 
 537:.\Generated_Source\PSoC4/ServoTimer.c **** *
 538:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 539:.\Generated_Source\PSoC4/ServoTimer.c **** *  Dead time to insert
 540:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values: 0 to 255
 541:.\Generated_Source\PSoC4/ServoTimer.c **** *
 542:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 543:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 544:.\Generated_Source\PSoC4/ServoTimer.c **** *
 545:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMDeadTime(uint32 deadTime)
 547:.\Generated_Source\PSoC4/ServoTimer.c **** {
 548:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 549:.\Generated_Source\PSoC4/ServoTimer.c **** 
 550:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 551:.\Generated_Source\PSoC4/ServoTimer.c **** 
 552:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 553:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((deadTime & ServoTimer_8BIT_MASK) <<
 554:.\Generated_Source\PSoC4/ServoTimer.c ****                                                           ServoTimer_PRESCALER_SHIFT));
 555:.\Generated_Source\PSoC4/ServoTimer.c **** 
 556:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 557:.\Generated_Source\PSoC4/ServoTimer.c **** }
 558:.\Generated_Source\PSoC4/ServoTimer.c **** 
 559:.\Generated_Source\PSoC4/ServoTimer.c **** 
 560:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMInvert
 562:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 563:.\Generated_Source\PSoC4/ServoTimer.c **** *
 564:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 565:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the bits that control whether the line and line_n outputs are
 566:.\Generated_Source\PSoC4/ServoTimer.c **** *  inverted from their normal output values.  This functionality is only
 567:.\Generated_Source\PSoC4/ServoTimer.c **** *  applicable to the three PWM modes.
 568:.\Generated_Source\PSoC4/ServoTimer.c **** *
 569:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 570:.\Generated_Source\PSoC4/ServoTimer.c **** *  mask: Mask of outputs to invert.
 571:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 572:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_INVERT_LINE   - Inverts the line output
 573:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_INVERT_LINE_N - Inverts the line_n output
 574:.\Generated_Source\PSoC4/ServoTimer.c **** *
 575:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 576:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 577:.\Generated_Source\PSoC4/ServoTimer.c **** *
 578:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 579:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMInvert(uint32 mask)
 580:.\Generated_Source\PSoC4/ServoTimer.c **** {
 581:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 582:.\Generated_Source\PSoC4/ServoTimer.c **** 
 583:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 584:.\Generated_Source\PSoC4/ServoTimer.c **** 
 585:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_INV_OUT_MASK;
 586:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mask;
 587:.\Generated_Source\PSoC4/ServoTimer.c **** 
 588:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 589:.\Generated_Source\PSoC4/ServoTimer.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 12


 590:.\Generated_Source\PSoC4/ServoTimer.c **** 
 591:.\Generated_Source\PSoC4/ServoTimer.c **** 
 592:.\Generated_Source\PSoC4/ServoTimer.c **** 
 593:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 594:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WriteCounter
 595:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 596:.\Generated_Source\PSoC4/ServoTimer.c **** *
 597:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 598:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 599:.\Generated_Source\PSoC4/ServoTimer.c **** *  setting the counter (not the period) to the value written. It is not
 600:.\Generated_Source\PSoC4/ServoTimer.c **** *  advised to write to this field when the counter is running.
 601:.\Generated_Source\PSoC4/ServoTimer.c **** *
 602:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 603:.\Generated_Source\PSoC4/ServoTimer.c **** *  count: value to write
 604:.\Generated_Source\PSoC4/ServoTimer.c **** *
 605:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 606:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 607:.\Generated_Source\PSoC4/ServoTimer.c **** *
 608:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 609:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WriteCounter(uint32 count)
 610:.\Generated_Source\PSoC4/ServoTimer.c **** {
 611:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COUNTER_REG = (count & ServoTimer_16BIT_MASK);
 612:.\Generated_Source\PSoC4/ServoTimer.c **** }
 613:.\Generated_Source\PSoC4/ServoTimer.c **** 
 614:.\Generated_Source\PSoC4/ServoTimer.c **** 
 615:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 616:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCounter
 617:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 618:.\Generated_Source\PSoC4/ServoTimer.c **** *
 619:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 620:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the current counter value.
 621:.\Generated_Source\PSoC4/ServoTimer.c **** *
 622:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 623:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 624:.\Generated_Source\PSoC4/ServoTimer.c **** *
 625:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 626:.\Generated_Source\PSoC4/ServoTimer.c **** *  Current counter value
 627:.\Generated_Source\PSoC4/ServoTimer.c **** *
 628:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 629:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCounter(void)
 630:.\Generated_Source\PSoC4/ServoTimer.c **** {
 631:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COUNTER_REG & ServoTimer_16BIT_MASK);
 632:.\Generated_Source\PSoC4/ServoTimer.c **** }
 633:.\Generated_Source\PSoC4/ServoTimer.c **** 
 634:.\Generated_Source\PSoC4/ServoTimer.c **** 
 635:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 636:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCounterMode
 637:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 638:.\Generated_Source\PSoC4/ServoTimer.c **** *
 639:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 640:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 641:.\Generated_Source\PSoC4/ServoTimer.c **** *  and the PWM with a pseudo random output.
 642:.\Generated_Source\PSoC4/ServoTimer.c **** *
 643:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 644:.\Generated_Source\PSoC4/ServoTimer.c **** *  counterMode: Enumerated counter type values
 645:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 646:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_UP       - Counts up
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 13


 647:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_DOWN     - Counts down
 648:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 649:.\Generated_Source\PSoC4/ServoTimer.c **** *                                         generated when counter reaches 0
 650:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 651:.\Generated_Source\PSoC4/ServoTimer.c **** *                                         generated both when counter reaches 0
 652:.\Generated_Source\PSoC4/ServoTimer.c **** *                                         and period
 653:.\Generated_Source\PSoC4/ServoTimer.c **** *
 654:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 655:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 656:.\Generated_Source\PSoC4/ServoTimer.c **** *
 657:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCounterMode(uint32 counterMode)
 659:.\Generated_Source\PSoC4/ServoTimer.c **** {
 660:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 661:.\Generated_Source\PSoC4/ServoTimer.c **** 
 662:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 663:.\Generated_Source\PSoC4/ServoTimer.c **** 
 664:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_UPDOWN_MASK;
 665:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= counterMode;
 666:.\Generated_Source\PSoC4/ServoTimer.c **** 
 667:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 668:.\Generated_Source\PSoC4/ServoTimer.c **** }
 669:.\Generated_Source\PSoC4/ServoTimer.c **** 
 670:.\Generated_Source\PSoC4/ServoTimer.c **** 
 671:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WritePeriod
 673:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/ServoTimer.c **** *
 675:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 676:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit period register with the new period value.
 677:.\Generated_Source\PSoC4/ServoTimer.c **** *  To cause the counter to count for N cycles this register should be written
 678:.\Generated_Source\PSoC4/ServoTimer.c **** *  with N-1 (counts from 0 to period inclusive).
 679:.\Generated_Source\PSoC4/ServoTimer.c **** *
 680:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 681:.\Generated_Source\PSoC4/ServoTimer.c **** *  period: Period value
 682:.\Generated_Source\PSoC4/ServoTimer.c **** *
 683:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 684:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 685:.\Generated_Source\PSoC4/ServoTimer.c **** *
 686:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 687:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WritePeriod(uint32 period)
 688:.\Generated_Source\PSoC4/ServoTimer.c **** {
 689:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
 690:.\Generated_Source\PSoC4/ServoTimer.c **** }
 691:.\Generated_Source\PSoC4/ServoTimer.c **** 
 692:.\Generated_Source\PSoC4/ServoTimer.c **** 
 693:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 694:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadPeriod
 695:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 696:.\Generated_Source\PSoC4/ServoTimer.c **** *
 697:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 698:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the 16 bit period register.
 699:.\Generated_Source\PSoC4/ServoTimer.c **** *
 700:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 701:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 702:.\Generated_Source\PSoC4/ServoTimer.c **** *
 703:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 14


 704:.\Generated_Source\PSoC4/ServoTimer.c **** *  Period value
 705:.\Generated_Source\PSoC4/ServoTimer.c **** *
 706:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 707:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadPeriod(void)
 708:.\Generated_Source\PSoC4/ServoTimer.c **** {
 709:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_REG & ServoTimer_16BIT_MASK);
 710:.\Generated_Source\PSoC4/ServoTimer.c **** }
 711:.\Generated_Source\PSoC4/ServoTimer.c **** 
 712:.\Generated_Source\PSoC4/ServoTimer.c **** 
 713:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCompareSwap
 715:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 716:.\Generated_Source\PSoC4/ServoTimer.c **** *
 717:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 718:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the compare registers are
 719:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 720:.\Generated_Source\PSoC4/ServoTimer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 721:.\Generated_Source\PSoC4/ServoTimer.c **** *  following a hardware switch event.
 722:.\Generated_Source\PSoC4/ServoTimer.c **** *
 723:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 724:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapEnable
 725:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 726:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Disable swap
 727:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Enable swap
 728:.\Generated_Source\PSoC4/ServoTimer.c **** *
 729:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 730:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 731:.\Generated_Source\PSoC4/ServoTimer.c **** *
 732:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 733:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCompareSwap(uint32 swapEnable)
 734:.\Generated_Source\PSoC4/ServoTimer.c **** {
 735:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 736:.\Generated_Source\PSoC4/ServoTimer.c **** 
 737:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 738:.\Generated_Source\PSoC4/ServoTimer.c **** 
 739:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_CC_MASK;
 740:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= (swapEnable & ServoTimer_1BIT_MASK);
 741:.\Generated_Source\PSoC4/ServoTimer.c **** 
 742:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 743:.\Generated_Source\PSoC4/ServoTimer.c **** }
 744:.\Generated_Source\PSoC4/ServoTimer.c **** 
 745:.\Generated_Source\PSoC4/ServoTimer.c **** 
 746:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 747:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WritePeriodBuf
 748:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 749:.\Generated_Source\PSoC4/ServoTimer.c **** *
 750:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 751:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit period buf register with the new period value.
 752:.\Generated_Source\PSoC4/ServoTimer.c **** *
 753:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 754:.\Generated_Source\PSoC4/ServoTimer.c **** *  periodBuf: Period value
 755:.\Generated_Source\PSoC4/ServoTimer.c **** *
 756:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 757:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 758:.\Generated_Source\PSoC4/ServoTimer.c **** *
 759:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WritePeriodBuf(uint32 periodBuf)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 15


 761:.\Generated_Source\PSoC4/ServoTimer.c **** {
 762:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_BUF_REG = (periodBuf & ServoTimer_16BIT_MASK);
 763:.\Generated_Source\PSoC4/ServoTimer.c **** }
 764:.\Generated_Source\PSoC4/ServoTimer.c **** 
 765:.\Generated_Source\PSoC4/ServoTimer.c **** 
 766:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 767:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadPeriodBuf
 768:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 769:.\Generated_Source\PSoC4/ServoTimer.c **** *
 770:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 771:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the 16 bit period buf register.
 772:.\Generated_Source\PSoC4/ServoTimer.c **** *
 773:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 774:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 775:.\Generated_Source\PSoC4/ServoTimer.c **** *
 776:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 777:.\Generated_Source\PSoC4/ServoTimer.c **** *  Period value
 778:.\Generated_Source\PSoC4/ServoTimer.c **** *
 779:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 780:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadPeriodBuf(void)
 781:.\Generated_Source\PSoC4/ServoTimer.c **** {
 782:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_BUF_REG & ServoTimer_16BIT_MASK);
 783:.\Generated_Source\PSoC4/ServoTimer.c **** }
 784:.\Generated_Source\PSoC4/ServoTimer.c **** 
 785:.\Generated_Source\PSoC4/ServoTimer.c **** 
 786:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 787:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPeriodSwap
 788:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 789:.\Generated_Source\PSoC4/ServoTimer.c **** *
 790:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 791:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the period registers are
 792:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 793:.\Generated_Source\PSoC4/ServoTimer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 794:.\Generated_Source\PSoC4/ServoTimer.c **** *  switch event.
 795:.\Generated_Source\PSoC4/ServoTimer.c **** *
 796:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 797:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapEnable
 798:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 799:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Disable swap
 800:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Enable swap
 801:.\Generated_Source\PSoC4/ServoTimer.c **** *
 802:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 803:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 804:.\Generated_Source\PSoC4/ServoTimer.c **** *
 805:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPeriodSwap(uint32 swapEnable)
 807:.\Generated_Source\PSoC4/ServoTimer.c **** {
 808:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 809:.\Generated_Source\PSoC4/ServoTimer.c **** 
 810:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 811:.\Generated_Source\PSoC4/ServoTimer.c **** 
 812:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_PERIOD_MASK;
 813:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((swapEnable & ServoTimer_1BIT_MASK) <<
 814:.\Generated_Source\PSoC4/ServoTimer.c ****                                                             ServoTimer_RELOAD_PERIOD_SHIFT));
 815:.\Generated_Source\PSoC4/ServoTimer.c **** 
 816:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 817:.\Generated_Source\PSoC4/ServoTimer.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 16


 818:.\Generated_Source\PSoC4/ServoTimer.c **** 
 819:.\Generated_Source\PSoC4/ServoTimer.c **** 
 820:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 821:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WriteCompare
 822:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 823:.\Generated_Source\PSoC4/ServoTimer.c **** *
 824:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 825:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 826:.\Generated_Source\PSoC4/ServoTimer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 827:.\Generated_Source\PSoC4/ServoTimer.c **** *
 828:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 829:.\Generated_Source\PSoC4/ServoTimer.c **** *  compare: Compare value
 830:.\Generated_Source\PSoC4/ServoTimer.c **** *
 831:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 832:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 833:.\Generated_Source\PSoC4/ServoTimer.c **** *
 834:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 835:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WriteCompare(uint32 compare)
 836:.\Generated_Source\PSoC4/ServoTimer.c **** {
 837:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 838:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 839:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 840:.\Generated_Source\PSoC4/ServoTimer.c **** 
 841:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 842:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
 843:.\Generated_Source\PSoC4/ServoTimer.c **** 
 844:.\Generated_Source\PSoC4/ServoTimer.c ****         if (((uint32)ServoTimer__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 845:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 846:.\Generated_Source\PSoC4/ServoTimer.c ****             compare++;
 847:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 848:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (((uint32)ServoTimer__COUNT_UP == currentMode) && (0u != compare))
 849:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 850:.\Generated_Source\PSoC4/ServoTimer.c ****             compare--;
 851:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 852:.\Generated_Source\PSoC4/ServoTimer.c ****         else
 853:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 854:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 855:.\Generated_Source\PSoC4/ServoTimer.c ****         
 856:.\Generated_Source\PSoC4/ServoTimer.c ****     
 857:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 858:.\Generated_Source\PSoC4/ServoTimer.c ****     
 859:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
 860:.\Generated_Source\PSoC4/ServoTimer.c **** }
 861:.\Generated_Source\PSoC4/ServoTimer.c **** 
 862:.\Generated_Source\PSoC4/ServoTimer.c **** 
 863:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCompare
 865:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/ServoTimer.c **** *
 867:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 868:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 869:.\Generated_Source\PSoC4/ServoTimer.c **** *  or in Quadrature Decoder modes.
 870:.\Generated_Source\PSoC4/ServoTimer.c **** *
 871:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 872:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 873:.\Generated_Source\PSoC4/ServoTimer.c **** *
 874:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 17


 875:.\Generated_Source\PSoC4/ServoTimer.c **** *  Compare value
 876:.\Generated_Source\PSoC4/ServoTimer.c **** *
 877:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 878:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCompare(void)
 879:.\Generated_Source\PSoC4/ServoTimer.c **** {
 880:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 881:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 882:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 regVal;
 883:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 884:.\Generated_Source\PSoC4/ServoTimer.c **** 
 885:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 886:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
 887:.\Generated_Source\PSoC4/ServoTimer.c ****         
 888:.\Generated_Source\PSoC4/ServoTimer.c ****         regVal = ServoTimer_COMP_CAP_REG;
 889:.\Generated_Source\PSoC4/ServoTimer.c ****         
 890:.\Generated_Source\PSoC4/ServoTimer.c ****         if (((uint32)ServoTimer__COUNT_DOWN == currentMode) && (0u != regVal))
 891:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 892:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal--;
 893:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 894:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (((uint32)ServoTimer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 895:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 896:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal++;
 897:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 898:.\Generated_Source\PSoC4/ServoTimer.c ****         else
 899:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 900:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 901:.\Generated_Source\PSoC4/ServoTimer.c **** 
 902:.\Generated_Source\PSoC4/ServoTimer.c ****         return (regVal & ServoTimer_16BIT_MASK);
 903:.\Generated_Source\PSoC4/ServoTimer.c ****     #else
 904:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 905:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/ServoTimer.c **** }
 907:.\Generated_Source\PSoC4/ServoTimer.c **** 
 908:.\Generated_Source\PSoC4/ServoTimer.c **** 
 909:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 910:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WriteCompareBuf
 911:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 912:.\Generated_Source\PSoC4/ServoTimer.c **** *
 913:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 914:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 915:.\Generated_Source\PSoC4/ServoTimer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 916:.\Generated_Source\PSoC4/ServoTimer.c **** *
 917:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 918:.\Generated_Source\PSoC4/ServoTimer.c **** *  compareBuf: Compare value
 919:.\Generated_Source\PSoC4/ServoTimer.c **** *
 920:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 921:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 922:.\Generated_Source\PSoC4/ServoTimer.c **** *
 923:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 924:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WriteCompareBuf(uint32 compareBuf)
 925:.\Generated_Source\PSoC4/ServoTimer.c **** {
 926:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 927:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 928:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 929:.\Generated_Source\PSoC4/ServoTimer.c **** 
 930:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 931:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 18


 932:.\Generated_Source\PSoC4/ServoTimer.c **** 
 933:.\Generated_Source\PSoC4/ServoTimer.c ****         if (((uint32)ServoTimer__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 934:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 935:.\Generated_Source\PSoC4/ServoTimer.c ****             compareBuf++;
 936:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 937:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (((uint32)ServoTimer__COUNT_UP == currentMode) && (0u != compareBuf))
 938:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 939:.\Generated_Source\PSoC4/ServoTimer.c ****             compareBuf --;
 940:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 941:.\Generated_Source\PSoC4/ServoTimer.c ****         else
 942:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 943:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 944:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 945:.\Generated_Source\PSoC4/ServoTimer.c ****     
 946:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMP_CAP_BUF_REG = (compareBuf & ServoTimer_16BIT_MASK);
 947:.\Generated_Source\PSoC4/ServoTimer.c **** }
 948:.\Generated_Source\PSoC4/ServoTimer.c **** 
 949:.\Generated_Source\PSoC4/ServoTimer.c **** 
 950:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 951:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCompareBuf
 952:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 953:.\Generated_Source\PSoC4/ServoTimer.c **** *
 954:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 955:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 956:.\Generated_Source\PSoC4/ServoTimer.c **** *  Capture or in Quadrature Decoder modes.
 957:.\Generated_Source\PSoC4/ServoTimer.c **** *
 958:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 959:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 960:.\Generated_Source\PSoC4/ServoTimer.c **** *
 961:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 962:.\Generated_Source\PSoC4/ServoTimer.c **** *  Compare buffer value
 963:.\Generated_Source\PSoC4/ServoTimer.c **** *
 964:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 965:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCompareBuf(void)
 966:.\Generated_Source\PSoC4/ServoTimer.c **** {
 967:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 968:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 969:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 regVal;
 970:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 971:.\Generated_Source\PSoC4/ServoTimer.c **** 
 972:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_4000)
 973:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
 974:.\Generated_Source\PSoC4/ServoTimer.c **** 
 975:.\Generated_Source\PSoC4/ServoTimer.c ****         regVal = ServoTimer_COMP_CAP_BUF_REG;
 976:.\Generated_Source\PSoC4/ServoTimer.c ****         
 977:.\Generated_Source\PSoC4/ServoTimer.c ****         if (((uint32)ServoTimer__COUNT_DOWN == currentMode) && (0u != regVal))
 978:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 979:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal--;
 980:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 981:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (((uint32)ServoTimer__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 982:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 983:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal++;
 984:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 985:.\Generated_Source\PSoC4/ServoTimer.c ****         else
 986:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 987:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 988:.\Generated_Source\PSoC4/ServoTimer.c **** 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 19


 989:.\Generated_Source\PSoC4/ServoTimer.c ****         return (regVal & ServoTimer_16BIT_MASK);
 990:.\Generated_Source\PSoC4/ServoTimer.c ****     #else
 991:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 992:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_4000) */
 993:.\Generated_Source\PSoC4/ServoTimer.c **** }
 994:.\Generated_Source\PSoC4/ServoTimer.c **** 
 995:.\Generated_Source\PSoC4/ServoTimer.c **** 
 996:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 997:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCapture
 998:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 999:.\Generated_Source\PSoC4/ServoTimer.c **** *
1000:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1001:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the captured counter value. This API is applicable only for
1002:.\Generated_Source\PSoC4/ServoTimer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1003:.\Generated_Source\PSoC4/ServoTimer.c **** *
1004:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1005:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1006:.\Generated_Source\PSoC4/ServoTimer.c **** *
1007:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1008:.\Generated_Source\PSoC4/ServoTimer.c **** *  Capture value
1009:.\Generated_Source\PSoC4/ServoTimer.c **** *
1010:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1011:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCapture(void)
1012:.\Generated_Source\PSoC4/ServoTimer.c **** {
1013:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
1014:.\Generated_Source\PSoC4/ServoTimer.c **** }
1015:.\Generated_Source\PSoC4/ServoTimer.c **** 
1016:.\Generated_Source\PSoC4/ServoTimer.c **** 
1017:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1018:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCaptureBuf
1019:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1020:.\Generated_Source\PSoC4/ServoTimer.c **** *
1021:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1022:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the capture buffer register. This API is applicable only for
1023:.\Generated_Source\PSoC4/ServoTimer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1024:.\Generated_Source\PSoC4/ServoTimer.c **** *
1025:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1026:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1027:.\Generated_Source\PSoC4/ServoTimer.c **** *
1028:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1029:.\Generated_Source\PSoC4/ServoTimer.c **** *  Capture buffer value
1030:.\Generated_Source\PSoC4/ServoTimer.c **** *
1031:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1032:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCaptureBuf(void)
1033:.\Generated_Source\PSoC4/ServoTimer.c **** {
1034:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
1035:.\Generated_Source\PSoC4/ServoTimer.c **** }
1036:.\Generated_Source\PSoC4/ServoTimer.c **** 
1037:.\Generated_Source\PSoC4/ServoTimer.c **** 
1038:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1039:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCaptureMode
1040:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1041:.\Generated_Source\PSoC4/ServoTimer.c **** *
1042:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1043:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1044:.\Generated_Source\PSoC4/ServoTimer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1045:.\Generated_Source\PSoC4/ServoTimer.c **** *  Quadrature Decoder modes.
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 20


1046:.\Generated_Source\PSoC4/ServoTimer.c **** *
1047:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1048:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1049:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1050:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1051:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1052:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1053:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1054:.\Generated_Source\PSoC4/ServoTimer.c **** *
1055:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1056:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1057:.\Generated_Source\PSoC4/ServoTimer.c **** *
1058:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1059:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCaptureMode(uint32 triggerMode)
1060:.\Generated_Source\PSoC4/ServoTimer.c **** {
1061:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1062:.\Generated_Source\PSoC4/ServoTimer.c **** 
1063:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1064:.\Generated_Source\PSoC4/ServoTimer.c **** 
1065:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_CAPTURE_MASK;
1066:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= triggerMode;
1067:.\Generated_Source\PSoC4/ServoTimer.c **** 
1068:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1069:.\Generated_Source\PSoC4/ServoTimer.c **** }
1070:.\Generated_Source\PSoC4/ServoTimer.c **** 
1071:.\Generated_Source\PSoC4/ServoTimer.c **** 
1072:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetReloadMode
1074:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1075:.\Generated_Source\PSoC4/ServoTimer.c **** *
1076:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1077:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1078:.\Generated_Source\PSoC4/ServoTimer.c **** *  input.
1079:.\Generated_Source\PSoC4/ServoTimer.c **** *
1080:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1081:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1082:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1083:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1084:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1085:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1086:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1087:.\Generated_Source\PSoC4/ServoTimer.c **** *
1088:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1089:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1090:.\Generated_Source\PSoC4/ServoTimer.c **** *
1091:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1092:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetReloadMode(uint32 triggerMode)
1093:.\Generated_Source\PSoC4/ServoTimer.c **** {
1094:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1095:.\Generated_Source\PSoC4/ServoTimer.c **** 
1096:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1097:.\Generated_Source\PSoC4/ServoTimer.c **** 
1098:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_RELOAD_MASK;
1099:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
1100:.\Generated_Source\PSoC4/ServoTimer.c **** 
1101:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1102:.\Generated_Source\PSoC4/ServoTimer.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 21


1103:.\Generated_Source\PSoC4/ServoTimer.c **** 
1104:.\Generated_Source\PSoC4/ServoTimer.c **** 
1105:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1106:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetStartMode
1107:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1108:.\Generated_Source\PSoC4/ServoTimer.c **** *
1109:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1110:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1111:.\Generated_Source\PSoC4/ServoTimer.c **** *  phiB input.
1112:.\Generated_Source\PSoC4/ServoTimer.c **** *
1113:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1114:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1115:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1116:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1117:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1118:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1119:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1120:.\Generated_Source\PSoC4/ServoTimer.c **** *
1121:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1122:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1123:.\Generated_Source\PSoC4/ServoTimer.c **** *
1124:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetStartMode(uint32 triggerMode)
1126:.\Generated_Source\PSoC4/ServoTimer.c **** {
1127:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1128:.\Generated_Source\PSoC4/ServoTimer.c **** 
1129:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1130:.\Generated_Source\PSoC4/ServoTimer.c **** 
1131:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_START_MASK;
1132:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
1133:.\Generated_Source\PSoC4/ServoTimer.c **** 
1134:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1135:.\Generated_Source\PSoC4/ServoTimer.c **** }
1136:.\Generated_Source\PSoC4/ServoTimer.c **** 
1137:.\Generated_Source\PSoC4/ServoTimer.c **** 
1138:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1139:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetStopMode
1140:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1141:.\Generated_Source\PSoC4/ServoTimer.c **** *
1142:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1143:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1144:.\Generated_Source\PSoC4/ServoTimer.c **** *
1145:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1146:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1147:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1148:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1149:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1150:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1151:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1152:.\Generated_Source\PSoC4/ServoTimer.c **** *
1153:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1154:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1155:.\Generated_Source\PSoC4/ServoTimer.c **** *
1156:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1157:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetStopMode(uint32 triggerMode)
1158:.\Generated_Source\PSoC4/ServoTimer.c **** {
1159:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 22


1160:.\Generated_Source\PSoC4/ServoTimer.c **** 
1161:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1162:.\Generated_Source\PSoC4/ServoTimer.c **** 
1163:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_STOP_MASK;
1164:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
1165:.\Generated_Source\PSoC4/ServoTimer.c **** 
1166:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1167:.\Generated_Source\PSoC4/ServoTimer.c **** }
1168:.\Generated_Source\PSoC4/ServoTimer.c **** 
1169:.\Generated_Source\PSoC4/ServoTimer.c **** 
1170:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1171:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCountMode
1172:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1173:.\Generated_Source\PSoC4/ServoTimer.c **** *
1174:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1175:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1176:.\Generated_Source\PSoC4/ServoTimer.c **** *  input.
1177:.\Generated_Source\PSoC4/ServoTimer.c **** *
1178:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1179:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1180:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1181:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1182:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1183:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1184:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1185:.\Generated_Source\PSoC4/ServoTimer.c **** *
1186:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1187:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1188:.\Generated_Source\PSoC4/ServoTimer.c **** *
1189:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1190:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCountMode(uint32 triggerMode)
1191:.\Generated_Source\PSoC4/ServoTimer.c **** {
1192:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1193:.\Generated_Source\PSoC4/ServoTimer.c **** 
1194:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1195:.\Generated_Source\PSoC4/ServoTimer.c **** 
1196:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_COUNT_MASK;
1197:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
1198:.\Generated_Source\PSoC4/ServoTimer.c **** 
1199:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1200:.\Generated_Source\PSoC4/ServoTimer.c **** }
1201:.\Generated_Source\PSoC4/ServoTimer.c **** 
1202:.\Generated_Source\PSoC4/ServoTimer.c **** 
1203:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1204:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_TriggerCommand
1205:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1206:.\Generated_Source\PSoC4/ServoTimer.c **** *
1207:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1208:.\Generated_Source\PSoC4/ServoTimer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1209:.\Generated_Source\PSoC4/ServoTimer.c **** *  The mask can be used to apply this command simultaneously to more than one
1210:.\Generated_Source\PSoC4/ServoTimer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1211:.\Generated_Source\PSoC4/ServoTimer.c **** *
1212:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1213:.\Generated_Source\PSoC4/ServoTimer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1214:.\Generated_Source\PSoC4/ServoTimer.c **** *        command should apply to.  This function from one instance can be used
1215:.\Generated_Source\PSoC4/ServoTimer.c **** *        to apply the command to any of the instances in the design.
1216:.\Generated_Source\PSoC4/ServoTimer.c **** *        The mask value for a specific instance is available with the MASK
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 23


1217:.\Generated_Source\PSoC4/ServoTimer.c **** *        define.
1218:.\Generated_Source\PSoC4/ServoTimer.c **** *  command: Enumerated command values. Capture command only applicable for
1219:.\Generated_Source\PSoC4/ServoTimer.c **** *           Timer/Counter with Capture and PWM modes.
1220:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1221:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_CAPTURE    - Trigger Capture command
1222:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_RELOAD     - Trigger Reload command
1223:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_STOP       - Trigger Stop command
1224:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_START      - Trigger Start command
1225:.\Generated_Source\PSoC4/ServoTimer.c **** *
1226:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1227:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1228:.\Generated_Source\PSoC4/ServoTimer.c **** *
1229:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1230:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_TriggerCommand(uint32 mask, uint32 command)
1231:.\Generated_Source\PSoC4/ServoTimer.c **** {
1232:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1233:.\Generated_Source\PSoC4/ServoTimer.c **** 
1234:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1235:.\Generated_Source\PSoC4/ServoTimer.c **** 
1236:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMMAND_REG = ((uint32)(mask << command));
1237:.\Generated_Source\PSoC4/ServoTimer.c **** 
1238:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1239:.\Generated_Source\PSoC4/ServoTimer.c **** }
1240:.\Generated_Source\PSoC4/ServoTimer.c **** 
1241:.\Generated_Source\PSoC4/ServoTimer.c **** 
1242:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1243:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadStatus
1244:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1245:.\Generated_Source\PSoC4/ServoTimer.c **** *
1246:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1247:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the status of the ServoTimer.
1248:.\Generated_Source\PSoC4/ServoTimer.c **** *
1249:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1250:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1251:.\Generated_Source\PSoC4/ServoTimer.c **** *
1252:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1253:.\Generated_Source\PSoC4/ServoTimer.c **** *  Status
1254:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1255:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_STATUS_DOWN    - Set if counting down
1256:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_STATUS_RUNNING - Set if counter is running
1257:.\Generated_Source\PSoC4/ServoTimer.c **** *
1258:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1259:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadStatus(void)
1260:.\Generated_Source\PSoC4/ServoTimer.c **** {
1261:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
1262:.\Generated_Source\PSoC4/ServoTimer.c ****             (ServoTimer_STATUS_REG & ServoTimer_STATUS_DOWN));
1263:.\Generated_Source\PSoC4/ServoTimer.c **** }
1264:.\Generated_Source\PSoC4/ServoTimer.c **** 
1265:.\Generated_Source\PSoC4/ServoTimer.c **** 
1266:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1267:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetInterruptMode
1268:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1269:.\Generated_Source\PSoC4/ServoTimer.c **** *
1270:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1271:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the interrupt mask to control which interrupt
1272:.\Generated_Source\PSoC4/ServoTimer.c **** *  requests generate the interrupt signal.
1273:.\Generated_Source\PSoC4/ServoTimer.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 24


1274:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1275:.\Generated_Source\PSoC4/ServoTimer.c **** *   interruptMask: Mask of bits to be enabled
1276:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1277:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1278:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1279:.\Generated_Source\PSoC4/ServoTimer.c **** *
1280:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1281:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1282:.\Generated_Source\PSoC4/ServoTimer.c **** *
1283:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1284:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetInterruptMode(uint32 interruptMask)
1285:.\Generated_Source\PSoC4/ServoTimer.c **** {
1286:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_MASK_REG =  interruptMask;
  39              		.loc 1 1286 0
  40 000c 074A     		ldr	r2, .L2+8
  41 000e 0121     		mov	r1, #1
  42 0010 1160     		str	r1, [r2]
  43              	.LVL1:
  44              	.LBE11:
  45              	.LBE10:
  46              	.LBB12:
  47              	.LBB13:
 689:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
  48              		.loc 1 689 0
  49 0012 074A     		ldr	r2, .L2+12
  50 0014 0749     		ldr	r1, .L2+16
  51              	.LBE13:
  52              	.LBE12:
 160:.\Generated_Source\PSoC4/ServoTimer.c **** }
  53              		.loc 1 160 0
  54              		@ sp needed
  55              	.LBB15:
  56              	.LBB14:
 689:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
  57              		.loc 1 689 0
  58 0016 0A60     		str	r2, [r1]
  59              	.LVL2:
  60              	.LBE14:
  61              	.LBE15:
  62              	.LBB16:
  63              	.LBB17:
 859:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
  64              		.loc 1 859 0
  65 0018 0749     		ldr	r1, .L2+20
  66 001a 0A60     		str	r2, [r1]
  67              	.LVL3:
  68              	.LBE17:
  69              	.LBE16:
  70              	.LBB18:
  71              	.LBB19:
 611:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COUNTER_REG = (count & ServoTimer_16BIT_MASK);
  72              		.loc 1 611 0
  73 001c 074A     		ldr	r2, .L2+24
  74 001e 1360     		str	r3, [r2]
  75              	.LBE19:
  76              	.LBE18:
 160:.\Generated_Source\PSoC4/ServoTimer.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 25


  77              		.loc 1 160 0
  78 0020 7047     		bx	lr
  79              	.L3:
  80 0022 C046     		.align	2
  81              	.L2:
  82 0024 40010540 		.word	1074069824
  83 0028 64010540 		.word	1074069860
  84 002c 78010540 		.word	1074069880
  85 0030 FFFF0000 		.word	65535
  86 0034 54010540 		.word	1074069844
  87 0038 4C010540 		.word	1074069836
  88 003c 48010540 		.word	1074069832
  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	ServoTimer_Init, .-ServoTimer_Init
  92              		.section	.text.ServoTimer_Stop,"ax",%progbits
  93              		.align	1
  94              		.global	ServoTimer_Stop
  95              		.code	16
  96              		.thumb_func
  97              		.type	ServoTimer_Stop, %function
  98              	ServoTimer_Stop:
  99              	.LFB3:
 251:.\Generated_Source\PSoC4/ServoTimer.c **** {
 100              		.loc 1 251 0
 101              		.cfi_startproc
 102 0000 08B5     		push	{r3, lr}
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 3, -8
 105              		.cfi_offset 14, -4
 254:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 106              		.loc 1 254 0
 107 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 108              	.LVL4:
 256:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG &= (uint32)~ServoTimer_MASK;
 109              		.loc 1 256 0
 110 0006 044B     		ldr	r3, .L5
 111 0008 0221     		mov	r1, #2
 112 000a 1A68     		ldr	r2, [r3]
 259:.\Generated_Source\PSoC4/ServoTimer.c **** }
 113              		.loc 1 259 0
 114              		@ sp needed
 256:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG &= (uint32)~ServoTimer_MASK;
 115              		.loc 1 256 0
 116 000c 8A43     		bic	r2, r1
 117 000e 1A60     		str	r2, [r3]
 258:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 118              		.loc 1 258 0
 119 0010 FFF7FEFF 		bl	CyExitCriticalSection
 120              	.LVL5:
 259:.\Generated_Source\PSoC4/ServoTimer.c **** }
 121              		.loc 1 259 0
 122 0014 08BD     		pop	{r3, pc}
 123              	.L6:
 124 0016 C046     		.align	2
 125              	.L5:
 126 0018 00000540 		.word	1074069504
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 26


 127              		.cfi_endproc
 128              	.LFE3:
 129              		.size	ServoTimer_Stop, .-ServoTimer_Stop
 130              		.section	.text.ServoTimer_SetMode,"ax",%progbits
 131              		.align	1
 132              		.global	ServoTimer_SetMode
 133              		.code	16
 134              		.thumb_func
 135              		.type	ServoTimer_SetMode, %function
 136              	ServoTimer_SetMode:
 137              	.LFB4:
 288:.\Generated_Source\PSoC4/ServoTimer.c **** {
 138              		.loc 1 288 0
 139              		.cfi_startproc
 140              	.LVL6:
 141 0000 10B5     		push	{r4, lr}
 142              		.cfi_def_cfa_offset 8
 143              		.cfi_offset 4, -8
 144              		.cfi_offset 14, -4
 288:.\Generated_Source\PSoC4/ServoTimer.c **** {
 145              		.loc 1 288 0
 146 0002 041C     		mov	r4, r0
 291:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 147              		.loc 1 291 0
 148 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 149              	.LVL7:
 293:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_MODE_MASK;
 150              		.loc 1 293 0
 151 0008 054B     		ldr	r3, .L8
 152 000a 064A     		ldr	r2, .L8+4
 153 000c 1968     		ldr	r1, [r3]
 297:.\Generated_Source\PSoC4/ServoTimer.c **** }
 154              		.loc 1 297 0
 155              		@ sp needed
 293:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_MODE_MASK;
 156              		.loc 1 293 0
 157 000e 0A40     		and	r2, r1
 158 0010 1A60     		str	r2, [r3]
 294:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mode;
 159              		.loc 1 294 0
 160 0012 1A68     		ldr	r2, [r3]
 161 0014 1443     		orr	r4, r2
 162              	.LVL8:
 163 0016 1C60     		str	r4, [r3]
 296:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 164              		.loc 1 296 0
 165 0018 FFF7FEFF 		bl	CyExitCriticalSection
 166              	.LVL9:
 297:.\Generated_Source\PSoC4/ServoTimer.c **** }
 167              		.loc 1 297 0
 168 001c 10BD     		pop	{r4, pc}
 169              	.L9:
 170 001e C046     		.align	2
 171              	.L8:
 172 0020 40010540 		.word	1074069824
 173 0024 FFFFFFF8 		.word	-117440513
 174              		.cfi_endproc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 27


 175              	.LFE4:
 176              		.size	ServoTimer_SetMode, .-ServoTimer_SetMode
 177              		.section	.text.ServoTimer_SetQDMode,"ax",%progbits
 178              		.align	1
 179              		.global	ServoTimer_SetQDMode
 180              		.code	16
 181              		.thumb_func
 182              		.type	ServoTimer_SetQDMode, %function
 183              	ServoTimer_SetQDMode:
 184              	.LFB5:
 321:.\Generated_Source\PSoC4/ServoTimer.c **** {
 185              		.loc 1 321 0
 186              		.cfi_startproc
 187              	.LVL10:
 188 0000 10B5     		push	{r4, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 321:.\Generated_Source\PSoC4/ServoTimer.c **** {
 192              		.loc 1 321 0
 193 0002 041C     		mov	r4, r0
 324:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 194              		.loc 1 324 0
 195 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 196              	.LVL11:
 326:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_QUAD_MODE_MASK;
 197              		.loc 1 326 0
 198 0008 054B     		ldr	r3, .L11
 199 000a 064A     		ldr	r2, .L11+4
 200 000c 1968     		ldr	r1, [r3]
 330:.\Generated_Source\PSoC4/ServoTimer.c **** }
 201              		.loc 1 330 0
 202              		@ sp needed
 326:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_QUAD_MODE_MASK;
 203              		.loc 1 326 0
 204 000e 0A40     		and	r2, r1
 205 0010 1A60     		str	r2, [r3]
 327:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= qdMode;
 206              		.loc 1 327 0
 207 0012 1A68     		ldr	r2, [r3]
 208 0014 1443     		orr	r4, r2
 209              	.LVL12:
 210 0016 1C60     		str	r4, [r3]
 329:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 329 0
 212 0018 FFF7FEFF 		bl	CyExitCriticalSection
 213              	.LVL13:
 330:.\Generated_Source\PSoC4/ServoTimer.c **** }
 214              		.loc 1 330 0
 215 001c 10BD     		pop	{r4, pc}
 216              	.L12:
 217 001e C046     		.align	2
 218              	.L11:
 219 0020 40010540 		.word	1074069824
 220 0024 FFFF8FFF 		.word	-7340033
 221              		.cfi_endproc
 222              	.LFE5:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 28


 223              		.size	ServoTimer_SetQDMode, .-ServoTimer_SetQDMode
 224              		.section	.text.ServoTimer_SetPrescaler,"ax",%progbits
 225              		.align	1
 226              		.global	ServoTimer_SetPrescaler
 227              		.code	16
 228              		.thumb_func
 229              		.type	ServoTimer_SetPrescaler, %function
 230              	ServoTimer_SetPrescaler:
 231              	.LFB6:
 358:.\Generated_Source\PSoC4/ServoTimer.c **** {
 232              		.loc 1 358 0
 233              		.cfi_startproc
 234              	.LVL14:
 235 0000 10B5     		push	{r4, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 4, -8
 238              		.cfi_offset 14, -4
 358:.\Generated_Source\PSoC4/ServoTimer.c **** {
 239              		.loc 1 358 0
 240 0002 041C     		mov	r4, r0
 361:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 241              		.loc 1 361 0
 242 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 243              	.LVL15:
 363:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 244              		.loc 1 363 0
 245 0008 054B     		ldr	r3, .L14
 246 000a 064A     		ldr	r2, .L14+4
 247 000c 1968     		ldr	r1, [r3]
 367:.\Generated_Source\PSoC4/ServoTimer.c **** }
 248              		.loc 1 367 0
 249              		@ sp needed
 363:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 250              		.loc 1 363 0
 251 000e 0A40     		and	r2, r1
 252 0010 1A60     		str	r2, [r3]
 364:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= prescaler;
 253              		.loc 1 364 0
 254 0012 1A68     		ldr	r2, [r3]
 255 0014 1443     		orr	r4, r2
 256              	.LVL16:
 257 0016 1C60     		str	r4, [r3]
 366:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 258              		.loc 1 366 0
 259 0018 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL17:
 367:.\Generated_Source\PSoC4/ServoTimer.c **** }
 261              		.loc 1 367 0
 262 001c 10BD     		pop	{r4, pc}
 263              	.L15:
 264 001e C046     		.align	2
 265              	.L14:
 266 0020 40010540 		.word	1074069824
 267 0024 FF00FFFF 		.word	-65281
 268              		.cfi_endproc
 269              	.LFE6:
 270              		.size	ServoTimer_SetPrescaler, .-ServoTimer_SetPrescaler
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 29


 271              		.section	.text.ServoTimer_SetOneShot,"ax",%progbits
 272              		.align	1
 273              		.global	ServoTimer_SetOneShot
 274              		.code	16
 275              		.thumb_func
 276              		.type	ServoTimer_SetOneShot, %function
 277              	ServoTimer_SetOneShot:
 278              	.LFB7:
 390:.\Generated_Source\PSoC4/ServoTimer.c **** {
 279              		.loc 1 390 0
 280              		.cfi_startproc
 281              	.LVL18:
 282 0000 10B5     		push	{r4, lr}
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 4, -8
 285              		.cfi_offset 14, -4
 390:.\Generated_Source\PSoC4/ServoTimer.c **** {
 286              		.loc 1 390 0
 287 0002 041C     		mov	r4, r0
 393:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 288              		.loc 1 393 0
 289 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 290              	.LVL19:
 395:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_ONESHOT_MASK;
 291              		.loc 1 395 0
 292 0008 064B     		ldr	r3, .L17
 293 000a 074A     		ldr	r2, .L17+4
 294 000c 1968     		ldr	r1, [r3]
 400:.\Generated_Source\PSoC4/ServoTimer.c **** }
 295              		.loc 1 400 0
 296              		@ sp needed
 395:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_ONESHOT_MASK;
 297              		.loc 1 395 0
 298 000e 0A40     		and	r2, r1
 299 0010 1A60     		str	r2, [r3]
 396:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((oneShotEnable & ServoTimer_1BIT_MASK) <<
 300              		.loc 1 396 0
 301 0012 0121     		mov	r1, #1
 302 0014 1A68     		ldr	r2, [r3]
 303 0016 0C40     		and	r4, r1
 304              	.LVL20:
 305 0018 A404     		lsl	r4, r4, #18
 306 001a 1443     		orr	r4, r2
 307 001c 1C60     		str	r4, [r3]
 399:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 308              		.loc 1 399 0
 309 001e FFF7FEFF 		bl	CyExitCriticalSection
 310              	.LVL21:
 400:.\Generated_Source\PSoC4/ServoTimer.c **** }
 311              		.loc 1 400 0
 312 0022 10BD     		pop	{r4, pc}
 313              	.L18:
 314              		.align	2
 315              	.L17:
 316 0024 40010540 		.word	1074069824
 317 0028 FFFFFBFF 		.word	-262145
 318              		.cfi_endproc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 30


 319              	.LFE7:
 320              		.size	ServoTimer_SetOneShot, .-ServoTimer_SetOneShot
 321              		.section	.text.ServoTimer_SetPWMMode,"ax",%progbits
 322              		.align	1
 323              		.global	ServoTimer_SetPWMMode
 324              		.code	16
 325              		.thumb_func
 326              		.type	ServoTimer_SetPWMMode, %function
 327              	ServoTimer_SetPWMMode:
 328              	.LFB8:
 444:.\Generated_Source\PSoC4/ServoTimer.c **** {
 329              		.loc 1 444 0
 330              		.cfi_startproc
 331              	.LVL22:
 445:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL2_REG = (modeMask & ServoTimer_6BIT_MASK);
 332              		.loc 1 445 0
 333 0000 3F23     		mov	r3, #63
 334 0002 1840     		and	r0, r3
 335              	.LVL23:
 336 0004 014B     		ldr	r3, .L20
 446:.\Generated_Source\PSoC4/ServoTimer.c **** }
 337              		.loc 1 446 0
 338              		@ sp needed
 445:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL2_REG = (modeMask & ServoTimer_6BIT_MASK);
 339              		.loc 1 445 0
 340 0006 1860     		str	r0, [r3]
 446:.\Generated_Source\PSoC4/ServoTimer.c **** }
 341              		.loc 1 446 0
 342 0008 7047     		bx	lr
 343              	.L21:
 344 000a C046     		.align	2
 345              	.L20:
 346 000c 68010540 		.word	1074069864
 347              		.cfi_endproc
 348              	.LFE8:
 349              		.size	ServoTimer_SetPWMMode, .-ServoTimer_SetPWMMode
 350              		.section	.text.ServoTimer_SetPWMSyncKill,"ax",%progbits
 351              		.align	1
 352              		.global	ServoTimer_SetPWMSyncKill
 353              		.code	16
 354              		.thumb_func
 355              		.type	ServoTimer_SetPWMSyncKill, %function
 356              	ServoTimer_SetPWMSyncKill:
 357              	.LFB9:
 480:.\Generated_Source\PSoC4/ServoTimer.c **** {
 358              		.loc 1 480 0
 359              		.cfi_startproc
 360              	.LVL24:
 361 0000 10B5     		push	{r4, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 4, -8
 364              		.cfi_offset 14, -4
 480:.\Generated_Source\PSoC4/ServoTimer.c **** {
 365              		.loc 1 480 0
 366 0002 041C     		mov	r4, r0
 483:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 367              		.loc 1 483 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 31


 368 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 369              	.LVL25:
 485:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_SYNC_KILL_MASK;
 370              		.loc 1 485 0
 371 0008 064B     		ldr	r3, .L23
 372 000a 0421     		mov	r1, #4
 373 000c 1A68     		ldr	r2, [r3]
 490:.\Generated_Source\PSoC4/ServoTimer.c **** }
 374              		.loc 1 490 0
 375              		@ sp needed
 485:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_SYNC_KILL_MASK;
 376              		.loc 1 485 0
 377 000e 8A43     		bic	r2, r1
 378 0010 1A60     		str	r2, [r3]
 486:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((syncKillEnable & ServoTimer_1BIT_MASK)  <<
 379              		.loc 1 486 0
 380 0012 0121     		mov	r1, #1
 381 0014 1A68     		ldr	r2, [r3]
 382 0016 0C40     		and	r4, r1
 383              	.LVL26:
 384 0018 A400     		lsl	r4, r4, #2
 385 001a 1443     		orr	r4, r2
 386 001c 1C60     		str	r4, [r3]
 489:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 387              		.loc 1 489 0
 388 001e FFF7FEFF 		bl	CyExitCriticalSection
 389              	.LVL27:
 490:.\Generated_Source\PSoC4/ServoTimer.c **** }
 390              		.loc 1 490 0
 391 0022 10BD     		pop	{r4, pc}
 392              	.L24:
 393              		.align	2
 394              	.L23:
 395 0024 40010540 		.word	1074069824
 396              		.cfi_endproc
 397              	.LFE9:
 398              		.size	ServoTimer_SetPWMSyncKill, .-ServoTimer_SetPWMSyncKill
 399              		.section	.text.ServoTimer_SetPWMStopOnKill,"ax",%progbits
 400              		.align	1
 401              		.global	ServoTimer_SetPWMStopOnKill
 402              		.code	16
 403              		.thumb_func
 404              		.type	ServoTimer_SetPWMStopOnKill, %function
 405              	ServoTimer_SetPWMStopOnKill:
 406              	.LFB10:
 514:.\Generated_Source\PSoC4/ServoTimer.c **** {
 407              		.loc 1 514 0
 408              		.cfi_startproc
 409              	.LVL28:
 410 0000 10B5     		push	{r4, lr}
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 4, -8
 413              		.cfi_offset 14, -4
 514:.\Generated_Source\PSoC4/ServoTimer.c **** {
 414              		.loc 1 514 0
 415 0002 041C     		mov	r4, r0
 517:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 32


 416              		.loc 1 517 0
 417 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 418              	.LVL29:
 519:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_STOP_KILL_MASK;
 419              		.loc 1 519 0
 420 0008 064B     		ldr	r3, .L26
 421 000a 0821     		mov	r1, #8
 422 000c 1A68     		ldr	r2, [r3]
 524:.\Generated_Source\PSoC4/ServoTimer.c **** }
 423              		.loc 1 524 0
 424              		@ sp needed
 519:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_STOP_KILL_MASK;
 425              		.loc 1 519 0
 426 000e 8A43     		bic	r2, r1
 427 0010 1A60     		str	r2, [r3]
 520:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((stopOnKillEnable & ServoTimer_1BIT_MASK)  <<
 428              		.loc 1 520 0
 429 0012 0121     		mov	r1, #1
 430 0014 1A68     		ldr	r2, [r3]
 431 0016 0C40     		and	r4, r1
 432              	.LVL30:
 433 0018 E400     		lsl	r4, r4, #3
 434 001a 1443     		orr	r4, r2
 435 001c 1C60     		str	r4, [r3]
 523:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 436              		.loc 1 523 0
 437 001e FFF7FEFF 		bl	CyExitCriticalSection
 438              	.LVL31:
 524:.\Generated_Source\PSoC4/ServoTimer.c **** }
 439              		.loc 1 524 0
 440 0022 10BD     		pop	{r4, pc}
 441              	.L27:
 442              		.align	2
 443              	.L26:
 444 0024 40010540 		.word	1074069824
 445              		.cfi_endproc
 446              	.LFE10:
 447              		.size	ServoTimer_SetPWMStopOnKill, .-ServoTimer_SetPWMStopOnKill
 448              		.section	.text.ServoTimer_SetPWMDeadTime,"ax",%progbits
 449              		.align	1
 450              		.global	ServoTimer_SetPWMDeadTime
 451              		.code	16
 452              		.thumb_func
 453              		.type	ServoTimer_SetPWMDeadTime, %function
 454              	ServoTimer_SetPWMDeadTime:
 455              	.LFB11:
 547:.\Generated_Source\PSoC4/ServoTimer.c **** {
 456              		.loc 1 547 0
 457              		.cfi_startproc
 458              	.LVL32:
 459 0000 10B5     		push	{r4, lr}
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 4, -8
 462              		.cfi_offset 14, -4
 547:.\Generated_Source\PSoC4/ServoTimer.c **** {
 463              		.loc 1 547 0
 464 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 33


 550:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 465              		.loc 1 550 0
 466 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 467              	.LVL33:
 552:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 468              		.loc 1 552 0
 469 0008 064B     		ldr	r3, .L29
 470 000a 074A     		ldr	r2, .L29+4
 471 000c 1968     		ldr	r1, [r3]
 553:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((deadTime & ServoTimer_8BIT_MASK) <<
 472              		.loc 1 553 0
 473 000e 2406     		lsl	r4, r4, #24
 474              	.LVL34:
 552:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 475              		.loc 1 552 0
 476 0010 0A40     		and	r2, r1
 477 0012 1A60     		str	r2, [r3]
 553:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((deadTime & ServoTimer_8BIT_MASK) <<
 478              		.loc 1 553 0
 479 0014 1A68     		ldr	r2, [r3]
 480 0016 240C     		lsr	r4, r4, #16
 481 0018 1443     		orr	r4, r2
 482 001a 1C60     		str	r4, [r3]
 556:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 483              		.loc 1 556 0
 484 001c FFF7FEFF 		bl	CyExitCriticalSection
 485              	.LVL35:
 557:.\Generated_Source\PSoC4/ServoTimer.c **** }
 486              		.loc 1 557 0
 487              		@ sp needed
 488 0020 10BD     		pop	{r4, pc}
 489              	.L30:
 490 0022 C046     		.align	2
 491              	.L29:
 492 0024 40010540 		.word	1074069824
 493 0028 FF00FFFF 		.word	-65281
 494              		.cfi_endproc
 495              	.LFE11:
 496              		.size	ServoTimer_SetPWMDeadTime, .-ServoTimer_SetPWMDeadTime
 497              		.section	.text.ServoTimer_SetPWMInvert,"ax",%progbits
 498              		.align	1
 499              		.global	ServoTimer_SetPWMInvert
 500              		.code	16
 501              		.thumb_func
 502              		.type	ServoTimer_SetPWMInvert, %function
 503              	ServoTimer_SetPWMInvert:
 504              	.LFB12:
 580:.\Generated_Source\PSoC4/ServoTimer.c **** {
 505              		.loc 1 580 0
 506              		.cfi_startproc
 507              	.LVL36:
 508 0000 10B5     		push	{r4, lr}
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 4, -8
 511              		.cfi_offset 14, -4
 580:.\Generated_Source\PSoC4/ServoTimer.c **** {
 512              		.loc 1 580 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 34


 513 0002 041C     		mov	r4, r0
 583:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 514              		.loc 1 583 0
 515 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 516              	.LVL37:
 585:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_INV_OUT_MASK;
 517              		.loc 1 585 0
 518 0008 054B     		ldr	r3, .L32
 519 000a 064A     		ldr	r2, .L32+4
 520 000c 1968     		ldr	r1, [r3]
 589:.\Generated_Source\PSoC4/ServoTimer.c **** }
 521              		.loc 1 589 0
 522              		@ sp needed
 585:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_INV_OUT_MASK;
 523              		.loc 1 585 0
 524 000e 0A40     		and	r2, r1
 525 0010 1A60     		str	r2, [r3]
 586:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mask;
 526              		.loc 1 586 0
 527 0012 1A68     		ldr	r2, [r3]
 528 0014 1443     		orr	r4, r2
 529              	.LVL38:
 530 0016 1C60     		str	r4, [r3]
 588:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 531              		.loc 1 588 0
 532 0018 FFF7FEFF 		bl	CyExitCriticalSection
 533              	.LVL39:
 589:.\Generated_Source\PSoC4/ServoTimer.c **** }
 534              		.loc 1 589 0
 535 001c 10BD     		pop	{r4, pc}
 536              	.L33:
 537 001e C046     		.align	2
 538              	.L32:
 539 0020 40010540 		.word	1074069824
 540 0024 FFFFCFFF 		.word	-3145729
 541              		.cfi_endproc
 542              	.LFE12:
 543              		.size	ServoTimer_SetPWMInvert, .-ServoTimer_SetPWMInvert
 544              		.section	.text.ServoTimer_WriteCounter,"ax",%progbits
 545              		.align	1
 546              		.global	ServoTimer_WriteCounter
 547              		.code	16
 548              		.thumb_func
 549              		.type	ServoTimer_WriteCounter, %function
 550              	ServoTimer_WriteCounter:
 551              	.LFB13:
 610:.\Generated_Source\PSoC4/ServoTimer.c **** {
 552              		.loc 1 610 0
 553              		.cfi_startproc
 554              	.LVL40:
 611:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COUNTER_REG = (count & ServoTimer_16BIT_MASK);
 555              		.loc 1 611 0
 556 0000 014B     		ldr	r3, .L35
 557 0002 80B2     		uxth	r0, r0
 558              	.LVL41:
 559 0004 1860     		str	r0, [r3]
 612:.\Generated_Source\PSoC4/ServoTimer.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 35


 560              		.loc 1 612 0
 561              		@ sp needed
 562 0006 7047     		bx	lr
 563              	.L36:
 564              		.align	2
 565              	.L35:
 566 0008 48010540 		.word	1074069832
 567              		.cfi_endproc
 568              	.LFE13:
 569              		.size	ServoTimer_WriteCounter, .-ServoTimer_WriteCounter
 570              		.section	.text.ServoTimer_ReadCounter,"ax",%progbits
 571              		.align	1
 572              		.global	ServoTimer_ReadCounter
 573              		.code	16
 574              		.thumb_func
 575              		.type	ServoTimer_ReadCounter, %function
 576              	ServoTimer_ReadCounter:
 577              	.LFB14:
 630:.\Generated_Source\PSoC4/ServoTimer.c **** {
 578              		.loc 1 630 0
 579              		.cfi_startproc
 631:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COUNTER_REG & ServoTimer_16BIT_MASK);
 580              		.loc 1 631 0
 581 0000 014B     		ldr	r3, .L38
 632:.\Generated_Source\PSoC4/ServoTimer.c **** }
 582              		.loc 1 632 0
 583              		@ sp needed
 631:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COUNTER_REG & ServoTimer_16BIT_MASK);
 584              		.loc 1 631 0
 585 0002 1868     		ldr	r0, [r3]
 586 0004 80B2     		uxth	r0, r0
 632:.\Generated_Source\PSoC4/ServoTimer.c **** }
 587              		.loc 1 632 0
 588 0006 7047     		bx	lr
 589              	.L39:
 590              		.align	2
 591              	.L38:
 592 0008 48010540 		.word	1074069832
 593              		.cfi_endproc
 594              	.LFE14:
 595              		.size	ServoTimer_ReadCounter, .-ServoTimer_ReadCounter
 596              		.section	.text.ServoTimer_SetCounterMode,"ax",%progbits
 597              		.align	1
 598              		.global	ServoTimer_SetCounterMode
 599              		.code	16
 600              		.thumb_func
 601              		.type	ServoTimer_SetCounterMode, %function
 602              	ServoTimer_SetCounterMode:
 603              	.LFB15:
 659:.\Generated_Source\PSoC4/ServoTimer.c **** {
 604              		.loc 1 659 0
 605              		.cfi_startproc
 606              	.LVL42:
 607 0000 10B5     		push	{r4, lr}
 608              		.cfi_def_cfa_offset 8
 609              		.cfi_offset 4, -8
 610              		.cfi_offset 14, -4
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 36


 659:.\Generated_Source\PSoC4/ServoTimer.c **** {
 611              		.loc 1 659 0
 612 0002 041C     		mov	r4, r0
 662:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 613              		.loc 1 662 0
 614 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 615              	.LVL43:
 664:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_UPDOWN_MASK;
 616              		.loc 1 664 0
 617 0008 054B     		ldr	r3, .L41
 618 000a 064A     		ldr	r2, .L41+4
 619 000c 1968     		ldr	r1, [r3]
 668:.\Generated_Source\PSoC4/ServoTimer.c **** }
 620              		.loc 1 668 0
 621              		@ sp needed
 664:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_UPDOWN_MASK;
 622              		.loc 1 664 0
 623 000e 0A40     		and	r2, r1
 624 0010 1A60     		str	r2, [r3]
 665:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= counterMode;
 625              		.loc 1 665 0
 626 0012 1A68     		ldr	r2, [r3]
 627 0014 1443     		orr	r4, r2
 628              	.LVL44:
 629 0016 1C60     		str	r4, [r3]
 667:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 630              		.loc 1 667 0
 631 0018 FFF7FEFF 		bl	CyExitCriticalSection
 632              	.LVL45:
 668:.\Generated_Source\PSoC4/ServoTimer.c **** }
 633              		.loc 1 668 0
 634 001c 10BD     		pop	{r4, pc}
 635              	.L42:
 636 001e C046     		.align	2
 637              	.L41:
 638 0020 40010540 		.word	1074069824
 639 0024 FFFFFCFF 		.word	-196609
 640              		.cfi_endproc
 641              	.LFE15:
 642              		.size	ServoTimer_SetCounterMode, .-ServoTimer_SetCounterMode
 643              		.section	.text.ServoTimer_WritePeriod,"ax",%progbits
 644              		.align	1
 645              		.global	ServoTimer_WritePeriod
 646              		.code	16
 647              		.thumb_func
 648              		.type	ServoTimer_WritePeriod, %function
 649              	ServoTimer_WritePeriod:
 650              	.LFB16:
 688:.\Generated_Source\PSoC4/ServoTimer.c **** {
 651              		.loc 1 688 0
 652              		.cfi_startproc
 653              	.LVL46:
 689:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
 654              		.loc 1 689 0
 655 0000 014B     		ldr	r3, .L44
 656 0002 80B2     		uxth	r0, r0
 657              	.LVL47:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 37


 658 0004 1860     		str	r0, [r3]
 690:.\Generated_Source\PSoC4/ServoTimer.c **** }
 659              		.loc 1 690 0
 660              		@ sp needed
 661 0006 7047     		bx	lr
 662              	.L45:
 663              		.align	2
 664              	.L44:
 665 0008 54010540 		.word	1074069844
 666              		.cfi_endproc
 667              	.LFE16:
 668              		.size	ServoTimer_WritePeriod, .-ServoTimer_WritePeriod
 669              		.section	.text.ServoTimer_ReadPeriod,"ax",%progbits
 670              		.align	1
 671              		.global	ServoTimer_ReadPeriod
 672              		.code	16
 673              		.thumb_func
 674              		.type	ServoTimer_ReadPeriod, %function
 675              	ServoTimer_ReadPeriod:
 676              	.LFB17:
 708:.\Generated_Source\PSoC4/ServoTimer.c **** {
 677              		.loc 1 708 0
 678              		.cfi_startproc
 709:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_REG & ServoTimer_16BIT_MASK);
 679              		.loc 1 709 0
 680 0000 014B     		ldr	r3, .L47
 710:.\Generated_Source\PSoC4/ServoTimer.c **** }
 681              		.loc 1 710 0
 682              		@ sp needed
 709:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_REG & ServoTimer_16BIT_MASK);
 683              		.loc 1 709 0
 684 0002 1868     		ldr	r0, [r3]
 685 0004 80B2     		uxth	r0, r0
 710:.\Generated_Source\PSoC4/ServoTimer.c **** }
 686              		.loc 1 710 0
 687 0006 7047     		bx	lr
 688              	.L48:
 689              		.align	2
 690              	.L47:
 691 0008 54010540 		.word	1074069844
 692              		.cfi_endproc
 693              	.LFE17:
 694              		.size	ServoTimer_ReadPeriod, .-ServoTimer_ReadPeriod
 695              		.section	.text.ServoTimer_SetCompareSwap,"ax",%progbits
 696              		.align	1
 697              		.global	ServoTimer_SetCompareSwap
 698              		.code	16
 699              		.thumb_func
 700              		.type	ServoTimer_SetCompareSwap, %function
 701              	ServoTimer_SetCompareSwap:
 702              	.LFB18:
 734:.\Generated_Source\PSoC4/ServoTimer.c **** {
 703              		.loc 1 734 0
 704              		.cfi_startproc
 705              	.LVL48:
 706 0000 10B5     		push	{r4, lr}
 707              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 38


 708              		.cfi_offset 4, -8
 709              		.cfi_offset 14, -4
 734:.\Generated_Source\PSoC4/ServoTimer.c **** {
 710              		.loc 1 734 0
 711 0002 041C     		mov	r4, r0
 737:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 712              		.loc 1 737 0
 713 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 714              	.LVL49:
 739:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_CC_MASK;
 715              		.loc 1 739 0
 716 0008 054B     		ldr	r3, .L50
 717 000a 0122     		mov	r2, #1
 718 000c 1968     		ldr	r1, [r3]
 743:.\Generated_Source\PSoC4/ServoTimer.c **** }
 719              		.loc 1 743 0
 720              		@ sp needed
 739:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_CC_MASK;
 721              		.loc 1 739 0
 722 000e 9143     		bic	r1, r2
 723 0010 1960     		str	r1, [r3]
 740:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= (swapEnable & ServoTimer_1BIT_MASK);
 724              		.loc 1 740 0
 725 0012 1968     		ldr	r1, [r3]
 726 0014 2240     		and	r2, r4
 727 0016 0A43     		orr	r2, r1
 728 0018 1A60     		str	r2, [r3]
 742:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 729              		.loc 1 742 0
 730 001a FFF7FEFF 		bl	CyExitCriticalSection
 731              	.LVL50:
 732              	.LVL51:
 743:.\Generated_Source\PSoC4/ServoTimer.c **** }
 733              		.loc 1 743 0
 734 001e 10BD     		pop	{r4, pc}
 735              	.L51:
 736              		.align	2
 737              	.L50:
 738 0020 40010540 		.word	1074069824
 739              		.cfi_endproc
 740              	.LFE18:
 741              		.size	ServoTimer_SetCompareSwap, .-ServoTimer_SetCompareSwap
 742              		.section	.text.ServoTimer_WritePeriodBuf,"ax",%progbits
 743              		.align	1
 744              		.global	ServoTimer_WritePeriodBuf
 745              		.code	16
 746              		.thumb_func
 747              		.type	ServoTimer_WritePeriodBuf, %function
 748              	ServoTimer_WritePeriodBuf:
 749              	.LFB19:
 761:.\Generated_Source\PSoC4/ServoTimer.c **** {
 750              		.loc 1 761 0
 751              		.cfi_startproc
 752              	.LVL52:
 762:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_BUF_REG = (periodBuf & ServoTimer_16BIT_MASK);
 753              		.loc 1 762 0
 754 0000 014B     		ldr	r3, .L53
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 39


 755 0002 80B2     		uxth	r0, r0
 756              	.LVL53:
 757 0004 1860     		str	r0, [r3]
 763:.\Generated_Source\PSoC4/ServoTimer.c **** }
 758              		.loc 1 763 0
 759              		@ sp needed
 760 0006 7047     		bx	lr
 761              	.L54:
 762              		.align	2
 763              	.L53:
 764 0008 58010540 		.word	1074069848
 765              		.cfi_endproc
 766              	.LFE19:
 767              		.size	ServoTimer_WritePeriodBuf, .-ServoTimer_WritePeriodBuf
 768              		.section	.text.ServoTimer_ReadPeriodBuf,"ax",%progbits
 769              		.align	1
 770              		.global	ServoTimer_ReadPeriodBuf
 771              		.code	16
 772              		.thumb_func
 773              		.type	ServoTimer_ReadPeriodBuf, %function
 774              	ServoTimer_ReadPeriodBuf:
 775              	.LFB20:
 781:.\Generated_Source\PSoC4/ServoTimer.c **** {
 776              		.loc 1 781 0
 777              		.cfi_startproc
 782:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_BUF_REG & ServoTimer_16BIT_MASK);
 778              		.loc 1 782 0
 779 0000 014B     		ldr	r3, .L56
 783:.\Generated_Source\PSoC4/ServoTimer.c **** }
 780              		.loc 1 783 0
 781              		@ sp needed
 782:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_BUF_REG & ServoTimer_16BIT_MASK);
 782              		.loc 1 782 0
 783 0002 1868     		ldr	r0, [r3]
 784 0004 80B2     		uxth	r0, r0
 783:.\Generated_Source\PSoC4/ServoTimer.c **** }
 785              		.loc 1 783 0
 786 0006 7047     		bx	lr
 787              	.L57:
 788              		.align	2
 789              	.L56:
 790 0008 58010540 		.word	1074069848
 791              		.cfi_endproc
 792              	.LFE20:
 793              		.size	ServoTimer_ReadPeriodBuf, .-ServoTimer_ReadPeriodBuf
 794              		.section	.text.ServoTimer_SetPeriodSwap,"ax",%progbits
 795              		.align	1
 796              		.global	ServoTimer_SetPeriodSwap
 797              		.code	16
 798              		.thumb_func
 799              		.type	ServoTimer_SetPeriodSwap, %function
 800              	ServoTimer_SetPeriodSwap:
 801              	.LFB21:
 807:.\Generated_Source\PSoC4/ServoTimer.c **** {
 802              		.loc 1 807 0
 803              		.cfi_startproc
 804              	.LVL54:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 40


 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 807:.\Generated_Source\PSoC4/ServoTimer.c **** {
 809              		.loc 1 807 0
 810 0002 041C     		mov	r4, r0
 810:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 811              		.loc 1 810 0
 812 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 813              	.LVL55:
 812:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_PERIOD_MASK;
 814              		.loc 1 812 0
 815 0008 064B     		ldr	r3, .L59
 816 000a 0221     		mov	r1, #2
 817 000c 1A68     		ldr	r2, [r3]
 817:.\Generated_Source\PSoC4/ServoTimer.c **** }
 818              		.loc 1 817 0
 819              		@ sp needed
 812:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_PERIOD_MASK;
 820              		.loc 1 812 0
 821 000e 8A43     		bic	r2, r1
 822 0010 1A60     		str	r2, [r3]
 813:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((swapEnable & ServoTimer_1BIT_MASK) <<
 823              		.loc 1 813 0
 824 0012 0121     		mov	r1, #1
 825 0014 1A68     		ldr	r2, [r3]
 826 0016 0C40     		and	r4, r1
 827              	.LVL56:
 828 0018 8C40     		lsl	r4, r4, r1
 829 001a 1443     		orr	r4, r2
 830 001c 1C60     		str	r4, [r3]
 816:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 831              		.loc 1 816 0
 832 001e FFF7FEFF 		bl	CyExitCriticalSection
 833              	.LVL57:
 817:.\Generated_Source\PSoC4/ServoTimer.c **** }
 834              		.loc 1 817 0
 835 0022 10BD     		pop	{r4, pc}
 836              	.L60:
 837              		.align	2
 838              	.L59:
 839 0024 40010540 		.word	1074069824
 840              		.cfi_endproc
 841              	.LFE21:
 842              		.size	ServoTimer_SetPeriodSwap, .-ServoTimer_SetPeriodSwap
 843              		.section	.text.ServoTimer_WriteCompare,"ax",%progbits
 844              		.align	1
 845              		.global	ServoTimer_WriteCompare
 846              		.code	16
 847              		.thumb_func
 848              		.type	ServoTimer_WriteCompare, %function
 849              	ServoTimer_WriteCompare:
 850              	.LFB22:
 836:.\Generated_Source\PSoC4/ServoTimer.c **** {
 851              		.loc 1 836 0
 852              		.cfi_startproc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 41


 853              	.LVL58:
 859:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
 854              		.loc 1 859 0
 855 0000 014B     		ldr	r3, .L62
 856 0002 80B2     		uxth	r0, r0
 857              	.LVL59:
 858 0004 1860     		str	r0, [r3]
 860:.\Generated_Source\PSoC4/ServoTimer.c **** }
 859              		.loc 1 860 0
 860              		@ sp needed
 861 0006 7047     		bx	lr
 862              	.L63:
 863              		.align	2
 864              	.L62:
 865 0008 4C010540 		.word	1074069836
 866              		.cfi_endproc
 867              	.LFE22:
 868              		.size	ServoTimer_WriteCompare, .-ServoTimer_WriteCompare
 869              		.section	.text.ServoTimer_ReadCompare,"ax",%progbits
 870              		.align	1
 871              		.global	ServoTimer_ReadCompare
 872              		.code	16
 873              		.thumb_func
 874              		.type	ServoTimer_ReadCompare, %function
 875              	ServoTimer_ReadCompare:
 876              	.LFB23:
 879:.\Generated_Source\PSoC4/ServoTimer.c **** {
 877              		.loc 1 879 0
 878              		.cfi_startproc
 904:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 879              		.loc 1 904 0
 880 0000 014B     		ldr	r3, .L65
 906:.\Generated_Source\PSoC4/ServoTimer.c **** }
 881              		.loc 1 906 0
 882              		@ sp needed
 904:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 883              		.loc 1 904 0
 884 0002 1868     		ldr	r0, [r3]
 885 0004 80B2     		uxth	r0, r0
 906:.\Generated_Source\PSoC4/ServoTimer.c **** }
 886              		.loc 1 906 0
 887 0006 7047     		bx	lr
 888              	.L66:
 889              		.align	2
 890              	.L65:
 891 0008 4C010540 		.word	1074069836
 892              		.cfi_endproc
 893              	.LFE23:
 894              		.size	ServoTimer_ReadCompare, .-ServoTimer_ReadCompare
 895              		.section	.text.ServoTimer_WriteCompareBuf,"ax",%progbits
 896              		.align	1
 897              		.global	ServoTimer_WriteCompareBuf
 898              		.code	16
 899              		.thumb_func
 900              		.type	ServoTimer_WriteCompareBuf, %function
 901              	ServoTimer_WriteCompareBuf:
 902              	.LFB24:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 42


 925:.\Generated_Source\PSoC4/ServoTimer.c **** {
 903              		.loc 1 925 0
 904              		.cfi_startproc
 905              	.LVL60:
 946:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMP_CAP_BUF_REG = (compareBuf & ServoTimer_16BIT_MASK);
 906              		.loc 1 946 0
 907 0000 014B     		ldr	r3, .L68
 908 0002 80B2     		uxth	r0, r0
 909              	.LVL61:
 910 0004 1860     		str	r0, [r3]
 947:.\Generated_Source\PSoC4/ServoTimer.c **** }
 911              		.loc 1 947 0
 912              		@ sp needed
 913 0006 7047     		bx	lr
 914              	.L69:
 915              		.align	2
 916              	.L68:
 917 0008 50010540 		.word	1074069840
 918              		.cfi_endproc
 919              	.LFE24:
 920              		.size	ServoTimer_WriteCompareBuf, .-ServoTimer_WriteCompareBuf
 921              		.section	.text.ServoTimer_ReadCompareBuf,"ax",%progbits
 922              		.align	1
 923              		.global	ServoTimer_ReadCompareBuf
 924              		.code	16
 925              		.thumb_func
 926              		.type	ServoTimer_ReadCompareBuf, %function
 927              	ServoTimer_ReadCompareBuf:
 928              	.LFB25:
 966:.\Generated_Source\PSoC4/ServoTimer.c **** {
 929              		.loc 1 966 0
 930              		.cfi_startproc
 991:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 931              		.loc 1 991 0
 932 0000 014B     		ldr	r3, .L71
 993:.\Generated_Source\PSoC4/ServoTimer.c **** }
 933              		.loc 1 993 0
 934              		@ sp needed
 991:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 935              		.loc 1 991 0
 936 0002 1868     		ldr	r0, [r3]
 937 0004 80B2     		uxth	r0, r0
 993:.\Generated_Source\PSoC4/ServoTimer.c **** }
 938              		.loc 1 993 0
 939 0006 7047     		bx	lr
 940              	.L72:
 941              		.align	2
 942              	.L71:
 943 0008 50010540 		.word	1074069840
 944              		.cfi_endproc
 945              	.LFE25:
 946              		.size	ServoTimer_ReadCompareBuf, .-ServoTimer_ReadCompareBuf
 947              		.section	.text.ServoTimer_ReadCapture,"ax",%progbits
 948              		.align	1
 949              		.global	ServoTimer_ReadCapture
 950              		.code	16
 951              		.thumb_func
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 43


 952              		.type	ServoTimer_ReadCapture, %function
 953              	ServoTimer_ReadCapture:
 954              	.LFB26:
1012:.\Generated_Source\PSoC4/ServoTimer.c **** {
 955              		.loc 1 1012 0
 956              		.cfi_startproc
1013:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 957              		.loc 1 1013 0
 958 0000 014B     		ldr	r3, .L74
1014:.\Generated_Source\PSoC4/ServoTimer.c **** }
 959              		.loc 1 1014 0
 960              		@ sp needed
1013:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 961              		.loc 1 1013 0
 962 0002 1868     		ldr	r0, [r3]
 963 0004 80B2     		uxth	r0, r0
1014:.\Generated_Source\PSoC4/ServoTimer.c **** }
 964              		.loc 1 1014 0
 965 0006 7047     		bx	lr
 966              	.L75:
 967              		.align	2
 968              	.L74:
 969 0008 4C010540 		.word	1074069836
 970              		.cfi_endproc
 971              	.LFE26:
 972              		.size	ServoTimer_ReadCapture, .-ServoTimer_ReadCapture
 973              		.section	.text.ServoTimer_ReadCaptureBuf,"ax",%progbits
 974              		.align	1
 975              		.global	ServoTimer_ReadCaptureBuf
 976              		.code	16
 977              		.thumb_func
 978              		.type	ServoTimer_ReadCaptureBuf, %function
 979              	ServoTimer_ReadCaptureBuf:
 980              	.LFB27:
1033:.\Generated_Source\PSoC4/ServoTimer.c **** {
 981              		.loc 1 1033 0
 982              		.cfi_startproc
1034:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 983              		.loc 1 1034 0
 984 0000 014B     		ldr	r3, .L77
1035:.\Generated_Source\PSoC4/ServoTimer.c **** }
 985              		.loc 1 1035 0
 986              		@ sp needed
1034:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 987              		.loc 1 1034 0
 988 0002 1868     		ldr	r0, [r3]
 989 0004 80B2     		uxth	r0, r0
1035:.\Generated_Source\PSoC4/ServoTimer.c **** }
 990              		.loc 1 1035 0
 991 0006 7047     		bx	lr
 992              	.L78:
 993              		.align	2
 994              	.L77:
 995 0008 50010540 		.word	1074069840
 996              		.cfi_endproc
 997              	.LFE27:
 998              		.size	ServoTimer_ReadCaptureBuf, .-ServoTimer_ReadCaptureBuf
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 44


 999              		.section	.text.ServoTimer_SetCaptureMode,"ax",%progbits
 1000              		.align	1
 1001              		.global	ServoTimer_SetCaptureMode
 1002              		.code	16
 1003              		.thumb_func
 1004              		.type	ServoTimer_SetCaptureMode, %function
 1005              	ServoTimer_SetCaptureMode:
 1006              	.LFB28:
1060:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1007              		.loc 1 1060 0
 1008              		.cfi_startproc
 1009              	.LVL62:
 1010 0000 10B5     		push	{r4, lr}
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 4, -8
 1013              		.cfi_offset 14, -4
1060:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1014              		.loc 1 1060 0
 1015 0002 041C     		mov	r4, r0
1063:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1016              		.loc 1 1063 0
 1017 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1018              	.LVL63:
1065:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_CAPTURE_MASK;
 1019              		.loc 1 1065 0
 1020 0008 054B     		ldr	r3, .L80
 1021 000a 0321     		mov	r1, #3
 1022 000c 1A68     		ldr	r2, [r3]
1069:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1023              		.loc 1 1069 0
 1024              		@ sp needed
1065:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_CAPTURE_MASK;
 1025              		.loc 1 1065 0
 1026 000e 8A43     		bic	r2, r1
 1027 0010 1A60     		str	r2, [r3]
1066:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= triggerMode;
 1028              		.loc 1 1066 0
 1029 0012 1A68     		ldr	r2, [r3]
 1030 0014 1443     		orr	r4, r2
 1031              	.LVL64:
 1032 0016 1C60     		str	r4, [r3]
1068:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1033              		.loc 1 1068 0
 1034 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1035              	.LVL65:
1069:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1036              		.loc 1 1069 0
 1037 001c 10BD     		pop	{r4, pc}
 1038              	.L81:
 1039 001e C046     		.align	2
 1040              	.L80:
 1041 0020 64010540 		.word	1074069860
 1042              		.cfi_endproc
 1043              	.LFE28:
 1044              		.size	ServoTimer_SetCaptureMode, .-ServoTimer_SetCaptureMode
 1045              		.section	.text.ServoTimer_SetReloadMode,"ax",%progbits
 1046              		.align	1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 45


 1047              		.global	ServoTimer_SetReloadMode
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	ServoTimer_SetReloadMode, %function
 1051              	ServoTimer_SetReloadMode:
 1052              	.LFB29:
1093:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1053              		.loc 1 1093 0
 1054              		.cfi_startproc
 1055              	.LVL66:
 1056 0000 10B5     		push	{r4, lr}
 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 4, -8
 1059              		.cfi_offset 14, -4
1093:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1060              		.loc 1 1093 0
 1061 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1062              		.loc 1 1096 0
 1063 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1064              	.LVL67:
1098:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_RELOAD_MASK;
 1065              		.loc 1 1098 0
 1066 0008 054B     		ldr	r3, .L83
 1067 000a 3021     		mov	r1, #48
 1068 000c 1A68     		ldr	r2, [r3]
1099:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
 1069              		.loc 1 1099 0
 1070 000e 2401     		lsl	r4, r4, #4
 1071              	.LVL68:
1098:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_RELOAD_MASK;
 1072              		.loc 1 1098 0
 1073 0010 8A43     		bic	r2, r1
 1074 0012 1A60     		str	r2, [r3]
1099:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
 1075              		.loc 1 1099 0
 1076 0014 1A68     		ldr	r2, [r3]
1102:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1077              		.loc 1 1102 0
 1078              		@ sp needed
1099:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
 1079              		.loc 1 1099 0
 1080 0016 1443     		orr	r4, r2
 1081 0018 1C60     		str	r4, [r3]
1101:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1082              		.loc 1 1101 0
 1083 001a FFF7FEFF 		bl	CyExitCriticalSection
 1084              	.LVL69:
1102:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1085              		.loc 1 1102 0
 1086 001e 10BD     		pop	{r4, pc}
 1087              	.L84:
 1088              		.align	2
 1089              	.L83:
 1090 0020 64010540 		.word	1074069860
 1091              		.cfi_endproc
 1092              	.LFE29:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 46


 1093              		.size	ServoTimer_SetReloadMode, .-ServoTimer_SetReloadMode
 1094              		.section	.text.ServoTimer_SetStartMode,"ax",%progbits
 1095              		.align	1
 1096              		.global	ServoTimer_SetStartMode
 1097              		.code	16
 1098              		.thumb_func
 1099              		.type	ServoTimer_SetStartMode, %function
 1100              	ServoTimer_SetStartMode:
 1101              	.LFB30:
1126:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1102              		.loc 1 1126 0
 1103              		.cfi_startproc
 1104              	.LVL70:
 1105 0000 10B5     		push	{r4, lr}
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 4, -8
 1108              		.cfi_offset 14, -4
1126:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1109              		.loc 1 1126 0
 1110 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1111              		.loc 1 1129 0
 1112 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1113              	.LVL71:
1131:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_START_MASK;
 1114              		.loc 1 1131 0
 1115 0008 054B     		ldr	r3, .L86
 1116 000a 064A     		ldr	r2, .L86+4
 1117 000c 1968     		ldr	r1, [r3]
1132:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
 1118              		.loc 1 1132 0
 1119 000e 2402     		lsl	r4, r4, #8
 1120              	.LVL72:
1131:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_START_MASK;
 1121              		.loc 1 1131 0
 1122 0010 0A40     		and	r2, r1
 1123 0012 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
 1124              		.loc 1 1132 0
 1125 0014 1A68     		ldr	r2, [r3]
1135:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1126              		.loc 1 1135 0
 1127              		@ sp needed
1132:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
 1128              		.loc 1 1132 0
 1129 0016 1443     		orr	r4, r2
 1130 0018 1C60     		str	r4, [r3]
1134:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1131              		.loc 1 1134 0
 1132 001a FFF7FEFF 		bl	CyExitCriticalSection
 1133              	.LVL73:
1135:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1134              		.loc 1 1135 0
 1135 001e 10BD     		pop	{r4, pc}
 1136              	.L87:
 1137              		.align	2
 1138              	.L86:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 47


 1139 0020 64010540 		.word	1074069860
 1140 0024 FFFCFFFF 		.word	-769
 1141              		.cfi_endproc
 1142              	.LFE30:
 1143              		.size	ServoTimer_SetStartMode, .-ServoTimer_SetStartMode
 1144              		.section	.text.ServoTimer_SetStopMode,"ax",%progbits
 1145              		.align	1
 1146              		.global	ServoTimer_SetStopMode
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	ServoTimer_SetStopMode, %function
 1150              	ServoTimer_SetStopMode:
 1151              	.LFB31:
1158:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1152              		.loc 1 1158 0
 1153              		.cfi_startproc
 1154              	.LVL74:
 1155 0000 10B5     		push	{r4, lr}
 1156              		.cfi_def_cfa_offset 8
 1157              		.cfi_offset 4, -8
 1158              		.cfi_offset 14, -4
1158:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1159              		.loc 1 1158 0
 1160 0002 041C     		mov	r4, r0
1161:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1161              		.loc 1 1161 0
 1162 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL75:
1163:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_STOP_MASK;
 1164              		.loc 1 1163 0
 1165 0008 054B     		ldr	r3, .L89
 1166 000a C021     		mov	r1, #192
 1167 000c 1A68     		ldr	r2, [r3]
1164:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
 1168              		.loc 1 1164 0
 1169 000e A401     		lsl	r4, r4, #6
 1170              	.LVL76:
1163:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_STOP_MASK;
 1171              		.loc 1 1163 0
 1172 0010 8A43     		bic	r2, r1
 1173 0012 1A60     		str	r2, [r3]
1164:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
 1174              		.loc 1 1164 0
 1175 0014 1A68     		ldr	r2, [r3]
1167:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1176              		.loc 1 1167 0
 1177              		@ sp needed
1164:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
 1178              		.loc 1 1164 0
 1179 0016 1443     		orr	r4, r2
 1180 0018 1C60     		str	r4, [r3]
1166:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1181              		.loc 1 1166 0
 1182 001a FFF7FEFF 		bl	CyExitCriticalSection
 1183              	.LVL77:
1167:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1184              		.loc 1 1167 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 48


 1185 001e 10BD     		pop	{r4, pc}
 1186              	.L90:
 1187              		.align	2
 1188              	.L89:
 1189 0020 64010540 		.word	1074069860
 1190              		.cfi_endproc
 1191              	.LFE31:
 1192              		.size	ServoTimer_SetStopMode, .-ServoTimer_SetStopMode
 1193              		.section	.text.ServoTimer_SetCountMode,"ax",%progbits
 1194              		.align	1
 1195              		.global	ServoTimer_SetCountMode
 1196              		.code	16
 1197              		.thumb_func
 1198              		.type	ServoTimer_SetCountMode, %function
 1199              	ServoTimer_SetCountMode:
 1200              	.LFB32:
1191:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1201              		.loc 1 1191 0
 1202              		.cfi_startproc
 1203              	.LVL78:
 1204 0000 10B5     		push	{r4, lr}
 1205              		.cfi_def_cfa_offset 8
 1206              		.cfi_offset 4, -8
 1207              		.cfi_offset 14, -4
1191:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1208              		.loc 1 1191 0
 1209 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1210              		.loc 1 1194 0
 1211 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1212              	.LVL79:
1196:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_COUNT_MASK;
 1213              		.loc 1 1196 0
 1214 0008 054B     		ldr	r3, .L92
 1215 000a 0C21     		mov	r1, #12
 1216 000c 1A68     		ldr	r2, [r3]
1197:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
 1217              		.loc 1 1197 0
 1218 000e A400     		lsl	r4, r4, #2
 1219              	.LVL80:
1196:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_COUNT_MASK;
 1220              		.loc 1 1196 0
 1221 0010 8A43     		bic	r2, r1
 1222 0012 1A60     		str	r2, [r3]
1197:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
 1223              		.loc 1 1197 0
 1224 0014 1A68     		ldr	r2, [r3]
1200:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1225              		.loc 1 1200 0
 1226              		@ sp needed
1197:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
 1227              		.loc 1 1197 0
 1228 0016 1443     		orr	r4, r2
 1229 0018 1C60     		str	r4, [r3]
1199:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1230              		.loc 1 1199 0
 1231 001a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 49


 1232              	.LVL81:
1200:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1233              		.loc 1 1200 0
 1234 001e 10BD     		pop	{r4, pc}
 1235              	.L93:
 1236              		.align	2
 1237              	.L92:
 1238 0020 64010540 		.word	1074069860
 1239              		.cfi_endproc
 1240              	.LFE32:
 1241              		.size	ServoTimer_SetCountMode, .-ServoTimer_SetCountMode
 1242              		.section	.text.ServoTimer_TriggerCommand,"ax",%progbits
 1243              		.align	1
 1244              		.global	ServoTimer_TriggerCommand
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	ServoTimer_TriggerCommand, %function
 1248              	ServoTimer_TriggerCommand:
 1249              	.LFB33:
1231:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1250              		.loc 1 1231 0
 1251              		.cfi_startproc
 1252              	.LVL82:
 1253 0000 38B5     		push	{r3, r4, r5, lr}
 1254              		.cfi_def_cfa_offset 16
 1255              		.cfi_offset 3, -16
 1256              		.cfi_offset 4, -12
 1257              		.cfi_offset 5, -8
 1258              		.cfi_offset 14, -4
1231:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1259              		.loc 1 1231 0
 1260 0002 0C1C     		mov	r4, r1
 1261 0004 051C     		mov	r5, r0
1234:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1262              		.loc 1 1234 0
 1263 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1264              	.LVL83:
1236:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMMAND_REG = ((uint32)(mask << command));
 1265              		.loc 1 1236 0
 1266 000a 034B     		ldr	r3, .L95
 1267 000c A540     		lsl	r5, r5, r4
 1268              	.LVL84:
 1269 000e 1D60     		str	r5, [r3]
1238:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1270              		.loc 1 1238 0
 1271 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1272              	.LVL85:
1239:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1273              		.loc 1 1239 0
 1274              		@ sp needed
 1275              	.LVL86:
 1276 0014 38BD     		pop	{r3, r4, r5, pc}
 1277              	.L96:
 1278 0016 C046     		.align	2
 1279              	.L95:
 1280 0018 08000540 		.word	1074069512
 1281              		.cfi_endproc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 50


 1282              	.LFE33:
 1283              		.size	ServoTimer_TriggerCommand, .-ServoTimer_TriggerCommand
 1284              		.section	.text.ServoTimer_Enable,"ax",%progbits
 1285              		.align	1
 1286              		.global	ServoTimer_Enable
 1287              		.code	16
 1288              		.thumb_func
 1289              		.type	ServoTimer_Enable, %function
 1290              	ServoTimer_Enable:
 1291              	.LFB1:
 178:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1292              		.loc 1 178 0
 1293              		.cfi_startproc
 1294 0000 10B5     		push	{r4, lr}
 1295              		.cfi_def_cfa_offset 8
 1296              		.cfi_offset 4, -8
 1297              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1298              		.loc 1 181 0
 1299 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1300              	.LVL87:
 182:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG |= ServoTimer_MASK;
 1301              		.loc 1 182 0
 1302 0006 064B     		ldr	r3, .L98
 1303 0008 0224     		mov	r4, #2
 1304 000a 1A68     		ldr	r2, [r3]
 197:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1305              		.loc 1 197 0
 1306              		@ sp needed
 182:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG |= ServoTimer_MASK;
 1307              		.loc 1 182 0
 1308 000c 2243     		orr	r2, r4
 1309 000e 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1310              		.loc 1 183 0
 1311 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1312              	.LVL88:
 194:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TriggerCommand(ServoTimer_MASK, ServoTimer_CMD_START);
 1313              		.loc 1 194 0
 1314 0014 201C     		mov	r0, r4
 1315 0016 1821     		mov	r1, #24
 1316 0018 FFF7FEFF 		bl	ServoTimer_TriggerCommand
 1317              	.LVL89:
 197:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1318              		.loc 1 197 0
 1319 001c 10BD     		pop	{r4, pc}
 1320              	.L99:
 1321 001e C046     		.align	2
 1322              	.L98:
 1323 0020 00000540 		.word	1074069504
 1324              		.cfi_endproc
 1325              	.LFE1:
 1326              		.size	ServoTimer_Enable, .-ServoTimer_Enable
 1327              		.section	.text.ServoTimer_Start,"ax",%progbits
 1328              		.align	1
 1329              		.global	ServoTimer_Start
 1330              		.code	16
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 51


 1331              		.thumb_func
 1332              		.type	ServoTimer_Start, %function
 1333              	ServoTimer_Start:
 1334              	.LFB2:
 225:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1335              		.loc 1 225 0
 1336              		.cfi_startproc
 1337 0000 10B5     		push	{r4, lr}
 1338              		.cfi_def_cfa_offset 8
 1339              		.cfi_offset 4, -8
 1340              		.cfi_offset 14, -4
 226:.\Generated_Source\PSoC4/ServoTimer.c ****     if (0u == ServoTimer_initVar)
 1341              		.loc 1 226 0
 1342 0002 054C     		ldr	r4, .L103
 1343 0004 2378     		ldrb	r3, [r4]
 1344 0006 002B     		cmp	r3, #0
 1345 0008 03D1     		bne	.L101
 228:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_Init();
 1346              		.loc 1 228 0
 1347 000a FFF7FEFF 		bl	ServoTimer_Init
 1348              	.LVL90:
 229:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_initVar = 1u;
 1349              		.loc 1 229 0
 1350 000e 0123     		mov	r3, #1
 1351 0010 2370     		strb	r3, [r4]
 1352              	.L101:
 232:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_Enable();
 1353              		.loc 1 232 0
 1354 0012 FFF7FEFF 		bl	ServoTimer_Enable
 1355              	.LVL91:
 233:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1356              		.loc 1 233 0
 1357              		@ sp needed
 1358 0016 10BD     		pop	{r4, pc}
 1359              	.L104:
 1360              		.align	2
 1361              	.L103:
 1362 0018 00000000 		.word	.LANCHOR0
 1363              		.cfi_endproc
 1364              	.LFE2:
 1365              		.size	ServoTimer_Start, .-ServoTimer_Start
 1366              		.section	.text.ServoTimer_ReadStatus,"ax",%progbits
 1367              		.align	1
 1368              		.global	ServoTimer_ReadStatus
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	ServoTimer_ReadStatus, %function
 1372              	ServoTimer_ReadStatus:
 1373              	.LFB34:
1260:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1374              		.loc 1 1260 0
 1375              		.cfi_startproc
1261:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
 1376              		.loc 1 1261 0
 1377 0000 034B     		ldr	r3, .L106
1263:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1378              		.loc 1 1263 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 52


 1379              		@ sp needed
1261:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
 1380              		.loc 1 1261 0
 1381 0002 1A68     		ldr	r2, [r3]
1262:.\Generated_Source\PSoC4/ServoTimer.c ****             (ServoTimer_STATUS_REG & ServoTimer_STATUS_DOWN));
 1382              		.loc 1 1262 0
 1383 0004 1868     		ldr	r0, [r3]
 1384 0006 0123     		mov	r3, #1
 1385 0008 1840     		and	r0, r3
1261:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
 1386              		.loc 1 1261 0
 1387 000a 930F     		lsr	r3, r2, #30
 1388 000c 1843     		orr	r0, r3
1263:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1389              		.loc 1 1263 0
 1390 000e 7047     		bx	lr
 1391              	.L107:
 1392              		.align	2
 1393              	.L106:
 1394 0010 44010540 		.word	1074069828
 1395              		.cfi_endproc
 1396              	.LFE34:
 1397              		.size	ServoTimer_ReadStatus, .-ServoTimer_ReadStatus
 1398              		.section	.text.ServoTimer_SetInterruptMode,"ax",%progbits
 1399              		.align	1
 1400              		.global	ServoTimer_SetInterruptMode
 1401              		.code	16
 1402              		.thumb_func
 1403              		.type	ServoTimer_SetInterruptMode, %function
 1404              	ServoTimer_SetInterruptMode:
 1405              	.LFB35:
1285:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1406              		.loc 1 1285 0
 1407              		.cfi_startproc
 1408              	.LVL92:
 1409              		.loc 1 1286 0
 1410 0000 014B     		ldr	r3, .L109
1287:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1411              		.loc 1 1287 0
 1412              		@ sp needed
1286:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_MASK_REG =  interruptMask;
 1413              		.loc 1 1286 0
 1414 0002 1860     		str	r0, [r3]
 1415              		.loc 1 1287 0
 1416 0004 7047     		bx	lr
 1417              	.L110:
 1418 0006 C046     		.align	2
 1419              	.L109:
 1420 0008 78010540 		.word	1074069880
 1421              		.cfi_endproc
 1422              	.LFE35:
 1423              		.size	ServoTimer_SetInterruptMode, .-ServoTimer_SetInterruptMode
 1424              		.section	.text.ServoTimer_GetInterruptSourceMasked,"ax",%progbits
 1425              		.align	1
 1426              		.global	ServoTimer_GetInterruptSourceMasked
 1427              		.code	16
 1428              		.thumb_func
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 53


 1429              		.type	ServoTimer_GetInterruptSourceMasked, %function
 1430              	ServoTimer_GetInterruptSourceMasked:
 1431              	.LFB36:
1288:.\Generated_Source\PSoC4/ServoTimer.c **** 
1289:.\Generated_Source\PSoC4/ServoTimer.c **** 
1290:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1291:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_GetInterruptSourceMasked
1292:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1293:.\Generated_Source\PSoC4/ServoTimer.c **** *
1294:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1295:.\Generated_Source\PSoC4/ServoTimer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1296:.\Generated_Source\PSoC4/ServoTimer.c **** *
1297:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1298:.\Generated_Source\PSoC4/ServoTimer.c **** *   None
1299:.\Generated_Source\PSoC4/ServoTimer.c **** *
1300:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1301:.\Generated_Source\PSoC4/ServoTimer.c **** *  Masked interrupt source
1302:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1303:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1304:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1305:.\Generated_Source\PSoC4/ServoTimer.c **** *
1306:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1307:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_GetInterruptSourceMasked(void)
1308:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1432              		.loc 1 1308 0
 1433              		.cfi_startproc
1309:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_MASKED_REG);
 1434              		.loc 1 1309 0
 1435 0000 014B     		ldr	r3, .L112
1310:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1436              		.loc 1 1310 0
 1437              		@ sp needed
1309:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_MASKED_REG);
 1438              		.loc 1 1309 0
 1439 0002 1868     		ldr	r0, [r3]
 1440              		.loc 1 1310 0
 1441 0004 7047     		bx	lr
 1442              	.L113:
 1443 0006 C046     		.align	2
 1444              	.L112:
 1445 0008 7C010540 		.word	1074069884
 1446              		.cfi_endproc
 1447              	.LFE36:
 1448              		.size	ServoTimer_GetInterruptSourceMasked, .-ServoTimer_GetInterruptSourceMasked
 1449              		.section	.text.ServoTimer_GetInterruptSource,"ax",%progbits
 1450              		.align	1
 1451              		.global	ServoTimer_GetInterruptSource
 1452              		.code	16
 1453              		.thumb_func
 1454              		.type	ServoTimer_GetInterruptSource, %function
 1455              	ServoTimer_GetInterruptSource:
 1456              	.LFB37:
1311:.\Generated_Source\PSoC4/ServoTimer.c **** 
1312:.\Generated_Source\PSoC4/ServoTimer.c **** 
1313:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1314:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_GetInterruptSource
1315:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 54


1316:.\Generated_Source\PSoC4/ServoTimer.c **** *
1317:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1318:.\Generated_Source\PSoC4/ServoTimer.c **** *  Gets the interrupt requests (without masking).
1319:.\Generated_Source\PSoC4/ServoTimer.c **** *
1320:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1321:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1322:.\Generated_Source\PSoC4/ServoTimer.c **** *
1323:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1324:.\Generated_Source\PSoC4/ServoTimer.c **** *  Interrupt request value
1325:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1326:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1327:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1328:.\Generated_Source\PSoC4/ServoTimer.c **** *
1329:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1330:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_GetInterruptSource(void)
1331:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1457              		.loc 1 1331 0
 1458              		.cfi_startproc
1332:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_REQ_REG);
 1459              		.loc 1 1332 0
 1460 0000 014B     		ldr	r3, .L115
1333:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1461              		.loc 1 1333 0
 1462              		@ sp needed
1332:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_REQ_REG);
 1463              		.loc 1 1332 0
 1464 0002 1868     		ldr	r0, [r3]
 1465              		.loc 1 1333 0
 1466 0004 7047     		bx	lr
 1467              	.L116:
 1468 0006 C046     		.align	2
 1469              	.L115:
 1470 0008 70010540 		.word	1074069872
 1471              		.cfi_endproc
 1472              	.LFE37:
 1473              		.size	ServoTimer_GetInterruptSource, .-ServoTimer_GetInterruptSource
 1474              		.section	.text.ServoTimer_ClearInterrupt,"ax",%progbits
 1475              		.align	1
 1476              		.global	ServoTimer_ClearInterrupt
 1477              		.code	16
 1478              		.thumb_func
 1479              		.type	ServoTimer_ClearInterrupt, %function
 1480              	ServoTimer_ClearInterrupt:
 1481              	.LFB38:
1334:.\Generated_Source\PSoC4/ServoTimer.c **** 
1335:.\Generated_Source\PSoC4/ServoTimer.c **** 
1336:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1337:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ClearInterrupt
1338:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1339:.\Generated_Source\PSoC4/ServoTimer.c **** *
1340:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1341:.\Generated_Source\PSoC4/ServoTimer.c **** *  Clears the interrupt request.
1342:.\Generated_Source\PSoC4/ServoTimer.c **** *
1343:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1344:.\Generated_Source\PSoC4/ServoTimer.c **** *   interruptMask: Mask of interrupts to clear
1345:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1346:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 55


1347:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1348:.\Generated_Source\PSoC4/ServoTimer.c **** *
1349:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1350:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1351:.\Generated_Source\PSoC4/ServoTimer.c **** *
1352:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1353:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_ClearInterrupt(uint32 interruptMask)
1354:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1482              		.loc 1 1354 0
 1483              		.cfi_startproc
 1484              	.LVL93:
1355:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_REQ_REG = interruptMask;
 1485              		.loc 1 1355 0
 1486 0000 014B     		ldr	r3, .L118
1356:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1487              		.loc 1 1356 0
 1488              		@ sp needed
1355:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_REQ_REG = interruptMask;
 1489              		.loc 1 1355 0
 1490 0002 1860     		str	r0, [r3]
 1491              		.loc 1 1356 0
 1492 0004 7047     		bx	lr
 1493              	.L119:
 1494 0006 C046     		.align	2
 1495              	.L118:
 1496 0008 70010540 		.word	1074069872
 1497              		.cfi_endproc
 1498              	.LFE38:
 1499              		.size	ServoTimer_ClearInterrupt, .-ServoTimer_ClearInterrupt
 1500              		.section	.text.ServoTimer_SetInterrupt,"ax",%progbits
 1501              		.align	1
 1502              		.global	ServoTimer_SetInterrupt
 1503              		.code	16
 1504              		.thumb_func
 1505              		.type	ServoTimer_SetInterrupt, %function
 1506              	ServoTimer_SetInterrupt:
 1507              	.LFB39:
1357:.\Generated_Source\PSoC4/ServoTimer.c **** 
1358:.\Generated_Source\PSoC4/ServoTimer.c **** 
1359:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1360:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetInterrupt
1361:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1362:.\Generated_Source\PSoC4/ServoTimer.c **** *
1363:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1364:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets a software interrupt request.
1365:.\Generated_Source\PSoC4/ServoTimer.c **** *
1366:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1367:.\Generated_Source\PSoC4/ServoTimer.c **** *   interruptMask: Mask of interrupts to set
1368:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1369:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1370:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1371:.\Generated_Source\PSoC4/ServoTimer.c **** *
1372:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1373:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1374:.\Generated_Source\PSoC4/ServoTimer.c **** *
1375:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1376:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetInterrupt(uint32 interruptMask)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 56


1377:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1508              		.loc 1 1377 0
 1509              		.cfi_startproc
 1510              	.LVL94:
1378:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_SET_REG = interruptMask;
 1511              		.loc 1 1378 0
 1512 0000 014B     		ldr	r3, .L121
1379:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1513              		.loc 1 1379 0
 1514              		@ sp needed
1378:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_SET_REG = interruptMask;
 1515              		.loc 1 1378 0
 1516 0002 1860     		str	r0, [r3]
 1517              		.loc 1 1379 0
 1518 0004 7047     		bx	lr
 1519              	.L122:
 1520 0006 C046     		.align	2
 1521              	.L121:
 1522 0008 74010540 		.word	1074069876
 1523              		.cfi_endproc
 1524              	.LFE39:
 1525              		.size	ServoTimer_SetInterrupt, .-ServoTimer_SetInterrupt
 1526              		.global	ServoTimer_initVar
 1527              		.bss
 1528              		.set	.LANCHOR0,. + 0
 1529              		.type	ServoTimer_initVar, %object
 1530              		.size	ServoTimer_initVar, 1
 1531              	ServoTimer_initVar:
 1532 0000 00       		.space	1
 1533              		.text
 1534              	.Letext0:
 1535              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1536              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1537              		.section	.debug_info,"",%progbits
 1538              	.Ldebug_info0:
 1539 0000 59090000 		.4byte	0x959
 1540 0004 0400     		.2byte	0x4
 1541 0006 00000000 		.4byte	.Ldebug_abbrev0
 1542 000a 04       		.byte	0x4
 1543 000b 01       		.uleb128 0x1
 1544 000c 39040000 		.4byte	.LASF76
 1545 0010 01       		.byte	0x1
 1546 0011 1E000000 		.4byte	.LASF77
 1547 0015 19010000 		.4byte	.LASF78
 1548 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1549 001d 00000000 		.4byte	0
 1550 0021 00000000 		.4byte	.Ldebug_line0
 1551 0025 02       		.uleb128 0x2
 1552 0026 01       		.byte	0x1
 1553 0027 06       		.byte	0x6
 1554 0028 0D010000 		.4byte	.LASF0
 1555 002c 02       		.uleb128 0x2
 1556 002d 01       		.byte	0x1
 1557 002e 08       		.byte	0x8
 1558 002f C8040000 		.4byte	.LASF1
 1559 0033 02       		.uleb128 0x2
 1560 0034 02       		.byte	0x2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 57


 1561 0035 05       		.byte	0x5
 1562 0036 E7040000 		.4byte	.LASF2
 1563 003a 02       		.uleb128 0x2
 1564 003b 02       		.byte	0x2
 1565 003c 07       		.byte	0x7
 1566 003d 12030000 		.4byte	.LASF3
 1567 0041 02       		.uleb128 0x2
 1568 0042 04       		.byte	0x4
 1569 0043 05       		.byte	0x5
 1570 0044 83010000 		.4byte	.LASF4
 1571 0048 02       		.uleb128 0x2
 1572 0049 04       		.byte	0x4
 1573 004a 07       		.byte	0x7
 1574 004b 95020000 		.4byte	.LASF5
 1575 004f 02       		.uleb128 0x2
 1576 0050 08       		.byte	0x8
 1577 0051 05       		.byte	0x5
 1578 0052 FF000000 		.4byte	.LASF6
 1579 0056 02       		.uleb128 0x2
 1580 0057 08       		.byte	0x8
 1581 0058 07       		.byte	0x7
 1582 0059 B7000000 		.4byte	.LASF7
 1583 005d 03       		.uleb128 0x3
 1584 005e 04       		.byte	0x4
 1585 005f 05       		.byte	0x5
 1586 0060 696E7400 		.ascii	"int\000"
 1587 0064 02       		.uleb128 0x2
 1588 0065 04       		.byte	0x4
 1589 0066 07       		.byte	0x7
 1590 0067 36020000 		.4byte	.LASF8
 1591 006b 04       		.uleb128 0x4
 1592 006c A3010000 		.4byte	.LASF9
 1593 0070 02       		.byte	0x2
 1594 0071 A1       		.byte	0xa1
 1595 0072 2C000000 		.4byte	0x2c
 1596 0076 04       		.uleb128 0x4
 1597 0077 C5010000 		.4byte	.LASF10
 1598 007b 02       		.byte	0x2
 1599 007c A3       		.byte	0xa3
 1600 007d 48000000 		.4byte	0x48
 1601 0081 02       		.uleb128 0x2
 1602 0082 04       		.byte	0x4
 1603 0083 04       		.byte	0x4
 1604 0084 29040000 		.4byte	.LASF11
 1605 0088 02       		.uleb128 0x2
 1606 0089 08       		.byte	0x8
 1607 008a 04       		.byte	0x4
 1608 008b BE010000 		.4byte	.LASF12
 1609 008f 02       		.uleb128 0x2
 1610 0090 01       		.byte	0x1
 1611 0091 08       		.byte	0x8
 1612 0092 62050000 		.4byte	.LASF13
 1613 0096 05       		.uleb128 0x5
 1614 0097 78030000 		.4byte	.LASF14
 1615 009b 02       		.byte	0x2
 1616 009c 4D01     		.2byte	0x14d
 1617 009e A2000000 		.4byte	0xa2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 58


 1618 00a2 06       		.uleb128 0x6
 1619 00a3 76000000 		.4byte	0x76
 1620 00a7 02       		.uleb128 0x2
 1621 00a8 04       		.byte	0x4
 1622 00a9 07       		.byte	0x7
 1623 00aa 98030000 		.4byte	.LASF15
 1624 00ae 07       		.uleb128 0x7
 1625 00af 46050000 		.4byte	.LASF16
 1626 00b3 01       		.byte	0x1
 1627 00b4 0405     		.2byte	0x504
 1628 00b6 01       		.byte	0x1
 1629 00b7 C8000000 		.4byte	0xc8
 1630 00bb 08       		.uleb128 0x8
 1631 00bc 21050000 		.4byte	.LASF18
 1632 00c0 01       		.byte	0x1
 1633 00c1 0405     		.2byte	0x504
 1634 00c3 76000000 		.4byte	0x76
 1635 00c7 00       		.byte	0
 1636 00c8 07       		.uleb128 0x7
 1637 00c9 86000000 		.4byte	.LASF17
 1638 00cd 01       		.byte	0x1
 1639 00ce AF02     		.2byte	0x2af
 1640 00d0 01       		.byte	0x1
 1641 00d1 E2000000 		.4byte	0xe2
 1642 00d5 08       		.uleb128 0x8
 1643 00d6 B0000000 		.4byte	.LASF19
 1644 00da 01       		.byte	0x1
 1645 00db AF02     		.2byte	0x2af
 1646 00dd 76000000 		.4byte	0x76
 1647 00e1 00       		.byte	0
 1648 00e2 07       		.uleb128 0x7
 1649 00e3 6B010000 		.4byte	.LASF20
 1650 00e7 01       		.byte	0x1
 1651 00e8 4303     		.2byte	0x343
 1652 00ea 01       		.byte	0x1
 1653 00eb FC000000 		.4byte	0xfc
 1654 00ef 08       		.uleb128 0x8
 1655 00f0 0A040000 		.4byte	.LASF21
 1656 00f4 01       		.byte	0x1
 1657 00f5 4303     		.2byte	0x343
 1658 00f7 76000000 		.4byte	0x76
 1659 00fb 00       		.byte	0
 1660 00fc 07       		.uleb128 0x7
 1661 00fd 91050000 		.4byte	.LASF22
 1662 0101 01       		.byte	0x1
 1663 0102 6102     		.2byte	0x261
 1664 0104 01       		.byte	0x1
 1665 0105 16010000 		.4byte	0x116
 1666 0109 08       		.uleb128 0x8
 1667 010a 18000000 		.4byte	.LASF23
 1668 010e 01       		.byte	0x1
 1669 010f 6102     		.2byte	0x261
 1670 0111 76000000 		.4byte	0x76
 1671 0115 00       		.byte	0
 1672 0116 09       		.uleb128 0x9
 1673 0117 A1030000 		.4byte	.LASF24
 1674 011b 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 59


 1675 011c 26       		.byte	0x26
 1676 011d 00000000 		.4byte	.LFB0
 1677 0121 40000000 		.4byte	.LFE0-.LFB0
 1678 0125 01       		.uleb128 0x1
 1679 0126 9C       		.byte	0x9c
 1680 0127 92010000 		.4byte	0x192
 1681 012b 0A       		.uleb128 0xa
 1682 012c AE000000 		.4byte	0xae
 1683 0130 0C000000 		.4byte	.LBB10
 1684 0134 06000000 		.4byte	.LBE10-.LBB10
 1685 0138 01       		.byte	0x1
 1686 0139 40       		.byte	0x40
 1687 013a 45010000 		.4byte	0x145
 1688 013e 0B       		.uleb128 0xb
 1689 013f BB000000 		.4byte	0xbb
 1690 0143 01       		.byte	0x1
 1691 0144 00       		.byte	0
 1692 0145 0C       		.uleb128 0xc
 1693 0146 C8000000 		.4byte	0xc8
 1694 014a 12000000 		.4byte	.LBB12
 1695 014e 00000000 		.4byte	.Ldebug_ranges0+0
 1696 0152 01       		.byte	0x1
 1697 0153 43       		.byte	0x43
 1698 0154 60010000 		.4byte	0x160
 1699 0158 0D       		.uleb128 0xd
 1700 0159 D5000000 		.4byte	0xd5
 1701 015d FFFF     		.2byte	0xffff
 1702 015f 00       		.byte	0
 1703 0160 0A       		.uleb128 0xa
 1704 0161 E2000000 		.4byte	0xe2
 1705 0165 18000000 		.4byte	.LBB16
 1706 0169 04000000 		.4byte	.LBE16-.LBB16
 1707 016d 01       		.byte	0x1
 1708 016e 46       		.byte	0x46
 1709 016f 7B010000 		.4byte	0x17b
 1710 0173 0D       		.uleb128 0xd
 1711 0174 EF000000 		.4byte	0xef
 1712 0178 FFFF     		.2byte	0xffff
 1713 017a 00       		.byte	0
 1714 017b 0E       		.uleb128 0xe
 1715 017c FC000000 		.4byte	0xfc
 1716 0180 1C000000 		.4byte	.LBB18
 1717 0184 04000000 		.4byte	.LBE18-.LBB18
 1718 0188 01       		.byte	0x1
 1719 0189 54       		.byte	0x54
 1720 018a 0B       		.uleb128 0xb
 1721 018b 09010000 		.4byte	0x109
 1722 018f 00       		.byte	0
 1723 0190 00       		.byte	0
 1724 0191 00       		.byte	0
 1725 0192 09       		.uleb128 0x9
 1726 0193 E8000000 		.4byte	.LASF25
 1727 0197 01       		.byte	0x1
 1728 0198 FA       		.byte	0xfa
 1729 0199 00000000 		.4byte	.LFB3
 1730 019d 1C000000 		.4byte	.LFE3-.LFB3
 1731 01a1 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 60


 1732 01a2 9C       		.byte	0x9c
 1733 01a3 C9010000 		.4byte	0x1c9
 1734 01a7 0F       		.uleb128 0xf
 1735 01a8 CE050000 		.4byte	.LASF27
 1736 01ac 01       		.byte	0x1
 1737 01ad FC       		.byte	0xfc
 1738 01ae 6B000000 		.4byte	0x6b
 1739 01b2 00000000 		.4byte	.LLST0
 1740 01b6 10       		.uleb128 0x10
 1741 01b7 06000000 		.4byte	.LVL4
 1742 01bb 44090000 		.4byte	0x944
 1743 01bf 10       		.uleb128 0x10
 1744 01c0 14000000 		.4byte	.LVL5
 1745 01c4 4F090000 		.4byte	0x94f
 1746 01c8 00       		.byte	0
 1747 01c9 11       		.uleb128 0x11
 1748 01ca 5A000000 		.4byte	.LASF26
 1749 01ce 01       		.byte	0x1
 1750 01cf 1F01     		.2byte	0x11f
 1751 01d1 00000000 		.4byte	.LFB4
 1752 01d5 28000000 		.4byte	.LFE4-.LFB4
 1753 01d9 01       		.uleb128 0x1
 1754 01da 9C       		.byte	0x9c
 1755 01db 12020000 		.4byte	0x212
 1756 01df 12       		.uleb128 0x12
 1757 01e0 67050000 		.4byte	.LASF29
 1758 01e4 01       		.byte	0x1
 1759 01e5 1F01     		.2byte	0x11f
 1760 01e7 76000000 		.4byte	0x76
 1761 01eb 13000000 		.4byte	.LLST1
 1762 01ef 13       		.uleb128 0x13
 1763 01f0 CE050000 		.4byte	.LASF27
 1764 01f4 01       		.byte	0x1
 1765 01f5 2101     		.2byte	0x121
 1766 01f7 6B000000 		.4byte	0x6b
 1767 01fb 3F000000 		.4byte	.LLST2
 1768 01ff 10       		.uleb128 0x10
 1769 0200 08000000 		.4byte	.LVL7
 1770 0204 44090000 		.4byte	0x944
 1771 0208 10       		.uleb128 0x10
 1772 0209 1C000000 		.4byte	.LVL9
 1773 020d 4F090000 		.4byte	0x94f
 1774 0211 00       		.byte	0
 1775 0212 11       		.uleb128 0x11
 1776 0213 A9010000 		.4byte	.LASF28
 1777 0217 01       		.byte	0x1
 1778 0218 4001     		.2byte	0x140
 1779 021a 00000000 		.4byte	.LFB5
 1780 021e 28000000 		.4byte	.LFE5-.LFB5
 1781 0222 01       		.uleb128 0x1
 1782 0223 9C       		.byte	0x9c
 1783 0224 5B020000 		.4byte	0x25b
 1784 0228 12       		.uleb128 0x12
 1785 0229 F8000000 		.4byte	.LASF30
 1786 022d 01       		.byte	0x1
 1787 022e 4001     		.2byte	0x140
 1788 0230 76000000 		.4byte	0x76
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 61


 1789 0234 52000000 		.4byte	.LLST3
 1790 0238 13       		.uleb128 0x13
 1791 0239 CE050000 		.4byte	.LASF27
 1792 023d 01       		.byte	0x1
 1793 023e 4201     		.2byte	0x142
 1794 0240 6B000000 		.4byte	0x6b
 1795 0244 7E000000 		.4byte	.LLST4
 1796 0248 10       		.uleb128 0x10
 1797 0249 08000000 		.4byte	.LVL11
 1798 024d 44090000 		.4byte	0x944
 1799 0251 10       		.uleb128 0x10
 1800 0252 1C000000 		.4byte	.LVL13
 1801 0256 4F090000 		.4byte	0x94f
 1802 025a 00       		.byte	0
 1803 025b 11       		.uleb128 0x11
 1804 025c F2030000 		.4byte	.LASF31
 1805 0260 01       		.byte	0x1
 1806 0261 6501     		.2byte	0x165
 1807 0263 00000000 		.4byte	.LFB6
 1808 0267 28000000 		.4byte	.LFE6-.LFB6
 1809 026b 01       		.uleb128 0x1
 1810 026c 9C       		.byte	0x9c
 1811 026d A4020000 		.4byte	0x2a4
 1812 0271 12       		.uleb128 0x12
 1813 0272 2F040000 		.4byte	.LASF32
 1814 0276 01       		.byte	0x1
 1815 0277 6501     		.2byte	0x165
 1816 0279 76000000 		.4byte	0x76
 1817 027d 91000000 		.4byte	.LLST5
 1818 0281 13       		.uleb128 0x13
 1819 0282 CE050000 		.4byte	.LASF27
 1820 0286 01       		.byte	0x1
 1821 0287 6701     		.2byte	0x167
 1822 0289 6B000000 		.4byte	0x6b
 1823 028d BD000000 		.4byte	.LLST6
 1824 0291 10       		.uleb128 0x10
 1825 0292 08000000 		.4byte	.LVL15
 1826 0296 44090000 		.4byte	0x944
 1827 029a 10       		.uleb128 0x10
 1828 029b 1C000000 		.4byte	.LVL17
 1829 029f 4F090000 		.4byte	0x94f
 1830 02a3 00       		.byte	0
 1831 02a4 11       		.uleb128 0x11
 1832 02a5 CC010000 		.4byte	.LASF33
 1833 02a9 01       		.byte	0x1
 1834 02aa 8501     		.2byte	0x185
 1835 02ac 00000000 		.4byte	.LFB7
 1836 02b0 2C000000 		.4byte	.LFE7-.LFB7
 1837 02b4 01       		.uleb128 0x1
 1838 02b5 9C       		.byte	0x9c
 1839 02b6 ED020000 		.4byte	0x2ed
 1840 02ba 12       		.uleb128 0x12
 1841 02bb 3F030000 		.4byte	.LASF34
 1842 02bf 01       		.byte	0x1
 1843 02c0 8501     		.2byte	0x185
 1844 02c2 76000000 		.4byte	0x76
 1845 02c6 D0000000 		.4byte	.LLST7
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 62


 1846 02ca 13       		.uleb128 0x13
 1847 02cb CE050000 		.4byte	.LASF27
 1848 02cf 01       		.byte	0x1
 1849 02d0 8701     		.2byte	0x187
 1850 02d2 6B000000 		.4byte	0x6b
 1851 02d6 FC000000 		.4byte	.LLST8
 1852 02da 10       		.uleb128 0x10
 1853 02db 08000000 		.4byte	.LVL19
 1854 02df 44090000 		.4byte	0x944
 1855 02e3 10       		.uleb128 0x10
 1856 02e4 22000000 		.4byte	.LVL21
 1857 02e8 4F090000 		.4byte	0x94f
 1858 02ec 00       		.byte	0
 1859 02ed 11       		.uleb128 0x11
 1860 02ee 0B050000 		.4byte	.LASF35
 1861 02f2 01       		.byte	0x1
 1862 02f3 BB01     		.2byte	0x1bb
 1863 02f5 00000000 		.4byte	.LFB8
 1864 02f9 10000000 		.4byte	.LFE8-.LFB8
 1865 02fd 01       		.uleb128 0x1
 1866 02fe 9C       		.byte	0x9c
 1867 02ff 14030000 		.4byte	0x314
 1868 0303 12       		.uleb128 0x12
 1869 0304 A7020000 		.4byte	.LASF36
 1870 0308 01       		.byte	0x1
 1871 0309 BB01     		.2byte	0x1bb
 1872 030b 76000000 		.4byte	0x76
 1873 030f 0F010000 		.4byte	.LLST9
 1874 0313 00       		.byte	0
 1875 0314 11       		.uleb128 0x11
 1876 0315 F1040000 		.4byte	.LASF37
 1877 0319 01       		.byte	0x1
 1878 031a DF01     		.2byte	0x1df
 1879 031c 00000000 		.4byte	.LFB9
 1880 0320 28000000 		.4byte	.LFE9-.LFB9
 1881 0324 01       		.uleb128 0x1
 1882 0325 9C       		.byte	0x9c
 1883 0326 5D030000 		.4byte	0x35d
 1884 032a 12       		.uleb128 0x12
 1885 032b B1030000 		.4byte	.LASF38
 1886 032f 01       		.byte	0x1
 1887 0330 DF01     		.2byte	0x1df
 1888 0332 76000000 		.4byte	0x76
 1889 0336 30010000 		.4byte	.LLST10
 1890 033a 13       		.uleb128 0x13
 1891 033b CE050000 		.4byte	.LASF27
 1892 033f 01       		.byte	0x1
 1893 0340 E101     		.2byte	0x1e1
 1894 0342 6B000000 		.4byte	0x6b
 1895 0346 5C010000 		.4byte	.LLST11
 1896 034a 10       		.uleb128 0x10
 1897 034b 08000000 		.4byte	.LVL25
 1898 034f 44090000 		.4byte	0x944
 1899 0353 10       		.uleb128 0x10
 1900 0354 22000000 		.4byte	.LVL27
 1901 0358 4F090000 		.4byte	0x94f
 1902 035c 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 63


 1903 035d 11       		.uleb128 0x11
 1904 035e C0030000 		.4byte	.LASF39
 1905 0362 01       		.byte	0x1
 1906 0363 0102     		.2byte	0x201
 1907 0365 00000000 		.4byte	.LFB10
 1908 0369 28000000 		.4byte	.LFE10-.LFB10
 1909 036d 01       		.uleb128 0x1
 1910 036e 9C       		.byte	0x9c
 1911 036f A6030000 		.4byte	0x3a6
 1912 0373 12       		.uleb128 0x12
 1913 0374 D6040000 		.4byte	.LASF40
 1914 0378 01       		.byte	0x1
 1915 0379 0102     		.2byte	0x201
 1916 037b 76000000 		.4byte	0x76
 1917 037f 6F010000 		.4byte	.LLST12
 1918 0383 13       		.uleb128 0x13
 1919 0384 CE050000 		.4byte	.LASF27
 1920 0388 01       		.byte	0x1
 1921 0389 0302     		.2byte	0x203
 1922 038b 6B000000 		.4byte	0x6b
 1923 038f 9B010000 		.4byte	.LLST13
 1924 0393 10       		.uleb128 0x10
 1925 0394 08000000 		.4byte	.LVL29
 1926 0398 44090000 		.4byte	0x944
 1927 039c 10       		.uleb128 0x10
 1928 039d 22000000 		.4byte	.LVL31
 1929 03a1 4F090000 		.4byte	0x94f
 1930 03a5 00       		.byte	0
 1931 03a6 11       		.uleb128 0x11
 1932 03a7 66060000 		.4byte	.LASF41
 1933 03ab 01       		.byte	0x1
 1934 03ac 2202     		.2byte	0x222
 1935 03ae 00000000 		.4byte	.LFB11
 1936 03b2 2C000000 		.4byte	.LFE11-.LFB11
 1937 03b6 01       		.uleb128 0x1
 1938 03b7 9C       		.byte	0x9c
 1939 03b8 EF030000 		.4byte	0x3ef
 1940 03bc 12       		.uleb128 0x12
 1941 03bd 17020000 		.4byte	.LASF42
 1942 03c1 01       		.byte	0x1
 1943 03c2 2202     		.2byte	0x222
 1944 03c4 76000000 		.4byte	0x76
 1945 03c8 AE010000 		.4byte	.LLST14
 1946 03cc 13       		.uleb128 0x13
 1947 03cd CE050000 		.4byte	.LASF27
 1948 03d1 01       		.byte	0x1
 1949 03d2 2402     		.2byte	0x224
 1950 03d4 6B000000 		.4byte	0x6b
 1951 03d8 DA010000 		.4byte	.LLST15
 1952 03dc 10       		.uleb128 0x10
 1953 03dd 08000000 		.4byte	.LVL33
 1954 03e1 44090000 		.4byte	0x944
 1955 03e5 10       		.uleb128 0x10
 1956 03e6 20000000 		.4byte	.LVL35
 1957 03ea 4F090000 		.4byte	0x94f
 1958 03ee 00       		.byte	0
 1959 03ef 11       		.uleb128 0x11
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 64


 1960 03f0 B0020000 		.4byte	.LASF43
 1961 03f4 01       		.byte	0x1
 1962 03f5 4302     		.2byte	0x243
 1963 03f7 00000000 		.4byte	.LFB12
 1964 03fb 28000000 		.4byte	.LFE12-.LFB12
 1965 03ff 01       		.uleb128 0x1
 1966 0400 9C       		.byte	0x9c
 1967 0401 38040000 		.4byte	0x438
 1968 0405 12       		.uleb128 0x12
 1969 0406 12020000 		.4byte	.LASF44
 1970 040a 01       		.byte	0x1
 1971 040b 4302     		.2byte	0x243
 1972 040d 76000000 		.4byte	0x76
 1973 0411 ED010000 		.4byte	.LLST16
 1974 0415 13       		.uleb128 0x13
 1975 0416 CE050000 		.4byte	.LASF27
 1976 041a 01       		.byte	0x1
 1977 041b 4502     		.2byte	0x245
 1978 041d 6B000000 		.4byte	0x6b
 1979 0421 19020000 		.4byte	.LLST17
 1980 0425 10       		.uleb128 0x10
 1981 0426 08000000 		.4byte	.LVL37
 1982 042a 44090000 		.4byte	0x944
 1983 042e 10       		.uleb128 0x10
 1984 042f 1C000000 		.4byte	.LVL39
 1985 0433 4F090000 		.4byte	0x94f
 1986 0437 00       		.byte	0
 1987 0438 14       		.uleb128 0x14
 1988 0439 FC000000 		.4byte	0xfc
 1989 043d 00000000 		.4byte	.LFB13
 1990 0441 0C000000 		.4byte	.LFE13-.LFB13
 1991 0445 01       		.uleb128 0x1
 1992 0446 9C       		.byte	0x9c
 1993 0447 55040000 		.4byte	0x455
 1994 044b 15       		.uleb128 0x15
 1995 044c 09010000 		.4byte	0x109
 1996 0450 2C020000 		.4byte	.LLST18
 1997 0454 00       		.byte	0
 1998 0455 16       		.uleb128 0x16
 1999 0456 2F050000 		.4byte	.LASF47
 2000 045a 01       		.byte	0x1
 2001 045b 7502     		.2byte	0x275
 2002 045d 76000000 		.4byte	0x76
 2003 0461 00000000 		.4byte	.LFB14
 2004 0465 0C000000 		.4byte	.LFE14-.LFB14
 2005 0469 01       		.uleb128 0x1
 2006 046a 9C       		.byte	0x9c
 2007 046b 11       		.uleb128 0x11
 2008 046c 43020000 		.4byte	.LASF45
 2009 0470 01       		.byte	0x1
 2010 0471 9202     		.2byte	0x292
 2011 0473 00000000 		.4byte	.LFB15
 2012 0477 28000000 		.4byte	.LFE15-.LFB15
 2013 047b 01       		.uleb128 0x1
 2014 047c 9C       		.byte	0x9c
 2015 047d B4040000 		.4byte	0x4b4
 2016 0481 12       		.uleb128 0x12
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 65


 2017 0482 85050000 		.4byte	.LASF46
 2018 0486 01       		.byte	0x1
 2019 0487 9202     		.2byte	0x292
 2020 0489 76000000 		.4byte	0x76
 2021 048d 4D020000 		.4byte	.LLST19
 2022 0491 13       		.uleb128 0x13
 2023 0492 CE050000 		.4byte	.LASF27
 2024 0496 01       		.byte	0x1
 2025 0497 9402     		.2byte	0x294
 2026 0499 6B000000 		.4byte	0x6b
 2027 049d 79020000 		.4byte	.LLST20
 2028 04a1 10       		.uleb128 0x10
 2029 04a2 08000000 		.4byte	.LVL43
 2030 04a6 44090000 		.4byte	0x944
 2031 04aa 10       		.uleb128 0x10
 2032 04ab 1C000000 		.4byte	.LVL45
 2033 04af 4F090000 		.4byte	0x94f
 2034 04b3 00       		.byte	0
 2035 04b4 14       		.uleb128 0x14
 2036 04b5 C8000000 		.4byte	0xc8
 2037 04b9 00000000 		.4byte	.LFB16
 2038 04bd 0C000000 		.4byte	.LFE16-.LFB16
 2039 04c1 01       		.uleb128 0x1
 2040 04c2 9C       		.byte	0x9c
 2041 04c3 D1040000 		.4byte	0x4d1
 2042 04c7 15       		.uleb128 0x15
 2043 04c8 D5000000 		.4byte	0xd5
 2044 04cc 8C020000 		.4byte	.LLST21
 2045 04d0 00       		.byte	0
 2046 04d1 16       		.uleb128 0x16
 2047 04d2 DC030000 		.4byte	.LASF48
 2048 04d6 01       		.byte	0x1
 2049 04d7 C302     		.2byte	0x2c3
 2050 04d9 76000000 		.4byte	0x76
 2051 04dd 00000000 		.4byte	.LFB17
 2052 04e1 0C000000 		.4byte	.LFE17-.LFB17
 2053 04e5 01       		.uleb128 0x1
 2054 04e6 9C       		.byte	0x9c
 2055 04e7 11       		.uleb128 0x11
 2056 04e8 2A060000 		.4byte	.LASF49
 2057 04ec 01       		.byte	0x1
 2058 04ed DD02     		.2byte	0x2dd
 2059 04ef 00000000 		.4byte	.LFB18
 2060 04f3 24000000 		.4byte	.LFE18-.LFB18
 2061 04f7 01       		.uleb128 0x1
 2062 04f8 9C       		.byte	0x9c
 2063 04f9 30050000 		.4byte	0x530
 2064 04fd 12       		.uleb128 0x12
 2065 04fe 5B060000 		.4byte	.LASF50
 2066 0502 01       		.byte	0x1
 2067 0503 DD02     		.2byte	0x2dd
 2068 0505 76000000 		.4byte	0x76
 2069 0509 AD020000 		.4byte	.LLST22
 2070 050d 13       		.uleb128 0x13
 2071 050e CE050000 		.4byte	.LASF27
 2072 0512 01       		.byte	0x1
 2073 0513 DF02     		.2byte	0x2df
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 66


 2074 0515 6B000000 		.4byte	0x6b
 2075 0519 D9020000 		.4byte	.LLST23
 2076 051d 10       		.uleb128 0x10
 2077 051e 08000000 		.4byte	.LVL49
 2078 0522 44090000 		.4byte	0x944
 2079 0526 10       		.uleb128 0x10
 2080 0527 1E000000 		.4byte	.LVL50
 2081 052b 4F090000 		.4byte	0x94f
 2082 052f 00       		.byte	0
 2083 0530 11       		.uleb128 0x11
 2084 0531 25030000 		.4byte	.LASF51
 2085 0535 01       		.byte	0x1
 2086 0536 F802     		.2byte	0x2f8
 2087 0538 00000000 		.4byte	.LFB19
 2088 053c 0C000000 		.4byte	.LFE19-.LFB19
 2089 0540 01       		.uleb128 0x1
 2090 0541 9C       		.byte	0x9c
 2091 0542 57050000 		.4byte	0x557
 2092 0546 12       		.uleb128 0x12
 2093 0547 80060000 		.4byte	.LASF52
 2094 054b 01       		.byte	0x1
 2095 054c F802     		.2byte	0x2f8
 2096 054e 76000000 		.4byte	0x76
 2097 0552 EC020000 		.4byte	.LLST24
 2098 0556 00       		.byte	0
 2099 0557 16       		.uleb128 0x16
 2100 0558 6C050000 		.4byte	.LASF53
 2101 055c 01       		.byte	0x1
 2102 055d 0C03     		.2byte	0x30c
 2103 055f 76000000 		.4byte	0x76
 2104 0563 00000000 		.4byte	.LFB20
 2105 0567 0C000000 		.4byte	.LFE20-.LFB20
 2106 056b 01       		.uleb128 0x1
 2107 056c 9C       		.byte	0x9c
 2108 056d 11       		.uleb128 0x11
 2109 056e DF050000 		.4byte	.LASF54
 2110 0572 01       		.byte	0x1
 2111 0573 2603     		.2byte	0x326
 2112 0575 00000000 		.4byte	.LFB21
 2113 0579 28000000 		.4byte	.LFE21-.LFB21
 2114 057d 01       		.uleb128 0x1
 2115 057e 9C       		.byte	0x9c
 2116 057f B6050000 		.4byte	0x5b6
 2117 0583 12       		.uleb128 0x12
 2118 0584 5B060000 		.4byte	.LASF50
 2119 0588 01       		.byte	0x1
 2120 0589 2603     		.2byte	0x326
 2121 058b 76000000 		.4byte	0x76
 2122 058f 0D030000 		.4byte	.LLST25
 2123 0593 13       		.uleb128 0x13
 2124 0594 CE050000 		.4byte	.LASF27
 2125 0598 01       		.byte	0x1
 2126 0599 2803     		.2byte	0x328
 2127 059b 6B000000 		.4byte	0x6b
 2128 059f 39030000 		.4byte	.LLST26
 2129 05a3 10       		.uleb128 0x10
 2130 05a4 08000000 		.4byte	.LVL55
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 67


 2131 05a8 44090000 		.4byte	0x944
 2132 05ac 10       		.uleb128 0x10
 2133 05ad 22000000 		.4byte	.LVL57
 2134 05b1 4F090000 		.4byte	0x94f
 2135 05b5 00       		.byte	0
 2136 05b6 14       		.uleb128 0x14
 2137 05b7 E2000000 		.4byte	0xe2
 2138 05bb 00000000 		.4byte	.LFB22
 2139 05bf 0C000000 		.4byte	.LFE22-.LFB22
 2140 05c3 01       		.uleb128 0x1
 2141 05c4 9C       		.byte	0x9c
 2142 05c5 D3050000 		.4byte	0x5d3
 2143 05c9 15       		.uleb128 0x15
 2144 05ca EF000000 		.4byte	0xef
 2145 05ce 4C030000 		.4byte	.LLST27
 2146 05d2 00       		.byte	0
 2147 05d3 16       		.uleb128 0x16
 2148 05d4 12040000 		.4byte	.LASF55
 2149 05d8 01       		.byte	0x1
 2150 05d9 6E03     		.2byte	0x36e
 2151 05db 76000000 		.4byte	0x76
 2152 05df 00000000 		.4byte	.LFB23
 2153 05e3 0C000000 		.4byte	.LFE23-.LFB23
 2154 05e7 01       		.uleb128 0x1
 2155 05e8 9C       		.byte	0x9c
 2156 05e9 11       		.uleb128 0x11
 2157 05ea F7020000 		.4byte	.LASF56
 2158 05ee 01       		.byte	0x1
 2159 05ef 9C03     		.2byte	0x39c
 2160 05f1 00000000 		.4byte	.LFB24
 2161 05f5 0C000000 		.4byte	.LFE24-.LFB24
 2162 05f9 01       		.uleb128 0x1
 2163 05fa 9C       		.byte	0x9c
 2164 05fb 10060000 		.4byte	0x610
 2165 05ff 12       		.uleb128 0x12
 2166 0600 C3050000 		.4byte	.LASF57
 2167 0604 01       		.byte	0x1
 2168 0605 9C03     		.2byte	0x39c
 2169 0607 76000000 		.4byte	0x76
 2170 060b 6D030000 		.4byte	.LLST28
 2171 060f 00       		.byte	0
 2172 0610 16       		.uleb128 0x16
 2173 0611 10060000 		.4byte	.LASF58
 2174 0615 01       		.byte	0x1
 2175 0616 C503     		.2byte	0x3c5
 2176 0618 76000000 		.4byte	0x76
 2177 061c 00000000 		.4byte	.LFB25
 2178 0620 0C000000 		.4byte	.LFE25-.LFB25
 2179 0624 01       		.uleb128 0x1
 2180 0625 9C       		.byte	0x9c
 2181 0626 16       		.uleb128 0x16
 2182 0627 8C010000 		.4byte	.LASF59
 2183 062b 01       		.byte	0x1
 2184 062c F303     		.2byte	0x3f3
 2185 062e 76000000 		.4byte	0x76
 2186 0632 00000000 		.4byte	.LFB26
 2187 0636 0C000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 68


 2188 063a 01       		.uleb128 0x1
 2189 063b 9C       		.byte	0x9c
 2190 063c 16       		.uleb128 0x16
 2191 063d 7E030000 		.4byte	.LASF60
 2192 0641 01       		.byte	0x1
 2193 0642 0804     		.2byte	0x408
 2194 0644 76000000 		.4byte	0x76
 2195 0648 00000000 		.4byte	.LFB27
 2196 064c 0C000000 		.4byte	.LFE27-.LFB27
 2197 0650 01       		.uleb128 0x1
 2198 0651 9C       		.byte	0x9c
 2199 0652 11       		.uleb128 0x11
 2200 0653 5E030000 		.4byte	.LASF61
 2201 0657 01       		.byte	0x1
 2202 0658 2304     		.2byte	0x423
 2203 065a 00000000 		.4byte	.LFB28
 2204 065e 24000000 		.4byte	.LFE28-.LFB28
 2205 0662 01       		.uleb128 0x1
 2206 0663 9C       		.byte	0x9c
 2207 0664 9B060000 		.4byte	0x69b
 2208 0668 12       		.uleb128 0x12
 2209 0669 06020000 		.4byte	.LASF62
 2210 066d 01       		.byte	0x1
 2211 066e 2304     		.2byte	0x423
 2212 0670 76000000 		.4byte	0x76
 2213 0674 8E030000 		.4byte	.LLST29
 2214 0678 13       		.uleb128 0x13
 2215 0679 CE050000 		.4byte	.LASF27
 2216 067d 01       		.byte	0x1
 2217 067e 2504     		.2byte	0x425
 2218 0680 6B000000 		.4byte	0x6b
 2219 0684 BA030000 		.4byte	.LLST30
 2220 0688 10       		.uleb128 0x10
 2221 0689 08000000 		.4byte	.LVL63
 2222 068d 44090000 		.4byte	0x944
 2223 0691 10       		.uleb128 0x10
 2224 0692 1C000000 		.4byte	.LVL65
 2225 0696 4F090000 		.4byte	0x94f
 2226 069a 00       		.byte	0
 2227 069b 11       		.uleb128 0x11
 2228 069c 6D000000 		.4byte	.LASF63
 2229 06a0 01       		.byte	0x1
 2230 06a1 4404     		.2byte	0x444
 2231 06a3 00000000 		.4byte	.LFB29
 2232 06a7 24000000 		.4byte	.LFE29-.LFB29
 2233 06ab 01       		.uleb128 0x1
 2234 06ac 9C       		.byte	0x9c
 2235 06ad E4060000 		.4byte	0x6e4
 2236 06b1 12       		.uleb128 0x12
 2237 06b2 06020000 		.4byte	.LASF62
 2238 06b6 01       		.byte	0x1
 2239 06b7 4404     		.2byte	0x444
 2240 06b9 76000000 		.4byte	0x76
 2241 06bd CD030000 		.4byte	.LLST31
 2242 06c1 13       		.uleb128 0x13
 2243 06c2 CE050000 		.4byte	.LASF27
 2244 06c6 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 69


 2245 06c7 4604     		.2byte	0x446
 2246 06c9 6B000000 		.4byte	0x6b
 2247 06cd F9030000 		.4byte	.LLST32
 2248 06d1 10       		.uleb128 0x10
 2249 06d2 08000000 		.4byte	.LVL67
 2250 06d6 44090000 		.4byte	0x944
 2251 06da 10       		.uleb128 0x10
 2252 06db 1E000000 		.4byte	.LVL69
 2253 06df 4F090000 		.4byte	0x94f
 2254 06e3 00       		.byte	0
 2255 06e4 11       		.uleb128 0x11
 2256 06e5 DF020000 		.4byte	.LASF64
 2257 06e9 01       		.byte	0x1
 2258 06ea 6504     		.2byte	0x465
 2259 06ec 00000000 		.4byte	.LFB30
 2260 06f0 28000000 		.4byte	.LFE30-.LFB30
 2261 06f4 01       		.uleb128 0x1
 2262 06f5 9C       		.byte	0x9c
 2263 06f6 2D070000 		.4byte	0x72d
 2264 06fa 12       		.uleb128 0x12
 2265 06fb 06020000 		.4byte	.LASF62
 2266 06ff 01       		.byte	0x1
 2267 0700 6504     		.2byte	0x465
 2268 0702 76000000 		.4byte	0x76
 2269 0706 0C040000 		.4byte	.LLST33
 2270 070a 13       		.uleb128 0x13
 2271 070b CE050000 		.4byte	.LASF27
 2272 070f 01       		.byte	0x1
 2273 0710 6704     		.2byte	0x467
 2274 0712 6B000000 		.4byte	0x6b
 2275 0716 38040000 		.4byte	.LLST34
 2276 071a 10       		.uleb128 0x10
 2277 071b 08000000 		.4byte	.LVL71
 2278 071f 44090000 		.4byte	0x944
 2279 0723 10       		.uleb128 0x10
 2280 0724 1E000000 		.4byte	.LVL73
 2281 0728 4F090000 		.4byte	0x94f
 2282 072c 00       		.byte	0
 2283 072d 11       		.uleb128 0x11
 2284 072e 44060000 		.4byte	.LASF65
 2285 0732 01       		.byte	0x1
 2286 0733 8504     		.2byte	0x485
 2287 0735 00000000 		.4byte	.LFB31
 2288 0739 24000000 		.4byte	.LFE31-.LFB31
 2289 073d 01       		.uleb128 0x1
 2290 073e 9C       		.byte	0x9c
 2291 073f 76070000 		.4byte	0x776
 2292 0743 12       		.uleb128 0x12
 2293 0744 06020000 		.4byte	.LASF62
 2294 0748 01       		.byte	0x1
 2295 0749 8504     		.2byte	0x485
 2296 074b 76000000 		.4byte	0x76
 2297 074f 4B040000 		.4byte	.LLST35
 2298 0753 13       		.uleb128 0x13
 2299 0754 CE050000 		.4byte	.LASF27
 2300 0758 01       		.byte	0x1
 2301 0759 8704     		.2byte	0x487
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 70


 2302 075b 6B000000 		.4byte	0x6b
 2303 075f 77040000 		.4byte	.LLST36
 2304 0763 10       		.uleb128 0x10
 2305 0764 08000000 		.4byte	.LVL75
 2306 0768 44090000 		.4byte	0x944
 2307 076c 10       		.uleb128 0x10
 2308 076d 1E000000 		.4byte	.LVL77
 2309 0771 4F090000 		.4byte	0x94f
 2310 0775 00       		.byte	0
 2311 0776 11       		.uleb128 0x11
 2312 0777 00000000 		.4byte	.LASF66
 2313 077b 01       		.byte	0x1
 2314 077c A604     		.2byte	0x4a6
 2315 077e 00000000 		.4byte	.LFB32
 2316 0782 24000000 		.4byte	.LFE32-.LFB32
 2317 0786 01       		.uleb128 0x1
 2318 0787 9C       		.byte	0x9c
 2319 0788 BF070000 		.4byte	0x7bf
 2320 078c 12       		.uleb128 0x12
 2321 078d 06020000 		.4byte	.LASF62
 2322 0791 01       		.byte	0x1
 2323 0792 A604     		.2byte	0x4a6
 2324 0794 76000000 		.4byte	0x76
 2325 0798 8A040000 		.4byte	.LLST37
 2326 079c 13       		.uleb128 0x13
 2327 079d CE050000 		.4byte	.LASF27
 2328 07a1 01       		.byte	0x1
 2329 07a2 A804     		.2byte	0x4a8
 2330 07a4 6B000000 		.4byte	0x6b
 2331 07a8 B6040000 		.4byte	.LLST38
 2332 07ac 10       		.uleb128 0x10
 2333 07ad 08000000 		.4byte	.LVL79
 2334 07b1 44090000 		.4byte	0x944
 2335 07b5 10       		.uleb128 0x10
 2336 07b6 1E000000 		.4byte	.LVL81
 2337 07ba 4F090000 		.4byte	0x94f
 2338 07be 00       		.byte	0
 2339 07bf 11       		.uleb128 0x11
 2340 07c0 CE000000 		.4byte	.LASF67
 2341 07c4 01       		.byte	0x1
 2342 07c5 CE04     		.2byte	0x4ce
 2343 07c7 00000000 		.4byte	.LFB33
 2344 07cb 1C000000 		.4byte	.LFE33-.LFB33
 2345 07cf 01       		.uleb128 0x1
 2346 07d0 9C       		.byte	0x9c
 2347 07d1 18080000 		.4byte	0x818
 2348 07d5 12       		.uleb128 0x12
 2349 07d6 12020000 		.4byte	.LASF44
 2350 07da 01       		.byte	0x1
 2351 07db CE04     		.2byte	0x4ce
 2352 07dd 76000000 		.4byte	0x76
 2353 07e1 C9040000 		.4byte	.LLST39
 2354 07e5 12       		.uleb128 0x12
 2355 07e6 8D020000 		.4byte	.LASF68
 2356 07ea 01       		.byte	0x1
 2357 07eb CE04     		.2byte	0x4ce
 2358 07ed 76000000 		.4byte	0x76
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 71


 2359 07f1 F5040000 		.4byte	.LLST40
 2360 07f5 13       		.uleb128 0x13
 2361 07f6 CE050000 		.4byte	.LASF27
 2362 07fa 01       		.byte	0x1
 2363 07fb D004     		.2byte	0x4d0
 2364 07fd 6B000000 		.4byte	0x6b
 2365 0801 21050000 		.4byte	.LLST41
 2366 0805 10       		.uleb128 0x10
 2367 0806 0A000000 		.4byte	.LVL83
 2368 080a 44090000 		.4byte	0x944
 2369 080e 10       		.uleb128 0x10
 2370 080f 14000000 		.4byte	.LVL85
 2371 0813 4F090000 		.4byte	0x94f
 2372 0817 00       		.byte	0
 2373 0818 09       		.uleb128 0x9
 2374 0819 5D020000 		.4byte	.LASF69
 2375 081d 01       		.byte	0x1
 2376 081e B1       		.byte	0xb1
 2377 081f 00000000 		.4byte	.LFB1
 2378 0823 24000000 		.4byte	.LFE1-.LFB1
 2379 0827 01       		.uleb128 0x1
 2380 0828 9C       		.byte	0x9c
 2381 0829 64080000 		.4byte	0x864
 2382 082d 0F       		.uleb128 0xf
 2383 082e CE050000 		.4byte	.LASF27
 2384 0832 01       		.byte	0x1
 2385 0833 B3       		.byte	0xb3
 2386 0834 6B000000 		.4byte	0x6b
 2387 0838 34050000 		.4byte	.LLST42
 2388 083c 10       		.uleb128 0x10
 2389 083d 06000000 		.4byte	.LVL87
 2390 0841 44090000 		.4byte	0x944
 2391 0845 10       		.uleb128 0x10
 2392 0846 14000000 		.4byte	.LVL88
 2393 084a 4F090000 		.4byte	0x94f
 2394 084e 17       		.uleb128 0x17
 2395 084f 1C000000 		.4byte	.LVL89
 2396 0853 BF070000 		.4byte	0x7bf
 2397 0857 18       		.uleb128 0x18
 2398 0858 01       		.uleb128 0x1
 2399 0859 51       		.byte	0x51
 2400 085a 01       		.uleb128 0x1
 2401 085b 48       		.byte	0x48
 2402 085c 18       		.uleb128 0x18
 2403 085d 01       		.uleb128 0x1
 2404 085e 50       		.byte	0x50
 2405 085f 02       		.uleb128 0x2
 2406 0860 74       		.byte	0x74
 2407 0861 00       		.sleb128 0
 2408 0862 00       		.byte	0
 2409 0863 00       		.byte	0
 2410 0864 09       		.uleb128 0x9
 2411 0865 4D030000 		.4byte	.LASF70
 2412 0869 01       		.byte	0x1
 2413 086a E0       		.byte	0xe0
 2414 086b 00000000 		.4byte	.LFB2
 2415 086f 1C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 72


 2416 0873 01       		.uleb128 0x1
 2417 0874 9C       		.byte	0x9c
 2418 0875 8C080000 		.4byte	0x88c
 2419 0879 10       		.uleb128 0x10
 2420 087a 0E000000 		.4byte	.LVL90
 2421 087e 16010000 		.4byte	0x116
 2422 0882 10       		.uleb128 0x10
 2423 0883 16000000 		.4byte	.LVL91
 2424 0887 18080000 		.4byte	0x818
 2425 088b 00       		.byte	0
 2426 088c 16       		.uleb128 0x16
 2427 088d 20020000 		.4byte	.LASF71
 2428 0891 01       		.byte	0x1
 2429 0892 EB04     		.2byte	0x4eb
 2430 0894 76000000 		.4byte	0x76
 2431 0898 00000000 		.4byte	.LFB34
 2432 089c 14000000 		.4byte	.LFE34-.LFB34
 2433 08a0 01       		.uleb128 0x1
 2434 08a1 9C       		.byte	0x9c
 2435 08a2 14       		.uleb128 0x14
 2436 08a3 AE000000 		.4byte	0xae
 2437 08a7 00000000 		.4byte	.LFB35
 2438 08ab 0C000000 		.4byte	.LFE35-.LFB35
 2439 08af 01       		.uleb128 0x1
 2440 08b0 9C       		.byte	0x9c
 2441 08b1 BD080000 		.4byte	0x8bd
 2442 08b5 19       		.uleb128 0x19
 2443 08b6 BB000000 		.4byte	0xbb
 2444 08ba 01       		.uleb128 0x1
 2445 08bb 50       		.byte	0x50
 2446 08bc 00       		.byte	0
 2447 08bd 16       		.uleb128 0x16
 2448 08be E2010000 		.4byte	.LASF72
 2449 08c2 01       		.byte	0x1
 2450 08c3 1B05     		.2byte	0x51b
 2451 08c5 76000000 		.4byte	0x76
 2452 08c9 00000000 		.4byte	.LFB36
 2453 08cd 0C000000 		.4byte	.LFE36-.LFB36
 2454 08d1 01       		.uleb128 0x1
 2455 08d2 9C       		.byte	0x9c
 2456 08d3 16       		.uleb128 0x16
 2457 08d4 6F020000 		.4byte	.LASF73
 2458 08d8 01       		.byte	0x1
 2459 08d9 3205     		.2byte	0x532
 2460 08db 76000000 		.4byte	0x76
 2461 08df 00000000 		.4byte	.LFB37
 2462 08e3 0C000000 		.4byte	.LFE37-.LFB37
 2463 08e7 01       		.uleb128 0x1
 2464 08e8 9C       		.byte	0x9c
 2465 08e9 11       		.uleb128 0x11
 2466 08ea A9050000 		.4byte	.LASF74
 2467 08ee 01       		.byte	0x1
 2468 08ef 4905     		.2byte	0x549
 2469 08f1 00000000 		.4byte	.LFB38
 2470 08f5 0C000000 		.4byte	.LFE38-.LFB38
 2471 08f9 01       		.uleb128 0x1
 2472 08fa 9C       		.byte	0x9c
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 73


 2473 08fb 0E090000 		.4byte	0x90e
 2474 08ff 1A       		.uleb128 0x1a
 2475 0900 21050000 		.4byte	.LASF18
 2476 0904 01       		.byte	0x1
 2477 0905 4905     		.2byte	0x549
 2478 0907 76000000 		.4byte	0x76
 2479 090b 01       		.uleb128 0x1
 2480 090c 50       		.byte	0x50
 2481 090d 00       		.byte	0
 2482 090e 11       		.uleb128 0x11
 2483 090f F8050000 		.4byte	.LASF75
 2484 0913 01       		.byte	0x1
 2485 0914 6005     		.2byte	0x560
 2486 0916 00000000 		.4byte	.LFB39
 2487 091a 0C000000 		.4byte	.LFE39-.LFB39
 2488 091e 01       		.uleb128 0x1
 2489 091f 9C       		.byte	0x9c
 2490 0920 33090000 		.4byte	0x933
 2491 0924 1A       		.uleb128 0x1a
 2492 0925 21050000 		.4byte	.LASF18
 2493 0929 01       		.byte	0x1
 2494 092a 6005     		.2byte	0x560
 2495 092c 76000000 		.4byte	0x76
 2496 0930 01       		.uleb128 0x1
 2497 0931 50       		.byte	0x50
 2498 0932 00       		.byte	0
 2499 0933 1B       		.uleb128 0x1b
 2500 0934 9D000000 		.4byte	.LASF79
 2501 0938 01       		.byte	0x1
 2502 0939 15       		.byte	0x15
 2503 093a 6B000000 		.4byte	0x6b
 2504 093e 05       		.uleb128 0x5
 2505 093f 03       		.byte	0x3
 2506 0940 00000000 		.4byte	ServoTimer_initVar
 2507 0944 1C       		.uleb128 0x1c
 2508 0945 C8020000 		.4byte	.LASF80
 2509 0949 03       		.byte	0x3
 2510 094a 82       		.byte	0x82
 2511 094b 6B000000 		.4byte	0x6b
 2512 094f 1D       		.uleb128 0x1d
 2513 0950 44000000 		.4byte	.LASF81
 2514 0954 03       		.byte	0x3
 2515 0955 83       		.byte	0x83
 2516 0956 1E       		.uleb128 0x1e
 2517 0957 6B000000 		.4byte	0x6b
 2518 095b 00       		.byte	0
 2519 095c 00       		.byte	0
 2520              		.section	.debug_abbrev,"",%progbits
 2521              	.Ldebug_abbrev0:
 2522 0000 01       		.uleb128 0x1
 2523 0001 11       		.uleb128 0x11
 2524 0002 01       		.byte	0x1
 2525 0003 25       		.uleb128 0x25
 2526 0004 0E       		.uleb128 0xe
 2527 0005 13       		.uleb128 0x13
 2528 0006 0B       		.uleb128 0xb
 2529 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 74


 2530 0008 0E       		.uleb128 0xe
 2531 0009 1B       		.uleb128 0x1b
 2532 000a 0E       		.uleb128 0xe
 2533 000b 55       		.uleb128 0x55
 2534 000c 17       		.uleb128 0x17
 2535 000d 11       		.uleb128 0x11
 2536 000e 01       		.uleb128 0x1
 2537 000f 10       		.uleb128 0x10
 2538 0010 17       		.uleb128 0x17
 2539 0011 00       		.byte	0
 2540 0012 00       		.byte	0
 2541 0013 02       		.uleb128 0x2
 2542 0014 24       		.uleb128 0x24
 2543 0015 00       		.byte	0
 2544 0016 0B       		.uleb128 0xb
 2545 0017 0B       		.uleb128 0xb
 2546 0018 3E       		.uleb128 0x3e
 2547 0019 0B       		.uleb128 0xb
 2548 001a 03       		.uleb128 0x3
 2549 001b 0E       		.uleb128 0xe
 2550 001c 00       		.byte	0
 2551 001d 00       		.byte	0
 2552 001e 03       		.uleb128 0x3
 2553 001f 24       		.uleb128 0x24
 2554 0020 00       		.byte	0
 2555 0021 0B       		.uleb128 0xb
 2556 0022 0B       		.uleb128 0xb
 2557 0023 3E       		.uleb128 0x3e
 2558 0024 0B       		.uleb128 0xb
 2559 0025 03       		.uleb128 0x3
 2560 0026 08       		.uleb128 0x8
 2561 0027 00       		.byte	0
 2562 0028 00       		.byte	0
 2563 0029 04       		.uleb128 0x4
 2564 002a 16       		.uleb128 0x16
 2565 002b 00       		.byte	0
 2566 002c 03       		.uleb128 0x3
 2567 002d 0E       		.uleb128 0xe
 2568 002e 3A       		.uleb128 0x3a
 2569 002f 0B       		.uleb128 0xb
 2570 0030 3B       		.uleb128 0x3b
 2571 0031 0B       		.uleb128 0xb
 2572 0032 49       		.uleb128 0x49
 2573 0033 13       		.uleb128 0x13
 2574 0034 00       		.byte	0
 2575 0035 00       		.byte	0
 2576 0036 05       		.uleb128 0x5
 2577 0037 16       		.uleb128 0x16
 2578 0038 00       		.byte	0
 2579 0039 03       		.uleb128 0x3
 2580 003a 0E       		.uleb128 0xe
 2581 003b 3A       		.uleb128 0x3a
 2582 003c 0B       		.uleb128 0xb
 2583 003d 3B       		.uleb128 0x3b
 2584 003e 05       		.uleb128 0x5
 2585 003f 49       		.uleb128 0x49
 2586 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 75


 2587 0041 00       		.byte	0
 2588 0042 00       		.byte	0
 2589 0043 06       		.uleb128 0x6
 2590 0044 35       		.uleb128 0x35
 2591 0045 00       		.byte	0
 2592 0046 49       		.uleb128 0x49
 2593 0047 13       		.uleb128 0x13
 2594 0048 00       		.byte	0
 2595 0049 00       		.byte	0
 2596 004a 07       		.uleb128 0x7
 2597 004b 2E       		.uleb128 0x2e
 2598 004c 01       		.byte	0x1
 2599 004d 3F       		.uleb128 0x3f
 2600 004e 19       		.uleb128 0x19
 2601 004f 03       		.uleb128 0x3
 2602 0050 0E       		.uleb128 0xe
 2603 0051 3A       		.uleb128 0x3a
 2604 0052 0B       		.uleb128 0xb
 2605 0053 3B       		.uleb128 0x3b
 2606 0054 05       		.uleb128 0x5
 2607 0055 27       		.uleb128 0x27
 2608 0056 19       		.uleb128 0x19
 2609 0057 20       		.uleb128 0x20
 2610 0058 0B       		.uleb128 0xb
 2611 0059 01       		.uleb128 0x1
 2612 005a 13       		.uleb128 0x13
 2613 005b 00       		.byte	0
 2614 005c 00       		.byte	0
 2615 005d 08       		.uleb128 0x8
 2616 005e 05       		.uleb128 0x5
 2617 005f 00       		.byte	0
 2618 0060 03       		.uleb128 0x3
 2619 0061 0E       		.uleb128 0xe
 2620 0062 3A       		.uleb128 0x3a
 2621 0063 0B       		.uleb128 0xb
 2622 0064 3B       		.uleb128 0x3b
 2623 0065 05       		.uleb128 0x5
 2624 0066 49       		.uleb128 0x49
 2625 0067 13       		.uleb128 0x13
 2626 0068 00       		.byte	0
 2627 0069 00       		.byte	0
 2628 006a 09       		.uleb128 0x9
 2629 006b 2E       		.uleb128 0x2e
 2630 006c 01       		.byte	0x1
 2631 006d 3F       		.uleb128 0x3f
 2632 006e 19       		.uleb128 0x19
 2633 006f 03       		.uleb128 0x3
 2634 0070 0E       		.uleb128 0xe
 2635 0071 3A       		.uleb128 0x3a
 2636 0072 0B       		.uleb128 0xb
 2637 0073 3B       		.uleb128 0x3b
 2638 0074 0B       		.uleb128 0xb
 2639 0075 27       		.uleb128 0x27
 2640 0076 19       		.uleb128 0x19
 2641 0077 11       		.uleb128 0x11
 2642 0078 01       		.uleb128 0x1
 2643 0079 12       		.uleb128 0x12
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 76


 2644 007a 06       		.uleb128 0x6
 2645 007b 40       		.uleb128 0x40
 2646 007c 18       		.uleb128 0x18
 2647 007d 9742     		.uleb128 0x2117
 2648 007f 19       		.uleb128 0x19
 2649 0080 01       		.uleb128 0x1
 2650 0081 13       		.uleb128 0x13
 2651 0082 00       		.byte	0
 2652 0083 00       		.byte	0
 2653 0084 0A       		.uleb128 0xa
 2654 0085 1D       		.uleb128 0x1d
 2655 0086 01       		.byte	0x1
 2656 0087 31       		.uleb128 0x31
 2657 0088 13       		.uleb128 0x13
 2658 0089 11       		.uleb128 0x11
 2659 008a 01       		.uleb128 0x1
 2660 008b 12       		.uleb128 0x12
 2661 008c 06       		.uleb128 0x6
 2662 008d 58       		.uleb128 0x58
 2663 008e 0B       		.uleb128 0xb
 2664 008f 59       		.uleb128 0x59
 2665 0090 0B       		.uleb128 0xb
 2666 0091 01       		.uleb128 0x1
 2667 0092 13       		.uleb128 0x13
 2668 0093 00       		.byte	0
 2669 0094 00       		.byte	0
 2670 0095 0B       		.uleb128 0xb
 2671 0096 05       		.uleb128 0x5
 2672 0097 00       		.byte	0
 2673 0098 31       		.uleb128 0x31
 2674 0099 13       		.uleb128 0x13
 2675 009a 1C       		.uleb128 0x1c
 2676 009b 0B       		.uleb128 0xb
 2677 009c 00       		.byte	0
 2678 009d 00       		.byte	0
 2679 009e 0C       		.uleb128 0xc
 2680 009f 1D       		.uleb128 0x1d
 2681 00a0 01       		.byte	0x1
 2682 00a1 31       		.uleb128 0x31
 2683 00a2 13       		.uleb128 0x13
 2684 00a3 52       		.uleb128 0x52
 2685 00a4 01       		.uleb128 0x1
 2686 00a5 55       		.uleb128 0x55
 2687 00a6 17       		.uleb128 0x17
 2688 00a7 58       		.uleb128 0x58
 2689 00a8 0B       		.uleb128 0xb
 2690 00a9 59       		.uleb128 0x59
 2691 00aa 0B       		.uleb128 0xb
 2692 00ab 01       		.uleb128 0x1
 2693 00ac 13       		.uleb128 0x13
 2694 00ad 00       		.byte	0
 2695 00ae 00       		.byte	0
 2696 00af 0D       		.uleb128 0xd
 2697 00b0 05       		.uleb128 0x5
 2698 00b1 00       		.byte	0
 2699 00b2 31       		.uleb128 0x31
 2700 00b3 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 77


 2701 00b4 1C       		.uleb128 0x1c
 2702 00b5 05       		.uleb128 0x5
 2703 00b6 00       		.byte	0
 2704 00b7 00       		.byte	0
 2705 00b8 0E       		.uleb128 0xe
 2706 00b9 1D       		.uleb128 0x1d
 2707 00ba 01       		.byte	0x1
 2708 00bb 31       		.uleb128 0x31
 2709 00bc 13       		.uleb128 0x13
 2710 00bd 11       		.uleb128 0x11
 2711 00be 01       		.uleb128 0x1
 2712 00bf 12       		.uleb128 0x12
 2713 00c0 06       		.uleb128 0x6
 2714 00c1 58       		.uleb128 0x58
 2715 00c2 0B       		.uleb128 0xb
 2716 00c3 59       		.uleb128 0x59
 2717 00c4 0B       		.uleb128 0xb
 2718 00c5 00       		.byte	0
 2719 00c6 00       		.byte	0
 2720 00c7 0F       		.uleb128 0xf
 2721 00c8 34       		.uleb128 0x34
 2722 00c9 00       		.byte	0
 2723 00ca 03       		.uleb128 0x3
 2724 00cb 0E       		.uleb128 0xe
 2725 00cc 3A       		.uleb128 0x3a
 2726 00cd 0B       		.uleb128 0xb
 2727 00ce 3B       		.uleb128 0x3b
 2728 00cf 0B       		.uleb128 0xb
 2729 00d0 49       		.uleb128 0x49
 2730 00d1 13       		.uleb128 0x13
 2731 00d2 02       		.uleb128 0x2
 2732 00d3 17       		.uleb128 0x17
 2733 00d4 00       		.byte	0
 2734 00d5 00       		.byte	0
 2735 00d6 10       		.uleb128 0x10
 2736 00d7 898201   		.uleb128 0x4109
 2737 00da 00       		.byte	0
 2738 00db 11       		.uleb128 0x11
 2739 00dc 01       		.uleb128 0x1
 2740 00dd 31       		.uleb128 0x31
 2741 00de 13       		.uleb128 0x13
 2742 00df 00       		.byte	0
 2743 00e0 00       		.byte	0
 2744 00e1 11       		.uleb128 0x11
 2745 00e2 2E       		.uleb128 0x2e
 2746 00e3 01       		.byte	0x1
 2747 00e4 3F       		.uleb128 0x3f
 2748 00e5 19       		.uleb128 0x19
 2749 00e6 03       		.uleb128 0x3
 2750 00e7 0E       		.uleb128 0xe
 2751 00e8 3A       		.uleb128 0x3a
 2752 00e9 0B       		.uleb128 0xb
 2753 00ea 3B       		.uleb128 0x3b
 2754 00eb 05       		.uleb128 0x5
 2755 00ec 27       		.uleb128 0x27
 2756 00ed 19       		.uleb128 0x19
 2757 00ee 11       		.uleb128 0x11
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 78


 2758 00ef 01       		.uleb128 0x1
 2759 00f0 12       		.uleb128 0x12
 2760 00f1 06       		.uleb128 0x6
 2761 00f2 40       		.uleb128 0x40
 2762 00f3 18       		.uleb128 0x18
 2763 00f4 9742     		.uleb128 0x2117
 2764 00f6 19       		.uleb128 0x19
 2765 00f7 01       		.uleb128 0x1
 2766 00f8 13       		.uleb128 0x13
 2767 00f9 00       		.byte	0
 2768 00fa 00       		.byte	0
 2769 00fb 12       		.uleb128 0x12
 2770 00fc 05       		.uleb128 0x5
 2771 00fd 00       		.byte	0
 2772 00fe 03       		.uleb128 0x3
 2773 00ff 0E       		.uleb128 0xe
 2774 0100 3A       		.uleb128 0x3a
 2775 0101 0B       		.uleb128 0xb
 2776 0102 3B       		.uleb128 0x3b
 2777 0103 05       		.uleb128 0x5
 2778 0104 49       		.uleb128 0x49
 2779 0105 13       		.uleb128 0x13
 2780 0106 02       		.uleb128 0x2
 2781 0107 17       		.uleb128 0x17
 2782 0108 00       		.byte	0
 2783 0109 00       		.byte	0
 2784 010a 13       		.uleb128 0x13
 2785 010b 34       		.uleb128 0x34
 2786 010c 00       		.byte	0
 2787 010d 03       		.uleb128 0x3
 2788 010e 0E       		.uleb128 0xe
 2789 010f 3A       		.uleb128 0x3a
 2790 0110 0B       		.uleb128 0xb
 2791 0111 3B       		.uleb128 0x3b
 2792 0112 05       		.uleb128 0x5
 2793 0113 49       		.uleb128 0x49
 2794 0114 13       		.uleb128 0x13
 2795 0115 02       		.uleb128 0x2
 2796 0116 17       		.uleb128 0x17
 2797 0117 00       		.byte	0
 2798 0118 00       		.byte	0
 2799 0119 14       		.uleb128 0x14
 2800 011a 2E       		.uleb128 0x2e
 2801 011b 01       		.byte	0x1
 2802 011c 31       		.uleb128 0x31
 2803 011d 13       		.uleb128 0x13
 2804 011e 11       		.uleb128 0x11
 2805 011f 01       		.uleb128 0x1
 2806 0120 12       		.uleb128 0x12
 2807 0121 06       		.uleb128 0x6
 2808 0122 40       		.uleb128 0x40
 2809 0123 18       		.uleb128 0x18
 2810 0124 9742     		.uleb128 0x2117
 2811 0126 19       		.uleb128 0x19
 2812 0127 01       		.uleb128 0x1
 2813 0128 13       		.uleb128 0x13
 2814 0129 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 79


 2815 012a 00       		.byte	0
 2816 012b 15       		.uleb128 0x15
 2817 012c 05       		.uleb128 0x5
 2818 012d 00       		.byte	0
 2819 012e 31       		.uleb128 0x31
 2820 012f 13       		.uleb128 0x13
 2821 0130 02       		.uleb128 0x2
 2822 0131 17       		.uleb128 0x17
 2823 0132 00       		.byte	0
 2824 0133 00       		.byte	0
 2825 0134 16       		.uleb128 0x16
 2826 0135 2E       		.uleb128 0x2e
 2827 0136 00       		.byte	0
 2828 0137 3F       		.uleb128 0x3f
 2829 0138 19       		.uleb128 0x19
 2830 0139 03       		.uleb128 0x3
 2831 013a 0E       		.uleb128 0xe
 2832 013b 3A       		.uleb128 0x3a
 2833 013c 0B       		.uleb128 0xb
 2834 013d 3B       		.uleb128 0x3b
 2835 013e 05       		.uleb128 0x5
 2836 013f 27       		.uleb128 0x27
 2837 0140 19       		.uleb128 0x19
 2838 0141 49       		.uleb128 0x49
 2839 0142 13       		.uleb128 0x13
 2840 0143 11       		.uleb128 0x11
 2841 0144 01       		.uleb128 0x1
 2842 0145 12       		.uleb128 0x12
 2843 0146 06       		.uleb128 0x6
 2844 0147 40       		.uleb128 0x40
 2845 0148 18       		.uleb128 0x18
 2846 0149 9742     		.uleb128 0x2117
 2847 014b 19       		.uleb128 0x19
 2848 014c 00       		.byte	0
 2849 014d 00       		.byte	0
 2850 014e 17       		.uleb128 0x17
 2851 014f 898201   		.uleb128 0x4109
 2852 0152 01       		.byte	0x1
 2853 0153 11       		.uleb128 0x11
 2854 0154 01       		.uleb128 0x1
 2855 0155 31       		.uleb128 0x31
 2856 0156 13       		.uleb128 0x13
 2857 0157 00       		.byte	0
 2858 0158 00       		.byte	0
 2859 0159 18       		.uleb128 0x18
 2860 015a 8A8201   		.uleb128 0x410a
 2861 015d 00       		.byte	0
 2862 015e 02       		.uleb128 0x2
 2863 015f 18       		.uleb128 0x18
 2864 0160 9142     		.uleb128 0x2111
 2865 0162 18       		.uleb128 0x18
 2866 0163 00       		.byte	0
 2867 0164 00       		.byte	0
 2868 0165 19       		.uleb128 0x19
 2869 0166 05       		.uleb128 0x5
 2870 0167 00       		.byte	0
 2871 0168 31       		.uleb128 0x31
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 80


 2872 0169 13       		.uleb128 0x13
 2873 016a 02       		.uleb128 0x2
 2874 016b 18       		.uleb128 0x18
 2875 016c 00       		.byte	0
 2876 016d 00       		.byte	0
 2877 016e 1A       		.uleb128 0x1a
 2878 016f 05       		.uleb128 0x5
 2879 0170 00       		.byte	0
 2880 0171 03       		.uleb128 0x3
 2881 0172 0E       		.uleb128 0xe
 2882 0173 3A       		.uleb128 0x3a
 2883 0174 0B       		.uleb128 0xb
 2884 0175 3B       		.uleb128 0x3b
 2885 0176 05       		.uleb128 0x5
 2886 0177 49       		.uleb128 0x49
 2887 0178 13       		.uleb128 0x13
 2888 0179 02       		.uleb128 0x2
 2889 017a 18       		.uleb128 0x18
 2890 017b 00       		.byte	0
 2891 017c 00       		.byte	0
 2892 017d 1B       		.uleb128 0x1b
 2893 017e 34       		.uleb128 0x34
 2894 017f 00       		.byte	0
 2895 0180 03       		.uleb128 0x3
 2896 0181 0E       		.uleb128 0xe
 2897 0182 3A       		.uleb128 0x3a
 2898 0183 0B       		.uleb128 0xb
 2899 0184 3B       		.uleb128 0x3b
 2900 0185 0B       		.uleb128 0xb
 2901 0186 49       		.uleb128 0x49
 2902 0187 13       		.uleb128 0x13
 2903 0188 3F       		.uleb128 0x3f
 2904 0189 19       		.uleb128 0x19
 2905 018a 02       		.uleb128 0x2
 2906 018b 18       		.uleb128 0x18
 2907 018c 00       		.byte	0
 2908 018d 00       		.byte	0
 2909 018e 1C       		.uleb128 0x1c
 2910 018f 2E       		.uleb128 0x2e
 2911 0190 00       		.byte	0
 2912 0191 3F       		.uleb128 0x3f
 2913 0192 19       		.uleb128 0x19
 2914 0193 03       		.uleb128 0x3
 2915 0194 0E       		.uleb128 0xe
 2916 0195 3A       		.uleb128 0x3a
 2917 0196 0B       		.uleb128 0xb
 2918 0197 3B       		.uleb128 0x3b
 2919 0198 0B       		.uleb128 0xb
 2920 0199 27       		.uleb128 0x27
 2921 019a 19       		.uleb128 0x19
 2922 019b 49       		.uleb128 0x49
 2923 019c 13       		.uleb128 0x13
 2924 019d 3C       		.uleb128 0x3c
 2925 019e 19       		.uleb128 0x19
 2926 019f 00       		.byte	0
 2927 01a0 00       		.byte	0
 2928 01a1 1D       		.uleb128 0x1d
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 81


 2929 01a2 2E       		.uleb128 0x2e
 2930 01a3 01       		.byte	0x1
 2931 01a4 3F       		.uleb128 0x3f
 2932 01a5 19       		.uleb128 0x19
 2933 01a6 03       		.uleb128 0x3
 2934 01a7 0E       		.uleb128 0xe
 2935 01a8 3A       		.uleb128 0x3a
 2936 01a9 0B       		.uleb128 0xb
 2937 01aa 3B       		.uleb128 0x3b
 2938 01ab 0B       		.uleb128 0xb
 2939 01ac 27       		.uleb128 0x27
 2940 01ad 19       		.uleb128 0x19
 2941 01ae 3C       		.uleb128 0x3c
 2942 01af 19       		.uleb128 0x19
 2943 01b0 00       		.byte	0
 2944 01b1 00       		.byte	0
 2945 01b2 1E       		.uleb128 0x1e
 2946 01b3 05       		.uleb128 0x5
 2947 01b4 00       		.byte	0
 2948 01b5 49       		.uleb128 0x49
 2949 01b6 13       		.uleb128 0x13
 2950 01b7 00       		.byte	0
 2951 01b8 00       		.byte	0
 2952 01b9 00       		.byte	0
 2953              		.section	.debug_loc,"",%progbits
 2954              	.Ldebug_loc0:
 2955              	.LLST0:
 2956 0000 06000000 		.4byte	.LVL4
 2957 0004 13000000 		.4byte	.LVL5-1
 2958 0008 0100     		.2byte	0x1
 2959 000a 50       		.byte	0x50
 2960 000b 00000000 		.4byte	0
 2961 000f 00000000 		.4byte	0
 2962              	.LLST1:
 2963 0013 00000000 		.4byte	.LVL6
 2964 0017 07000000 		.4byte	.LVL7-1
 2965 001b 0100     		.2byte	0x1
 2966 001d 50       		.byte	0x50
 2967 001e 07000000 		.4byte	.LVL7-1
 2968 0022 16000000 		.4byte	.LVL8
 2969 0026 0100     		.2byte	0x1
 2970 0028 54       		.byte	0x54
 2971 0029 16000000 		.4byte	.LVL8
 2972 002d 28000000 		.4byte	.LFE4
 2973 0031 0400     		.2byte	0x4
 2974 0033 F3       		.byte	0xf3
 2975 0034 01       		.uleb128 0x1
 2976 0035 50       		.byte	0x50
 2977 0036 9F       		.byte	0x9f
 2978 0037 00000000 		.4byte	0
 2979 003b 00000000 		.4byte	0
 2980              	.LLST2:
 2981 003f 08000000 		.4byte	.LVL7
 2982 0043 1B000000 		.4byte	.LVL9-1
 2983 0047 0100     		.2byte	0x1
 2984 0049 50       		.byte	0x50
 2985 004a 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 82


 2986 004e 00000000 		.4byte	0
 2987              	.LLST3:
 2988 0052 00000000 		.4byte	.LVL10
 2989 0056 07000000 		.4byte	.LVL11-1
 2990 005a 0100     		.2byte	0x1
 2991 005c 50       		.byte	0x50
 2992 005d 07000000 		.4byte	.LVL11-1
 2993 0061 16000000 		.4byte	.LVL12
 2994 0065 0100     		.2byte	0x1
 2995 0067 54       		.byte	0x54
 2996 0068 16000000 		.4byte	.LVL12
 2997 006c 28000000 		.4byte	.LFE5
 2998 0070 0400     		.2byte	0x4
 2999 0072 F3       		.byte	0xf3
 3000 0073 01       		.uleb128 0x1
 3001 0074 50       		.byte	0x50
 3002 0075 9F       		.byte	0x9f
 3003 0076 00000000 		.4byte	0
 3004 007a 00000000 		.4byte	0
 3005              	.LLST4:
 3006 007e 08000000 		.4byte	.LVL11
 3007 0082 1B000000 		.4byte	.LVL13-1
 3008 0086 0100     		.2byte	0x1
 3009 0088 50       		.byte	0x50
 3010 0089 00000000 		.4byte	0
 3011 008d 00000000 		.4byte	0
 3012              	.LLST5:
 3013 0091 00000000 		.4byte	.LVL14
 3014 0095 07000000 		.4byte	.LVL15-1
 3015 0099 0100     		.2byte	0x1
 3016 009b 50       		.byte	0x50
 3017 009c 07000000 		.4byte	.LVL15-1
 3018 00a0 16000000 		.4byte	.LVL16
 3019 00a4 0100     		.2byte	0x1
 3020 00a6 54       		.byte	0x54
 3021 00a7 16000000 		.4byte	.LVL16
 3022 00ab 28000000 		.4byte	.LFE6
 3023 00af 0400     		.2byte	0x4
 3024 00b1 F3       		.byte	0xf3
 3025 00b2 01       		.uleb128 0x1
 3026 00b3 50       		.byte	0x50
 3027 00b4 9F       		.byte	0x9f
 3028 00b5 00000000 		.4byte	0
 3029 00b9 00000000 		.4byte	0
 3030              	.LLST6:
 3031 00bd 08000000 		.4byte	.LVL15
 3032 00c1 1B000000 		.4byte	.LVL17-1
 3033 00c5 0100     		.2byte	0x1
 3034 00c7 50       		.byte	0x50
 3035 00c8 00000000 		.4byte	0
 3036 00cc 00000000 		.4byte	0
 3037              	.LLST7:
 3038 00d0 00000000 		.4byte	.LVL18
 3039 00d4 07000000 		.4byte	.LVL19-1
 3040 00d8 0100     		.2byte	0x1
 3041 00da 50       		.byte	0x50
 3042 00db 07000000 		.4byte	.LVL19-1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 83


 3043 00df 18000000 		.4byte	.LVL20
 3044 00e3 0100     		.2byte	0x1
 3045 00e5 54       		.byte	0x54
 3046 00e6 18000000 		.4byte	.LVL20
 3047 00ea 2C000000 		.4byte	.LFE7
 3048 00ee 0400     		.2byte	0x4
 3049 00f0 F3       		.byte	0xf3
 3050 00f1 01       		.uleb128 0x1
 3051 00f2 50       		.byte	0x50
 3052 00f3 9F       		.byte	0x9f
 3053 00f4 00000000 		.4byte	0
 3054 00f8 00000000 		.4byte	0
 3055              	.LLST8:
 3056 00fc 08000000 		.4byte	.LVL19
 3057 0100 21000000 		.4byte	.LVL21-1
 3058 0104 0100     		.2byte	0x1
 3059 0106 50       		.byte	0x50
 3060 0107 00000000 		.4byte	0
 3061 010b 00000000 		.4byte	0
 3062              	.LLST9:
 3063 010f 00000000 		.4byte	.LVL22
 3064 0113 04000000 		.4byte	.LVL23
 3065 0117 0100     		.2byte	0x1
 3066 0119 50       		.byte	0x50
 3067 011a 04000000 		.4byte	.LVL23
 3068 011e 10000000 		.4byte	.LFE8
 3069 0122 0400     		.2byte	0x4
 3070 0124 F3       		.byte	0xf3
 3071 0125 01       		.uleb128 0x1
 3072 0126 50       		.byte	0x50
 3073 0127 9F       		.byte	0x9f
 3074 0128 00000000 		.4byte	0
 3075 012c 00000000 		.4byte	0
 3076              	.LLST10:
 3077 0130 00000000 		.4byte	.LVL24
 3078 0134 07000000 		.4byte	.LVL25-1
 3079 0138 0100     		.2byte	0x1
 3080 013a 50       		.byte	0x50
 3081 013b 07000000 		.4byte	.LVL25-1
 3082 013f 18000000 		.4byte	.LVL26
 3083 0143 0100     		.2byte	0x1
 3084 0145 54       		.byte	0x54
 3085 0146 18000000 		.4byte	.LVL26
 3086 014a 28000000 		.4byte	.LFE9
 3087 014e 0400     		.2byte	0x4
 3088 0150 F3       		.byte	0xf3
 3089 0151 01       		.uleb128 0x1
 3090 0152 50       		.byte	0x50
 3091 0153 9F       		.byte	0x9f
 3092 0154 00000000 		.4byte	0
 3093 0158 00000000 		.4byte	0
 3094              	.LLST11:
 3095 015c 08000000 		.4byte	.LVL25
 3096 0160 21000000 		.4byte	.LVL27-1
 3097 0164 0100     		.2byte	0x1
 3098 0166 50       		.byte	0x50
 3099 0167 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 84


 3100 016b 00000000 		.4byte	0
 3101              	.LLST12:
 3102 016f 00000000 		.4byte	.LVL28
 3103 0173 07000000 		.4byte	.LVL29-1
 3104 0177 0100     		.2byte	0x1
 3105 0179 50       		.byte	0x50
 3106 017a 07000000 		.4byte	.LVL29-1
 3107 017e 18000000 		.4byte	.LVL30
 3108 0182 0100     		.2byte	0x1
 3109 0184 54       		.byte	0x54
 3110 0185 18000000 		.4byte	.LVL30
 3111 0189 28000000 		.4byte	.LFE10
 3112 018d 0400     		.2byte	0x4
 3113 018f F3       		.byte	0xf3
 3114 0190 01       		.uleb128 0x1
 3115 0191 50       		.byte	0x50
 3116 0192 9F       		.byte	0x9f
 3117 0193 00000000 		.4byte	0
 3118 0197 00000000 		.4byte	0
 3119              	.LLST13:
 3120 019b 08000000 		.4byte	.LVL29
 3121 019f 21000000 		.4byte	.LVL31-1
 3122 01a3 0100     		.2byte	0x1
 3123 01a5 50       		.byte	0x50
 3124 01a6 00000000 		.4byte	0
 3125 01aa 00000000 		.4byte	0
 3126              	.LLST14:
 3127 01ae 00000000 		.4byte	.LVL32
 3128 01b2 07000000 		.4byte	.LVL33-1
 3129 01b6 0100     		.2byte	0x1
 3130 01b8 50       		.byte	0x50
 3131 01b9 07000000 		.4byte	.LVL33-1
 3132 01bd 10000000 		.4byte	.LVL34
 3133 01c1 0100     		.2byte	0x1
 3134 01c3 54       		.byte	0x54
 3135 01c4 10000000 		.4byte	.LVL34
 3136 01c8 2C000000 		.4byte	.LFE11
 3137 01cc 0400     		.2byte	0x4
 3138 01ce F3       		.byte	0xf3
 3139 01cf 01       		.uleb128 0x1
 3140 01d0 50       		.byte	0x50
 3141 01d1 9F       		.byte	0x9f
 3142 01d2 00000000 		.4byte	0
 3143 01d6 00000000 		.4byte	0
 3144              	.LLST15:
 3145 01da 08000000 		.4byte	.LVL33
 3146 01de 1F000000 		.4byte	.LVL35-1
 3147 01e2 0100     		.2byte	0x1
 3148 01e4 50       		.byte	0x50
 3149 01e5 00000000 		.4byte	0
 3150 01e9 00000000 		.4byte	0
 3151              	.LLST16:
 3152 01ed 00000000 		.4byte	.LVL36
 3153 01f1 07000000 		.4byte	.LVL37-1
 3154 01f5 0100     		.2byte	0x1
 3155 01f7 50       		.byte	0x50
 3156 01f8 07000000 		.4byte	.LVL37-1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 85


 3157 01fc 16000000 		.4byte	.LVL38
 3158 0200 0100     		.2byte	0x1
 3159 0202 54       		.byte	0x54
 3160 0203 16000000 		.4byte	.LVL38
 3161 0207 28000000 		.4byte	.LFE12
 3162 020b 0400     		.2byte	0x4
 3163 020d F3       		.byte	0xf3
 3164 020e 01       		.uleb128 0x1
 3165 020f 50       		.byte	0x50
 3166 0210 9F       		.byte	0x9f
 3167 0211 00000000 		.4byte	0
 3168 0215 00000000 		.4byte	0
 3169              	.LLST17:
 3170 0219 08000000 		.4byte	.LVL37
 3171 021d 1B000000 		.4byte	.LVL39-1
 3172 0221 0100     		.2byte	0x1
 3173 0223 50       		.byte	0x50
 3174 0224 00000000 		.4byte	0
 3175 0228 00000000 		.4byte	0
 3176              	.LLST18:
 3177 022c 00000000 		.4byte	.LVL40
 3178 0230 04000000 		.4byte	.LVL41
 3179 0234 0100     		.2byte	0x1
 3180 0236 50       		.byte	0x50
 3181 0237 04000000 		.4byte	.LVL41
 3182 023b 0C000000 		.4byte	.LFE13
 3183 023f 0400     		.2byte	0x4
 3184 0241 F3       		.byte	0xf3
 3185 0242 01       		.uleb128 0x1
 3186 0243 50       		.byte	0x50
 3187 0244 9F       		.byte	0x9f
 3188 0245 00000000 		.4byte	0
 3189 0249 00000000 		.4byte	0
 3190              	.LLST19:
 3191 024d 00000000 		.4byte	.LVL42
 3192 0251 07000000 		.4byte	.LVL43-1
 3193 0255 0100     		.2byte	0x1
 3194 0257 50       		.byte	0x50
 3195 0258 07000000 		.4byte	.LVL43-1
 3196 025c 16000000 		.4byte	.LVL44
 3197 0260 0100     		.2byte	0x1
 3198 0262 54       		.byte	0x54
 3199 0263 16000000 		.4byte	.LVL44
 3200 0267 28000000 		.4byte	.LFE15
 3201 026b 0400     		.2byte	0x4
 3202 026d F3       		.byte	0xf3
 3203 026e 01       		.uleb128 0x1
 3204 026f 50       		.byte	0x50
 3205 0270 9F       		.byte	0x9f
 3206 0271 00000000 		.4byte	0
 3207 0275 00000000 		.4byte	0
 3208              	.LLST20:
 3209 0279 08000000 		.4byte	.LVL43
 3210 027d 1B000000 		.4byte	.LVL45-1
 3211 0281 0100     		.2byte	0x1
 3212 0283 50       		.byte	0x50
 3213 0284 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 86


 3214 0288 00000000 		.4byte	0
 3215              	.LLST21:
 3216 028c 00000000 		.4byte	.LVL46
 3217 0290 04000000 		.4byte	.LVL47
 3218 0294 0100     		.2byte	0x1
 3219 0296 50       		.byte	0x50
 3220 0297 04000000 		.4byte	.LVL47
 3221 029b 0C000000 		.4byte	.LFE16
 3222 029f 0400     		.2byte	0x4
 3223 02a1 F3       		.byte	0xf3
 3224 02a2 01       		.uleb128 0x1
 3225 02a3 50       		.byte	0x50
 3226 02a4 9F       		.byte	0x9f
 3227 02a5 00000000 		.4byte	0
 3228 02a9 00000000 		.4byte	0
 3229              	.LLST22:
 3230 02ad 00000000 		.4byte	.LVL48
 3231 02b1 07000000 		.4byte	.LVL49-1
 3232 02b5 0100     		.2byte	0x1
 3233 02b7 50       		.byte	0x50
 3234 02b8 07000000 		.4byte	.LVL49-1
 3235 02bc 1E000000 		.4byte	.LVL51
 3236 02c0 0100     		.2byte	0x1
 3237 02c2 54       		.byte	0x54
 3238 02c3 1E000000 		.4byte	.LVL51
 3239 02c7 24000000 		.4byte	.LFE18
 3240 02cb 0400     		.2byte	0x4
 3241 02cd F3       		.byte	0xf3
 3242 02ce 01       		.uleb128 0x1
 3243 02cf 50       		.byte	0x50
 3244 02d0 9F       		.byte	0x9f
 3245 02d1 00000000 		.4byte	0
 3246 02d5 00000000 		.4byte	0
 3247              	.LLST23:
 3248 02d9 08000000 		.4byte	.LVL49
 3249 02dd 1D000000 		.4byte	.LVL50-1
 3250 02e1 0100     		.2byte	0x1
 3251 02e3 50       		.byte	0x50
 3252 02e4 00000000 		.4byte	0
 3253 02e8 00000000 		.4byte	0
 3254              	.LLST24:
 3255 02ec 00000000 		.4byte	.LVL52
 3256 02f0 04000000 		.4byte	.LVL53
 3257 02f4 0100     		.2byte	0x1
 3258 02f6 50       		.byte	0x50
 3259 02f7 04000000 		.4byte	.LVL53
 3260 02fb 0C000000 		.4byte	.LFE19
 3261 02ff 0400     		.2byte	0x4
 3262 0301 F3       		.byte	0xf3
 3263 0302 01       		.uleb128 0x1
 3264 0303 50       		.byte	0x50
 3265 0304 9F       		.byte	0x9f
 3266 0305 00000000 		.4byte	0
 3267 0309 00000000 		.4byte	0
 3268              	.LLST25:
 3269 030d 00000000 		.4byte	.LVL54
 3270 0311 07000000 		.4byte	.LVL55-1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 87


 3271 0315 0100     		.2byte	0x1
 3272 0317 50       		.byte	0x50
 3273 0318 07000000 		.4byte	.LVL55-1
 3274 031c 18000000 		.4byte	.LVL56
 3275 0320 0100     		.2byte	0x1
 3276 0322 54       		.byte	0x54
 3277 0323 18000000 		.4byte	.LVL56
 3278 0327 28000000 		.4byte	.LFE21
 3279 032b 0400     		.2byte	0x4
 3280 032d F3       		.byte	0xf3
 3281 032e 01       		.uleb128 0x1
 3282 032f 50       		.byte	0x50
 3283 0330 9F       		.byte	0x9f
 3284 0331 00000000 		.4byte	0
 3285 0335 00000000 		.4byte	0
 3286              	.LLST26:
 3287 0339 08000000 		.4byte	.LVL55
 3288 033d 21000000 		.4byte	.LVL57-1
 3289 0341 0100     		.2byte	0x1
 3290 0343 50       		.byte	0x50
 3291 0344 00000000 		.4byte	0
 3292 0348 00000000 		.4byte	0
 3293              	.LLST27:
 3294 034c 00000000 		.4byte	.LVL58
 3295 0350 04000000 		.4byte	.LVL59
 3296 0354 0100     		.2byte	0x1
 3297 0356 50       		.byte	0x50
 3298 0357 04000000 		.4byte	.LVL59
 3299 035b 0C000000 		.4byte	.LFE22
 3300 035f 0400     		.2byte	0x4
 3301 0361 F3       		.byte	0xf3
 3302 0362 01       		.uleb128 0x1
 3303 0363 50       		.byte	0x50
 3304 0364 9F       		.byte	0x9f
 3305 0365 00000000 		.4byte	0
 3306 0369 00000000 		.4byte	0
 3307              	.LLST28:
 3308 036d 00000000 		.4byte	.LVL60
 3309 0371 04000000 		.4byte	.LVL61
 3310 0375 0100     		.2byte	0x1
 3311 0377 50       		.byte	0x50
 3312 0378 04000000 		.4byte	.LVL61
 3313 037c 0C000000 		.4byte	.LFE24
 3314 0380 0400     		.2byte	0x4
 3315 0382 F3       		.byte	0xf3
 3316 0383 01       		.uleb128 0x1
 3317 0384 50       		.byte	0x50
 3318 0385 9F       		.byte	0x9f
 3319 0386 00000000 		.4byte	0
 3320 038a 00000000 		.4byte	0
 3321              	.LLST29:
 3322 038e 00000000 		.4byte	.LVL62
 3323 0392 07000000 		.4byte	.LVL63-1
 3324 0396 0100     		.2byte	0x1
 3325 0398 50       		.byte	0x50
 3326 0399 07000000 		.4byte	.LVL63-1
 3327 039d 16000000 		.4byte	.LVL64
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 88


 3328 03a1 0100     		.2byte	0x1
 3329 03a3 54       		.byte	0x54
 3330 03a4 16000000 		.4byte	.LVL64
 3331 03a8 24000000 		.4byte	.LFE28
 3332 03ac 0400     		.2byte	0x4
 3333 03ae F3       		.byte	0xf3
 3334 03af 01       		.uleb128 0x1
 3335 03b0 50       		.byte	0x50
 3336 03b1 9F       		.byte	0x9f
 3337 03b2 00000000 		.4byte	0
 3338 03b6 00000000 		.4byte	0
 3339              	.LLST30:
 3340 03ba 08000000 		.4byte	.LVL63
 3341 03be 1B000000 		.4byte	.LVL65-1
 3342 03c2 0100     		.2byte	0x1
 3343 03c4 50       		.byte	0x50
 3344 03c5 00000000 		.4byte	0
 3345 03c9 00000000 		.4byte	0
 3346              	.LLST31:
 3347 03cd 00000000 		.4byte	.LVL66
 3348 03d1 07000000 		.4byte	.LVL67-1
 3349 03d5 0100     		.2byte	0x1
 3350 03d7 50       		.byte	0x50
 3351 03d8 07000000 		.4byte	.LVL67-1
 3352 03dc 10000000 		.4byte	.LVL68
 3353 03e0 0100     		.2byte	0x1
 3354 03e2 54       		.byte	0x54
 3355 03e3 10000000 		.4byte	.LVL68
 3356 03e7 24000000 		.4byte	.LFE29
 3357 03eb 0400     		.2byte	0x4
 3358 03ed F3       		.byte	0xf3
 3359 03ee 01       		.uleb128 0x1
 3360 03ef 50       		.byte	0x50
 3361 03f0 9F       		.byte	0x9f
 3362 03f1 00000000 		.4byte	0
 3363 03f5 00000000 		.4byte	0
 3364              	.LLST32:
 3365 03f9 08000000 		.4byte	.LVL67
 3366 03fd 1D000000 		.4byte	.LVL69-1
 3367 0401 0100     		.2byte	0x1
 3368 0403 50       		.byte	0x50
 3369 0404 00000000 		.4byte	0
 3370 0408 00000000 		.4byte	0
 3371              	.LLST33:
 3372 040c 00000000 		.4byte	.LVL70
 3373 0410 07000000 		.4byte	.LVL71-1
 3374 0414 0100     		.2byte	0x1
 3375 0416 50       		.byte	0x50
 3376 0417 07000000 		.4byte	.LVL71-1
 3377 041b 10000000 		.4byte	.LVL72
 3378 041f 0100     		.2byte	0x1
 3379 0421 54       		.byte	0x54
 3380 0422 10000000 		.4byte	.LVL72
 3381 0426 28000000 		.4byte	.LFE30
 3382 042a 0400     		.2byte	0x4
 3383 042c F3       		.byte	0xf3
 3384 042d 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 89


 3385 042e 50       		.byte	0x50
 3386 042f 9F       		.byte	0x9f
 3387 0430 00000000 		.4byte	0
 3388 0434 00000000 		.4byte	0
 3389              	.LLST34:
 3390 0438 08000000 		.4byte	.LVL71
 3391 043c 1D000000 		.4byte	.LVL73-1
 3392 0440 0100     		.2byte	0x1
 3393 0442 50       		.byte	0x50
 3394 0443 00000000 		.4byte	0
 3395 0447 00000000 		.4byte	0
 3396              	.LLST35:
 3397 044b 00000000 		.4byte	.LVL74
 3398 044f 07000000 		.4byte	.LVL75-1
 3399 0453 0100     		.2byte	0x1
 3400 0455 50       		.byte	0x50
 3401 0456 07000000 		.4byte	.LVL75-1
 3402 045a 10000000 		.4byte	.LVL76
 3403 045e 0100     		.2byte	0x1
 3404 0460 54       		.byte	0x54
 3405 0461 10000000 		.4byte	.LVL76
 3406 0465 24000000 		.4byte	.LFE31
 3407 0469 0400     		.2byte	0x4
 3408 046b F3       		.byte	0xf3
 3409 046c 01       		.uleb128 0x1
 3410 046d 50       		.byte	0x50
 3411 046e 9F       		.byte	0x9f
 3412 046f 00000000 		.4byte	0
 3413 0473 00000000 		.4byte	0
 3414              	.LLST36:
 3415 0477 08000000 		.4byte	.LVL75
 3416 047b 1D000000 		.4byte	.LVL77-1
 3417 047f 0100     		.2byte	0x1
 3418 0481 50       		.byte	0x50
 3419 0482 00000000 		.4byte	0
 3420 0486 00000000 		.4byte	0
 3421              	.LLST37:
 3422 048a 00000000 		.4byte	.LVL78
 3423 048e 07000000 		.4byte	.LVL79-1
 3424 0492 0100     		.2byte	0x1
 3425 0494 50       		.byte	0x50
 3426 0495 07000000 		.4byte	.LVL79-1
 3427 0499 10000000 		.4byte	.LVL80
 3428 049d 0100     		.2byte	0x1
 3429 049f 54       		.byte	0x54
 3430 04a0 10000000 		.4byte	.LVL80
 3431 04a4 24000000 		.4byte	.LFE32
 3432 04a8 0400     		.2byte	0x4
 3433 04aa F3       		.byte	0xf3
 3434 04ab 01       		.uleb128 0x1
 3435 04ac 50       		.byte	0x50
 3436 04ad 9F       		.byte	0x9f
 3437 04ae 00000000 		.4byte	0
 3438 04b2 00000000 		.4byte	0
 3439              	.LLST38:
 3440 04b6 08000000 		.4byte	.LVL79
 3441 04ba 1D000000 		.4byte	.LVL81-1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 90


 3442 04be 0100     		.2byte	0x1
 3443 04c0 50       		.byte	0x50
 3444 04c1 00000000 		.4byte	0
 3445 04c5 00000000 		.4byte	0
 3446              	.LLST39:
 3447 04c9 00000000 		.4byte	.LVL82
 3448 04cd 09000000 		.4byte	.LVL83-1
 3449 04d1 0100     		.2byte	0x1
 3450 04d3 50       		.byte	0x50
 3451 04d4 09000000 		.4byte	.LVL83-1
 3452 04d8 0E000000 		.4byte	.LVL84
 3453 04dc 0100     		.2byte	0x1
 3454 04de 55       		.byte	0x55
 3455 04df 0E000000 		.4byte	.LVL84
 3456 04e3 1C000000 		.4byte	.LFE33
 3457 04e7 0400     		.2byte	0x4
 3458 04e9 F3       		.byte	0xf3
 3459 04ea 01       		.uleb128 0x1
 3460 04eb 50       		.byte	0x50
 3461 04ec 9F       		.byte	0x9f
 3462 04ed 00000000 		.4byte	0
 3463 04f1 00000000 		.4byte	0
 3464              	.LLST40:
 3465 04f5 00000000 		.4byte	.LVL82
 3466 04f9 09000000 		.4byte	.LVL83-1
 3467 04fd 0100     		.2byte	0x1
 3468 04ff 51       		.byte	0x51
 3469 0500 09000000 		.4byte	.LVL83-1
 3470 0504 14000000 		.4byte	.LVL86
 3471 0508 0100     		.2byte	0x1
 3472 050a 54       		.byte	0x54
 3473 050b 14000000 		.4byte	.LVL86
 3474 050f 1C000000 		.4byte	.LFE33
 3475 0513 0400     		.2byte	0x4
 3476 0515 F3       		.byte	0xf3
 3477 0516 01       		.uleb128 0x1
 3478 0517 51       		.byte	0x51
 3479 0518 9F       		.byte	0x9f
 3480 0519 00000000 		.4byte	0
 3481 051d 00000000 		.4byte	0
 3482              	.LLST41:
 3483 0521 0A000000 		.4byte	.LVL83
 3484 0525 13000000 		.4byte	.LVL85-1
 3485 0529 0100     		.2byte	0x1
 3486 052b 50       		.byte	0x50
 3487 052c 00000000 		.4byte	0
 3488 0530 00000000 		.4byte	0
 3489              	.LLST42:
 3490 0534 06000000 		.4byte	.LVL87
 3491 0538 13000000 		.4byte	.LVL88-1
 3492 053c 0100     		.2byte	0x1
 3493 053e 50       		.byte	0x50
 3494 053f 00000000 		.4byte	0
 3495 0543 00000000 		.4byte	0
 3496              		.section	.debug_aranges,"",%progbits
 3497 0000 54010000 		.4byte	0x154
 3498 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 91


 3499 0006 00000000 		.4byte	.Ldebug_info0
 3500 000a 04       		.byte	0x4
 3501 000b 00       		.byte	0
 3502 000c 0000     		.2byte	0
 3503 000e 0000     		.2byte	0
 3504 0010 00000000 		.4byte	.LFB0
 3505 0014 40000000 		.4byte	.LFE0-.LFB0
 3506 0018 00000000 		.4byte	.LFB3
 3507 001c 1C000000 		.4byte	.LFE3-.LFB3
 3508 0020 00000000 		.4byte	.LFB4
 3509 0024 28000000 		.4byte	.LFE4-.LFB4
 3510 0028 00000000 		.4byte	.LFB5
 3511 002c 28000000 		.4byte	.LFE5-.LFB5
 3512 0030 00000000 		.4byte	.LFB6
 3513 0034 28000000 		.4byte	.LFE6-.LFB6
 3514 0038 00000000 		.4byte	.LFB7
 3515 003c 2C000000 		.4byte	.LFE7-.LFB7
 3516 0040 00000000 		.4byte	.LFB8
 3517 0044 10000000 		.4byte	.LFE8-.LFB8
 3518 0048 00000000 		.4byte	.LFB9
 3519 004c 28000000 		.4byte	.LFE9-.LFB9
 3520 0050 00000000 		.4byte	.LFB10
 3521 0054 28000000 		.4byte	.LFE10-.LFB10
 3522 0058 00000000 		.4byte	.LFB11
 3523 005c 2C000000 		.4byte	.LFE11-.LFB11
 3524 0060 00000000 		.4byte	.LFB12
 3525 0064 28000000 		.4byte	.LFE12-.LFB12
 3526 0068 00000000 		.4byte	.LFB13
 3527 006c 0C000000 		.4byte	.LFE13-.LFB13
 3528 0070 00000000 		.4byte	.LFB14
 3529 0074 0C000000 		.4byte	.LFE14-.LFB14
 3530 0078 00000000 		.4byte	.LFB15
 3531 007c 28000000 		.4byte	.LFE15-.LFB15
 3532 0080 00000000 		.4byte	.LFB16
 3533 0084 0C000000 		.4byte	.LFE16-.LFB16
 3534 0088 00000000 		.4byte	.LFB17
 3535 008c 0C000000 		.4byte	.LFE17-.LFB17
 3536 0090 00000000 		.4byte	.LFB18
 3537 0094 24000000 		.4byte	.LFE18-.LFB18
 3538 0098 00000000 		.4byte	.LFB19
 3539 009c 0C000000 		.4byte	.LFE19-.LFB19
 3540 00a0 00000000 		.4byte	.LFB20
 3541 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3542 00a8 00000000 		.4byte	.LFB21
 3543 00ac 28000000 		.4byte	.LFE21-.LFB21
 3544 00b0 00000000 		.4byte	.LFB22
 3545 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3546 00b8 00000000 		.4byte	.LFB23
 3547 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3548 00c0 00000000 		.4byte	.LFB24
 3549 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3550 00c8 00000000 		.4byte	.LFB25
 3551 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3552 00d0 00000000 		.4byte	.LFB26
 3553 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3554 00d8 00000000 		.4byte	.LFB27
 3555 00dc 0C000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 92


 3556 00e0 00000000 		.4byte	.LFB28
 3557 00e4 24000000 		.4byte	.LFE28-.LFB28
 3558 00e8 00000000 		.4byte	.LFB29
 3559 00ec 24000000 		.4byte	.LFE29-.LFB29
 3560 00f0 00000000 		.4byte	.LFB30
 3561 00f4 28000000 		.4byte	.LFE30-.LFB30
 3562 00f8 00000000 		.4byte	.LFB31
 3563 00fc 24000000 		.4byte	.LFE31-.LFB31
 3564 0100 00000000 		.4byte	.LFB32
 3565 0104 24000000 		.4byte	.LFE32-.LFB32
 3566 0108 00000000 		.4byte	.LFB33
 3567 010c 1C000000 		.4byte	.LFE33-.LFB33
 3568 0110 00000000 		.4byte	.LFB1
 3569 0114 24000000 		.4byte	.LFE1-.LFB1
 3570 0118 00000000 		.4byte	.LFB2
 3571 011c 1C000000 		.4byte	.LFE2-.LFB2
 3572 0120 00000000 		.4byte	.LFB34
 3573 0124 14000000 		.4byte	.LFE34-.LFB34
 3574 0128 00000000 		.4byte	.LFB35
 3575 012c 0C000000 		.4byte	.LFE35-.LFB35
 3576 0130 00000000 		.4byte	.LFB36
 3577 0134 0C000000 		.4byte	.LFE36-.LFB36
 3578 0138 00000000 		.4byte	.LFB37
 3579 013c 0C000000 		.4byte	.LFE37-.LFB37
 3580 0140 00000000 		.4byte	.LFB38
 3581 0144 0C000000 		.4byte	.LFE38-.LFB38
 3582 0148 00000000 		.4byte	.LFB39
 3583 014c 0C000000 		.4byte	.LFE39-.LFB39
 3584 0150 00000000 		.4byte	0
 3585 0154 00000000 		.4byte	0
 3586              		.section	.debug_ranges,"",%progbits
 3587              	.Ldebug_ranges0:
 3588 0000 12000000 		.4byte	.LBB12
 3589 0004 16000000 		.4byte	.LBE12
 3590 0008 16000000 		.4byte	.LBB15
 3591 000c 18000000 		.4byte	.LBE15
 3592 0010 00000000 		.4byte	0
 3593 0014 00000000 		.4byte	0
 3594 0018 00000000 		.4byte	.LFB0
 3595 001c 40000000 		.4byte	.LFE0
 3596 0020 00000000 		.4byte	.LFB3
 3597 0024 1C000000 		.4byte	.LFE3
 3598 0028 00000000 		.4byte	.LFB4
 3599 002c 28000000 		.4byte	.LFE4
 3600 0030 00000000 		.4byte	.LFB5
 3601 0034 28000000 		.4byte	.LFE5
 3602 0038 00000000 		.4byte	.LFB6
 3603 003c 28000000 		.4byte	.LFE6
 3604 0040 00000000 		.4byte	.LFB7
 3605 0044 2C000000 		.4byte	.LFE7
 3606 0048 00000000 		.4byte	.LFB8
 3607 004c 10000000 		.4byte	.LFE8
 3608 0050 00000000 		.4byte	.LFB9
 3609 0054 28000000 		.4byte	.LFE9
 3610 0058 00000000 		.4byte	.LFB10
 3611 005c 28000000 		.4byte	.LFE10
 3612 0060 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 93


 3613 0064 2C000000 		.4byte	.LFE11
 3614 0068 00000000 		.4byte	.LFB12
 3615 006c 28000000 		.4byte	.LFE12
 3616 0070 00000000 		.4byte	.LFB13
 3617 0074 0C000000 		.4byte	.LFE13
 3618 0078 00000000 		.4byte	.LFB14
 3619 007c 0C000000 		.4byte	.LFE14
 3620 0080 00000000 		.4byte	.LFB15
 3621 0084 28000000 		.4byte	.LFE15
 3622 0088 00000000 		.4byte	.LFB16
 3623 008c 0C000000 		.4byte	.LFE16
 3624 0090 00000000 		.4byte	.LFB17
 3625 0094 0C000000 		.4byte	.LFE17
 3626 0098 00000000 		.4byte	.LFB18
 3627 009c 24000000 		.4byte	.LFE18
 3628 00a0 00000000 		.4byte	.LFB19
 3629 00a4 0C000000 		.4byte	.LFE19
 3630 00a8 00000000 		.4byte	.LFB20
 3631 00ac 0C000000 		.4byte	.LFE20
 3632 00b0 00000000 		.4byte	.LFB21
 3633 00b4 28000000 		.4byte	.LFE21
 3634 00b8 00000000 		.4byte	.LFB22
 3635 00bc 0C000000 		.4byte	.LFE22
 3636 00c0 00000000 		.4byte	.LFB23
 3637 00c4 0C000000 		.4byte	.LFE23
 3638 00c8 00000000 		.4byte	.LFB24
 3639 00cc 0C000000 		.4byte	.LFE24
 3640 00d0 00000000 		.4byte	.LFB25
 3641 00d4 0C000000 		.4byte	.LFE25
 3642 00d8 00000000 		.4byte	.LFB26
 3643 00dc 0C000000 		.4byte	.LFE26
 3644 00e0 00000000 		.4byte	.LFB27
 3645 00e4 0C000000 		.4byte	.LFE27
 3646 00e8 00000000 		.4byte	.LFB28
 3647 00ec 24000000 		.4byte	.LFE28
 3648 00f0 00000000 		.4byte	.LFB29
 3649 00f4 24000000 		.4byte	.LFE29
 3650 00f8 00000000 		.4byte	.LFB30
 3651 00fc 28000000 		.4byte	.LFE30
 3652 0100 00000000 		.4byte	.LFB31
 3653 0104 24000000 		.4byte	.LFE31
 3654 0108 00000000 		.4byte	.LFB32
 3655 010c 24000000 		.4byte	.LFE32
 3656 0110 00000000 		.4byte	.LFB33
 3657 0114 1C000000 		.4byte	.LFE33
 3658 0118 00000000 		.4byte	.LFB1
 3659 011c 24000000 		.4byte	.LFE1
 3660 0120 00000000 		.4byte	.LFB2
 3661 0124 1C000000 		.4byte	.LFE2
 3662 0128 00000000 		.4byte	.LFB34
 3663 012c 14000000 		.4byte	.LFE34
 3664 0130 00000000 		.4byte	.LFB35
 3665 0134 0C000000 		.4byte	.LFE35
 3666 0138 00000000 		.4byte	.LFB36
 3667 013c 0C000000 		.4byte	.LFE36
 3668 0140 00000000 		.4byte	.LFB37
 3669 0144 0C000000 		.4byte	.LFE37
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 94


 3670 0148 00000000 		.4byte	.LFB38
 3671 014c 0C000000 		.4byte	.LFE38
 3672 0150 00000000 		.4byte	.LFB39
 3673 0154 0C000000 		.4byte	.LFE39
 3674 0158 00000000 		.4byte	0
 3675 015c 00000000 		.4byte	0
 3676              		.section	.debug_line,"",%progbits
 3677              	.Ldebug_line0:
 3678 0000 EA030000 		.section	.debug_str,"MS",%progbits,1
 3678      02005400 
 3678      00000201 
 3678      FB0E0D00 
 3678      01010101 
 3679              	.LASF66:
 3680 0000 53657276 		.ascii	"ServoTimer_SetCountMode\000"
 3680      6F54696D 
 3680      65725F53 
 3680      6574436F 
 3680      756E744D 
 3681              	.LASF23:
 3682 0018 636F756E 		.ascii	"count\000"
 3682      7400
 3683              	.LASF77:
 3684 001e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ServoTimer.c\000"
 3684      6E657261 
 3684      7465645F 
 3684      536F7572 
 3684      63655C50 
 3685              	.LASF81:
 3686 0044 43794578 		.ascii	"CyExitCriticalSection\000"
 3686      69744372 
 3686      69746963 
 3686      616C5365 
 3686      6374696F 
 3687              	.LASF26:
 3688 005a 53657276 		.ascii	"ServoTimer_SetMode\000"
 3688      6F54696D 
 3688      65725F53 
 3688      65744D6F 
 3688      646500
 3689              	.LASF63:
 3690 006d 53657276 		.ascii	"ServoTimer_SetReloadMode\000"
 3690      6F54696D 
 3690      65725F53 
 3690      65745265 
 3690      6C6F6164 
 3691              	.LASF17:
 3692 0086 53657276 		.ascii	"ServoTimer_WritePeriod\000"
 3692      6F54696D 
 3692      65725F57 
 3692      72697465 
 3692      50657269 
 3693              	.LASF79:
 3694 009d 53657276 		.ascii	"ServoTimer_initVar\000"
 3694      6F54696D 
 3694      65725F69 
 3694      6E697456 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 95


 3694      617200
 3695              	.LASF19:
 3696 00b0 70657269 		.ascii	"period\000"
 3696      6F6400
 3697              	.LASF7:
 3698 00b7 6C6F6E67 		.ascii	"long long unsigned int\000"
 3698      206C6F6E 
 3698      6720756E 
 3698      7369676E 
 3698      65642069 
 3699              	.LASF67:
 3700 00ce 53657276 		.ascii	"ServoTimer_TriggerCommand\000"
 3700      6F54696D 
 3700      65725F54 
 3700      72696767 
 3700      6572436F 
 3701              	.LASF25:
 3702 00e8 53657276 		.ascii	"ServoTimer_Stop\000"
 3702      6F54696D 
 3702      65725F53 
 3702      746F7000 
 3703              	.LASF30:
 3704 00f8 71644D6F 		.ascii	"qdMode\000"
 3704      646500
 3705              	.LASF6:
 3706 00ff 6C6F6E67 		.ascii	"long long int\000"
 3706      206C6F6E 
 3706      6720696E 
 3706      7400
 3707              	.LASF0:
 3708 010d 7369676E 		.ascii	"signed char\000"
 3708      65642063 
 3708      68617200 
 3709              	.LASF78:
 3710 0119 433A5C55 		.ascii	"C:\\Users\\SNFU\\Documents\\T-50_UAV_Project\\Softw"
 3710      73657273 
 3710      5C534E46 
 3710      555C446F 
 3710      63756D65 
 3711 0147 6172655C 		.ascii	"are\\T-50_Project\\T-50_Project.cydsn\000"
 3711      542D3530 
 3711      5F50726F 
 3711      6A656374 
 3711      5C542D35 
 3712              	.LASF20:
 3713 016b 53657276 		.ascii	"ServoTimer_WriteCompare\000"
 3713      6F54696D 
 3713      65725F57 
 3713      72697465 
 3713      436F6D70 
 3714              	.LASF4:
 3715 0183 6C6F6E67 		.ascii	"long int\000"
 3715      20696E74 
 3715      00
 3716              	.LASF59:
 3717 018c 53657276 		.ascii	"ServoTimer_ReadCapture\000"
 3717      6F54696D 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 96


 3717      65725F52 
 3717      65616443 
 3717      61707475 
 3718              	.LASF9:
 3719 01a3 75696E74 		.ascii	"uint8\000"
 3719      3800
 3720              	.LASF28:
 3721 01a9 53657276 		.ascii	"ServoTimer_SetQDMode\000"
 3721      6F54696D 
 3721      65725F53 
 3721      65745144 
 3721      4D6F6465 
 3722              	.LASF12:
 3723 01be 646F7562 		.ascii	"double\000"
 3723      6C6500
 3724              	.LASF10:
 3725 01c5 75696E74 		.ascii	"uint32\000"
 3725      333200
 3726              	.LASF33:
 3727 01cc 53657276 		.ascii	"ServoTimer_SetOneShot\000"
 3727      6F54696D 
 3727      65725F53 
 3727      65744F6E 
 3727      6553686F 
 3728              	.LASF72:
 3729 01e2 53657276 		.ascii	"ServoTimer_GetInterruptSourceMasked\000"
 3729      6F54696D 
 3729      65725F47 
 3729      6574496E 
 3729      74657272 
 3730              	.LASF62:
 3731 0206 74726967 		.ascii	"triggerMode\000"
 3731      6765724D 
 3731      6F646500 
 3732              	.LASF44:
 3733 0212 6D61736B 		.ascii	"mask\000"
 3733      00
 3734              	.LASF42:
 3735 0217 64656164 		.ascii	"deadTime\000"
 3735      54696D65 
 3735      00
 3736              	.LASF71:
 3737 0220 53657276 		.ascii	"ServoTimer_ReadStatus\000"
 3737      6F54696D 
 3737      65725F52 
 3737      65616453 
 3737      74617475 
 3738              	.LASF8:
 3739 0236 756E7369 		.ascii	"unsigned int\000"
 3739      676E6564 
 3739      20696E74 
 3739      00
 3740              	.LASF45:
 3741 0243 53657276 		.ascii	"ServoTimer_SetCounterMode\000"
 3741      6F54696D 
 3741      65725F53 
 3741      6574436F 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 97


 3741      756E7465 
 3742              	.LASF69:
 3743 025d 53657276 		.ascii	"ServoTimer_Enable\000"
 3743      6F54696D 
 3743      65725F45 
 3743      6E61626C 
 3743      6500
 3744              	.LASF73:
 3745 026f 53657276 		.ascii	"ServoTimer_GetInterruptSource\000"
 3745      6F54696D 
 3745      65725F47 
 3745      6574496E 
 3745      74657272 
 3746              	.LASF68:
 3747 028d 636F6D6D 		.ascii	"command\000"
 3747      616E6400 
 3748              	.LASF5:
 3749 0295 6C6F6E67 		.ascii	"long unsigned int\000"
 3749      20756E73 
 3749      69676E65 
 3749      6420696E 
 3749      7400
 3750              	.LASF36:
 3751 02a7 6D6F6465 		.ascii	"modeMask\000"
 3751      4D61736B 
 3751      00
 3752              	.LASF43:
 3753 02b0 53657276 		.ascii	"ServoTimer_SetPWMInvert\000"
 3753      6F54696D 
 3753      65725F53 
 3753      65745057 
 3753      4D496E76 
 3754              	.LASF80:
 3755 02c8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3755      74657243 
 3755      72697469 
 3755      63616C53 
 3755      65637469 
 3756              	.LASF64:
 3757 02df 53657276 		.ascii	"ServoTimer_SetStartMode\000"
 3757      6F54696D 
 3757      65725F53 
 3757      65745374 
 3757      6172744D 
 3758              	.LASF56:
 3759 02f7 53657276 		.ascii	"ServoTimer_WriteCompareBuf\000"
 3759      6F54696D 
 3759      65725F57 
 3759      72697465 
 3759      436F6D70 
 3760              	.LASF3:
 3761 0312 73686F72 		.ascii	"short unsigned int\000"
 3761      7420756E 
 3761      7369676E 
 3761      65642069 
 3761      6E7400
 3762              	.LASF51:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 98


 3763 0325 53657276 		.ascii	"ServoTimer_WritePeriodBuf\000"
 3763      6F54696D 
 3763      65725F57 
 3763      72697465 
 3763      50657269 
 3764              	.LASF34:
 3765 033f 6F6E6553 		.ascii	"oneShotEnable\000"
 3765      686F7445 
 3765      6E61626C 
 3765      6500
 3766              	.LASF70:
 3767 034d 53657276 		.ascii	"ServoTimer_Start\000"
 3767      6F54696D 
 3767      65725F53 
 3767      74617274 
 3767      00
 3768              	.LASF61:
 3769 035e 53657276 		.ascii	"ServoTimer_SetCaptureMode\000"
 3769      6F54696D 
 3769      65725F53 
 3769      65744361 
 3769      70747572 
 3770              	.LASF14:
 3771 0378 72656733 		.ascii	"reg32\000"
 3771      3200
 3772              	.LASF60:
 3773 037e 53657276 		.ascii	"ServoTimer_ReadCaptureBuf\000"
 3773      6F54696D 
 3773      65725F52 
 3773      65616443 
 3773      61707475 
 3774              	.LASF15:
 3775 0398 73697A65 		.ascii	"sizetype\000"
 3775      74797065 
 3775      00
 3776              	.LASF24:
 3777 03a1 53657276 		.ascii	"ServoTimer_Init\000"
 3777      6F54696D 
 3777      65725F49 
 3777      6E697400 
 3778              	.LASF38:
 3779 03b1 73796E63 		.ascii	"syncKillEnable\000"
 3779      4B696C6C 
 3779      456E6162 
 3779      6C6500
 3780              	.LASF39:
 3781 03c0 53657276 		.ascii	"ServoTimer_SetPWMStopOnKill\000"
 3781      6F54696D 
 3781      65725F53 
 3781      65745057 
 3781      4D53746F 
 3782              	.LASF48:
 3783 03dc 53657276 		.ascii	"ServoTimer_ReadPeriod\000"
 3783      6F54696D 
 3783      65725F52 
 3783      65616450 
 3783      6572696F 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 99


 3784              	.LASF31:
 3785 03f2 53657276 		.ascii	"ServoTimer_SetPrescaler\000"
 3785      6F54696D 
 3785      65725F53 
 3785      65745072 
 3785      65736361 
 3786              	.LASF21:
 3787 040a 636F6D70 		.ascii	"compare\000"
 3787      61726500 
 3788              	.LASF55:
 3789 0412 53657276 		.ascii	"ServoTimer_ReadCompare\000"
 3789      6F54696D 
 3789      65725F52 
 3789      65616443 
 3789      6F6D7061 
 3790              	.LASF11:
 3791 0429 666C6F61 		.ascii	"float\000"
 3791      7400
 3792              	.LASF32:
 3793 042f 70726573 		.ascii	"prescaler\000"
 3793      63616C65 
 3793      7200
 3794              	.LASF76:
 3795 0439 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 3795      4320342E 
 3795      382E3420 
 3795      32303134 
 3795      30353236 
 3796 046c 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 3796      20726576 
 3796      6973696F 
 3796      6E203231 
 3796      31333538 
 3797 049f 73202D66 		.ascii	"s -ffunction-sections -finline-functions\000"
 3797      66756E63 
 3797      74696F6E 
 3797      2D736563 
 3797      74696F6E 
 3798              	.LASF1:
 3799 04c8 756E7369 		.ascii	"unsigned char\000"
 3799      676E6564 
 3799      20636861 
 3799      7200
 3800              	.LASF40:
 3801 04d6 73746F70 		.ascii	"stopOnKillEnable\000"
 3801      4F6E4B69 
 3801      6C6C456E 
 3801      61626C65 
 3801      00
 3802              	.LASF2:
 3803 04e7 73686F72 		.ascii	"short int\000"
 3803      7420696E 
 3803      7400
 3804              	.LASF37:
 3805 04f1 53657276 		.ascii	"ServoTimer_SetPWMSyncKill\000"
 3805      6F54696D 
 3805      65725F53 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 100


 3805      65745057 
 3805      4D53796E 
 3806              	.LASF35:
 3807 050b 53657276 		.ascii	"ServoTimer_SetPWMMode\000"
 3807      6F54696D 
 3807      65725F53 
 3807      65745057 
 3807      4D4D6F64 
 3808              	.LASF18:
 3809 0521 696E7465 		.ascii	"interruptMask\000"
 3809      72727570 
 3809      744D6173 
 3809      6B00
 3810              	.LASF47:
 3811 052f 53657276 		.ascii	"ServoTimer_ReadCounter\000"
 3811      6F54696D 
 3811      65725F52 
 3811      65616443 
 3811      6F756E74 
 3812              	.LASF16:
 3813 0546 53657276 		.ascii	"ServoTimer_SetInterruptMode\000"
 3813      6F54696D 
 3813      65725F53 
 3813      6574496E 
 3813      74657272 
 3814              	.LASF13:
 3815 0562 63686172 		.ascii	"char\000"
 3815      00
 3816              	.LASF29:
 3817 0567 6D6F6465 		.ascii	"mode\000"
 3817      00
 3818              	.LASF53:
 3819 056c 53657276 		.ascii	"ServoTimer_ReadPeriodBuf\000"
 3819      6F54696D 
 3819      65725F52 
 3819      65616450 
 3819      6572696F 
 3820              	.LASF46:
 3821 0585 636F756E 		.ascii	"counterMode\000"
 3821      7465724D 
 3821      6F646500 
 3822              	.LASF22:
 3823 0591 53657276 		.ascii	"ServoTimer_WriteCounter\000"
 3823      6F54696D 
 3823      65725F57 
 3823      72697465 
 3823      436F756E 
 3824              	.LASF74:
 3825 05a9 53657276 		.ascii	"ServoTimer_ClearInterrupt\000"
 3825      6F54696D 
 3825      65725F43 
 3825      6C656172 
 3825      496E7465 
 3826              	.LASF57:
 3827 05c3 636F6D70 		.ascii	"compareBuf\000"
 3827      61726542 
 3827      756600
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDAr2Ex.s 			page 101


 3828              	.LASF27:
 3829 05ce 656E6162 		.ascii	"enableInterrupts\000"
 3829      6C65496E 
 3829      74657272 
 3829      75707473 
 3829      00
 3830              	.LASF54:
 3831 05df 53657276 		.ascii	"ServoTimer_SetPeriodSwap\000"
 3831      6F54696D 
 3831      65725F53 
 3831      65745065 
 3831      72696F64 
 3832              	.LASF75:
 3833 05f8 53657276 		.ascii	"ServoTimer_SetInterrupt\000"
 3833      6F54696D 
 3833      65725F53 
 3833      6574496E 
 3833      74657272 
 3834              	.LASF58:
 3835 0610 53657276 		.ascii	"ServoTimer_ReadCompareBuf\000"
 3835      6F54696D 
 3835      65725F52 
 3835      65616443 
 3835      6F6D7061 
 3836              	.LASF49:
 3837 062a 53657276 		.ascii	"ServoTimer_SetCompareSwap\000"
 3837      6F54696D 
 3837      65725F53 
 3837      6574436F 
 3837      6D706172 
 3838              	.LASF65:
 3839 0644 53657276 		.ascii	"ServoTimer_SetStopMode\000"
 3839      6F54696D 
 3839      65725F53 
 3839      65745374 
 3839      6F704D6F 
 3840              	.LASF50:
 3841 065b 73776170 		.ascii	"swapEnable\000"
 3841      456E6162 
 3841      6C6500
 3842              	.LASF41:
 3843 0666 53657276 		.ascii	"ServoTimer_SetPWMDeadTime\000"
 3843      6F54696D 
 3843      65725F53 
 3843      65745057 
 3843      4D446561 
 3844              	.LASF52:
 3845 0680 70657269 		.ascii	"periodBuf\000"
 3845      6F644275 
 3845      6600
 3846              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
