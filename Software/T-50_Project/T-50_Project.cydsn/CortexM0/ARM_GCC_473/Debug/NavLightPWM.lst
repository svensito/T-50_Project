ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"NavLightPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NavLightPWM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	NavLightPWM_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	NavLightPWM_Init, %function
  23              	NavLightPWM_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\NavLightPWM.c"
   1:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/NavLightPWM.c **** * File Name: NavLightPWM.c
   3:.\Generated_Source\PSoC4/NavLightPWM.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/NavLightPWM.c **** *
   5:.\Generated_Source\PSoC4/NavLightPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/NavLightPWM.c **** *  This file provides the source code to the API for the NavLightPWM
   7:.\Generated_Source\PSoC4/NavLightPWM.c **** *  component
   8:.\Generated_Source\PSoC4/NavLightPWM.c **** *
   9:.\Generated_Source\PSoC4/NavLightPWM.c **** * Note:
  10:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
  11:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  12:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/NavLightPWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/NavLightPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/NavLightPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/NavLightPWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  19:.\Generated_Source\PSoC4/NavLightPWM.c **** #include "NavLightPWM.h"
  20:.\Generated_Source\PSoC4/NavLightPWM.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  22:.\Generated_Source\PSoC4/NavLightPWM.c **** uint8 NavLightPWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  24:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  25:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Init
  27:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  29:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Initialize/Restore default NavLightPWM configuration.
  31:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  32:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 2


  33:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
  34:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  35:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
  36:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
  37:.\Generated_Source\PSoC4/NavLightPWM.c **** *
  38:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Init(void)
  40:.\Generated_Source\PSoC4/NavLightPWM.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  41:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  42:.\Generated_Source\PSoC4/NavLightPWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__QUAD == NavLightPWM_CONFIG)
  44:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/NavLightPWM.c ****         (((uint32)(NavLightPWM_QUAD_ENCODING_MODES     << NavLightPWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_CONFIG                  << NavLightPWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__QUAD == NavLightPWM_CONFIG) */
  48:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  49:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG)
  50:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_CONTROL_REG =
  28              		.loc 1 50 0
  29 0000 0B4B     		ldr	r3, .L2
  30 0002 8022     		mov	r2, #128
  31 0004 D004     		lsl	r0, r2, #19
  32 0006 1860     		str	r0, [r3]
  51:.\Generated_Source\PSoC4/NavLightPWM.c ****         (((uint32)(NavLightPWM_PWM_STOP_EVENT          << NavLightPWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_PWM_OUT_INVERT          << NavLightPWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_PWM_OUT_N_INVERT        << NavLightPWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_PWM_MODE                << NavLightPWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  56:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/NavLightPWM.c ****             ((uint32)(NavLightPWM_PWM_RUN_MODE         << NavLightPWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  60:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCounter(NavLightPWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/NavLightPWM.c ****         #else
  62:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |=
  33              		.loc 1 62 0
  34 0008 1968     		ldr	r1, [r3]
  63:.\Generated_Source\PSoC4/NavLightPWM.c ****             (((uint32)(NavLightPWM_PWM_ALIGN           << NavLightPWM_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/NavLightPWM.c ****              ((uint32)(NavLightPWM_PWM_KILL_EVENT      << NavLightPWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  67:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM_DT == NavLightPWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/NavLightPWM.c ****             ((uint32)(NavLightPWM_PWM_DEAD_TIME_CYCLE  << NavLightPWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM_DT == NavLightPWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  72:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM == NavLightPWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |=
  74:.\Generated_Source\PSoC4/NavLightPWM.c ****             ((uint32)NavLightPWM_PWM_PRESCALER         << NavLightPWM_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM == NavLightPWM_PWM_MODE) */
  76:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG) */
  77:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  78:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__TIMER == NavLightPWM_CONFIG)
  79:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_CONTROL_REG =
  80:.\Generated_Source\PSoC4/NavLightPWM.c ****         (((uint32)(NavLightPWM_TC_PRESCALER            << NavLightPWM_PRESCALER_SHIFT))   |
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 3


  81:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_TC_COUNTER_MODE         << NavLightPWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_TC_RUN_MODE             << NavLightPWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_TC_COMP_CAP_MODE        << NavLightPWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__TIMER == NavLightPWM_CONFIG) */
  85:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  86:.\Generated_Source\PSoC4/NavLightPWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__QUAD == NavLightPWM_CONFIG)
  88:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/NavLightPWM.c ****         (((uint32)(NavLightPWM_QUAD_PHIA_SIGNAL_MODE   << NavLightPWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_QUAD_INDEX_SIGNAL_MODE  << NavLightPWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_QUAD_STOP_SIGNAL_MODE   << NavLightPWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_QUAD_PHIB_SIGNAL_MODE   << NavLightPWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__QUAD == NavLightPWM_CONFIG) */
  94:.\Generated_Source\PSoC4/NavLightPWM.c **** 
  95:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG)
  96:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  =
  35              		.loc 1 96 0
  36 000a 0C20     		mov	r0, #12
  62:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |=
  37              		.loc 1 62 0
  38 000c 1960     		str	r1, [r3]
  73:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |=
  39              		.loc 1 73 0
  40 000e 1A68     		ldr	r2, [r3]
  41              	.LBB8:
  42              	.LBB9:
  97:.\Generated_Source\PSoC4/NavLightPWM.c ****         (((uint32)(NavLightPWM_PWM_SWITCH_SIGNAL_MODE  << NavLightPWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_PWM_COUNT_SIGNAL_MODE   << NavLightPWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_PWM_RELOAD_SIGNAL_MODE  << NavLightPWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_PWM_STOP_SIGNAL_MODE    << NavLightPWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_PWM_START_SIGNAL_MODE   << NavLightPWM_START_SHIFT)));
 102:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG) */
 103:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 104:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__TIMER == NavLightPWM_CONFIG)
 105:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/NavLightPWM.c ****         (((uint32)(NavLightPWM_TC_CAPTURE_SIGNAL_MODE  << NavLightPWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_TC_COUNT_SIGNAL_MODE    << NavLightPWM_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_TC_RELOAD_SIGNAL_MODE   << NavLightPWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_TC_STOP_SIGNAL_MODE     << NavLightPWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/NavLightPWM.c ****          ((uint32)(NavLightPWM_TC_START_SIGNAL_MODE    << NavLightPWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__TIMER == NavLightPWM_CONFIG) */
 112:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 113:.\Generated_Source\PSoC4/NavLightPWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__QUAD == NavLightPWM_CONFIG)
 115:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_SetInterruptMode(NavLightPWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__QUAD == NavLightPWM_CONFIG) */
 117:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 118:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG)
 119:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_SetInterruptMode(NavLightPWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG) */
 121:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 122:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__TIMER == NavLightPWM_CONFIG)
 123:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_SetInterruptMode(NavLightPWM_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__TIMER == NavLightPWM_CONFIG) */
 125:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 126:.\Generated_Source\PSoC4/NavLightPWM.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__TIMER == NavLightPWM_CONFIG)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 4


 128:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WritePeriod(NavLightPWM_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 130:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__COUNT_DOWN == NavLightPWM_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCounter(NavLightPWM_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__COUNT_DOWN == NavLightPWM_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 134:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__COMPARE == NavLightPWM_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCompare(NavLightPWM_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 137:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (1u == NavLightPWM_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_WriteCompareBuf(NavLightPWM_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* (1u == NavLightPWM_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__COMPARE == NavLightPWM_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__TIMER == NavLightPWM_CONFIG) */
 143:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 144:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG)
 145:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WritePeriod(NavLightPWM_PWM_PERIOD_VALUE );
 146:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_WriteCompare(NavLightPWM_PWM_COMPARE_VALUE);
 147:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 148:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (1u == NavLightPWM_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WriteCompareBuf(NavLightPWM_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (1u == NavLightPWM_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 153:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (1u == NavLightPWM_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_WritePeriodBuf(NavLightPWM_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (1u == NavLightPWM_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 158:.\Generated_Source\PSoC4/NavLightPWM.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE)
 160:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/NavLightPWM.c ****                     (NavLightPWM_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/NavLightPWM.c ****                     NavLightPWM_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/NavLightPWM.c ****                     NavLightPWM_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/NavLightPWM.c ****         #else
 165:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__LEFT == NavLightPWM_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_LEFT;
 167:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* ( NavLightPWM_PWM_LEFT == NavLightPWM_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 169:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__RIGHT == NavLightPWM_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_WriteCounter(NavLightPWM_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* ( NavLightPWM_PWM_RIGHT == NavLightPWM_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 174:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__CENTER == NavLightPWM_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* ( NavLightPWM_PWM_CENTER == NavLightPWM_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 178:.\Generated_Source\PSoC4/NavLightPWM.c ****             #if (NavLightPWM__ASYMMETRIC == NavLightPWM_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/NavLightPWM.c ****             #endif  /* (NavLightPWM__ASYMMETRIC == NavLightPWM_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif  /* (NavLightPWM__PWM_PR == NavLightPWM_PWM_MODE) */
 182:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif  /* (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG) */
 183:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 184:.\Generated_Source\PSoC4/NavLightPWM.c **** 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 5


 185:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 186:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Enable
 188:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 190:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 191:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Enables the NavLightPWM.
 192:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 193:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 194:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 195:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 196:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 197:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 198:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 199:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Enable(void)
 201:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 202:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 204:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 205:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG |= NavLightPWM_MASK;
 206:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 207:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 208:.\Generated_Source\PSoC4/NavLightPWM.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG)
 210:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (0u == NavLightPWM_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TriggerCommand(NavLightPWM_MASK, NavLightPWM_CMD_START);
 212:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif /* (0u == NavLightPWM_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM__PWM_SEL == NavLightPWM_CONFIG) */
 214:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 215:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM__TIMER == NavLightPWM_CONFIG)
 216:.\Generated_Source\PSoC4/NavLightPWM.c ****         #if (0u == NavLightPWM_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TriggerCommand(NavLightPWM_MASK, NavLightPWM_CMD_START);
 218:.\Generated_Source\PSoC4/NavLightPWM.c ****         #endif /* (0u == NavLightPWM_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM__TIMER == NavLightPWM_CONFIG) */
 220:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 221:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 222:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 223:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Start
 225:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 227:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 228:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Initializes the NavLightPWM with default customizer
 229:.\Generated_Source\PSoC4/NavLightPWM.c **** *  values when called the first time and enables the NavLightPWM.
 230:.\Generated_Source\PSoC4/NavLightPWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/NavLightPWM.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 233:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 234:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 235:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 236:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 237:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 238:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 239:.\Generated_Source\PSoC4/NavLightPWM.c **** * Global variables:
 240:.\Generated_Source\PSoC4/NavLightPWM.c **** *  NavLightPWM_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/NavLightPWM.c **** *  configuration of this component.  The variable is initialized to zero and set
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 6


 242:.\Generated_Source\PSoC4/NavLightPWM.c **** *  to 1 the first time NavLightPWM_Start() is called. This allows
 243:.\Generated_Source\PSoC4/NavLightPWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/NavLightPWM.c **** *  calls to the NavLightPWM_Start() routine.
 245:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 246:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Start(void)
 248:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 249:.\Generated_Source\PSoC4/NavLightPWM.c ****     if (0u == NavLightPWM_initVar)
 250:.\Generated_Source\PSoC4/NavLightPWM.c ****     {
 251:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_Init();
 252:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_initVar = 1u;
 253:.\Generated_Source\PSoC4/NavLightPWM.c ****     }
 254:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 255:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_Enable();
 256:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 257:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 258:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 259:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_Stop
 261:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 263:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 264:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Disables the NavLightPWM.
 265:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 266:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 267:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 268:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 269:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 270:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 271:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 272:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_Stop(void)
 274:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 275:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 277:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 278:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 279:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG &= (uint32)~NavLightPWM_MASK;
 280:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 281:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 282:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 283:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 284:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 285:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetMode
 287:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 289:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 290:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the operation mode of the NavLightPWM. This function is used when
 291:.\Generated_Source\PSoC4/NavLightPWM.c **** *  configured as a generic NavLightPWM and the actual mode of operation is
 292:.\Generated_Source\PSoC4/NavLightPWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 294:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 295:.\Generated_Source\PSoC4/NavLightPWM.c **** *  mode: Mode for the NavLightPWM to operate in
 296:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 297:.\Generated_Source\PSoC4/NavLightPWM.c **** *   - NavLightPWM_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                                 compare capability
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 7


 299:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 306:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 307:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 308:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 309:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 312:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 314:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 315:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 316:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_MODE_MASK;
 317:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mode;
 318:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 319:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 320:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 321:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 322:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 323:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetQDMode
 325:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 327:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 328:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 331:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 332:.\Generated_Source\PSoC4/NavLightPWM.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 334:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 339:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 340:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 341:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 342:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 345:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 347:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 348:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 349:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_QUAD_MODE_MASK;
 350:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= qdMode;
 351:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 352:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 353:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 354:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 355:.\Generated_Source\PSoC4/NavLightPWM.c **** 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 8


 356:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPrescaler
 358:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 360:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 361:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/NavLightPWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 364:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 365:.\Generated_Source\PSoC4/NavLightPWM.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 367:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 376:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 377:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 378:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 379:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 382:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 384:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 385:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 386:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 387:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= prescaler;
 388:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 389:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 390:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 391:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 392:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 393:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetOneShot
 395:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 397:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 398:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the NavLightPWM runs
 399:.\Generated_Source\PSoC4/NavLightPWM.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/NavLightPWM.c **** *  NavLightPWM operates in the continuous mode.
 401:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 402:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 403:.\Generated_Source\PSoC4/NavLightPWM.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 405:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 408:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 409:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 410:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 411:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetOneShot(uint32 oneShotEnable)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 9


 413:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 414:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 416:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 417:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 418:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_ONESHOT_MASK;
 419:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((oneShotEnable & NavLightPWM_1BIT_MASK) <<
 420:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                                NavLightPWM_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 422:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 423:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 424:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 425:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 426:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMMode
 428:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 430:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 431:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/NavLightPWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/NavLightPWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/NavLightPWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/NavLightPWM.c **** *  the mode.
 436:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 437:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 438:.\Generated_Source\PSoC4/NavLightPWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/NavLightPWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 441:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/NavLightPWM.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 462:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 463:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 464:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 465:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 468:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL2_REG = (modeMask & NavLightPWM_6BIT_MASK);
 469:.\Generated_Source\PSoC4/NavLightPWM.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 10


 470:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 471:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 472:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 473:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 477:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 478:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/NavLightPWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/NavLightPWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/NavLightPWM.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 483:.\Generated_Source\PSoC4/NavLightPWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/NavLightPWM.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 486:.\Generated_Source\PSoC4/NavLightPWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/NavLightPWM.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/NavLightPWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/NavLightPWM.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 491:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 492:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 493:.\Generated_Source\PSoC4/NavLightPWM.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 495:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 498:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 499:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 500:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 501:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 504:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 506:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 507:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 508:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_SYNC_KILL_MASK;
 509:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((syncKillEnable & NavLightPWM_1BIT_MASK)  <<
 510:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                NavLightPWM_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 512:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 513:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 514:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 515:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 516:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 520:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 521:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/NavLightPWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/NavLightPWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 525:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 526:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 11


 527:.\Generated_Source\PSoC4/NavLightPWM.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 529:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 532:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 533:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 534:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 535:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 538:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 540:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 541:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 542:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_STOP_KILL_MASK;
 543:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & NavLightPWM_1BIT_MASK)  <<
 544:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                          NavLightPWM_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 546:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 547:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 548:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 549:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 550:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 554:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 555:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/NavLightPWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/NavLightPWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/NavLightPWM.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 560:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 561:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 562:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 565:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 566:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 567:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 568:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 571:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 573:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 574:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 575:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 576:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((deadTime & NavLightPWM_8BIT_MASK) <<
 577:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                           NavLightPWM_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 579:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 580:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 581:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 582:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 583:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 12


 584:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPWMInvert
 585:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 587:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 588:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/NavLightPWM.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/NavLightPWM.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 592:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 593:.\Generated_Source\PSoC4/NavLightPWM.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 595:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/NavLightPWM.c **** *         - NavLightPWM_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 598:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 599:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 600:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 601:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 604:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 606:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 607:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 608:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_INV_OUT_MASK;
 609:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mask;
 610:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 611:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 612:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 613:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 614:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 615:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 616:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WriteCounter
 618:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 620:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 621:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/NavLightPWM.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/NavLightPWM.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 625:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 626:.\Generated_Source\PSoC4/NavLightPWM.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 628:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 629:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 630:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 631:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 634:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COUNTER_REG = (count & NavLightPWM_16BIT_MASK);
 635:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 636:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 637:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 638:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCounter
 640:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 13


 641:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 642:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 643:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 645:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 646:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 647:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 648:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 649:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 651:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCounter(void)
 653:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 654:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COUNTER_REG & NavLightPWM_16BIT_MASK);
 655:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 656:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 657:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 658:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCounterMode
 660:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 662:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 663:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/NavLightPWM.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 666:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 667:.\Generated_Source\PSoC4/NavLightPWM.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 669:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/NavLightPWM.c **** *                                         and period
 676:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 677:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 678:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 679:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 680:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 683:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 685:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 686:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 687:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_UPDOWN_MASK;
 688:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= counterMode;
 689:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 690:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 691:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 692:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 693:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 694:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WritePeriod
 696:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/NavLightPWM.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 14


 698:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 699:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/NavLightPWM.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/NavLightPWM.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 703:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 704:.\Generated_Source\PSoC4/NavLightPWM.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 706:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 707:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 708:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 709:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 712:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_REG = (period & NavLightPWM_16BIT_MASK);
 713:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 714:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 715:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 716:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadPeriod
 718:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 720:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 721:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 723:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 725:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 726:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 727:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Period value
 728:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 729:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 732:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_REG & NavLightPWM_16BIT_MASK);
 733:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 734:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 735:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 736:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCompareSwap
 738:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 740:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 741:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/NavLightPWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/NavLightPWM.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 746:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 747:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 749:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 752:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 753:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 754:.\Generated_Source\PSoC4/NavLightPWM.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 15


 755:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 758:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 760:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 761:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 762:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_CC_MASK;
 763:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= (swapEnable & NavLightPWM_1BIT_MASK);
 764:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 765:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 767:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 768:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 769:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WritePeriodBuf
 771:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 773:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 774:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 776:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 777:.\Generated_Source\PSoC4/NavLightPWM.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 779:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 780:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 781:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 782:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 785:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_BUF_REG = (periodBuf & NavLightPWM_16BIT_MASK);
 786:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 787:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 788:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 789:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 793:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 794:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 796:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 798:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 799:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 800:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Period value
 801:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 802:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 805:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_BUF_REG & NavLightPWM_16BIT_MASK);
 806:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 807:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 808:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 809:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetPeriodSwap
 811:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 16


 812:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 813:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 814:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/NavLightPWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/NavLightPWM.c **** *  switch event.
 818:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 819:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 820:.\Generated_Source\PSoC4/NavLightPWM.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
 822:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 825:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 826:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 827:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 828:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 831:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 833:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 835:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_PERIOD_MASK;
 836:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((swapEnable & NavLightPWM_1BIT_MASK) <<
 837:.\Generated_Source\PSoC4/NavLightPWM.c ****                                                             NavLightPWM_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 839:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 840:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 841:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 842:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 843:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WriteCompare
 845:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 847:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 848:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/NavLightPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 851:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 852:.\Generated_Source\PSoC4/NavLightPWM.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 854:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 855:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 856:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 857:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 860:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 864:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 866:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 867:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (NavLightPWM__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 17


 869:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_COMP_CAP_REG = ((compare + 1u) & NavLightPWM_16BIT_MASK);
 870:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 871:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (NavLightPWM__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 873:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_COMP_CAP_REG = ((compare - 1u) & NavLightPWM_16BIT_MASK);
 874:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 875:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
 876:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 877:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
 878:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 879:.\Generated_Source\PSoC4/NavLightPWM.c ****     #else
 880:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
 881:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 883:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 884:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 885:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCompare
 887:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 889:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 890:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/NavLightPWM.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 893:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 894:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 895:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 896:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 897:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Compare value
 898:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 899:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 902:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 907:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 909:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 910:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (NavLightPWM__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 912:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal = ((NavLightPWM_COMP_CAP_REG - 1u) & NavLightPWM_16BIT_MASK);
 913:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 914:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (NavLightPWM__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 916:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal = ((NavLightPWM_COMP_CAP_REG + 1u) & NavLightPWM_16BIT_MASK);
 917:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 918:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
 919:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 920:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal = (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 921:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 922:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/NavLightPWM.c ****     #else
 924:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 925:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 18


 926:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 927:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 928:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 929:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_WriteCompareBuf
 931:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 933:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 934:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/NavLightPWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 937:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 938:.\Generated_Source\PSoC4/NavLightPWM.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 940:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
 941:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 942:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 943:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 946:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 950:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 952:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 953:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (NavLightPWM__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 955:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_COMP_CAP_BUF_REG = ((compareBuf + 1u) & NavLightPWM_16BIT_MASK);
 956:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 957:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (NavLightPWM__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 959:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_COMP_CAP_BUF_REG = ((compareBuf - 1u) & NavLightPWM_16BIT_MASK);
 960:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 961:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
 962:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 963:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_COMP_CAP_BUF_REG = (compareBuf & NavLightPWM_16BIT_MASK);
 964:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
 965:.\Generated_Source\PSoC4/NavLightPWM.c ****     #else
 966:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_COMP_CAP_BUF_REG = (compareBuf & NavLightPWM_16BIT_MASK);
 967:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 969:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 970:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 971:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCompareBuf
 973:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 975:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
 976:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 979:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
 980:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
 981:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 982:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 19


 983:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/NavLightPWM.c **** *
 985:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 988:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/NavLightPWM.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 993:.\Generated_Source\PSoC4/NavLightPWM.c ****     #if (NavLightPWM_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/NavLightPWM.c ****         currentMode = ((NavLightPWM_CONTROL_REG & NavLightPWM_UPDOWN_MASK) >> NavLightPWM_UPDOWN_SH
 995:.\Generated_Source\PSoC4/NavLightPWM.c **** 
 996:.\Generated_Source\PSoC4/NavLightPWM.c ****         if (NavLightPWM__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
 998:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal = ((NavLightPWM_COMP_CAP_BUF_REG - 1u) & NavLightPWM_16BIT_MASK);
 999:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
1000:.\Generated_Source\PSoC4/NavLightPWM.c ****         else if (NavLightPWM__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
1002:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal = ((NavLightPWM_COMP_CAP_BUF_REG + 1u) & NavLightPWM_16BIT_MASK);
1003:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
1004:.\Generated_Source\PSoC4/NavLightPWM.c ****         else
1005:.\Generated_Source\PSoC4/NavLightPWM.c ****         {
1006:.\Generated_Source\PSoC4/NavLightPWM.c ****             regVal = (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
1007:.\Generated_Source\PSoC4/NavLightPWM.c ****         }
1008:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/NavLightPWM.c ****     #else
1010:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
1011:.\Generated_Source\PSoC4/NavLightPWM.c ****     #endif /* (NavLightPWM_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1013:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1014:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1015:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCapture
1017:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1019:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1020:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1023:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1024:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1025:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1026:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1027:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Capture value
1028:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1029:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCapture(void)
1031:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1032:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
1033:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1034:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1035:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1036:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/NavLightPWM.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 20


1040:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1041:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1044:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1045:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1046:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1047:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1048:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1050:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1053:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
1054:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1055:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1056:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1057:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCaptureMode
1059:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1061:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1062:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/NavLightPWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1066:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1067:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1069:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1074:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1075:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1076:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1077:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1080:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1082:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1083:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1084:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_CAPTURE_MASK;
1085:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= triggerMode;
1086:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1087:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1088:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1089:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1090:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1091:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetReloadMode
1093:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1095:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1096:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 21


1097:.\Generated_Source\PSoC4/NavLightPWM.c **** *  input.
1098:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1099:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1100:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1102:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1107:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1108:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1109:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1110:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1113:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1115:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1116:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1117:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_RELOAD_MASK;
1118:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
1119:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1120:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1121:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1122:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1123:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1124:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetStartMode
1126:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1128:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1129:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/NavLightPWM.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1132:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1133:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1135:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1140:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1141:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1142:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1143:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1146:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1148:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1149:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1150:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_START_MASK;
1151:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
1152:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1153:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 22


1154:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1155:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1156:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1157:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetStopMode
1159:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1161:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1162:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1164:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1165:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1167:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1172:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1173:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1174:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1175:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1178:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1180:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1181:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1182:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_STOP_MASK;
1183:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
1184:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1185:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1186:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1187:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1188:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1189:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetCountMode
1191:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1193:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1194:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/NavLightPWM.c **** *  input.
1196:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1197:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1198:.\Generated_Source\PSoC4/NavLightPWM.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1200:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1205:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1206:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1207:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1208:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/NavLightPWM.c **** {
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 23


1211:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1213:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1214:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1215:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_COUNT_MASK;
1216:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
1217:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1218:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1219:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1220:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1221:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1222:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_TriggerCommand
1224:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1226:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1227:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/NavLightPWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/NavLightPWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1231:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1232:.\Generated_Source\PSoC4/NavLightPWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/NavLightPWM.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/NavLightPWM.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/NavLightPWM.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/NavLightPWM.c **** *        define.
1237:.\Generated_Source\PSoC4/NavLightPWM.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/NavLightPWM.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1240:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1245:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1246:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1247:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1248:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1251:.\Generated_Source\PSoC4/NavLightPWM.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1253:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
1254:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1255:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMMAND_REG = ((uint32)(mask << command));
1256:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1257:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
1258:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1259:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1260:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1261:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ReadStatus
1263:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1265:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Reads the status of the NavLightPWM.
1267:.\Generated_Source\PSoC4/NavLightPWM.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 24


1268:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1270:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1271:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1272:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Status
1273:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1274:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1277:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_ReadStatus(void)
1279:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1280:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
1281:.\Generated_Source\PSoC4/NavLightPWM.c ****             (NavLightPWM_STATUS_REG & NavLightPWM_STATUS_DOWN));
1282:.\Generated_Source\PSoC4/NavLightPWM.c **** }
1283:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1284:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1285:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetInterruptMode
1287:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1289:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1290:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/NavLightPWM.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1293:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1294:.\Generated_Source\PSoC4/NavLightPWM.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1296:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1299:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1300:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1301:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1302:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/NavLightPWM.c **** {
1305:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_MASK_REG =  interruptMask;
  43              		.loc 1 1305 0
  44 0010 0021     		mov	r1, #0
  45              	.LBE9:
  46              	.LBE8:
  73:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_CONTROL_REG |=
  47              		.loc 1 73 0
  48 0012 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  =
  49              		.loc 1 96 0
  50 0014 074B     		ldr	r3, .L2+4
  51              	.LBB12:
  52              	.LBB10:
  53              		.loc 1 1305 0
  54 0016 084A     		ldr	r2, .L2+8
  55              	.LBE10:
  56              	.LBE12:
  96:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_TRIG_CONTROL1_REG  =
  57              		.loc 1 96 0
  58 0018 1860     		str	r0, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 25


  59              	.LVL0:
  60              	.LBB13:
  61              	.LBB14:
 712:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_REG = (period & NavLightPWM_16BIT_MASK);
  62              		.loc 1 712 0
  63 001a 084B     		ldr	r3, .L2+12
  64 001c 6420     		mov	r0, #100
  65              	.LBE14:
  66              	.LBE13:
  67              	.LBB16:
  68              	.LBB11:
  69              		.loc 1 1305 0
  70 001e 1160     		str	r1, [r2]
  71              	.LVL1:
  72              	.LBE11:
  73              	.LBE16:
  74              	.LBB17:
  75              	.LBB15:
 712:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_REG = (period & NavLightPWM_16BIT_MASK);
  76              		.loc 1 712 0
  77 0020 1860     		str	r0, [r3]
  78              	.LVL2:
  79              	.LBE15:
  80              	.LBE17:
  81              	.LBB18:
  82              	.LBB19:
 880:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
  83              		.loc 1 880 0
  84 0022 074A     		ldr	r2, .L2+16
  85              	.LBE19:
  86              	.LBE18:
 166:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_LEFT;
  87              		.loc 1 166 0
  88 0024 074B     		ldr	r3, .L2+20
  89              	.LBB22:
  90              	.LBB20:
 880:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
  91              		.loc 1 880 0
  92 0026 3221     		mov	r1, #50
  93              	.LBE20:
  94              	.LBE22:
 166:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_LEFT;
  95              		.loc 1 166 0
  96 0028 3120     		mov	r0, #49
  97              	.LBB23:
  98              	.LBB21:
 880:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
  99              		.loc 1 880 0
 100 002a 1160     		str	r1, [r2]
 101              	.LBE21:
 102              	.LBE23:
 183:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 103              		.loc 1 183 0
 104              		@ sp needed for prologue
 166:.\Generated_Source\PSoC4/NavLightPWM.c ****                 NavLightPWM_TRIG_CONTROL2_REG = NavLightPWM_PWM_MODE_LEFT;
 105              		.loc 1 166 0
 106 002c 1860     		str	r0, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 26


 183:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 107              		.loc 1 183 0
 108 002e 7047     		bx	lr
 109              	.L3:
 110              		.align	2
 111              	.L2:
 112 0030 80010540 		.word	1074069888
 113 0034 A4010540 		.word	1074069924
 114 0038 B8010540 		.word	1074069944
 115 003c 94010540 		.word	1074069908
 116 0040 8C010540 		.word	1074069900
 117 0044 A8010540 		.word	1074069928
 118              		.cfi_endproc
 119              	.LFE0:
 120              		.size	NavLightPWM_Init, .-NavLightPWM_Init
 121              		.section	.text.NavLightPWM_Stop,"ax",%progbits
 122              		.align	1
 123              		.global	NavLightPWM_Stop
 124              		.code	16
 125              		.thumb_func
 126              		.type	NavLightPWM_Stop, %function
 127              	NavLightPWM_Stop:
 128              	.LFB3:
 274:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 129              		.loc 1 274 0
 130              		.cfi_startproc
 131 0000 08B5     		push	{r3, lr}
 132              	.LCFI0:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 3, -8
 135              		.cfi_offset 14, -4
 277:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 136              		.loc 1 277 0
 137 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 138              	.LVL3:
 279:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG &= (uint32)~NavLightPWM_MASK;
 139              		.loc 1 279 0
 140 0006 044B     		ldr	r3, .L5
 141 0008 0421     		mov	r1, #4
 142 000a 1A68     		ldr	r2, [r3]
 282:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 143              		.loc 1 282 0
 144              		@ sp needed for prologue
 279:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG &= (uint32)~NavLightPWM_MASK;
 145              		.loc 1 279 0
 146 000c 8A43     		bic	r2, r1
 147 000e 1A60     		str	r2, [r3]
 281:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 148              		.loc 1 281 0
 149 0010 FFF7FEFF 		bl	CyExitCriticalSection
 150              	.LVL4:
 282:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 151              		.loc 1 282 0
 152 0014 08BD     		pop	{r3, pc}
 153              	.L6:
 154 0016 C046     		.align	2
 155              	.L5:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 27


 156 0018 00000540 		.word	1074069504
 157              		.cfi_endproc
 158              	.LFE3:
 159              		.size	NavLightPWM_Stop, .-NavLightPWM_Stop
 160              		.section	.text.NavLightPWM_SetMode,"ax",%progbits
 161              		.align	1
 162              		.global	NavLightPWM_SetMode
 163              		.code	16
 164              		.thumb_func
 165              		.type	NavLightPWM_SetMode, %function
 166              	NavLightPWM_SetMode:
 167              	.LFB4:
 311:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 168              		.loc 1 311 0
 169              		.cfi_startproc
 170              	.LVL5:
 171 0000 10B5     		push	{r4, lr}
 172              	.LCFI1:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
 311:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 176              		.loc 1 311 0
 177 0002 041C     		mov	r4, r0
 314:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 178              		.loc 1 314 0
 179 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 180              	.LVL6:
 316:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_MODE_MASK;
 181              		.loc 1 316 0
 182 0008 054B     		ldr	r3, .L8
 183 000a 064A     		ldr	r2, .L8+4
 184 000c 1968     		ldr	r1, [r3]
 320:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 185              		.loc 1 320 0
 186              		@ sp needed for prologue
 316:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_MODE_MASK;
 187              		.loc 1 316 0
 188 000e 0A40     		and	r2, r1
 189 0010 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mode;
 190              		.loc 1 317 0
 191 0012 1968     		ldr	r1, [r3]
 192 0014 0C43     		orr	r4, r1
 193              	.LVL7:
 194 0016 1C60     		str	r4, [r3]
 319:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 195              		.loc 1 319 0
 196 0018 FFF7FEFF 		bl	CyExitCriticalSection
 197              	.LVL8:
 320:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 198              		.loc 1 320 0
 199 001c 10BD     		pop	{r4, pc}
 200              	.L9:
 201 001e C046     		.align	2
 202              	.L8:
 203 0020 80010540 		.word	1074069888
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 28


 204 0024 FFFFFFF8 		.word	-117440513
 205              		.cfi_endproc
 206              	.LFE4:
 207              		.size	NavLightPWM_SetMode, .-NavLightPWM_SetMode
 208              		.section	.text.NavLightPWM_SetQDMode,"ax",%progbits
 209              		.align	1
 210              		.global	NavLightPWM_SetQDMode
 211              		.code	16
 212              		.thumb_func
 213              		.type	NavLightPWM_SetQDMode, %function
 214              	NavLightPWM_SetQDMode:
 215              	.LFB5:
 344:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 216              		.loc 1 344 0
 217              		.cfi_startproc
 218              	.LVL9:
 219 0000 10B5     		push	{r4, lr}
 220              	.LCFI2:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
 344:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 224              		.loc 1 344 0
 225 0002 041C     		mov	r4, r0
 347:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 226              		.loc 1 347 0
 227 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 228              	.LVL10:
 349:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_QUAD_MODE_MASK;
 229              		.loc 1 349 0
 230 0008 054B     		ldr	r3, .L11
 231 000a 064A     		ldr	r2, .L11+4
 232 000c 1968     		ldr	r1, [r3]
 353:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 233              		.loc 1 353 0
 234              		@ sp needed for prologue
 349:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_QUAD_MODE_MASK;
 235              		.loc 1 349 0
 236 000e 0A40     		and	r2, r1
 237 0010 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= qdMode;
 238              		.loc 1 350 0
 239 0012 1968     		ldr	r1, [r3]
 240 0014 0C43     		orr	r4, r1
 241              	.LVL11:
 242 0016 1C60     		str	r4, [r3]
 352:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 243              		.loc 1 352 0
 244 0018 FFF7FEFF 		bl	CyExitCriticalSection
 245              	.LVL12:
 353:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 246              		.loc 1 353 0
 247 001c 10BD     		pop	{r4, pc}
 248              	.L12:
 249 001e C046     		.align	2
 250              	.L11:
 251 0020 80010540 		.word	1074069888
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 29


 252 0024 FFFF8FFF 		.word	-7340033
 253              		.cfi_endproc
 254              	.LFE5:
 255              		.size	NavLightPWM_SetQDMode, .-NavLightPWM_SetQDMode
 256              		.section	.text.NavLightPWM_SetPrescaler,"ax",%progbits
 257              		.align	1
 258              		.global	NavLightPWM_SetPrescaler
 259              		.code	16
 260              		.thumb_func
 261              		.type	NavLightPWM_SetPrescaler, %function
 262              	NavLightPWM_SetPrescaler:
 263              	.LFB6:
 381:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 264              		.loc 1 381 0
 265              		.cfi_startproc
 266              	.LVL13:
 267 0000 10B5     		push	{r4, lr}
 268              	.LCFI3:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 381:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 272              		.loc 1 381 0
 273 0002 041C     		mov	r4, r0
 384:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 274              		.loc 1 384 0
 275 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 276              	.LVL14:
 386:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 277              		.loc 1 386 0
 278 0008 054B     		ldr	r3, .L14
 279 000a 064A     		ldr	r2, .L14+4
 280 000c 1968     		ldr	r1, [r3]
 390:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 281              		.loc 1 390 0
 282              		@ sp needed for prologue
 386:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 283              		.loc 1 386 0
 284 000e 0A40     		and	r2, r1
 285 0010 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= prescaler;
 286              		.loc 1 387 0
 287 0012 1968     		ldr	r1, [r3]
 288 0014 0C43     		orr	r4, r1
 289              	.LVL15:
 290 0016 1C60     		str	r4, [r3]
 389:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 291              		.loc 1 389 0
 292 0018 FFF7FEFF 		bl	CyExitCriticalSection
 293              	.LVL16:
 390:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 294              		.loc 1 390 0
 295 001c 10BD     		pop	{r4, pc}
 296              	.L15:
 297 001e C046     		.align	2
 298              	.L14:
 299 0020 80010540 		.word	1074069888
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 30


 300 0024 FF00FFFF 		.word	-65281
 301              		.cfi_endproc
 302              	.LFE6:
 303              		.size	NavLightPWM_SetPrescaler, .-NavLightPWM_SetPrescaler
 304              		.section	.text.NavLightPWM_SetOneShot,"ax",%progbits
 305              		.align	1
 306              		.global	NavLightPWM_SetOneShot
 307              		.code	16
 308              		.thumb_func
 309              		.type	NavLightPWM_SetOneShot, %function
 310              	NavLightPWM_SetOneShot:
 311              	.LFB7:
 413:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 312              		.loc 1 413 0
 313              		.cfi_startproc
 314              	.LVL17:
 315 0000 10B5     		push	{r4, lr}
 316              	.LCFI4:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 4, -8
 319              		.cfi_offset 14, -4
 413:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 320              		.loc 1 413 0
 321 0002 041C     		mov	r4, r0
 416:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 416 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL18:
 418:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_ONESHOT_MASK;
 325              		.loc 1 418 0
 326 0008 064B     		ldr	r3, .L17
 327 000a 074A     		ldr	r2, .L17+4
 328 000c 1968     		ldr	r1, [r3]
 423:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 329              		.loc 1 423 0
 330              		@ sp needed for prologue
 418:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_ONESHOT_MASK;
 331              		.loc 1 418 0
 332 000e 0A40     		and	r2, r1
 333 0010 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((oneShotEnable & NavLightPWM_1BIT_MASK) <<
 334              		.loc 1 419 0
 335 0012 0121     		mov	r1, #1
 336 0014 1A68     		ldr	r2, [r3]
 337 0016 0C40     		and	r4, r1
 338              	.LVL19:
 339 0018 A404     		lsl	r4, r4, #18
 340 001a 1443     		orr	r4, r2
 341 001c 1C60     		str	r4, [r3]
 422:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 342              		.loc 1 422 0
 343 001e FFF7FEFF 		bl	CyExitCriticalSection
 344              	.LVL20:
 423:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 345              		.loc 1 423 0
 346 0022 10BD     		pop	{r4, pc}
 347              	.L18:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 31


 348              		.align	2
 349              	.L17:
 350 0024 80010540 		.word	1074069888
 351 0028 FFFFFBFF 		.word	-262145
 352              		.cfi_endproc
 353              	.LFE7:
 354              		.size	NavLightPWM_SetOneShot, .-NavLightPWM_SetOneShot
 355              		.section	.text.NavLightPWM_SetPWMMode,"ax",%progbits
 356              		.align	1
 357              		.global	NavLightPWM_SetPWMMode
 358              		.code	16
 359              		.thumb_func
 360              		.type	NavLightPWM_SetPWMMode, %function
 361              	NavLightPWM_SetPWMMode:
 362              	.LFB8:
 467:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 363              		.loc 1 467 0
 364              		.cfi_startproc
 365              	.LVL21:
 468:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL2_REG = (modeMask & NavLightPWM_6BIT_MASK);
 366              		.loc 1 468 0
 367 0000 3F23     		mov	r3, #63
 368 0002 0249     		ldr	r1, .L20
 369 0004 1840     		and	r0, r3
 370              	.LVL22:
 371 0006 0860     		str	r0, [r1]
 469:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 372              		.loc 1 469 0
 373              		@ sp needed for prologue
 374 0008 7047     		bx	lr
 375              	.L21:
 376 000a C046     		.align	2
 377              	.L20:
 378 000c A8010540 		.word	1074069928
 379              		.cfi_endproc
 380              	.LFE8:
 381              		.size	NavLightPWM_SetPWMMode, .-NavLightPWM_SetPWMMode
 382              		.section	.text.NavLightPWM_SetPWMSyncKill,"ax",%progbits
 383              		.align	1
 384              		.global	NavLightPWM_SetPWMSyncKill
 385              		.code	16
 386              		.thumb_func
 387              		.type	NavLightPWM_SetPWMSyncKill, %function
 388              	NavLightPWM_SetPWMSyncKill:
 389              	.LFB9:
 503:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 390              		.loc 1 503 0
 391              		.cfi_startproc
 392              	.LVL23:
 393 0000 10B5     		push	{r4, lr}
 394              	.LCFI5:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 4, -8
 397              		.cfi_offset 14, -4
 503:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 398              		.loc 1 503 0
 399 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 32


 506:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 400              		.loc 1 506 0
 401 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 402              	.LVL24:
 508:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_SYNC_KILL_MASK;
 403              		.loc 1 508 0
 404 0008 064B     		ldr	r3, .L23
 405 000a 0421     		mov	r1, #4
 406 000c 1A68     		ldr	r2, [r3]
 513:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 407              		.loc 1 513 0
 408              		@ sp needed for prologue
 508:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_SYNC_KILL_MASK;
 409              		.loc 1 508 0
 410 000e 8A43     		bic	r2, r1
 411 0010 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((syncKillEnable & NavLightPWM_1BIT_MASK)  <<
 412              		.loc 1 509 0
 413 0012 0121     		mov	r1, #1
 414 0014 1A68     		ldr	r2, [r3]
 415 0016 0C40     		and	r4, r1
 416              	.LVL25:
 417 0018 A400     		lsl	r4, r4, #2
 418 001a 1443     		orr	r4, r2
 419 001c 1C60     		str	r4, [r3]
 512:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 420              		.loc 1 512 0
 421 001e FFF7FEFF 		bl	CyExitCriticalSection
 422              	.LVL26:
 513:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 423              		.loc 1 513 0
 424 0022 10BD     		pop	{r4, pc}
 425              	.L24:
 426              		.align	2
 427              	.L23:
 428 0024 80010540 		.word	1074069888
 429              		.cfi_endproc
 430              	.LFE9:
 431              		.size	NavLightPWM_SetPWMSyncKill, .-NavLightPWM_SetPWMSyncKill
 432              		.section	.text.NavLightPWM_SetPWMStopOnKill,"ax",%progbits
 433              		.align	1
 434              		.global	NavLightPWM_SetPWMStopOnKill
 435              		.code	16
 436              		.thumb_func
 437              		.type	NavLightPWM_SetPWMStopOnKill, %function
 438              	NavLightPWM_SetPWMStopOnKill:
 439              	.LFB10:
 537:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 440              		.loc 1 537 0
 441              		.cfi_startproc
 442              	.LVL27:
 443 0000 10B5     		push	{r4, lr}
 444              	.LCFI6:
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 4, -8
 447              		.cfi_offset 14, -4
 537:.\Generated_Source\PSoC4/NavLightPWM.c **** {
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 33


 448              		.loc 1 537 0
 449 0002 041C     		mov	r4, r0
 540:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 450              		.loc 1 540 0
 451 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 452              	.LVL28:
 542:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_STOP_KILL_MASK;
 453              		.loc 1 542 0
 454 0008 064B     		ldr	r3, .L26
 455 000a 0821     		mov	r1, #8
 456 000c 1A68     		ldr	r2, [r3]
 547:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 457              		.loc 1 547 0
 458              		@ sp needed for prologue
 542:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PWM_STOP_KILL_MASK;
 459              		.loc 1 542 0
 460 000e 8A43     		bic	r2, r1
 461 0010 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & NavLightPWM_1BIT_MASK)  <<
 462              		.loc 1 543 0
 463 0012 0121     		mov	r1, #1
 464 0014 1A68     		ldr	r2, [r3]
 465 0016 0C40     		and	r4, r1
 466              	.LVL29:
 467 0018 E400     		lsl	r4, r4, #3
 468 001a 1443     		orr	r4, r2
 469 001c 1C60     		str	r4, [r3]
 546:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 470              		.loc 1 546 0
 471 001e FFF7FEFF 		bl	CyExitCriticalSection
 472              	.LVL30:
 547:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 473              		.loc 1 547 0
 474 0022 10BD     		pop	{r4, pc}
 475              	.L27:
 476              		.align	2
 477              	.L26:
 478 0024 80010540 		.word	1074069888
 479              		.cfi_endproc
 480              	.LFE10:
 481              		.size	NavLightPWM_SetPWMStopOnKill, .-NavLightPWM_SetPWMStopOnKill
 482              		.section	.text.NavLightPWM_SetPWMDeadTime,"ax",%progbits
 483              		.align	1
 484              		.global	NavLightPWM_SetPWMDeadTime
 485              		.code	16
 486              		.thumb_func
 487              		.type	NavLightPWM_SetPWMDeadTime, %function
 488              	NavLightPWM_SetPWMDeadTime:
 489              	.LFB11:
 570:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 490              		.loc 1 570 0
 491              		.cfi_startproc
 492              	.LVL31:
 493 0000 10B5     		push	{r4, lr}
 494              	.LCFI7:
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 4, -8
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 34


 497              		.cfi_offset 14, -4
 570:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 498              		.loc 1 570 0
 499 0002 041C     		mov	r4, r0
 573:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 500              		.loc 1 573 0
 501 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 502              	.LVL32:
 575:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 503              		.loc 1 575 0
 504 0008 064B     		ldr	r3, .L29
 505 000a 074A     		ldr	r2, .L29+4
 506 000c 1968     		ldr	r1, [r3]
 576:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((deadTime & NavLightPWM_8BIT_MASK) <<
 507              		.loc 1 576 0
 508 000e 2406     		lsl	r4, r4, #24
 509              	.LVL33:
 575:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_PRESCALER_MASK;
 510              		.loc 1 575 0
 511 0010 0A40     		and	r2, r1
 512 0012 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((deadTime & NavLightPWM_8BIT_MASK) <<
 513              		.loc 1 576 0
 514 0014 1968     		ldr	r1, [r3]
 515 0016 220C     		lsr	r2, r4, #16
 516 0018 0A43     		orr	r2, r1
 517 001a 1A60     		str	r2, [r3]
 579:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 518              		.loc 1 579 0
 519 001c FFF7FEFF 		bl	CyExitCriticalSection
 520              	.LVL34:
 580:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 521              		.loc 1 580 0
 522              		@ sp needed for prologue
 523 0020 10BD     		pop	{r4, pc}
 524              	.L30:
 525 0022 C046     		.align	2
 526              	.L29:
 527 0024 80010540 		.word	1074069888
 528 0028 FF00FFFF 		.word	-65281
 529              		.cfi_endproc
 530              	.LFE11:
 531              		.size	NavLightPWM_SetPWMDeadTime, .-NavLightPWM_SetPWMDeadTime
 532              		.section	.text.NavLightPWM_SetPWMInvert,"ax",%progbits
 533              		.align	1
 534              		.global	NavLightPWM_SetPWMInvert
 535              		.code	16
 536              		.thumb_func
 537              		.type	NavLightPWM_SetPWMInvert, %function
 538              	NavLightPWM_SetPWMInvert:
 539              	.LFB12:
 603:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 540              		.loc 1 603 0
 541              		.cfi_startproc
 542              	.LVL35:
 543 0000 10B5     		push	{r4, lr}
 544              	.LCFI8:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 35


 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 4, -8
 547              		.cfi_offset 14, -4
 603:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 548              		.loc 1 603 0
 549 0002 041C     		mov	r4, r0
 606:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 550              		.loc 1 606 0
 551 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 552              	.LVL36:
 608:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_INV_OUT_MASK;
 553              		.loc 1 608 0
 554 0008 054B     		ldr	r3, .L32
 555 000a 064A     		ldr	r2, .L32+4
 556 000c 1968     		ldr	r1, [r3]
 612:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 557              		.loc 1 612 0
 558              		@ sp needed for prologue
 608:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_INV_OUT_MASK;
 559              		.loc 1 608 0
 560 000e 0A40     		and	r2, r1
 561 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= mask;
 562              		.loc 1 609 0
 563 0012 1968     		ldr	r1, [r3]
 564 0014 0C43     		orr	r4, r1
 565              	.LVL37:
 566 0016 1C60     		str	r4, [r3]
 611:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 567              		.loc 1 611 0
 568 0018 FFF7FEFF 		bl	CyExitCriticalSection
 569              	.LVL38:
 612:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 570              		.loc 1 612 0
 571 001c 10BD     		pop	{r4, pc}
 572              	.L33:
 573 001e C046     		.align	2
 574              	.L32:
 575 0020 80010540 		.word	1074069888
 576 0024 FFFFCFFF 		.word	-3145729
 577              		.cfi_endproc
 578              	.LFE12:
 579              		.size	NavLightPWM_SetPWMInvert, .-NavLightPWM_SetPWMInvert
 580              		.section	.text.NavLightPWM_WriteCounter,"ax",%progbits
 581              		.align	1
 582              		.global	NavLightPWM_WriteCounter
 583              		.code	16
 584              		.thumb_func
 585              		.type	NavLightPWM_WriteCounter, %function
 586              	NavLightPWM_WriteCounter:
 587              	.LFB13:
 633:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 588              		.loc 1 633 0
 589              		.cfi_startproc
 590              	.LVL39:
 634:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COUNTER_REG = (count & NavLightPWM_16BIT_MASK);
 591              		.loc 1 634 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 36


 592 0000 014B     		ldr	r3, .L35
 593 0002 80B2     		uxth	r0, r0
 594              	.LVL40:
 595 0004 1860     		str	r0, [r3]
 635:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 596              		.loc 1 635 0
 597              		@ sp needed for prologue
 598 0006 7047     		bx	lr
 599              	.L36:
 600              		.align	2
 601              	.L35:
 602 0008 88010540 		.word	1074069896
 603              		.cfi_endproc
 604              	.LFE13:
 605              		.size	NavLightPWM_WriteCounter, .-NavLightPWM_WriteCounter
 606              		.section	.text.NavLightPWM_ReadCounter,"ax",%progbits
 607              		.align	1
 608              		.global	NavLightPWM_ReadCounter
 609              		.code	16
 610              		.thumb_func
 611              		.type	NavLightPWM_ReadCounter, %function
 612              	NavLightPWM_ReadCounter:
 613              	.LFB14:
 653:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 614              		.loc 1 653 0
 615              		.cfi_startproc
 654:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COUNTER_REG & NavLightPWM_16BIT_MASK);
 616              		.loc 1 654 0
 617 0000 014B     		ldr	r3, .L38
 655:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 618              		.loc 1 655 0
 619              		@ sp needed for prologue
 654:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COUNTER_REG & NavLightPWM_16BIT_MASK);
 620              		.loc 1 654 0
 621 0002 1868     		ldr	r0, [r3]
 622 0004 80B2     		uxth	r0, r0
 655:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 623              		.loc 1 655 0
 624 0006 7047     		bx	lr
 625              	.L39:
 626              		.align	2
 627              	.L38:
 628 0008 88010540 		.word	1074069896
 629              		.cfi_endproc
 630              	.LFE14:
 631              		.size	NavLightPWM_ReadCounter, .-NavLightPWM_ReadCounter
 632              		.section	.text.NavLightPWM_SetCounterMode,"ax",%progbits
 633              		.align	1
 634              		.global	NavLightPWM_SetCounterMode
 635              		.code	16
 636              		.thumb_func
 637              		.type	NavLightPWM_SetCounterMode, %function
 638              	NavLightPWM_SetCounterMode:
 639              	.LFB15:
 682:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 640              		.loc 1 682 0
 641              		.cfi_startproc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 37


 642              	.LVL41:
 643 0000 10B5     		push	{r4, lr}
 644              	.LCFI9:
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 4, -8
 647              		.cfi_offset 14, -4
 682:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 648              		.loc 1 682 0
 649 0002 041C     		mov	r4, r0
 685:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 650              		.loc 1 685 0
 651 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 652              	.LVL42:
 687:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_UPDOWN_MASK;
 653              		.loc 1 687 0
 654 0008 054B     		ldr	r3, .L41
 655 000a 064A     		ldr	r2, .L41+4
 656 000c 1968     		ldr	r1, [r3]
 691:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 657              		.loc 1 691 0
 658              		@ sp needed for prologue
 687:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_UPDOWN_MASK;
 659              		.loc 1 687 0
 660 000e 0A40     		and	r2, r1
 661 0010 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= counterMode;
 662              		.loc 1 688 0
 663 0012 1968     		ldr	r1, [r3]
 664 0014 0C43     		orr	r4, r1
 665              	.LVL43:
 666 0016 1C60     		str	r4, [r3]
 690:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 667              		.loc 1 690 0
 668 0018 FFF7FEFF 		bl	CyExitCriticalSection
 669              	.LVL44:
 691:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 670              		.loc 1 691 0
 671 001c 10BD     		pop	{r4, pc}
 672              	.L42:
 673 001e C046     		.align	2
 674              	.L41:
 675 0020 80010540 		.word	1074069888
 676 0024 FFFFFCFF 		.word	-196609
 677              		.cfi_endproc
 678              	.LFE15:
 679              		.size	NavLightPWM_SetCounterMode, .-NavLightPWM_SetCounterMode
 680              		.section	.text.NavLightPWM_WritePeriod,"ax",%progbits
 681              		.align	1
 682              		.global	NavLightPWM_WritePeriod
 683              		.code	16
 684              		.thumb_func
 685              		.type	NavLightPWM_WritePeriod, %function
 686              	NavLightPWM_WritePeriod:
 687              	.LFB16:
 711:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 688              		.loc 1 711 0
 689              		.cfi_startproc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 38


 690              	.LVL45:
 712:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_REG = (period & NavLightPWM_16BIT_MASK);
 691              		.loc 1 712 0
 692 0000 014B     		ldr	r3, .L44
 693 0002 80B2     		uxth	r0, r0
 694              	.LVL46:
 695 0004 1860     		str	r0, [r3]
 713:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 696              		.loc 1 713 0
 697              		@ sp needed for prologue
 698 0006 7047     		bx	lr
 699              	.L45:
 700              		.align	2
 701              	.L44:
 702 0008 94010540 		.word	1074069908
 703              		.cfi_endproc
 704              	.LFE16:
 705              		.size	NavLightPWM_WritePeriod, .-NavLightPWM_WritePeriod
 706              		.section	.text.NavLightPWM_ReadPeriod,"ax",%progbits
 707              		.align	1
 708              		.global	NavLightPWM_ReadPeriod
 709              		.code	16
 710              		.thumb_func
 711              		.type	NavLightPWM_ReadPeriod, %function
 712              	NavLightPWM_ReadPeriod:
 713              	.LFB17:
 731:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 714              		.loc 1 731 0
 715              		.cfi_startproc
 732:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_REG & NavLightPWM_16BIT_MASK);
 716              		.loc 1 732 0
 717 0000 014B     		ldr	r3, .L47
 733:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 718              		.loc 1 733 0
 719              		@ sp needed for prologue
 732:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_REG & NavLightPWM_16BIT_MASK);
 720              		.loc 1 732 0
 721 0002 1868     		ldr	r0, [r3]
 722 0004 80B2     		uxth	r0, r0
 733:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 723              		.loc 1 733 0
 724 0006 7047     		bx	lr
 725              	.L48:
 726              		.align	2
 727              	.L47:
 728 0008 94010540 		.word	1074069908
 729              		.cfi_endproc
 730              	.LFE17:
 731              		.size	NavLightPWM_ReadPeriod, .-NavLightPWM_ReadPeriod
 732              		.section	.text.NavLightPWM_SetCompareSwap,"ax",%progbits
 733              		.align	1
 734              		.global	NavLightPWM_SetCompareSwap
 735              		.code	16
 736              		.thumb_func
 737              		.type	NavLightPWM_SetCompareSwap, %function
 738              	NavLightPWM_SetCompareSwap:
 739              	.LFB18:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 39


 757:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 740              		.loc 1 757 0
 741              		.cfi_startproc
 742              	.LVL47:
 743 0000 10B5     		push	{r4, lr}
 744              	.LCFI10:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 4, -8
 747              		.cfi_offset 14, -4
 757:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 748              		.loc 1 757 0
 749 0002 041C     		mov	r4, r0
 760:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 750              		.loc 1 760 0
 751 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 752              	.LVL48:
 762:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_CC_MASK;
 753              		.loc 1 762 0
 754 0008 054B     		ldr	r3, .L50
 755 000a 0122     		mov	r2, #1
 756 000c 1968     		ldr	r1, [r3]
 766:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 757              		.loc 1 766 0
 758              		@ sp needed for prologue
 762:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_CC_MASK;
 759              		.loc 1 762 0
 760 000e 9143     		bic	r1, r2
 761 0010 1960     		str	r1, [r3]
 763:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= (swapEnable & NavLightPWM_1BIT_MASK);
 762              		.loc 1 763 0
 763 0012 1968     		ldr	r1, [r3]
 764 0014 2240     		and	r2, r4
 765 0016 0A43     		orr	r2, r1
 766 0018 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 767              		.loc 1 765 0
 768 001a FFF7FEFF 		bl	CyExitCriticalSection
 769              	.LVL49:
 770              	.LVL50:
 766:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 771              		.loc 1 766 0
 772 001e 10BD     		pop	{r4, pc}
 773              	.L51:
 774              		.align	2
 775              	.L50:
 776 0020 80010540 		.word	1074069888
 777              		.cfi_endproc
 778              	.LFE18:
 779              		.size	NavLightPWM_SetCompareSwap, .-NavLightPWM_SetCompareSwap
 780              		.section	.text.NavLightPWM_WritePeriodBuf,"ax",%progbits
 781              		.align	1
 782              		.global	NavLightPWM_WritePeriodBuf
 783              		.code	16
 784              		.thumb_func
 785              		.type	NavLightPWM_WritePeriodBuf, %function
 786              	NavLightPWM_WritePeriodBuf:
 787              	.LFB19:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 40


 784:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 788              		.loc 1 784 0
 789              		.cfi_startproc
 790              	.LVL51:
 785:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_PERIOD_BUF_REG = (periodBuf & NavLightPWM_16BIT_MASK);
 791              		.loc 1 785 0
 792 0000 014B     		ldr	r3, .L53
 793 0002 80B2     		uxth	r0, r0
 794              	.LVL52:
 795 0004 1860     		str	r0, [r3]
 786:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 796              		.loc 1 786 0
 797              		@ sp needed for prologue
 798 0006 7047     		bx	lr
 799              	.L54:
 800              		.align	2
 801              	.L53:
 802 0008 98010540 		.word	1074069912
 803              		.cfi_endproc
 804              	.LFE19:
 805              		.size	NavLightPWM_WritePeriodBuf, .-NavLightPWM_WritePeriodBuf
 806              		.section	.text.NavLightPWM_ReadPeriodBuf,"ax",%progbits
 807              		.align	1
 808              		.global	NavLightPWM_ReadPeriodBuf
 809              		.code	16
 810              		.thumb_func
 811              		.type	NavLightPWM_ReadPeriodBuf, %function
 812              	NavLightPWM_ReadPeriodBuf:
 813              	.LFB20:
 804:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 814              		.loc 1 804 0
 815              		.cfi_startproc
 805:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_BUF_REG & NavLightPWM_16BIT_MASK);
 816              		.loc 1 805 0
 817 0000 014B     		ldr	r3, .L56
 806:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 818              		.loc 1 806 0
 819              		@ sp needed for prologue
 805:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_PERIOD_BUF_REG & NavLightPWM_16BIT_MASK);
 820              		.loc 1 805 0
 821 0002 1868     		ldr	r0, [r3]
 822 0004 80B2     		uxth	r0, r0
 806:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 823              		.loc 1 806 0
 824 0006 7047     		bx	lr
 825              	.L57:
 826              		.align	2
 827              	.L56:
 828 0008 98010540 		.word	1074069912
 829              		.cfi_endproc
 830              	.LFE20:
 831              		.size	NavLightPWM_ReadPeriodBuf, .-NavLightPWM_ReadPeriodBuf
 832              		.section	.text.NavLightPWM_SetPeriodSwap,"ax",%progbits
 833              		.align	1
 834              		.global	NavLightPWM_SetPeriodSwap
 835              		.code	16
 836              		.thumb_func
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 41


 837              		.type	NavLightPWM_SetPeriodSwap, %function
 838              	NavLightPWM_SetPeriodSwap:
 839              	.LFB21:
 830:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 840              		.loc 1 830 0
 841              		.cfi_startproc
 842              	.LVL53:
 843 0000 10B5     		push	{r4, lr}
 844              	.LCFI11:
 845              		.cfi_def_cfa_offset 8
 846              		.cfi_offset 4, -8
 847              		.cfi_offset 14, -4
 830:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 848              		.loc 1 830 0
 849 0002 041C     		mov	r4, r0
 833:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 850              		.loc 1 833 0
 851 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 852              	.LVL54:
 835:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_PERIOD_MASK;
 853              		.loc 1 835 0
 854 0008 064B     		ldr	r3, .L59
 855 000a 0221     		mov	r1, #2
 856 000c 1A68     		ldr	r2, [r3]
 840:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 857              		.loc 1 840 0
 858              		@ sp needed for prologue
 835:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG &= (uint32)~NavLightPWM_RELOAD_PERIOD_MASK;
 859              		.loc 1 835 0
 860 000e 8A43     		bic	r2, r1
 861 0010 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_CONTROL_REG |= ((uint32)((swapEnable & NavLightPWM_1BIT_MASK) <<
 862              		.loc 1 836 0
 863 0012 0121     		mov	r1, #1
 864 0014 1A68     		ldr	r2, [r3]
 865 0016 0C40     		and	r4, r1
 866              	.LVL55:
 867 0018 8C40     		lsl	r4, r4, r1
 868 001a 1443     		orr	r4, r2
 869 001c 1C60     		str	r4, [r3]
 839:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 870              		.loc 1 839 0
 871 001e FFF7FEFF 		bl	CyExitCriticalSection
 872              	.LVL56:
 840:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 873              		.loc 1 840 0
 874 0022 10BD     		pop	{r4, pc}
 875              	.L60:
 876              		.align	2
 877              	.L59:
 878 0024 80010540 		.word	1074069888
 879              		.cfi_endproc
 880              	.LFE21:
 881              		.size	NavLightPWM_SetPeriodSwap, .-NavLightPWM_SetPeriodSwap
 882              		.section	.text.NavLightPWM_WriteCompare,"ax",%progbits
 883              		.align	1
 884              		.global	NavLightPWM_WriteCompare
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 42


 885              		.code	16
 886              		.thumb_func
 887              		.type	NavLightPWM_WriteCompare, %function
 888              	NavLightPWM_WriteCompare:
 889              	.LFB22:
 859:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 890              		.loc 1 859 0
 891              		.cfi_startproc
 892              	.LVL57:
 880:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_COMP_CAP_REG = (compare & NavLightPWM_16BIT_MASK);
 893              		.loc 1 880 0
 894 0000 014B     		ldr	r3, .L62
 895 0002 80B2     		uxth	r0, r0
 896              	.LVL58:
 897 0004 1860     		str	r0, [r3]
 882:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 898              		.loc 1 882 0
 899              		@ sp needed for prologue
 900 0006 7047     		bx	lr
 901              	.L63:
 902              		.align	2
 903              	.L62:
 904 0008 8C010540 		.word	1074069900
 905              		.cfi_endproc
 906              	.LFE22:
 907              		.size	NavLightPWM_WriteCompare, .-NavLightPWM_WriteCompare
 908              		.section	.text.NavLightPWM_ReadCompare,"ax",%progbits
 909              		.align	1
 910              		.global	NavLightPWM_ReadCompare
 911              		.code	16
 912              		.thumb_func
 913              		.type	NavLightPWM_ReadCompare, %function
 914              	NavLightPWM_ReadCompare:
 915              	.LFB23:
 901:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 916              		.loc 1 901 0
 917              		.cfi_startproc
 924:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 918              		.loc 1 924 0
 919 0000 014B     		ldr	r3, .L65
 926:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 920              		.loc 1 926 0
 921              		@ sp needed for prologue
 924:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 922              		.loc 1 924 0
 923 0002 1868     		ldr	r0, [r3]
 924 0004 80B2     		uxth	r0, r0
 926:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 925              		.loc 1 926 0
 926 0006 7047     		bx	lr
 927              	.L66:
 928              		.align	2
 929              	.L65:
 930 0008 8C010540 		.word	1074069900
 931              		.cfi_endproc
 932              	.LFE23:
 933              		.size	NavLightPWM_ReadCompare, .-NavLightPWM_ReadCompare
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 43


 934              		.section	.text.NavLightPWM_WriteCompareBuf,"ax",%progbits
 935              		.align	1
 936              		.global	NavLightPWM_WriteCompareBuf
 937              		.code	16
 938              		.thumb_func
 939              		.type	NavLightPWM_WriteCompareBuf, %function
 940              	NavLightPWM_WriteCompareBuf:
 941              	.LFB24:
 945:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 942              		.loc 1 945 0
 943              		.cfi_startproc
 944              	.LVL59:
 966:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_COMP_CAP_BUF_REG = (compareBuf & NavLightPWM_16BIT_MASK);
 945              		.loc 1 966 0
 946 0000 014B     		ldr	r3, .L68
 947 0002 80B2     		uxth	r0, r0
 948              	.LVL60:
 949 0004 1860     		str	r0, [r3]
 968:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 950              		.loc 1 968 0
 951              		@ sp needed for prologue
 952 0006 7047     		bx	lr
 953              	.L69:
 954              		.align	2
 955              	.L68:
 956 0008 90010540 		.word	1074069904
 957              		.cfi_endproc
 958              	.LFE24:
 959              		.size	NavLightPWM_WriteCompareBuf, .-NavLightPWM_WriteCompareBuf
 960              		.section	.text.NavLightPWM_ReadCompareBuf,"ax",%progbits
 961              		.align	1
 962              		.global	NavLightPWM_ReadCompareBuf
 963              		.code	16
 964              		.thumb_func
 965              		.type	NavLightPWM_ReadCompareBuf, %function
 966              	NavLightPWM_ReadCompareBuf:
 967              	.LFB25:
 987:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 968              		.loc 1 987 0
 969              		.cfi_startproc
1010:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 970              		.loc 1 1010 0
 971 0000 014B     		ldr	r3, .L71
1012:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 972              		.loc 1 1012 0
 973              		@ sp needed for prologue
1010:.\Generated_Source\PSoC4/NavLightPWM.c ****         return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 974              		.loc 1 1010 0
 975 0002 1868     		ldr	r0, [r3]
 976 0004 80B2     		uxth	r0, r0
1012:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 977              		.loc 1 1012 0
 978 0006 7047     		bx	lr
 979              	.L72:
 980              		.align	2
 981              	.L71:
 982 0008 90010540 		.word	1074069904
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 44


 983              		.cfi_endproc
 984              	.LFE25:
 985              		.size	NavLightPWM_ReadCompareBuf, .-NavLightPWM_ReadCompareBuf
 986              		.section	.text.NavLightPWM_ReadCapture,"ax",%progbits
 987              		.align	1
 988              		.global	NavLightPWM_ReadCapture
 989              		.code	16
 990              		.thumb_func
 991              		.type	NavLightPWM_ReadCapture, %function
 992              	NavLightPWM_ReadCapture:
 993              	.LFB26:
1031:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 994              		.loc 1 1031 0
 995              		.cfi_startproc
1032:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 996              		.loc 1 1032 0
 997 0000 014B     		ldr	r3, .L74
1033:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 998              		.loc 1 1033 0
 999              		@ sp needed for prologue
1032:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_REG & NavLightPWM_16BIT_MASK);
 1000              		.loc 1 1032 0
 1001 0002 1868     		ldr	r0, [r3]
 1002 0004 80B2     		uxth	r0, r0
1033:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1003              		.loc 1 1033 0
 1004 0006 7047     		bx	lr
 1005              	.L75:
 1006              		.align	2
 1007              	.L74:
 1008 0008 8C010540 		.word	1074069900
 1009              		.cfi_endproc
 1010              	.LFE26:
 1011              		.size	NavLightPWM_ReadCapture, .-NavLightPWM_ReadCapture
 1012              		.section	.text.NavLightPWM_ReadCaptureBuf,"ax",%progbits
 1013              		.align	1
 1014              		.global	NavLightPWM_ReadCaptureBuf
 1015              		.code	16
 1016              		.thumb_func
 1017              		.type	NavLightPWM_ReadCaptureBuf, %function
 1018              	NavLightPWM_ReadCaptureBuf:
 1019              	.LFB27:
1052:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1020              		.loc 1 1052 0
 1021              		.cfi_startproc
1053:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 1022              		.loc 1 1053 0
 1023 0000 014B     		ldr	r3, .L77
1054:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1024              		.loc 1 1054 0
 1025              		@ sp needed for prologue
1053:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_COMP_CAP_BUF_REG & NavLightPWM_16BIT_MASK);
 1026              		.loc 1 1053 0
 1027 0002 1868     		ldr	r0, [r3]
 1028 0004 80B2     		uxth	r0, r0
1054:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1029              		.loc 1 1054 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 45


 1030 0006 7047     		bx	lr
 1031              	.L78:
 1032              		.align	2
 1033              	.L77:
 1034 0008 90010540 		.word	1074069904
 1035              		.cfi_endproc
 1036              	.LFE27:
 1037              		.size	NavLightPWM_ReadCaptureBuf, .-NavLightPWM_ReadCaptureBuf
 1038              		.section	.text.NavLightPWM_SetCaptureMode,"ax",%progbits
 1039              		.align	1
 1040              		.global	NavLightPWM_SetCaptureMode
 1041              		.code	16
 1042              		.thumb_func
 1043              		.type	NavLightPWM_SetCaptureMode, %function
 1044              	NavLightPWM_SetCaptureMode:
 1045              	.LFB28:
1079:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1046              		.loc 1 1079 0
 1047              		.cfi_startproc
 1048              	.LVL61:
 1049 0000 10B5     		push	{r4, lr}
 1050              	.LCFI12:
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 4, -8
 1053              		.cfi_offset 14, -4
1079:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1054              		.loc 1 1079 0
 1055 0002 041C     		mov	r4, r0
1082:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1056              		.loc 1 1082 0
 1057 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1058              	.LVL62:
1084:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_CAPTURE_MASK;
 1059              		.loc 1 1084 0
 1060 0008 054B     		ldr	r3, .L80
 1061 000a 0321     		mov	r1, #3
 1062 000c 1A68     		ldr	r2, [r3]
1088:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1063              		.loc 1 1088 0
 1064              		@ sp needed for prologue
1084:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_CAPTURE_MASK;
 1065              		.loc 1 1084 0
 1066 000e 8A43     		bic	r2, r1
 1067 0010 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= triggerMode;
 1068              		.loc 1 1085 0
 1069 0012 1A68     		ldr	r2, [r3]
 1070 0014 1443     		orr	r4, r2
 1071              	.LVL63:
 1072 0016 1C60     		str	r4, [r3]
1087:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1073              		.loc 1 1087 0
 1074 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1075              	.LVL64:
1088:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1076              		.loc 1 1088 0
 1077 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 46


 1078              	.L81:
 1079 001e C046     		.align	2
 1080              	.L80:
 1081 0020 A4010540 		.word	1074069924
 1082              		.cfi_endproc
 1083              	.LFE28:
 1084              		.size	NavLightPWM_SetCaptureMode, .-NavLightPWM_SetCaptureMode
 1085              		.section	.text.NavLightPWM_SetReloadMode,"ax",%progbits
 1086              		.align	1
 1087              		.global	NavLightPWM_SetReloadMode
 1088              		.code	16
 1089              		.thumb_func
 1090              		.type	NavLightPWM_SetReloadMode, %function
 1091              	NavLightPWM_SetReloadMode:
 1092              	.LFB29:
1112:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1093              		.loc 1 1112 0
 1094              		.cfi_startproc
 1095              	.LVL65:
 1096 0000 10B5     		push	{r4, lr}
 1097              	.LCFI13:
 1098              		.cfi_def_cfa_offset 8
 1099              		.cfi_offset 4, -8
 1100              		.cfi_offset 14, -4
1112:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1101              		.loc 1 1112 0
 1102 0002 041C     		mov	r4, r0
1115:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1103              		.loc 1 1115 0
 1104 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1105              	.LVL66:
1117:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_RELOAD_MASK;
 1106              		.loc 1 1117 0
 1107 0008 054B     		ldr	r3, .L83
 1108 000a 3021     		mov	r1, #48
 1109 000c 1A68     		ldr	r2, [r3]
1118:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
 1110              		.loc 1 1118 0
 1111 000e 2401     		lsl	r4, r4, #4
 1112              	.LVL67:
1117:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_RELOAD_MASK;
 1113              		.loc 1 1117 0
 1114 0010 8A43     		bic	r2, r1
 1115 0012 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
 1116              		.loc 1 1118 0
 1117 0014 1A68     		ldr	r2, [r3]
1121:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1118              		.loc 1 1121 0
 1119              		@ sp needed for prologue
1118:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_RELOAD_SHIFT));
 1120              		.loc 1 1118 0
 1121 0016 1443     		orr	r4, r2
 1122 0018 1C60     		str	r4, [r3]
1120:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1123              		.loc 1 1120 0
 1124 001a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 47


 1125              	.LVL68:
1121:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1126              		.loc 1 1121 0
 1127 001e 10BD     		pop	{r4, pc}
 1128              	.L84:
 1129              		.align	2
 1130              	.L83:
 1131 0020 A4010540 		.word	1074069924
 1132              		.cfi_endproc
 1133              	.LFE29:
 1134              		.size	NavLightPWM_SetReloadMode, .-NavLightPWM_SetReloadMode
 1135              		.section	.text.NavLightPWM_SetStartMode,"ax",%progbits
 1136              		.align	1
 1137              		.global	NavLightPWM_SetStartMode
 1138              		.code	16
 1139              		.thumb_func
 1140              		.type	NavLightPWM_SetStartMode, %function
 1141              	NavLightPWM_SetStartMode:
 1142              	.LFB30:
1145:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1143              		.loc 1 1145 0
 1144              		.cfi_startproc
 1145              	.LVL69:
 1146 0000 10B5     		push	{r4, lr}
 1147              	.LCFI14:
 1148              		.cfi_def_cfa_offset 8
 1149              		.cfi_offset 4, -8
 1150              		.cfi_offset 14, -4
1145:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1151              		.loc 1 1145 0
 1152 0002 041C     		mov	r4, r0
1148:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1153              		.loc 1 1148 0
 1154 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1155              	.LVL70:
1150:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_START_MASK;
 1156              		.loc 1 1150 0
 1157 0008 054B     		ldr	r3, .L86
 1158 000a 064A     		ldr	r2, .L86+4
 1159 000c 1968     		ldr	r1, [r3]
1151:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
 1160              		.loc 1 1151 0
 1161 000e 2402     		lsl	r4, r4, #8
 1162              	.LVL71:
1150:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_START_MASK;
 1163              		.loc 1 1150 0
 1164 0010 0A40     		and	r2, r1
 1165 0012 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
 1166              		.loc 1 1151 0
 1167 0014 1968     		ldr	r1, [r3]
1154:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1168              		.loc 1 1154 0
 1169              		@ sp needed for prologue
1151:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_START_SHIFT));
 1170              		.loc 1 1151 0
 1171 0016 0C43     		orr	r4, r1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 48


 1172 0018 1C60     		str	r4, [r3]
1153:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1173              		.loc 1 1153 0
 1174 001a FFF7FEFF 		bl	CyExitCriticalSection
 1175              	.LVL72:
1154:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1176              		.loc 1 1154 0
 1177 001e 10BD     		pop	{r4, pc}
 1178              	.L87:
 1179              		.align	2
 1180              	.L86:
 1181 0020 A4010540 		.word	1074069924
 1182 0024 FFFCFFFF 		.word	-769
 1183              		.cfi_endproc
 1184              	.LFE30:
 1185              		.size	NavLightPWM_SetStartMode, .-NavLightPWM_SetStartMode
 1186              		.section	.text.NavLightPWM_SetStopMode,"ax",%progbits
 1187              		.align	1
 1188              		.global	NavLightPWM_SetStopMode
 1189              		.code	16
 1190              		.thumb_func
 1191              		.type	NavLightPWM_SetStopMode, %function
 1192              	NavLightPWM_SetStopMode:
 1193              	.LFB31:
1177:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1194              		.loc 1 1177 0
 1195              		.cfi_startproc
 1196              	.LVL73:
 1197 0000 10B5     		push	{r4, lr}
 1198              	.LCFI15:
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 4, -8
 1201              		.cfi_offset 14, -4
1177:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1202              		.loc 1 1177 0
 1203 0002 041C     		mov	r4, r0
1180:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1204              		.loc 1 1180 0
 1205 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1206              	.LVL74:
1182:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_STOP_MASK;
 1207              		.loc 1 1182 0
 1208 0008 054B     		ldr	r3, .L89
 1209 000a C021     		mov	r1, #192
 1210 000c 1A68     		ldr	r2, [r3]
1183:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
 1211              		.loc 1 1183 0
 1212 000e A401     		lsl	r4, r4, #6
 1213              	.LVL75:
1182:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_STOP_MASK;
 1214              		.loc 1 1182 0
 1215 0010 8A43     		bic	r2, r1
 1216 0012 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
 1217              		.loc 1 1183 0
 1218 0014 1A68     		ldr	r2, [r3]
1186:.\Generated_Source\PSoC4/NavLightPWM.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 49


 1219              		.loc 1 1186 0
 1220              		@ sp needed for prologue
1183:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_STOP_SHIFT));
 1221              		.loc 1 1183 0
 1222 0016 1443     		orr	r4, r2
 1223 0018 1C60     		str	r4, [r3]
1185:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1224              		.loc 1 1185 0
 1225 001a FFF7FEFF 		bl	CyExitCriticalSection
 1226              	.LVL76:
1186:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1227              		.loc 1 1186 0
 1228 001e 10BD     		pop	{r4, pc}
 1229              	.L90:
 1230              		.align	2
 1231              	.L89:
 1232 0020 A4010540 		.word	1074069924
 1233              		.cfi_endproc
 1234              	.LFE31:
 1235              		.size	NavLightPWM_SetStopMode, .-NavLightPWM_SetStopMode
 1236              		.section	.text.NavLightPWM_SetCountMode,"ax",%progbits
 1237              		.align	1
 1238              		.global	NavLightPWM_SetCountMode
 1239              		.code	16
 1240              		.thumb_func
 1241              		.type	NavLightPWM_SetCountMode, %function
 1242              	NavLightPWM_SetCountMode:
 1243              	.LFB32:
1210:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1244              		.loc 1 1210 0
 1245              		.cfi_startproc
 1246              	.LVL77:
 1247 0000 10B5     		push	{r4, lr}
 1248              	.LCFI16:
 1249              		.cfi_def_cfa_offset 8
 1250              		.cfi_offset 4, -8
 1251              		.cfi_offset 14, -4
1210:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1252              		.loc 1 1210 0
 1253 0002 041C     		mov	r4, r0
1213:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1254              		.loc 1 1213 0
 1255 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1256              	.LVL78:
1215:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_COUNT_MASK;
 1257              		.loc 1 1215 0
 1258 0008 054B     		ldr	r3, .L92
 1259 000a 0C21     		mov	r1, #12
 1260 000c 1A68     		ldr	r2, [r3]
1216:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
 1261              		.loc 1 1216 0
 1262 000e A400     		lsl	r4, r4, #2
 1263              	.LVL79:
1215:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG &= (uint32)~NavLightPWM_COUNT_MASK;
 1264              		.loc 1 1215 0
 1265 0010 8A43     		bic	r2, r1
 1266 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 50


1216:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
 1267              		.loc 1 1216 0
 1268 0014 1A68     		ldr	r2, [r3]
1219:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1269              		.loc 1 1219 0
 1270              		@ sp needed for prologue
1216:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << NavLightPWM_COUNT_SHIFT));
 1271              		.loc 1 1216 0
 1272 0016 1443     		orr	r4, r2
 1273 0018 1C60     		str	r4, [r3]
1218:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1274              		.loc 1 1218 0
 1275 001a FFF7FEFF 		bl	CyExitCriticalSection
 1276              	.LVL80:
1219:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1277              		.loc 1 1219 0
 1278 001e 10BD     		pop	{r4, pc}
 1279              	.L93:
 1280              		.align	2
 1281              	.L92:
 1282 0020 A4010540 		.word	1074069924
 1283              		.cfi_endproc
 1284              	.LFE32:
 1285              		.size	NavLightPWM_SetCountMode, .-NavLightPWM_SetCountMode
 1286              		.section	.text.NavLightPWM_TriggerCommand,"ax",%progbits
 1287              		.align	1
 1288              		.global	NavLightPWM_TriggerCommand
 1289              		.code	16
 1290              		.thumb_func
 1291              		.type	NavLightPWM_TriggerCommand, %function
 1292              	NavLightPWM_TriggerCommand:
 1293              	.LFB33:
1250:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1294              		.loc 1 1250 0
 1295              		.cfi_startproc
 1296              	.LVL81:
 1297 0000 38B5     		push	{r3, r4, r5, lr}
 1298              	.LCFI17:
 1299              		.cfi_def_cfa_offset 16
 1300              		.cfi_offset 3, -16
 1301              		.cfi_offset 4, -12
 1302              		.cfi_offset 5, -8
 1303              		.cfi_offset 14, -4
1250:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1304              		.loc 1 1250 0
 1305 0002 0C1C     		mov	r4, r1
 1306 0004 051C     		mov	r5, r0
1253:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1307              		.loc 1 1253 0
 1308 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1309              	.LVL82:
1255:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_COMMAND_REG = ((uint32)(mask << command));
 1310              		.loc 1 1255 0
 1311 000a 034B     		ldr	r3, .L95
 1312 000c A540     		lsl	r5, r5, r4
 1313              	.LVL83:
 1314 000e 1D60     		str	r5, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 51


1257:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1315              		.loc 1 1257 0
 1316 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1317              	.LVL84:
1258:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1318              		.loc 1 1258 0
 1319              		@ sp needed for prologue
 1320              	.LVL85:
 1321 0014 38BD     		pop	{r3, r4, r5, pc}
 1322              	.L96:
 1323 0016 C046     		.align	2
 1324              	.L95:
 1325 0018 08000540 		.word	1074069512
 1326              		.cfi_endproc
 1327              	.LFE33:
 1328              		.size	NavLightPWM_TriggerCommand, .-NavLightPWM_TriggerCommand
 1329              		.section	.text.NavLightPWM_Enable,"ax",%progbits
 1330              		.align	1
 1331              		.global	NavLightPWM_Enable
 1332              		.code	16
 1333              		.thumb_func
 1334              		.type	NavLightPWM_Enable, %function
 1335              	NavLightPWM_Enable:
 1336              	.LFB1:
 201:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1337              		.loc 1 201 0
 1338              		.cfi_startproc
 1339 0000 10B5     		push	{r4, lr}
 1340              	.LCFI18:
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 4, -8
 1343              		.cfi_offset 14, -4
 204:.\Generated_Source\PSoC4/NavLightPWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1344              		.loc 1 204 0
 1345 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1346              	.LVL86:
 205:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG |= NavLightPWM_MASK;
 1347              		.loc 1 205 0
 1348 0006 064B     		ldr	r3, .L98
 1349 0008 0424     		mov	r4, #4
 1350 000a 1A68     		ldr	r2, [r3]
 220:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1351              		.loc 1 220 0
 1352              		@ sp needed for prologue
 205:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_BLOCK_CONTROL_REG |= NavLightPWM_MASK;
 1353              		.loc 1 205 0
 1354 000c 2243     		orr	r2, r4
 1355 000e 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/NavLightPWM.c ****     CyExitCriticalSection(enableInterrupts);
 1356              		.loc 1 206 0
 1357 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1358              	.LVL87:
 211:.\Generated_Source\PSoC4/NavLightPWM.c ****             NavLightPWM_TriggerCommand(NavLightPWM_MASK, NavLightPWM_CMD_START);
 1359              		.loc 1 211 0
 1360 0014 201C     		mov	r0, r4
 1361 0016 1821     		mov	r1, #24
 1362 0018 FFF7FEFF 		bl	NavLightPWM_TriggerCommand
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 52


 1363              	.LVL88:
 220:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1364              		.loc 1 220 0
 1365 001c 10BD     		pop	{r4, pc}
 1366              	.L99:
 1367 001e C046     		.align	2
 1368              	.L98:
 1369 0020 00000540 		.word	1074069504
 1370              		.cfi_endproc
 1371              	.LFE1:
 1372              		.size	NavLightPWM_Enable, .-NavLightPWM_Enable
 1373              		.section	.text.NavLightPWM_Start,"ax",%progbits
 1374              		.align	1
 1375              		.global	NavLightPWM_Start
 1376              		.code	16
 1377              		.thumb_func
 1378              		.type	NavLightPWM_Start, %function
 1379              	NavLightPWM_Start:
 1380              	.LFB2:
 248:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1381              		.loc 1 248 0
 1382              		.cfi_startproc
 1383 0000 10B5     		push	{r4, lr}
 1384              	.LCFI19:
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 4, -8
 1387              		.cfi_offset 14, -4
 249:.\Generated_Source\PSoC4/NavLightPWM.c ****     if (0u == NavLightPWM_initVar)
 1388              		.loc 1 249 0
 1389 0002 054C     		ldr	r4, .L103
 1390 0004 2378     		ldrb	r3, [r4]
 1391 0006 002B     		cmp	r3, #0
 1392 0008 03D1     		bne	.L101
 251:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_Init();
 1393              		.loc 1 251 0
 1394 000a FFF7FEFF 		bl	NavLightPWM_Init
 1395              	.LVL89:
 252:.\Generated_Source\PSoC4/NavLightPWM.c ****         NavLightPWM_initVar = 1u;
 1396              		.loc 1 252 0
 1397 000e 0120     		mov	r0, #1
 1398 0010 2070     		strb	r0, [r4]
 1399              	.L101:
 255:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_Enable();
 1400              		.loc 1 255 0
 1401 0012 FFF7FEFF 		bl	NavLightPWM_Enable
 1402              	.LVL90:
 256:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1403              		.loc 1 256 0
 1404              		@ sp needed for prologue
 1405 0016 10BD     		pop	{r4, pc}
 1406              	.L104:
 1407              		.align	2
 1408              	.L103:
 1409 0018 00000000 		.word	.LANCHOR0
 1410              		.cfi_endproc
 1411              	.LFE2:
 1412              		.size	NavLightPWM_Start, .-NavLightPWM_Start
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 53


 1413              		.section	.text.NavLightPWM_ReadStatus,"ax",%progbits
 1414              		.align	1
 1415              		.global	NavLightPWM_ReadStatus
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	NavLightPWM_ReadStatus, %function
 1419              	NavLightPWM_ReadStatus:
 1420              	.LFB34:
1279:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1421              		.loc 1 1279 0
 1422              		.cfi_startproc
1280:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
 1423              		.loc 1 1280 0
 1424 0000 034B     		ldr	r3, .L106
1281:.\Generated_Source\PSoC4/NavLightPWM.c ****             (NavLightPWM_STATUS_REG & NavLightPWM_STATUS_DOWN));
 1425              		.loc 1 1281 0
 1426 0002 0121     		mov	r1, #1
1280:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
 1427              		.loc 1 1280 0
 1428 0004 1A68     		ldr	r2, [r3]
1281:.\Generated_Source\PSoC4/NavLightPWM.c ****             (NavLightPWM_STATUS_REG & NavLightPWM_STATUS_DOWN));
 1429              		.loc 1 1281 0
 1430 0006 1868     		ldr	r0, [r3]
1280:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
 1431              		.loc 1 1280 0
 1432 0008 930F     		lsr	r3, r2, #30
1281:.\Generated_Source\PSoC4/NavLightPWM.c ****             (NavLightPWM_STATUS_REG & NavLightPWM_STATUS_DOWN));
 1433              		.loc 1 1281 0
 1434 000a 0840     		and	r0, r1
1280:.\Generated_Source\PSoC4/NavLightPWM.c ****     return ((NavLightPWM_STATUS_REG >> NavLightPWM_RUNNING_STATUS_SHIFT) |
 1435              		.loc 1 1280 0
 1436 000c 1843     		orr	r0, r3
1282:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1437              		.loc 1 1282 0
 1438              		@ sp needed for prologue
 1439 000e 7047     		bx	lr
 1440              	.L107:
 1441              		.align	2
 1442              	.L106:
 1443 0010 84010540 		.word	1074069892
 1444              		.cfi_endproc
 1445              	.LFE34:
 1446              		.size	NavLightPWM_ReadStatus, .-NavLightPWM_ReadStatus
 1447              		.section	.text.NavLightPWM_SetInterruptMode,"ax",%progbits
 1448              		.align	1
 1449              		.global	NavLightPWM_SetInterruptMode
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	NavLightPWM_SetInterruptMode, %function
 1453              	NavLightPWM_SetInterruptMode:
 1454              	.LFB35:
1304:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1455              		.loc 1 1304 0
 1456              		.cfi_startproc
 1457              	.LVL91:
 1458              		.loc 1 1305 0
 1459 0000 014B     		ldr	r3, .L109
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 54


1306:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1460              		.loc 1 1306 0
 1461              		@ sp needed for prologue
1305:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_MASK_REG =  interruptMask;
 1462              		.loc 1 1305 0
 1463 0002 1860     		str	r0, [r3]
 1464              		.loc 1 1306 0
 1465 0004 7047     		bx	lr
 1466              	.L110:
 1467 0006 C046     		.align	2
 1468              	.L109:
 1469 0008 B8010540 		.word	1074069944
 1470              		.cfi_endproc
 1471              	.LFE35:
 1472              		.size	NavLightPWM_SetInterruptMode, .-NavLightPWM_SetInterruptMode
 1473              		.section	.text.NavLightPWM_GetInterruptSourceMasked,"ax",%progbits
 1474              		.align	1
 1475              		.global	NavLightPWM_GetInterruptSourceMasked
 1476              		.code	16
 1477              		.thumb_func
 1478              		.type	NavLightPWM_GetInterruptSourceMasked, %function
 1479              	NavLightPWM_GetInterruptSourceMasked:
 1480              	.LFB36:
1307:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1308:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1309:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1313:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1314:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1316:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1317:.\Generated_Source\PSoC4/NavLightPWM.c **** *   None
1318:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1319:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1320:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1322:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1325:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1481              		.loc 1 1327 0
 1482              		.cfi_startproc
1328:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_MASKED_REG);
 1483              		.loc 1 1328 0
 1484 0000 014B     		ldr	r3, .L112
1329:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1485              		.loc 1 1329 0
 1486              		@ sp needed for prologue
1328:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_MASKED_REG);
 1487              		.loc 1 1328 0
 1488 0002 1868     		ldr	r0, [r3]
 1489              		.loc 1 1329 0
 1490 0004 7047     		bx	lr
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 55


 1491              	.L113:
 1492 0006 C046     		.align	2
 1493              	.L112:
 1494 0008 BC010540 		.word	1074069948
 1495              		.cfi_endproc
 1496              	.LFE36:
 1497              		.size	NavLightPWM_GetInterruptSourceMasked, .-NavLightPWM_GetInterruptSourceMasked
 1498              		.section	.text.NavLightPWM_GetInterruptSource,"ax",%progbits
 1499              		.align	1
 1500              		.global	NavLightPWM_GetInterruptSource
 1501              		.code	16
 1502              		.thumb_func
 1503              		.type	NavLightPWM_GetInterruptSource, %function
 1504              	NavLightPWM_GetInterruptSource:
 1505              	.LFB37:
1330:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1331:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1332:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_GetInterruptSource
1334:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1336:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1337:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1339:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1340:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1341:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1342:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1343:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1345:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1348:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/NavLightPWM.c **** uint32 NavLightPWM_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1506              		.loc 1 1350 0
 1507              		.cfi_startproc
1351:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_REQ_REG);
 1508              		.loc 1 1351 0
 1509 0000 014B     		ldr	r3, .L115
1352:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1510              		.loc 1 1352 0
 1511              		@ sp needed for prologue
1351:.\Generated_Source\PSoC4/NavLightPWM.c ****     return (NavLightPWM_INTERRUPT_REQ_REG);
 1512              		.loc 1 1351 0
 1513 0002 1868     		ldr	r0, [r3]
 1514              		.loc 1 1352 0
 1515 0004 7047     		bx	lr
 1516              	.L116:
 1517 0006 C046     		.align	2
 1518              	.L115:
 1519 0008 B0010540 		.word	1074069936
 1520              		.cfi_endproc
 1521              	.LFE37:
 1522              		.size	NavLightPWM_GetInterruptSource, .-NavLightPWM_GetInterruptSource
 1523              		.section	.text.NavLightPWM_ClearInterrupt,"ax",%progbits
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 56


 1524              		.align	1
 1525              		.global	NavLightPWM_ClearInterrupt
 1526              		.code	16
 1527              		.thumb_func
 1528              		.type	NavLightPWM_ClearInterrupt, %function
 1529              	NavLightPWM_ClearInterrupt:
 1530              	.LFB38:
1353:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1354:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1355:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_ClearInterrupt
1357:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1359:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1360:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1362:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1363:.\Generated_Source\PSoC4/NavLightPWM.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1365:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1368:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1369:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1370:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1371:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1531              		.loc 1 1373 0
 1532              		.cfi_startproc
 1533              	.LVL92:
1374:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_REQ_REG = interruptMask;
 1534              		.loc 1 1374 0
 1535 0000 014B     		ldr	r3, .L118
1375:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1536              		.loc 1 1375 0
 1537              		@ sp needed for prologue
1374:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_REQ_REG = interruptMask;
 1538              		.loc 1 1374 0
 1539 0002 1860     		str	r0, [r3]
 1540              		.loc 1 1375 0
 1541 0004 7047     		bx	lr
 1542              	.L119:
 1543 0006 C046     		.align	2
 1544              	.L118:
 1545 0008 B0010540 		.word	1074069936
 1546              		.cfi_endproc
 1547              	.LFE38:
 1548              		.size	NavLightPWM_ClearInterrupt, .-NavLightPWM_ClearInterrupt
 1549              		.section	.text.NavLightPWM_SetInterrupt,"ax",%progbits
 1550              		.align	1
 1551              		.global	NavLightPWM_SetInterrupt
 1552              		.code	16
 1553              		.thumb_func
 1554              		.type	NavLightPWM_SetInterrupt, %function
 1555              	NavLightPWM_SetInterrupt:
 1556              	.LFB39:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 57


1376:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1377:.\Generated_Source\PSoC4/NavLightPWM.c **** 
1378:.\Generated_Source\PSoC4/NavLightPWM.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/NavLightPWM.c **** * Function Name: NavLightPWM_SetInterrupt
1380:.\Generated_Source\PSoC4/NavLightPWM.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1382:.\Generated_Source\PSoC4/NavLightPWM.c **** * Summary:
1383:.\Generated_Source\PSoC4/NavLightPWM.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1385:.\Generated_Source\PSoC4/NavLightPWM.c **** * Parameters:
1386:.\Generated_Source\PSoC4/NavLightPWM.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/NavLightPWM.c **** *   Values:
1388:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/NavLightPWM.c **** *     - NavLightPWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1391:.\Generated_Source\PSoC4/NavLightPWM.c **** * Return:
1392:.\Generated_Source\PSoC4/NavLightPWM.c **** *  None
1393:.\Generated_Source\PSoC4/NavLightPWM.c **** *
1394:.\Generated_Source\PSoC4/NavLightPWM.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/NavLightPWM.c **** void NavLightPWM_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/NavLightPWM.c **** {
 1557              		.loc 1 1396 0
 1558              		.cfi_startproc
 1559              	.LVL93:
1397:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_SET_REG = interruptMask;
 1560              		.loc 1 1397 0
 1561 0000 014B     		ldr	r3, .L121
1398:.\Generated_Source\PSoC4/NavLightPWM.c **** }
 1562              		.loc 1 1398 0
 1563              		@ sp needed for prologue
1397:.\Generated_Source\PSoC4/NavLightPWM.c ****     NavLightPWM_INTERRUPT_SET_REG = interruptMask;
 1564              		.loc 1 1397 0
 1565 0002 1860     		str	r0, [r3]
 1566              		.loc 1 1398 0
 1567 0004 7047     		bx	lr
 1568              	.L122:
 1569 0006 C046     		.align	2
 1570              	.L121:
 1571 0008 B4010540 		.word	1074069940
 1572              		.cfi_endproc
 1573              	.LFE39:
 1574              		.size	NavLightPWM_SetInterrupt, .-NavLightPWM_SetInterrupt
 1575              		.global	NavLightPWM_initVar
 1576              		.bss
 1577              		.set	.LANCHOR0,. + 0
 1578              		.type	NavLightPWM_initVar, %object
 1579              		.size	NavLightPWM_initVar, 1
 1580              	NavLightPWM_initVar:
 1581 0000 00       		.space	1
 1582              		.text
 1583              	.Letext0:
 1584              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1585              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1586              		.section	.debug_info,"",%progbits
 1587              	.Ldebug_info0:
 1588 0000 ED090000 		.4byte	0x9ed
 1589 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 58


 1590 0006 00000000 		.4byte	.Ldebug_abbrev0
 1591 000a 04       		.byte	0x4
 1592 000b 01       		.uleb128 0x1
 1593 000c 2B040000 		.4byte	.LASF76
 1594 0010 01       		.byte	0x1
 1595 0011 B8040000 		.4byte	.LASF77
 1596 0015 20010000 		.4byte	.LASF78
 1597 0019 58000000 		.4byte	.Ldebug_ranges0+0x58
 1598 001d 00000000 		.4byte	0
 1599 0021 00000000 		.4byte	0
 1600 0025 00000000 		.4byte	.Ldebug_line0
 1601 0029 02       		.uleb128 0x2
 1602 002a 01       		.byte	0x1
 1603 002b 06       		.byte	0x6
 1604 002c E3000000 		.4byte	.LASF0
 1605 0030 02       		.uleb128 0x2
 1606 0031 01       		.byte	0x1
 1607 0032 08       		.byte	0x8
 1608 0033 74040000 		.4byte	.LASF1
 1609 0037 02       		.uleb128 0x2
 1610 0038 02       		.byte	0x2
 1611 0039 05       		.byte	0x5
 1612 003a AE040000 		.4byte	.LASF2
 1613 003e 02       		.uleb128 0x2
 1614 003f 02       		.byte	0x2
 1615 0040 07       		.byte	0x7
 1616 0041 05030000 		.4byte	.LASF3
 1617 0045 02       		.uleb128 0x2
 1618 0046 04       		.byte	0x4
 1619 0047 05       		.byte	0x5
 1620 0048 B0010000 		.4byte	.LASF4
 1621 004c 02       		.uleb128 0x2
 1622 004d 04       		.byte	0x4
 1623 004e 07       		.byte	0x7
 1624 004f A5020000 		.4byte	.LASF5
 1625 0053 02       		.uleb128 0x2
 1626 0054 08       		.byte	0x8
 1627 0055 05       		.byte	0x5
 1628 0056 D5000000 		.4byte	.LASF6
 1629 005a 02       		.uleb128 0x2
 1630 005b 08       		.byte	0x8
 1631 005c 07       		.byte	0x7
 1632 005d 7B000000 		.4byte	.LASF7
 1633 0061 03       		.uleb128 0x3
 1634 0062 04       		.byte	0x4
 1635 0063 05       		.byte	0x5
 1636 0064 696E7400 		.ascii	"int\000"
 1637 0068 02       		.uleb128 0x2
 1638 0069 04       		.byte	0x4
 1639 006a 07       		.byte	0x7
 1640 006b 74020000 		.4byte	.LASF8
 1641 006f 04       		.uleb128 0x4
 1642 0070 D3010000 		.4byte	.LASF9
 1643 0074 02       		.byte	0x2
 1644 0075 5B       		.byte	0x5b
 1645 0076 30000000 		.4byte	0x30
 1646 007a 04       		.uleb128 0x4
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 59


 1647 007b F7010000 		.4byte	.LASF10
 1648 007f 02       		.byte	0x2
 1649 0080 5D       		.byte	0x5d
 1650 0081 4C000000 		.4byte	0x4c
 1651 0085 02       		.uleb128 0x2
 1652 0086 04       		.byte	0x4
 1653 0087 04       		.byte	0x4
 1654 0088 1B040000 		.4byte	.LASF11
 1655 008c 02       		.uleb128 0x2
 1656 008d 08       		.byte	0x8
 1657 008e 04       		.byte	0x4
 1658 008f D9010000 		.4byte	.LASF12
 1659 0093 02       		.uleb128 0x2
 1660 0094 01       		.byte	0x1
 1661 0095 08       		.byte	0x8
 1662 0096 44050000 		.4byte	.LASF13
 1663 009a 04       		.uleb128 0x4
 1664 009b 9B030000 		.4byte	.LASF14
 1665 009f 02       		.byte	0x2
 1666 00a0 F2       		.byte	0xf2
 1667 00a1 A5000000 		.4byte	0xa5
 1668 00a5 05       		.uleb128 0x5
 1669 00a6 7A000000 		.4byte	0x7a
 1670 00aa 02       		.uleb128 0x2
 1671 00ab 04       		.byte	0x4
 1672 00ac 07       		.byte	0x7
 1673 00ad AD030000 		.4byte	.LASF15
 1674 00b1 06       		.uleb128 0x6
 1675 00b2 01       		.byte	0x1
 1676 00b3 C0020000 		.4byte	.LASF16
 1677 00b7 01       		.byte	0x1
 1678 00b8 1705     		.2byte	0x517
 1679 00ba 01       		.byte	0x1
 1680 00bb 01       		.byte	0x1
 1681 00bc CD000000 		.4byte	0xcd
 1682 00c0 07       		.uleb128 0x7
 1683 00c1 F8040000 		.4byte	.LASF18
 1684 00c5 01       		.byte	0x1
 1685 00c6 1705     		.2byte	0x517
 1686 00c8 7A000000 		.4byte	0x7a
 1687 00cc 00       		.byte	0
 1688 00cd 06       		.uleb128 0x6
 1689 00ce 01       		.byte	0x1
 1690 00cf 00000000 		.4byte	.LASF17
 1691 00d3 01       		.byte	0x1
 1692 00d4 C602     		.2byte	0x2c6
 1693 00d6 01       		.byte	0x1
 1694 00d7 01       		.byte	0x1
 1695 00d8 E9000000 		.4byte	0xe9
 1696 00dc 07       		.uleb128 0x7
 1697 00dd 74000000 		.4byte	.LASF19
 1698 00e1 01       		.byte	0x1
 1699 00e2 C602     		.2byte	0x2c6
 1700 00e4 7A000000 		.4byte	0x7a
 1701 00e8 00       		.byte	0
 1702 00e9 06       		.uleb128 0x6
 1703 00ea 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 60


 1704 00eb FA050000 		.4byte	.LASF20
 1705 00ef 01       		.byte	0x1
 1706 00f0 5A03     		.2byte	0x35a
 1707 00f2 01       		.byte	0x1
 1708 00f3 01       		.byte	0x1
 1709 00f4 05010000 		.4byte	0x105
 1710 00f8 07       		.uleb128 0x7
 1711 00f9 E0030000 		.4byte	.LASF21
 1712 00fd 01       		.byte	0x1
 1713 00fe 5A03     		.2byte	0x35a
 1714 0100 7A000000 		.4byte	0x7a
 1715 0104 00       		.byte	0
 1716 0105 08       		.uleb128 0x8
 1717 0106 01       		.byte	0x1
 1718 0107 69050000 		.4byte	.LASF22
 1719 010b 01       		.byte	0x1
 1720 010c 27       		.byte	0x27
 1721 010d 01       		.byte	0x1
 1722 010e 00000000 		.4byte	.LFB0
 1723 0112 48000000 		.4byte	.LFE0
 1724 0116 02       		.byte	0x2
 1725 0117 7D       		.byte	0x7d
 1726 0118 00       		.sleb128 0
 1727 0119 01       		.byte	0x1
 1728 011a 69010000 		.4byte	0x169
 1729 011e 09       		.uleb128 0x9
 1730 011f B1000000 		.4byte	0xb1
 1731 0123 10000000 		.4byte	.LBB8
 1732 0127 00000000 		.4byte	.Ldebug_ranges0+0
 1733 012b 01       		.byte	0x1
 1734 012c 77       		.byte	0x77
 1735 012d 38010000 		.4byte	0x138
 1736 0131 0A       		.uleb128 0xa
 1737 0132 C0000000 		.4byte	0xc0
 1738 0136 00       		.byte	0
 1739 0137 00       		.byte	0
 1740 0138 09       		.uleb128 0x9
 1741 0139 CD000000 		.4byte	0xcd
 1742 013d 1A000000 		.4byte	.LBB13
 1743 0141 20000000 		.4byte	.Ldebug_ranges0+0x20
 1744 0145 01       		.byte	0x1
 1745 0146 91       		.byte	0x91
 1746 0147 52010000 		.4byte	0x152
 1747 014b 0A       		.uleb128 0xa
 1748 014c DC000000 		.4byte	0xdc
 1749 0150 64       		.byte	0x64
 1750 0151 00       		.byte	0
 1751 0152 0B       		.uleb128 0xb
 1752 0153 E9000000 		.4byte	0xe9
 1753 0157 22000000 		.4byte	.LBB18
 1754 015b 38000000 		.4byte	.Ldebug_ranges0+0x38
 1755 015f 01       		.byte	0x1
 1756 0160 92       		.byte	0x92
 1757 0161 0A       		.uleb128 0xa
 1758 0162 F8000000 		.4byte	0xf8
 1759 0166 32       		.byte	0x32
 1760 0167 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 61


 1761 0168 00       		.byte	0
 1762 0169 0C       		.uleb128 0xc
 1763 016a 01       		.byte	0x1
 1764 016b F4020000 		.4byte	.LASF23
 1765 016f 01       		.byte	0x1
 1766 0170 1101     		.2byte	0x111
 1767 0172 01       		.byte	0x1
 1768 0173 00000000 		.4byte	.LFB3
 1769 0177 1C000000 		.4byte	.LFE3
 1770 017b 00000000 		.4byte	.LLST0
 1771 017f 01       		.byte	0x1
 1772 0180 A7010000 		.4byte	0x1a7
 1773 0184 0D       		.uleb128 0xd
 1774 0185 CE050000 		.4byte	.LASF25
 1775 0189 01       		.byte	0x1
 1776 018a 1301     		.2byte	0x113
 1777 018c 6F000000 		.4byte	0x6f
 1778 0190 20000000 		.4byte	.LLST1
 1779 0194 0E       		.uleb128 0xe
 1780 0195 06000000 		.4byte	.LVL3
 1781 0199 D2090000 		.4byte	0x9d2
 1782 019d 0E       		.uleb128 0xe
 1783 019e 14000000 		.4byte	.LVL4
 1784 01a2 E0090000 		.4byte	0x9e0
 1785 01a6 00       		.byte	0
 1786 01a7 0C       		.uleb128 0xc
 1787 01a8 01       		.byte	0x1
 1788 01a9 60020000 		.4byte	.LASF24
 1789 01ad 01       		.byte	0x1
 1790 01ae 3601     		.2byte	0x136
 1791 01b0 01       		.byte	0x1
 1792 01b1 00000000 		.4byte	.LFB4
 1793 01b5 28000000 		.4byte	.LFE4
 1794 01b9 33000000 		.4byte	.LLST2
 1795 01bd 01       		.byte	0x1
 1796 01be F5010000 		.4byte	0x1f5
 1797 01c2 0F       		.uleb128 0xf
 1798 01c3 49050000 		.4byte	.LASF27
 1799 01c7 01       		.byte	0x1
 1800 01c8 3601     		.2byte	0x136
 1801 01ca 7A000000 		.4byte	0x7a
 1802 01ce 53000000 		.4byte	.LLST3
 1803 01d2 0D       		.uleb128 0xd
 1804 01d3 CE050000 		.4byte	.LASF25
 1805 01d7 01       		.byte	0x1
 1806 01d8 3801     		.2byte	0x138
 1807 01da 6F000000 		.4byte	0x6f
 1808 01de 7F000000 		.4byte	.LLST4
 1809 01e2 0E       		.uleb128 0xe
 1810 01e3 08000000 		.4byte	.LVL6
 1811 01e7 D2090000 		.4byte	0x9d2
 1812 01eb 0E       		.uleb128 0xe
 1813 01ec 1C000000 		.4byte	.LVL8
 1814 01f0 E0090000 		.4byte	0x9e0
 1815 01f4 00       		.byte	0
 1816 01f5 0C       		.uleb128 0xc
 1817 01f6 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 62


 1818 01f7 33030000 		.4byte	.LASF26
 1819 01fb 01       		.byte	0x1
 1820 01fc 5701     		.2byte	0x157
 1821 01fe 01       		.byte	0x1
 1822 01ff 00000000 		.4byte	.LFB5
 1823 0203 28000000 		.4byte	.LFE5
 1824 0207 92000000 		.4byte	.LLST5
 1825 020b 01       		.byte	0x1
 1826 020c 43020000 		.4byte	0x243
 1827 0210 0F       		.uleb128 0xf
 1828 0211 B1000000 		.4byte	.LASF28
 1829 0215 01       		.byte	0x1
 1830 0216 5701     		.2byte	0x157
 1831 0218 7A000000 		.4byte	0x7a
 1832 021c B2000000 		.4byte	.LLST6
 1833 0220 0D       		.uleb128 0xd
 1834 0221 CE050000 		.4byte	.LASF25
 1835 0225 01       		.byte	0x1
 1836 0226 5901     		.2byte	0x159
 1837 0228 6F000000 		.4byte	0x6f
 1838 022c DE000000 		.4byte	.LLST7
 1839 0230 0E       		.uleb128 0xe
 1840 0231 08000000 		.4byte	.LVL10
 1841 0235 D2090000 		.4byte	0x9d2
 1842 0239 0E       		.uleb128 0xe
 1843 023a 1C000000 		.4byte	.LVL12
 1844 023e E0090000 		.4byte	0x9e0
 1845 0242 00       		.byte	0
 1846 0243 0C       		.uleb128 0xc
 1847 0244 01       		.byte	0x1
 1848 0245 1E020000 		.4byte	.LASF29
 1849 0249 01       		.byte	0x1
 1850 024a 7C01     		.2byte	0x17c
 1851 024c 01       		.byte	0x1
 1852 024d 00000000 		.4byte	.LFB6
 1853 0251 28000000 		.4byte	.LFE6
 1854 0255 F1000000 		.4byte	.LLST8
 1855 0259 01       		.byte	0x1
 1856 025a 91020000 		.4byte	0x291
 1857 025e 0F       		.uleb128 0xf
 1858 025f 21040000 		.4byte	.LASF30
 1859 0263 01       		.byte	0x1
 1860 0264 7C01     		.2byte	0x17c
 1861 0266 7A000000 		.4byte	0x7a
 1862 026a 11010000 		.4byte	.LLST9
 1863 026e 0D       		.uleb128 0xd
 1864 026f CE050000 		.4byte	.LASF25
 1865 0273 01       		.byte	0x1
 1866 0274 7E01     		.2byte	0x17e
 1867 0276 6F000000 		.4byte	0x6f
 1868 027a 3D010000 		.4byte	.LLST10
 1869 027e 0E       		.uleb128 0xe
 1870 027f 08000000 		.4byte	.LVL14
 1871 0283 D2090000 		.4byte	0x9d2
 1872 0287 0E       		.uleb128 0xe
 1873 0288 1C000000 		.4byte	.LVL16
 1874 028c E0090000 		.4byte	0x9e0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 63


 1875 0290 00       		.byte	0
 1876 0291 0C       		.uleb128 0xc
 1877 0292 01       		.byte	0x1
 1878 0293 E0010000 		.4byte	.LASF31
 1879 0297 01       		.byte	0x1
 1880 0298 9C01     		.2byte	0x19c
 1881 029a 01       		.byte	0x1
 1882 029b 00000000 		.4byte	.LFB7
 1883 029f 2C000000 		.4byte	.LFE7
 1884 02a3 50010000 		.4byte	.LLST11
 1885 02a7 01       		.byte	0x1
 1886 02a8 DF020000 		.4byte	0x2df
 1887 02ac 0F       		.uleb128 0xf
 1888 02ad 60030000 		.4byte	.LASF32
 1889 02b1 01       		.byte	0x1
 1890 02b2 9C01     		.2byte	0x19c
 1891 02b4 7A000000 		.4byte	0x7a
 1892 02b8 70010000 		.4byte	.LLST12
 1893 02bc 0D       		.uleb128 0xd
 1894 02bd CE050000 		.4byte	.LASF25
 1895 02c1 01       		.byte	0x1
 1896 02c2 9E01     		.2byte	0x19e
 1897 02c4 6F000000 		.4byte	0x6f
 1898 02c8 9C010000 		.4byte	.LLST13
 1899 02cc 0E       		.uleb128 0xe
 1900 02cd 08000000 		.4byte	.LVL18
 1901 02d1 D2090000 		.4byte	0x9d2
 1902 02d5 0E       		.uleb128 0xe
 1903 02d6 22000000 		.4byte	.LVL20
 1904 02da E0090000 		.4byte	0x9e0
 1905 02de 00       		.byte	0
 1906 02df 10       		.uleb128 0x10
 1907 02e0 01       		.byte	0x1
 1908 02e1 DD020000 		.4byte	.LASF33
 1909 02e5 01       		.byte	0x1
 1910 02e6 D201     		.2byte	0x1d2
 1911 02e8 01       		.byte	0x1
 1912 02e9 00000000 		.4byte	.LFB8
 1913 02ed 10000000 		.4byte	.LFE8
 1914 02f1 02       		.byte	0x2
 1915 02f2 7D       		.byte	0x7d
 1916 02f3 00       		.sleb128 0
 1917 02f4 01       		.byte	0x1
 1918 02f5 0A030000 		.4byte	0x30a
 1919 02f9 0F       		.uleb128 0xf
 1920 02fa B7020000 		.4byte	.LASF34
 1921 02fe 01       		.byte	0x1
 1922 02ff D201     		.2byte	0x1d2
 1923 0301 7A000000 		.4byte	0x7a
 1924 0305 AF010000 		.4byte	.LLST14
 1925 0309 00       		.byte	0
 1926 030a 0C       		.uleb128 0xc
 1927 030b 01       		.byte	0x1
 1928 030c 00040000 		.4byte	.LASF35
 1929 0310 01       		.byte	0x1
 1930 0311 F601     		.2byte	0x1f6
 1931 0313 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 64


 1932 0314 00000000 		.4byte	.LFB9
 1933 0318 28000000 		.4byte	.LFE9
 1934 031c D0010000 		.4byte	.LLST15
 1935 0320 01       		.byte	0x1
 1936 0321 58030000 		.4byte	0x358
 1937 0325 0F       		.uleb128 0xf
 1938 0326 B6030000 		.4byte	.LASF36
 1939 032a 01       		.byte	0x1
 1940 032b F601     		.2byte	0x1f6
 1941 032d 7A000000 		.4byte	0x7a
 1942 0331 F0010000 		.4byte	.LLST16
 1943 0335 0D       		.uleb128 0xd
 1944 0336 CE050000 		.4byte	.LASF25
 1945 033a 01       		.byte	0x1
 1946 033b F801     		.2byte	0x1f8
 1947 033d 6F000000 		.4byte	0x6f
 1948 0341 1C020000 		.4byte	.LLST17
 1949 0345 0E       		.uleb128 0xe
 1950 0346 08000000 		.4byte	.LVL24
 1951 034a D2090000 		.4byte	0x9d2
 1952 034e 0E       		.uleb128 0xe
 1953 034f 22000000 		.4byte	.LVL26
 1954 0353 E0090000 		.4byte	0x9e0
 1955 0357 00       		.byte	0
 1956 0358 0C       		.uleb128 0xc
 1957 0359 01       		.byte	0x1
 1958 035a B8000000 		.4byte	.LASF37
 1959 035e 01       		.byte	0x1
 1960 035f 1802     		.2byte	0x218
 1961 0361 01       		.byte	0x1
 1962 0362 00000000 		.4byte	.LFB10
 1963 0366 28000000 		.4byte	.LFE10
 1964 036a 2F020000 		.4byte	.LLST18
 1965 036e 01       		.byte	0x1
 1966 036f A6030000 		.4byte	0x3a6
 1967 0373 0F       		.uleb128 0xf
 1968 0374 9D040000 		.4byte	.LASF38
 1969 0378 01       		.byte	0x1
 1970 0379 1802     		.2byte	0x218
 1971 037b 7A000000 		.4byte	0x7a
 1972 037f 4F020000 		.4byte	.LLST19
 1973 0383 0D       		.uleb128 0xd
 1974 0384 CE050000 		.4byte	.LASF25
 1975 0388 01       		.byte	0x1
 1976 0389 1A02     		.2byte	0x21a
 1977 038b 6F000000 		.4byte	0x6f
 1978 038f 7B020000 		.4byte	.LLST20
 1979 0393 0E       		.uleb128 0xe
 1980 0394 08000000 		.4byte	.LVL28
 1981 0398 D2090000 		.4byte	0x9d2
 1982 039c 0E       		.uleb128 0xe
 1983 039d 22000000 		.4byte	.LVL30
 1984 03a1 E0090000 		.4byte	0x9e0
 1985 03a5 00       		.byte	0
 1986 03a6 0C       		.uleb128 0xc
 1987 03a7 01       		.byte	0x1
 1988 03a8 DF050000 		.4byte	.LASF39
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 65


 1989 03ac 01       		.byte	0x1
 1990 03ad 3902     		.2byte	0x239
 1991 03af 01       		.byte	0x1
 1992 03b0 00000000 		.4byte	.LFB11
 1993 03b4 2C000000 		.4byte	.LFE11
 1994 03b8 8E020000 		.4byte	.LLST21
 1995 03bc 01       		.byte	0x1
 1996 03bd F4030000 		.4byte	0x3f4
 1997 03c1 0F       		.uleb128 0xf
 1998 03c2 57020000 		.4byte	.LASF40
 1999 03c6 01       		.byte	0x1
 2000 03c7 3902     		.2byte	0x239
 2001 03c9 7A000000 		.4byte	0x7a
 2002 03cd AE020000 		.4byte	.LLST22
 2003 03d1 0D       		.uleb128 0xd
 2004 03d2 CE050000 		.4byte	.LASF25
 2005 03d6 01       		.byte	0x1
 2006 03d7 3B02     		.2byte	0x23b
 2007 03d9 6F000000 		.4byte	0x6f
 2008 03dd DA020000 		.4byte	.LLST23
 2009 03e1 0E       		.uleb128 0xe
 2010 03e2 08000000 		.4byte	.LVL32
 2011 03e6 D2090000 		.4byte	0x9d2
 2012 03ea 0E       		.uleb128 0xe
 2013 03eb 20000000 		.4byte	.LVL34
 2014 03ef E0090000 		.4byte	0x9e0
 2015 03f3 00       		.byte	0
 2016 03f4 0C       		.uleb128 0xc
 2017 03f5 01       		.byte	0x1
 2018 03f6 07010000 		.4byte	.LASF41
 2019 03fa 01       		.byte	0x1
 2020 03fb 5A02     		.2byte	0x25a
 2021 03fd 01       		.byte	0x1
 2022 03fe 00000000 		.4byte	.LFB12
 2023 0402 28000000 		.4byte	.LFE12
 2024 0406 ED020000 		.4byte	.LLST24
 2025 040a 01       		.byte	0x1
 2026 040b 42040000 		.4byte	0x442
 2027 040f 0F       		.uleb128 0xf
 2028 0410 37020000 		.4byte	.LASF42
 2029 0414 01       		.byte	0x1
 2030 0415 5A02     		.2byte	0x25a
 2031 0417 7A000000 		.4byte	0x7a
 2032 041b 0D030000 		.4byte	.LLST25
 2033 041f 0D       		.uleb128 0xd
 2034 0420 CE050000 		.4byte	.LASF25
 2035 0424 01       		.byte	0x1
 2036 0425 5C02     		.2byte	0x25c
 2037 0427 6F000000 		.4byte	0x6f
 2038 042b 39030000 		.4byte	.LLST26
 2039 042f 0E       		.uleb128 0xe
 2040 0430 08000000 		.4byte	.LVL36
 2041 0434 D2090000 		.4byte	0x9d2
 2042 0438 0E       		.uleb128 0xe
 2043 0439 1C000000 		.4byte	.LVL38
 2044 043d E0090000 		.4byte	0x9e0
 2045 0441 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 66


 2046 0442 10       		.uleb128 0x10
 2047 0443 01       		.byte	0x1
 2048 0444 2E000000 		.4byte	.LASF43
 2049 0448 01       		.byte	0x1
 2050 0449 7802     		.2byte	0x278
 2051 044b 01       		.byte	0x1
 2052 044c 00000000 		.4byte	.LFB13
 2053 0450 0C000000 		.4byte	.LFE13
 2054 0454 02       		.byte	0x2
 2055 0455 7D       		.byte	0x7d
 2056 0456 00       		.sleb128 0
 2057 0457 01       		.byte	0x1
 2058 0458 6D040000 		.4byte	0x46d
 2059 045c 0F       		.uleb128 0xf
 2060 045d FE010000 		.4byte	.LASF44
 2061 0461 01       		.byte	0x1
 2062 0462 7802     		.2byte	0x278
 2063 0464 7A000000 		.4byte	0x7a
 2064 0468 4C030000 		.4byte	.LLST27
 2065 046c 00       		.byte	0
 2066 046d 11       		.uleb128 0x11
 2067 046e 01       		.byte	0x1
 2068 046f 7A050000 		.4byte	.LASF47
 2069 0473 01       		.byte	0x1
 2070 0474 8C02     		.2byte	0x28c
 2071 0476 01       		.byte	0x1
 2072 0477 7A000000 		.4byte	0x7a
 2073 047b 00000000 		.4byte	.LFB14
 2074 047f 0C000000 		.4byte	.LFE14
 2075 0483 02       		.byte	0x2
 2076 0484 7D       		.byte	0x7d
 2077 0485 00       		.sleb128 0
 2078 0486 01       		.byte	0x1
 2079 0487 0C       		.uleb128 0xc
 2080 0488 01       		.byte	0x1
 2081 0489 C5030000 		.4byte	.LASF45
 2082 048d 01       		.byte	0x1
 2083 048e A902     		.2byte	0x2a9
 2084 0490 01       		.byte	0x1
 2085 0491 00000000 		.4byte	.LFB15
 2086 0495 28000000 		.4byte	.LFE15
 2087 0499 6D030000 		.4byte	.LLST28
 2088 049d 01       		.byte	0x1
 2089 049e D5040000 		.4byte	0x4d5
 2090 04a2 0F       		.uleb128 0xf
 2091 04a3 A1030000 		.4byte	.LASF46
 2092 04a7 01       		.byte	0x1
 2093 04a8 A902     		.2byte	0x2a9
 2094 04aa 7A000000 		.4byte	0x7a
 2095 04ae 8D030000 		.4byte	.LLST29
 2096 04b2 0D       		.uleb128 0xd
 2097 04b3 CE050000 		.4byte	.LASF25
 2098 04b7 01       		.byte	0x1
 2099 04b8 AB02     		.2byte	0x2ab
 2100 04ba 6F000000 		.4byte	0x6f
 2101 04be B9030000 		.4byte	.LLST30
 2102 04c2 0E       		.uleb128 0xe
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 67


 2103 04c3 08000000 		.4byte	.LVL42
 2104 04c7 D2090000 		.4byte	0x9d2
 2105 04cb 0E       		.uleb128 0xe
 2106 04cc 1C000000 		.4byte	.LVL44
 2107 04d0 E0090000 		.4byte	0x9e0
 2108 04d4 00       		.byte	0
 2109 04d5 12       		.uleb128 0x12
 2110 04d6 CD000000 		.4byte	0xcd
 2111 04da 00000000 		.4byte	.LFB16
 2112 04de 0C000000 		.4byte	.LFE16
 2113 04e2 02       		.byte	0x2
 2114 04e3 7D       		.byte	0x7d
 2115 04e4 00       		.sleb128 0
 2116 04e5 01       		.byte	0x1
 2117 04e6 F4040000 		.4byte	0x4f4
 2118 04ea 13       		.uleb128 0x13
 2119 04eb DC000000 		.4byte	0xdc
 2120 04ef CC030000 		.4byte	.LLST31
 2121 04f3 00       		.byte	0
 2122 04f4 11       		.uleb128 0x11
 2123 04f5 01       		.byte	0x1
 2124 04f6 2D050000 		.4byte	.LASF48
 2125 04fa 01       		.byte	0x1
 2126 04fb DA02     		.2byte	0x2da
 2127 04fd 01       		.byte	0x1
 2128 04fe 7A000000 		.4byte	0x7a
 2129 0502 00000000 		.4byte	.LFB17
 2130 0506 0C000000 		.4byte	.LFE17
 2131 050a 02       		.byte	0x2
 2132 050b 7D       		.byte	0x7d
 2133 050c 00       		.sleb128 0
 2134 050d 01       		.byte	0x1
 2135 050e 0C       		.uleb128 0xc
 2136 050f 01       		.byte	0x1
 2137 0510 47000000 		.4byte	.LASF49
 2138 0514 01       		.byte	0x1
 2139 0515 F402     		.2byte	0x2f4
 2140 0517 01       		.byte	0x1
 2141 0518 00000000 		.4byte	.LFB18
 2142 051c 24000000 		.4byte	.LFE18
 2143 0520 ED030000 		.4byte	.LLST32
 2144 0524 01       		.byte	0x1
 2145 0525 5C050000 		.4byte	0x55c
 2146 0529 0F       		.uleb128 0xf
 2147 052a 27060000 		.4byte	.LASF50
 2148 052e 01       		.byte	0x1
 2149 052f F402     		.2byte	0x2f4
 2150 0531 7A000000 		.4byte	0x7a
 2151 0535 0D040000 		.4byte	.LLST33
 2152 0539 0D       		.uleb128 0xd
 2153 053a CE050000 		.4byte	.LASF25
 2154 053e 01       		.byte	0x1
 2155 053f F602     		.2byte	0x2f6
 2156 0541 6F000000 		.4byte	0x6f
 2157 0545 39040000 		.4byte	.LLST34
 2158 0549 0E       		.uleb128 0xe
 2159 054a 08000000 		.4byte	.LVL48
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 68


 2160 054e D2090000 		.4byte	0x9d2
 2161 0552 0E       		.uleb128 0xe
 2162 0553 1E000000 		.4byte	.LVL49
 2163 0557 E0090000 		.4byte	0x9e0
 2164 055b 00       		.byte	0
 2165 055c 10       		.uleb128 0x10
 2166 055d 01       		.byte	0x1
 2167 055e 3C020000 		.4byte	.LASF51
 2168 0562 01       		.byte	0x1
 2169 0563 0F03     		.2byte	0x30f
 2170 0565 01       		.byte	0x1
 2171 0566 00000000 		.4byte	.LFB19
 2172 056a 0C000000 		.4byte	.LFE19
 2173 056e 02       		.byte	0x2
 2174 056f 7D       		.byte	0x7d
 2175 0570 00       		.sleb128 0
 2176 0571 01       		.byte	0x1
 2177 0572 87050000 		.4byte	0x587
 2178 0576 0F       		.uleb128 0xf
 2179 0577 32060000 		.4byte	.LASF52
 2180 057b 01       		.byte	0x1
 2181 057c 0F03     		.2byte	0x30f
 2182 057e 7A000000 		.4byte	0x7a
 2183 0582 4C040000 		.4byte	.LLST35
 2184 0586 00       		.byte	0
 2185 0587 11       		.uleb128 0x11
 2186 0588 01       		.byte	0x1
 2187 0589 B9010000 		.4byte	.LASF53
 2188 058d 01       		.byte	0x1
 2189 058e 2303     		.2byte	0x323
 2190 0590 01       		.byte	0x1
 2191 0591 7A000000 		.4byte	0x7a
 2192 0595 00000000 		.4byte	.LFB20
 2193 0599 0C000000 		.4byte	.LFE20
 2194 059d 02       		.byte	0x2
 2195 059e 7D       		.byte	0x7d
 2196 059f 00       		.sleb128 0
 2197 05a0 01       		.byte	0x1
 2198 05a1 0C       		.uleb128 0xc
 2199 05a2 01       		.byte	0x1
 2200 05a3 04020000 		.4byte	.LASF54
 2201 05a7 01       		.byte	0x1
 2202 05a8 3D03     		.2byte	0x33d
 2203 05aa 01       		.byte	0x1
 2204 05ab 00000000 		.4byte	.LFB21
 2205 05af 28000000 		.4byte	.LFE21
 2206 05b3 6D040000 		.4byte	.LLST36
 2207 05b7 01       		.byte	0x1
 2208 05b8 EF050000 		.4byte	0x5ef
 2209 05bc 0F       		.uleb128 0xf
 2210 05bd 27060000 		.4byte	.LASF50
 2211 05c1 01       		.byte	0x1
 2212 05c2 3D03     		.2byte	0x33d
 2213 05c4 7A000000 		.4byte	0x7a
 2214 05c8 8D040000 		.4byte	.LLST37
 2215 05cc 0D       		.uleb128 0xd
 2216 05cd CE050000 		.4byte	.LASF25
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 69


 2217 05d1 01       		.byte	0x1
 2218 05d2 3F03     		.2byte	0x33f
 2219 05d4 6F000000 		.4byte	0x6f
 2220 05d8 B9040000 		.4byte	.LLST38
 2221 05dc 0E       		.uleb128 0xe
 2222 05dd 08000000 		.4byte	.LVL54
 2223 05e1 D2090000 		.4byte	0x9d2
 2224 05e5 0E       		.uleb128 0xe
 2225 05e6 22000000 		.4byte	.LVL56
 2226 05ea E0090000 		.4byte	0x9e0
 2227 05ee 00       		.byte	0
 2228 05ef 12       		.uleb128 0x12
 2229 05f0 E9000000 		.4byte	0xe9
 2230 05f4 00000000 		.4byte	.LFB22
 2231 05f8 0C000000 		.4byte	.LFE22
 2232 05fc 02       		.byte	0x2
 2233 05fd 7D       		.byte	0x7d
 2234 05fe 00       		.sleb128 0
 2235 05ff 01       		.byte	0x1
 2236 0600 0E060000 		.4byte	0x60e
 2237 0604 13       		.uleb128 0x13
 2238 0605 F8000000 		.4byte	0xf8
 2239 0609 CC040000 		.4byte	.LLST39
 2240 060d 00       		.byte	0
 2241 060e 11       		.uleb128 0x11
 2242 060f 01       		.byte	0x1
 2243 0610 E8030000 		.4byte	.LASF55
 2244 0614 01       		.byte	0x1
 2245 0615 8403     		.2byte	0x384
 2246 0617 01       		.byte	0x1
 2247 0618 7A000000 		.4byte	0x7a
 2248 061c 00000000 		.4byte	.LFB23
 2249 0620 0C000000 		.4byte	.LFE23
 2250 0624 02       		.byte	0x2
 2251 0625 7D       		.byte	0x7d
 2252 0626 00       		.sleb128 0
 2253 0627 01       		.byte	0x1
 2254 0628 10       		.uleb128 0x10
 2255 0629 01       		.byte	0x1
 2256 062a 89020000 		.4byte	.LASF56
 2257 062e 01       		.byte	0x1
 2258 062f B003     		.2byte	0x3b0
 2259 0631 01       		.byte	0x1
 2260 0632 00000000 		.4byte	.LFB24
 2261 0636 0C000000 		.4byte	.LFE24
 2262 063a 02       		.byte	0x2
 2263 063b 7D       		.byte	0x7d
 2264 063c 00       		.sleb128 0
 2265 063d 01       		.byte	0x1
 2266 063e 53060000 		.4byte	0x653
 2267 0642 0F       		.uleb128 0xf
 2268 0643 92050000 		.4byte	.LASF57
 2269 0647 01       		.byte	0x1
 2270 0648 B003     		.2byte	0x3b0
 2271 064a 7A000000 		.4byte	0x7a
 2272 064e ED040000 		.4byte	.LLST40
 2273 0652 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 70


 2274 0653 11       		.uleb128 0x11
 2275 0654 01       		.byte	0x1
 2276 0655 4E050000 		.4byte	.LASF58
 2277 0659 01       		.byte	0x1
 2278 065a DA03     		.2byte	0x3da
 2279 065c 01       		.byte	0x1
 2280 065d 7A000000 		.4byte	0x7a
 2281 0661 00000000 		.4byte	.LFB25
 2282 0665 0C000000 		.4byte	.LFE25
 2283 0669 02       		.byte	0x2
 2284 066a 7D       		.byte	0x7d
 2285 066b 00       		.sleb128 0
 2286 066c 01       		.byte	0x1
 2287 066d 11       		.uleb128 0x11
 2288 066e 01       		.byte	0x1
 2289 066f EF000000 		.4byte	.LASF59
 2290 0673 01       		.byte	0x1
 2291 0674 0604     		.2byte	0x406
 2292 0676 01       		.byte	0x1
 2293 0677 7A000000 		.4byte	0x7a
 2294 067b 00000000 		.4byte	.LFB26
 2295 067f 0C000000 		.4byte	.LFE26
 2296 0683 02       		.byte	0x2
 2297 0684 7D       		.byte	0x7d
 2298 0685 00       		.sleb128 0
 2299 0686 01       		.byte	0x1
 2300 0687 11       		.uleb128 0x11
 2301 0688 01       		.byte	0x1
 2302 0689 18030000 		.4byte	.LASF60
 2303 068d 01       		.byte	0x1
 2304 068e 1B04     		.2byte	0x41b
 2305 0690 01       		.byte	0x1
 2306 0691 7A000000 		.4byte	0x7a
 2307 0695 00000000 		.4byte	.LFB27
 2308 0699 0C000000 		.4byte	.LFE27
 2309 069d 02       		.byte	0x2
 2310 069e 7D       		.byte	0x7d
 2311 069f 00       		.sleb128 0
 2312 06a0 01       		.byte	0x1
 2313 06a1 0C       		.uleb128 0xc
 2314 06a2 01       		.byte	0x1
 2315 06a3 82040000 		.4byte	.LASF61
 2316 06a7 01       		.byte	0x1
 2317 06a8 3604     		.2byte	0x436
 2318 06aa 01       		.byte	0x1
 2319 06ab 00000000 		.4byte	.LFB28
 2320 06af 24000000 		.4byte	.LFE28
 2321 06b3 0E050000 		.4byte	.LLST41
 2322 06b7 01       		.byte	0x1
 2323 06b8 EF060000 		.4byte	0x6ef
 2324 06bc 0F       		.uleb128 0xf
 2325 06bd 21050000 		.4byte	.LASF62
 2326 06c1 01       		.byte	0x1
 2327 06c2 3604     		.2byte	0x436
 2328 06c4 7A000000 		.4byte	0x7a
 2329 06c8 2E050000 		.4byte	.LLST42
 2330 06cc 0D       		.uleb128 0xd
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 71


 2331 06cd CE050000 		.4byte	.LASF25
 2332 06d1 01       		.byte	0x1
 2333 06d2 3804     		.2byte	0x438
 2334 06d4 6F000000 		.4byte	0x6f
 2335 06d8 5A050000 		.4byte	.LLST43
 2336 06dc 0E       		.uleb128 0xe
 2337 06dd 08000000 		.4byte	.LVL62
 2338 06e1 D2090000 		.4byte	0x9d2
 2339 06e5 0E       		.uleb128 0xe
 2340 06e6 1C000000 		.4byte	.LVL64
 2341 06ea E0090000 		.4byte	0x9e0
 2342 06ee 00       		.byte	0
 2343 06ef 0C       		.uleb128 0xc
 2344 06f0 01       		.byte	0x1
 2345 06f1 81030000 		.4byte	.LASF63
 2346 06f5 01       		.byte	0x1
 2347 06f6 5704     		.2byte	0x457
 2348 06f8 01       		.byte	0x1
 2349 06f9 00000000 		.4byte	.LFB29
 2350 06fd 24000000 		.4byte	.LFE29
 2351 0701 6D050000 		.4byte	.LLST44
 2352 0705 01       		.byte	0x1
 2353 0706 3D070000 		.4byte	0x73d
 2354 070a 0F       		.uleb128 0xf
 2355 070b 21050000 		.4byte	.LASF62
 2356 070f 01       		.byte	0x1
 2357 0710 5704     		.2byte	0x457
 2358 0712 7A000000 		.4byte	0x7a
 2359 0716 8D050000 		.4byte	.LLST45
 2360 071a 0D       		.uleb128 0xd
 2361 071b CE050000 		.4byte	.LASF25
 2362 071f 01       		.byte	0x1
 2363 0720 5904     		.2byte	0x459
 2364 0722 6F000000 		.4byte	0x6f
 2365 0726 B9050000 		.4byte	.LLST46
 2366 072a 0E       		.uleb128 0xe
 2367 072b 08000000 		.4byte	.LVL66
 2368 072f D2090000 		.4byte	0x9d2
 2369 0733 0E       		.uleb128 0xe
 2370 0734 1E000000 		.4byte	.LVL68
 2371 0738 E0090000 		.4byte	0x9e0
 2372 073c 00       		.byte	0
 2373 073d 0C       		.uleb128 0xc
 2374 073e 01       		.byte	0x1
 2375 073f 72010000 		.4byte	.LASF64
 2376 0743 01       		.byte	0x1
 2377 0744 7804     		.2byte	0x478
 2378 0746 01       		.byte	0x1
 2379 0747 00000000 		.4byte	.LFB30
 2380 074b 28000000 		.4byte	.LFE30
 2381 074f CC050000 		.4byte	.LLST47
 2382 0753 01       		.byte	0x1
 2383 0754 8B070000 		.4byte	0x78b
 2384 0758 0F       		.uleb128 0xf
 2385 0759 21050000 		.4byte	.LASF62
 2386 075d 01       		.byte	0x1
 2387 075e 7804     		.2byte	0x478
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 72


 2388 0760 7A000000 		.4byte	0x7a
 2389 0764 EC050000 		.4byte	.LLST48
 2390 0768 0D       		.uleb128 0xd
 2391 0769 CE050000 		.4byte	.LASF25
 2392 076d 01       		.byte	0x1
 2393 076e 7A04     		.2byte	0x47a
 2394 0770 6F000000 		.4byte	0x6f
 2395 0774 18060000 		.4byte	.LLST49
 2396 0778 0E       		.uleb128 0xe
 2397 0779 08000000 		.4byte	.LVL70
 2398 077d D2090000 		.4byte	0x9d2
 2399 0781 0E       		.uleb128 0xe
 2400 0782 1E000000 		.4byte	.LVL72
 2401 0786 E0090000 		.4byte	0x9e0
 2402 078a 00       		.byte	0
 2403 078b 0C       		.uleb128 0xc
 2404 078c 01       		.byte	0x1
 2405 078d 9D050000 		.4byte	.LASF65
 2406 0791 01       		.byte	0x1
 2407 0792 9804     		.2byte	0x498
 2408 0794 01       		.byte	0x1
 2409 0795 00000000 		.4byte	.LFB31
 2410 0799 24000000 		.4byte	.LFE31
 2411 079d 2B060000 		.4byte	.LLST50
 2412 07a1 01       		.byte	0x1
 2413 07a2 D9070000 		.4byte	0x7d9
 2414 07a6 0F       		.uleb128 0xf
 2415 07a7 21050000 		.4byte	.LASF62
 2416 07ab 01       		.byte	0x1
 2417 07ac 9804     		.2byte	0x498
 2418 07ae 7A000000 		.4byte	0x7a
 2419 07b2 4B060000 		.4byte	.LLST51
 2420 07b6 0D       		.uleb128 0xd
 2421 07b7 CE050000 		.4byte	.LASF25
 2422 07bb 01       		.byte	0x1
 2423 07bc 9A04     		.2byte	0x49a
 2424 07be 6F000000 		.4byte	0x6f
 2425 07c2 77060000 		.4byte	.LLST52
 2426 07c6 0E       		.uleb128 0xe
 2427 07c7 08000000 		.4byte	.LVL74
 2428 07cb D2090000 		.4byte	0x9d2
 2429 07cf 0E       		.uleb128 0xe
 2430 07d0 1E000000 		.4byte	.LVL76
 2431 07d4 E0090000 		.4byte	0x9e0
 2432 07d8 00       		.byte	0
 2433 07d9 0C       		.uleb128 0xc
 2434 07da 01       		.byte	0x1
 2435 07db B5050000 		.4byte	.LASF66
 2436 07df 01       		.byte	0x1
 2437 07e0 B904     		.2byte	0x4b9
 2438 07e2 01       		.byte	0x1
 2439 07e3 00000000 		.4byte	.LFB32
 2440 07e7 24000000 		.4byte	.LFE32
 2441 07eb 8A060000 		.4byte	.LLST53
 2442 07ef 01       		.byte	0x1
 2443 07f0 27080000 		.4byte	0x827
 2444 07f4 0F       		.uleb128 0xf
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 73


 2445 07f5 21050000 		.4byte	.LASF62
 2446 07f9 01       		.byte	0x1
 2447 07fa B904     		.2byte	0x4b9
 2448 07fc 7A000000 		.4byte	0x7a
 2449 0800 AA060000 		.4byte	.LLST54
 2450 0804 0D       		.uleb128 0xd
 2451 0805 CE050000 		.4byte	.LASF25
 2452 0809 01       		.byte	0x1
 2453 080a BB04     		.2byte	0x4bb
 2454 080c 6F000000 		.4byte	0x6f
 2455 0810 D6060000 		.4byte	.LLST55
 2456 0814 0E       		.uleb128 0xe
 2457 0815 08000000 		.4byte	.LVL78
 2458 0819 D2090000 		.4byte	0x9d2
 2459 081d 0E       		.uleb128 0xe
 2460 081e 1E000000 		.4byte	.LVL80
 2461 0822 E0090000 		.4byte	0x9e0
 2462 0826 00       		.byte	0
 2463 0827 0C       		.uleb128 0xc
 2464 0828 01       		.byte	0x1
 2465 0829 3C060000 		.4byte	.LASF67
 2466 082d 01       		.byte	0x1
 2467 082e E104     		.2byte	0x4e1
 2468 0830 01       		.byte	0x1
 2469 0831 00000000 		.4byte	.LFB33
 2470 0835 1C000000 		.4byte	.LFE33
 2471 0839 E9060000 		.4byte	.LLST56
 2472 083d 01       		.byte	0x1
 2473 083e 85080000 		.4byte	0x885
 2474 0842 0F       		.uleb128 0xf
 2475 0843 37020000 		.4byte	.LASF42
 2476 0847 01       		.byte	0x1
 2477 0848 E104     		.2byte	0x4e1
 2478 084a 7A000000 		.4byte	0x7a
 2479 084e 09070000 		.4byte	.LLST57
 2480 0852 0F       		.uleb128 0xf
 2481 0853 81020000 		.4byte	.LASF68
 2482 0857 01       		.byte	0x1
 2483 0858 E104     		.2byte	0x4e1
 2484 085a 7A000000 		.4byte	0x7a
 2485 085e 35070000 		.4byte	.LLST58
 2486 0862 0D       		.uleb128 0xd
 2487 0863 CE050000 		.4byte	.LASF25
 2488 0867 01       		.byte	0x1
 2489 0868 E304     		.2byte	0x4e3
 2490 086a 6F000000 		.4byte	0x6f
 2491 086e 61070000 		.4byte	.LLST59
 2492 0872 0E       		.uleb128 0xe
 2493 0873 0A000000 		.4byte	.LVL82
 2494 0877 D2090000 		.4byte	0x9d2
 2495 087b 0E       		.uleb128 0xe
 2496 087c 14000000 		.4byte	.LVL84
 2497 0880 E0090000 		.4byte	0x9e0
 2498 0884 00       		.byte	0
 2499 0885 14       		.uleb128 0x14
 2500 0886 01       		.byte	0x1
 2501 0887 6E030000 		.4byte	.LASF69
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 74


 2502 088b 01       		.byte	0x1
 2503 088c C8       		.byte	0xc8
 2504 088d 01       		.byte	0x1
 2505 088e 00000000 		.4byte	.LFB1
 2506 0892 24000000 		.4byte	.LFE1
 2507 0896 74070000 		.4byte	.LLST60
 2508 089a 01       		.byte	0x1
 2509 089b D6080000 		.4byte	0x8d6
 2510 089f 15       		.uleb128 0x15
 2511 08a0 CE050000 		.4byte	.LASF25
 2512 08a4 01       		.byte	0x1
 2513 08a5 CA       		.byte	0xca
 2514 08a6 6F000000 		.4byte	0x6f
 2515 08aa 94070000 		.4byte	.LLST61
 2516 08ae 0E       		.uleb128 0xe
 2517 08af 06000000 		.4byte	.LVL86
 2518 08b3 D2090000 		.4byte	0x9d2
 2519 08b7 0E       		.uleb128 0xe
 2520 08b8 14000000 		.4byte	.LVL87
 2521 08bc E0090000 		.4byte	0x9e0
 2522 08c0 16       		.uleb128 0x16
 2523 08c1 1C000000 		.4byte	.LVL88
 2524 08c5 27080000 		.4byte	0x827
 2525 08c9 17       		.uleb128 0x17
 2526 08ca 01       		.byte	0x1
 2527 08cb 51       		.byte	0x51
 2528 08cc 01       		.byte	0x1
 2529 08cd 48       		.byte	0x48
 2530 08ce 17       		.uleb128 0x17
 2531 08cf 01       		.byte	0x1
 2532 08d0 50       		.byte	0x50
 2533 08d1 02       		.byte	0x2
 2534 08d2 74       		.byte	0x74
 2535 08d3 00       		.sleb128 0
 2536 08d4 00       		.byte	0
 2537 08d5 00       		.byte	0
 2538 08d6 14       		.uleb128 0x14
 2539 08d7 01       		.byte	0x1
 2540 08d8 62000000 		.4byte	.LASF70
 2541 08dc 01       		.byte	0x1
 2542 08dd F7       		.byte	0xf7
 2543 08de 01       		.byte	0x1
 2544 08df 00000000 		.4byte	.LFB2
 2545 08e3 1C000000 		.4byte	.LFE2
 2546 08e7 A7070000 		.4byte	.LLST62
 2547 08eb 01       		.byte	0x1
 2548 08ec 03090000 		.4byte	0x903
 2549 08f0 0E       		.uleb128 0xe
 2550 08f1 0E000000 		.4byte	.LVL89
 2551 08f5 05010000 		.4byte	0x105
 2552 08f9 0E       		.uleb128 0xe
 2553 08fa 16000000 		.4byte	.LVL90
 2554 08fe 85080000 		.4byte	0x885
 2555 0902 00       		.byte	0
 2556 0903 11       		.uleb128 0x11
 2557 0904 01       		.byte	0x1
 2558 0905 57060000 		.4byte	.LASF71
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 75


 2559 0909 01       		.byte	0x1
 2560 090a FE04     		.2byte	0x4fe
 2561 090c 01       		.byte	0x1
 2562 090d 7A000000 		.4byte	0x7a
 2563 0911 00000000 		.4byte	.LFB34
 2564 0915 14000000 		.4byte	.LFE34
 2565 0919 02       		.byte	0x2
 2566 091a 7D       		.byte	0x7d
 2567 091b 00       		.sleb128 0
 2568 091c 01       		.byte	0x1
 2569 091d 12       		.uleb128 0x12
 2570 091e B1000000 		.4byte	0xb1
 2571 0922 00000000 		.4byte	.LFB35
 2572 0926 0C000000 		.4byte	.LFE35
 2573 092a 02       		.byte	0x2
 2574 092b 7D       		.byte	0x7d
 2575 092c 00       		.sleb128 0
 2576 092d 01       		.byte	0x1
 2577 092e 3A090000 		.4byte	0x93a
 2578 0932 18       		.uleb128 0x18
 2579 0933 C0000000 		.4byte	0xc0
 2580 0937 01       		.byte	0x1
 2581 0938 50       		.byte	0x50
 2582 0939 00       		.byte	0
 2583 093a 11       		.uleb128 0x11
 2584 093b 01       		.byte	0x1
 2585 093c 8B010000 		.4byte	.LASF72
 2586 0940 01       		.byte	0x1
 2587 0941 2E05     		.2byte	0x52e
 2588 0943 01       		.byte	0x1
 2589 0944 7A000000 		.4byte	0x7a
 2590 0948 00000000 		.4byte	.LFB36
 2591 094c 0C000000 		.4byte	.LFE36
 2592 0950 02       		.byte	0x2
 2593 0951 7D       		.byte	0x7d
 2594 0952 00       		.sleb128 0
 2595 0953 01       		.byte	0x1
 2596 0954 11       		.uleb128 0x11
 2597 0955 01       		.byte	0x1
 2598 0956 92000000 		.4byte	.LASF73
 2599 095a 01       		.byte	0x1
 2600 095b 4505     		.2byte	0x545
 2601 095d 01       		.byte	0x1
 2602 095e 7A000000 		.4byte	0x7a
 2603 0962 00000000 		.4byte	.LFB37
 2604 0966 0C000000 		.4byte	.LFE37
 2605 096a 02       		.byte	0x2
 2606 096b 7D       		.byte	0x7d
 2607 096c 00       		.sleb128 0
 2608 096d 01       		.byte	0x1
 2609 096e 10       		.uleb128 0x10
 2610 096f 01       		.byte	0x1
 2611 0970 06050000 		.4byte	.LASF74
 2612 0974 01       		.byte	0x1
 2613 0975 5C05     		.2byte	0x55c
 2614 0977 01       		.byte	0x1
 2615 0978 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 76


 2616 097c 0C000000 		.4byte	.LFE38
 2617 0980 02       		.byte	0x2
 2618 0981 7D       		.byte	0x7d
 2619 0982 00       		.sleb128 0
 2620 0983 01       		.byte	0x1
 2621 0984 97090000 		.4byte	0x997
 2622 0988 19       		.uleb128 0x19
 2623 0989 F8040000 		.4byte	.LASF18
 2624 098d 01       		.byte	0x1
 2625 098e 5C05     		.2byte	0x55c
 2626 0990 7A000000 		.4byte	0x7a
 2627 0994 01       		.byte	0x1
 2628 0995 50       		.byte	0x50
 2629 0996 00       		.byte	0
 2630 0997 10       		.uleb128 0x10
 2631 0998 01       		.byte	0x1
 2632 0999 DF040000 		.4byte	.LASF75
 2633 099d 01       		.byte	0x1
 2634 099e 7305     		.2byte	0x573
 2635 09a0 01       		.byte	0x1
 2636 09a1 00000000 		.4byte	.LFB39
 2637 09a5 0C000000 		.4byte	.LFE39
 2638 09a9 02       		.byte	0x2
 2639 09aa 7D       		.byte	0x7d
 2640 09ab 00       		.sleb128 0
 2641 09ac 01       		.byte	0x1
 2642 09ad C0090000 		.4byte	0x9c0
 2643 09b1 19       		.uleb128 0x19
 2644 09b2 F8040000 		.4byte	.LASF18
 2645 09b6 01       		.byte	0x1
 2646 09b7 7305     		.2byte	0x573
 2647 09b9 7A000000 		.4byte	0x7a
 2648 09bd 01       		.byte	0x1
 2649 09be 50       		.byte	0x50
 2650 09bf 00       		.byte	0
 2651 09c0 1A       		.uleb128 0x1a
 2652 09c1 13060000 		.4byte	.LASF79
 2653 09c5 01       		.byte	0x1
 2654 09c6 16       		.byte	0x16
 2655 09c7 6F000000 		.4byte	0x6f
 2656 09cb 01       		.byte	0x1
 2657 09cc 05       		.byte	0x5
 2658 09cd 03       		.byte	0x3
 2659 09ce 00000000 		.4byte	NavLightPWM_initVar
 2660 09d2 1B       		.uleb128 0x1b
 2661 09d3 01       		.byte	0x1
 2662 09d4 49030000 		.4byte	.LASF80
 2663 09d8 03       		.byte	0x3
 2664 09d9 73       		.byte	0x73
 2665 09da 01       		.byte	0x1
 2666 09db 6F000000 		.4byte	0x6f
 2667 09df 01       		.byte	0x1
 2668 09e0 1C       		.uleb128 0x1c
 2669 09e1 01       		.byte	0x1
 2670 09e2 18000000 		.4byte	.LASF81
 2671 09e6 03       		.byte	0x3
 2672 09e7 74       		.byte	0x74
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 77


 2673 09e8 01       		.byte	0x1
 2674 09e9 01       		.byte	0x1
 2675 09ea 1D       		.uleb128 0x1d
 2676 09eb 6F000000 		.4byte	0x6f
 2677 09ef 00       		.byte	0
 2678 09f0 00       		.byte	0
 2679              		.section	.debug_abbrev,"",%progbits
 2680              	.Ldebug_abbrev0:
 2681 0000 01       		.uleb128 0x1
 2682 0001 11       		.uleb128 0x11
 2683 0002 01       		.byte	0x1
 2684 0003 25       		.uleb128 0x25
 2685 0004 0E       		.uleb128 0xe
 2686 0005 13       		.uleb128 0x13
 2687 0006 0B       		.uleb128 0xb
 2688 0007 03       		.uleb128 0x3
 2689 0008 0E       		.uleb128 0xe
 2690 0009 1B       		.uleb128 0x1b
 2691 000a 0E       		.uleb128 0xe
 2692 000b 55       		.uleb128 0x55
 2693 000c 06       		.uleb128 0x6
 2694 000d 11       		.uleb128 0x11
 2695 000e 01       		.uleb128 0x1
 2696 000f 52       		.uleb128 0x52
 2697 0010 01       		.uleb128 0x1
 2698 0011 10       		.uleb128 0x10
 2699 0012 06       		.uleb128 0x6
 2700 0013 00       		.byte	0
 2701 0014 00       		.byte	0
 2702 0015 02       		.uleb128 0x2
 2703 0016 24       		.uleb128 0x24
 2704 0017 00       		.byte	0
 2705 0018 0B       		.uleb128 0xb
 2706 0019 0B       		.uleb128 0xb
 2707 001a 3E       		.uleb128 0x3e
 2708 001b 0B       		.uleb128 0xb
 2709 001c 03       		.uleb128 0x3
 2710 001d 0E       		.uleb128 0xe
 2711 001e 00       		.byte	0
 2712 001f 00       		.byte	0
 2713 0020 03       		.uleb128 0x3
 2714 0021 24       		.uleb128 0x24
 2715 0022 00       		.byte	0
 2716 0023 0B       		.uleb128 0xb
 2717 0024 0B       		.uleb128 0xb
 2718 0025 3E       		.uleb128 0x3e
 2719 0026 0B       		.uleb128 0xb
 2720 0027 03       		.uleb128 0x3
 2721 0028 08       		.uleb128 0x8
 2722 0029 00       		.byte	0
 2723 002a 00       		.byte	0
 2724 002b 04       		.uleb128 0x4
 2725 002c 16       		.uleb128 0x16
 2726 002d 00       		.byte	0
 2727 002e 03       		.uleb128 0x3
 2728 002f 0E       		.uleb128 0xe
 2729 0030 3A       		.uleb128 0x3a
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 78


 2730 0031 0B       		.uleb128 0xb
 2731 0032 3B       		.uleb128 0x3b
 2732 0033 0B       		.uleb128 0xb
 2733 0034 49       		.uleb128 0x49
 2734 0035 13       		.uleb128 0x13
 2735 0036 00       		.byte	0
 2736 0037 00       		.byte	0
 2737 0038 05       		.uleb128 0x5
 2738 0039 35       		.uleb128 0x35
 2739 003a 00       		.byte	0
 2740 003b 49       		.uleb128 0x49
 2741 003c 13       		.uleb128 0x13
 2742 003d 00       		.byte	0
 2743 003e 00       		.byte	0
 2744 003f 06       		.uleb128 0x6
 2745 0040 2E       		.uleb128 0x2e
 2746 0041 01       		.byte	0x1
 2747 0042 3F       		.uleb128 0x3f
 2748 0043 0C       		.uleb128 0xc
 2749 0044 03       		.uleb128 0x3
 2750 0045 0E       		.uleb128 0xe
 2751 0046 3A       		.uleb128 0x3a
 2752 0047 0B       		.uleb128 0xb
 2753 0048 3B       		.uleb128 0x3b
 2754 0049 05       		.uleb128 0x5
 2755 004a 27       		.uleb128 0x27
 2756 004b 0C       		.uleb128 0xc
 2757 004c 20       		.uleb128 0x20
 2758 004d 0B       		.uleb128 0xb
 2759 004e 01       		.uleb128 0x1
 2760 004f 13       		.uleb128 0x13
 2761 0050 00       		.byte	0
 2762 0051 00       		.byte	0
 2763 0052 07       		.uleb128 0x7
 2764 0053 05       		.uleb128 0x5
 2765 0054 00       		.byte	0
 2766 0055 03       		.uleb128 0x3
 2767 0056 0E       		.uleb128 0xe
 2768 0057 3A       		.uleb128 0x3a
 2769 0058 0B       		.uleb128 0xb
 2770 0059 3B       		.uleb128 0x3b
 2771 005a 05       		.uleb128 0x5
 2772 005b 49       		.uleb128 0x49
 2773 005c 13       		.uleb128 0x13
 2774 005d 00       		.byte	0
 2775 005e 00       		.byte	0
 2776 005f 08       		.uleb128 0x8
 2777 0060 2E       		.uleb128 0x2e
 2778 0061 01       		.byte	0x1
 2779 0062 3F       		.uleb128 0x3f
 2780 0063 0C       		.uleb128 0xc
 2781 0064 03       		.uleb128 0x3
 2782 0065 0E       		.uleb128 0xe
 2783 0066 3A       		.uleb128 0x3a
 2784 0067 0B       		.uleb128 0xb
 2785 0068 3B       		.uleb128 0x3b
 2786 0069 0B       		.uleb128 0xb
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 79


 2787 006a 27       		.uleb128 0x27
 2788 006b 0C       		.uleb128 0xc
 2789 006c 11       		.uleb128 0x11
 2790 006d 01       		.uleb128 0x1
 2791 006e 12       		.uleb128 0x12
 2792 006f 01       		.uleb128 0x1
 2793 0070 40       		.uleb128 0x40
 2794 0071 0A       		.uleb128 0xa
 2795 0072 9742     		.uleb128 0x2117
 2796 0074 0C       		.uleb128 0xc
 2797 0075 01       		.uleb128 0x1
 2798 0076 13       		.uleb128 0x13
 2799 0077 00       		.byte	0
 2800 0078 00       		.byte	0
 2801 0079 09       		.uleb128 0x9
 2802 007a 1D       		.uleb128 0x1d
 2803 007b 01       		.byte	0x1
 2804 007c 31       		.uleb128 0x31
 2805 007d 13       		.uleb128 0x13
 2806 007e 52       		.uleb128 0x52
 2807 007f 01       		.uleb128 0x1
 2808 0080 55       		.uleb128 0x55
 2809 0081 06       		.uleb128 0x6
 2810 0082 58       		.uleb128 0x58
 2811 0083 0B       		.uleb128 0xb
 2812 0084 59       		.uleb128 0x59
 2813 0085 0B       		.uleb128 0xb
 2814 0086 01       		.uleb128 0x1
 2815 0087 13       		.uleb128 0x13
 2816 0088 00       		.byte	0
 2817 0089 00       		.byte	0
 2818 008a 0A       		.uleb128 0xa
 2819 008b 05       		.uleb128 0x5
 2820 008c 00       		.byte	0
 2821 008d 31       		.uleb128 0x31
 2822 008e 13       		.uleb128 0x13
 2823 008f 1C       		.uleb128 0x1c
 2824 0090 0B       		.uleb128 0xb
 2825 0091 00       		.byte	0
 2826 0092 00       		.byte	0
 2827 0093 0B       		.uleb128 0xb
 2828 0094 1D       		.uleb128 0x1d
 2829 0095 01       		.byte	0x1
 2830 0096 31       		.uleb128 0x31
 2831 0097 13       		.uleb128 0x13
 2832 0098 52       		.uleb128 0x52
 2833 0099 01       		.uleb128 0x1
 2834 009a 55       		.uleb128 0x55
 2835 009b 06       		.uleb128 0x6
 2836 009c 58       		.uleb128 0x58
 2837 009d 0B       		.uleb128 0xb
 2838 009e 59       		.uleb128 0x59
 2839 009f 0B       		.uleb128 0xb
 2840 00a0 00       		.byte	0
 2841 00a1 00       		.byte	0
 2842 00a2 0C       		.uleb128 0xc
 2843 00a3 2E       		.uleb128 0x2e
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 80


 2844 00a4 01       		.byte	0x1
 2845 00a5 3F       		.uleb128 0x3f
 2846 00a6 0C       		.uleb128 0xc
 2847 00a7 03       		.uleb128 0x3
 2848 00a8 0E       		.uleb128 0xe
 2849 00a9 3A       		.uleb128 0x3a
 2850 00aa 0B       		.uleb128 0xb
 2851 00ab 3B       		.uleb128 0x3b
 2852 00ac 05       		.uleb128 0x5
 2853 00ad 27       		.uleb128 0x27
 2854 00ae 0C       		.uleb128 0xc
 2855 00af 11       		.uleb128 0x11
 2856 00b0 01       		.uleb128 0x1
 2857 00b1 12       		.uleb128 0x12
 2858 00b2 01       		.uleb128 0x1
 2859 00b3 40       		.uleb128 0x40
 2860 00b4 06       		.uleb128 0x6
 2861 00b5 9742     		.uleb128 0x2117
 2862 00b7 0C       		.uleb128 0xc
 2863 00b8 01       		.uleb128 0x1
 2864 00b9 13       		.uleb128 0x13
 2865 00ba 00       		.byte	0
 2866 00bb 00       		.byte	0
 2867 00bc 0D       		.uleb128 0xd
 2868 00bd 34       		.uleb128 0x34
 2869 00be 00       		.byte	0
 2870 00bf 03       		.uleb128 0x3
 2871 00c0 0E       		.uleb128 0xe
 2872 00c1 3A       		.uleb128 0x3a
 2873 00c2 0B       		.uleb128 0xb
 2874 00c3 3B       		.uleb128 0x3b
 2875 00c4 05       		.uleb128 0x5
 2876 00c5 49       		.uleb128 0x49
 2877 00c6 13       		.uleb128 0x13
 2878 00c7 02       		.uleb128 0x2
 2879 00c8 06       		.uleb128 0x6
 2880 00c9 00       		.byte	0
 2881 00ca 00       		.byte	0
 2882 00cb 0E       		.uleb128 0xe
 2883 00cc 898201   		.uleb128 0x4109
 2884 00cf 00       		.byte	0
 2885 00d0 11       		.uleb128 0x11
 2886 00d1 01       		.uleb128 0x1
 2887 00d2 31       		.uleb128 0x31
 2888 00d3 13       		.uleb128 0x13
 2889 00d4 00       		.byte	0
 2890 00d5 00       		.byte	0
 2891 00d6 0F       		.uleb128 0xf
 2892 00d7 05       		.uleb128 0x5
 2893 00d8 00       		.byte	0
 2894 00d9 03       		.uleb128 0x3
 2895 00da 0E       		.uleb128 0xe
 2896 00db 3A       		.uleb128 0x3a
 2897 00dc 0B       		.uleb128 0xb
 2898 00dd 3B       		.uleb128 0x3b
 2899 00de 05       		.uleb128 0x5
 2900 00df 49       		.uleb128 0x49
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 81


 2901 00e0 13       		.uleb128 0x13
 2902 00e1 02       		.uleb128 0x2
 2903 00e2 06       		.uleb128 0x6
 2904 00e3 00       		.byte	0
 2905 00e4 00       		.byte	0
 2906 00e5 10       		.uleb128 0x10
 2907 00e6 2E       		.uleb128 0x2e
 2908 00e7 01       		.byte	0x1
 2909 00e8 3F       		.uleb128 0x3f
 2910 00e9 0C       		.uleb128 0xc
 2911 00ea 03       		.uleb128 0x3
 2912 00eb 0E       		.uleb128 0xe
 2913 00ec 3A       		.uleb128 0x3a
 2914 00ed 0B       		.uleb128 0xb
 2915 00ee 3B       		.uleb128 0x3b
 2916 00ef 05       		.uleb128 0x5
 2917 00f0 27       		.uleb128 0x27
 2918 00f1 0C       		.uleb128 0xc
 2919 00f2 11       		.uleb128 0x11
 2920 00f3 01       		.uleb128 0x1
 2921 00f4 12       		.uleb128 0x12
 2922 00f5 01       		.uleb128 0x1
 2923 00f6 40       		.uleb128 0x40
 2924 00f7 0A       		.uleb128 0xa
 2925 00f8 9742     		.uleb128 0x2117
 2926 00fa 0C       		.uleb128 0xc
 2927 00fb 01       		.uleb128 0x1
 2928 00fc 13       		.uleb128 0x13
 2929 00fd 00       		.byte	0
 2930 00fe 00       		.byte	0
 2931 00ff 11       		.uleb128 0x11
 2932 0100 2E       		.uleb128 0x2e
 2933 0101 00       		.byte	0
 2934 0102 3F       		.uleb128 0x3f
 2935 0103 0C       		.uleb128 0xc
 2936 0104 03       		.uleb128 0x3
 2937 0105 0E       		.uleb128 0xe
 2938 0106 3A       		.uleb128 0x3a
 2939 0107 0B       		.uleb128 0xb
 2940 0108 3B       		.uleb128 0x3b
 2941 0109 05       		.uleb128 0x5
 2942 010a 27       		.uleb128 0x27
 2943 010b 0C       		.uleb128 0xc
 2944 010c 49       		.uleb128 0x49
 2945 010d 13       		.uleb128 0x13
 2946 010e 11       		.uleb128 0x11
 2947 010f 01       		.uleb128 0x1
 2948 0110 12       		.uleb128 0x12
 2949 0111 01       		.uleb128 0x1
 2950 0112 40       		.uleb128 0x40
 2951 0113 0A       		.uleb128 0xa
 2952 0114 9742     		.uleb128 0x2117
 2953 0116 0C       		.uleb128 0xc
 2954 0117 00       		.byte	0
 2955 0118 00       		.byte	0
 2956 0119 12       		.uleb128 0x12
 2957 011a 2E       		.uleb128 0x2e
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 82


 2958 011b 01       		.byte	0x1
 2959 011c 31       		.uleb128 0x31
 2960 011d 13       		.uleb128 0x13
 2961 011e 11       		.uleb128 0x11
 2962 011f 01       		.uleb128 0x1
 2963 0120 12       		.uleb128 0x12
 2964 0121 01       		.uleb128 0x1
 2965 0122 40       		.uleb128 0x40
 2966 0123 0A       		.uleb128 0xa
 2967 0124 9742     		.uleb128 0x2117
 2968 0126 0C       		.uleb128 0xc
 2969 0127 01       		.uleb128 0x1
 2970 0128 13       		.uleb128 0x13
 2971 0129 00       		.byte	0
 2972 012a 00       		.byte	0
 2973 012b 13       		.uleb128 0x13
 2974 012c 05       		.uleb128 0x5
 2975 012d 00       		.byte	0
 2976 012e 31       		.uleb128 0x31
 2977 012f 13       		.uleb128 0x13
 2978 0130 02       		.uleb128 0x2
 2979 0131 06       		.uleb128 0x6
 2980 0132 00       		.byte	0
 2981 0133 00       		.byte	0
 2982 0134 14       		.uleb128 0x14
 2983 0135 2E       		.uleb128 0x2e
 2984 0136 01       		.byte	0x1
 2985 0137 3F       		.uleb128 0x3f
 2986 0138 0C       		.uleb128 0xc
 2987 0139 03       		.uleb128 0x3
 2988 013a 0E       		.uleb128 0xe
 2989 013b 3A       		.uleb128 0x3a
 2990 013c 0B       		.uleb128 0xb
 2991 013d 3B       		.uleb128 0x3b
 2992 013e 0B       		.uleb128 0xb
 2993 013f 27       		.uleb128 0x27
 2994 0140 0C       		.uleb128 0xc
 2995 0141 11       		.uleb128 0x11
 2996 0142 01       		.uleb128 0x1
 2997 0143 12       		.uleb128 0x12
 2998 0144 01       		.uleb128 0x1
 2999 0145 40       		.uleb128 0x40
 3000 0146 06       		.uleb128 0x6
 3001 0147 9742     		.uleb128 0x2117
 3002 0149 0C       		.uleb128 0xc
 3003 014a 01       		.uleb128 0x1
 3004 014b 13       		.uleb128 0x13
 3005 014c 00       		.byte	0
 3006 014d 00       		.byte	0
 3007 014e 15       		.uleb128 0x15
 3008 014f 34       		.uleb128 0x34
 3009 0150 00       		.byte	0
 3010 0151 03       		.uleb128 0x3
 3011 0152 0E       		.uleb128 0xe
 3012 0153 3A       		.uleb128 0x3a
 3013 0154 0B       		.uleb128 0xb
 3014 0155 3B       		.uleb128 0x3b
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 83


 3015 0156 0B       		.uleb128 0xb
 3016 0157 49       		.uleb128 0x49
 3017 0158 13       		.uleb128 0x13
 3018 0159 02       		.uleb128 0x2
 3019 015a 06       		.uleb128 0x6
 3020 015b 00       		.byte	0
 3021 015c 00       		.byte	0
 3022 015d 16       		.uleb128 0x16
 3023 015e 898201   		.uleb128 0x4109
 3024 0161 01       		.byte	0x1
 3025 0162 11       		.uleb128 0x11
 3026 0163 01       		.uleb128 0x1
 3027 0164 31       		.uleb128 0x31
 3028 0165 13       		.uleb128 0x13
 3029 0166 00       		.byte	0
 3030 0167 00       		.byte	0
 3031 0168 17       		.uleb128 0x17
 3032 0169 8A8201   		.uleb128 0x410a
 3033 016c 00       		.byte	0
 3034 016d 02       		.uleb128 0x2
 3035 016e 0A       		.uleb128 0xa
 3036 016f 9142     		.uleb128 0x2111
 3037 0171 0A       		.uleb128 0xa
 3038 0172 00       		.byte	0
 3039 0173 00       		.byte	0
 3040 0174 18       		.uleb128 0x18
 3041 0175 05       		.uleb128 0x5
 3042 0176 00       		.byte	0
 3043 0177 31       		.uleb128 0x31
 3044 0178 13       		.uleb128 0x13
 3045 0179 02       		.uleb128 0x2
 3046 017a 0A       		.uleb128 0xa
 3047 017b 00       		.byte	0
 3048 017c 00       		.byte	0
 3049 017d 19       		.uleb128 0x19
 3050 017e 05       		.uleb128 0x5
 3051 017f 00       		.byte	0
 3052 0180 03       		.uleb128 0x3
 3053 0181 0E       		.uleb128 0xe
 3054 0182 3A       		.uleb128 0x3a
 3055 0183 0B       		.uleb128 0xb
 3056 0184 3B       		.uleb128 0x3b
 3057 0185 05       		.uleb128 0x5
 3058 0186 49       		.uleb128 0x49
 3059 0187 13       		.uleb128 0x13
 3060 0188 02       		.uleb128 0x2
 3061 0189 0A       		.uleb128 0xa
 3062 018a 00       		.byte	0
 3063 018b 00       		.byte	0
 3064 018c 1A       		.uleb128 0x1a
 3065 018d 34       		.uleb128 0x34
 3066 018e 00       		.byte	0
 3067 018f 03       		.uleb128 0x3
 3068 0190 0E       		.uleb128 0xe
 3069 0191 3A       		.uleb128 0x3a
 3070 0192 0B       		.uleb128 0xb
 3071 0193 3B       		.uleb128 0x3b
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 84


 3072 0194 0B       		.uleb128 0xb
 3073 0195 49       		.uleb128 0x49
 3074 0196 13       		.uleb128 0x13
 3075 0197 3F       		.uleb128 0x3f
 3076 0198 0C       		.uleb128 0xc
 3077 0199 02       		.uleb128 0x2
 3078 019a 0A       		.uleb128 0xa
 3079 019b 00       		.byte	0
 3080 019c 00       		.byte	0
 3081 019d 1B       		.uleb128 0x1b
 3082 019e 2E       		.uleb128 0x2e
 3083 019f 00       		.byte	0
 3084 01a0 3F       		.uleb128 0x3f
 3085 01a1 0C       		.uleb128 0xc
 3086 01a2 03       		.uleb128 0x3
 3087 01a3 0E       		.uleb128 0xe
 3088 01a4 3A       		.uleb128 0x3a
 3089 01a5 0B       		.uleb128 0xb
 3090 01a6 3B       		.uleb128 0x3b
 3091 01a7 0B       		.uleb128 0xb
 3092 01a8 27       		.uleb128 0x27
 3093 01a9 0C       		.uleb128 0xc
 3094 01aa 49       		.uleb128 0x49
 3095 01ab 13       		.uleb128 0x13
 3096 01ac 3C       		.uleb128 0x3c
 3097 01ad 0C       		.uleb128 0xc
 3098 01ae 00       		.byte	0
 3099 01af 00       		.byte	0
 3100 01b0 1C       		.uleb128 0x1c
 3101 01b1 2E       		.uleb128 0x2e
 3102 01b2 01       		.byte	0x1
 3103 01b3 3F       		.uleb128 0x3f
 3104 01b4 0C       		.uleb128 0xc
 3105 01b5 03       		.uleb128 0x3
 3106 01b6 0E       		.uleb128 0xe
 3107 01b7 3A       		.uleb128 0x3a
 3108 01b8 0B       		.uleb128 0xb
 3109 01b9 3B       		.uleb128 0x3b
 3110 01ba 0B       		.uleb128 0xb
 3111 01bb 27       		.uleb128 0x27
 3112 01bc 0C       		.uleb128 0xc
 3113 01bd 3C       		.uleb128 0x3c
 3114 01be 0C       		.uleb128 0xc
 3115 01bf 00       		.byte	0
 3116 01c0 00       		.byte	0
 3117 01c1 1D       		.uleb128 0x1d
 3118 01c2 05       		.uleb128 0x5
 3119 01c3 00       		.byte	0
 3120 01c4 49       		.uleb128 0x49
 3121 01c5 13       		.uleb128 0x13
 3122 01c6 00       		.byte	0
 3123 01c7 00       		.byte	0
 3124 01c8 00       		.byte	0
 3125              		.section	.debug_loc,"",%progbits
 3126              	.Ldebug_loc0:
 3127              	.LLST0:
 3128 0000 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 85


 3129 0004 02000000 		.4byte	.LCFI0
 3130 0008 0200     		.2byte	0x2
 3131 000a 7D       		.byte	0x7d
 3132 000b 00       		.sleb128 0
 3133 000c 02000000 		.4byte	.LCFI0
 3134 0010 1C000000 		.4byte	.LFE3
 3135 0014 0200     		.2byte	0x2
 3136 0016 7D       		.byte	0x7d
 3137 0017 08       		.sleb128 8
 3138 0018 00000000 		.4byte	0
 3139 001c 00000000 		.4byte	0
 3140              	.LLST1:
 3141 0020 06000000 		.4byte	.LVL3
 3142 0024 13000000 		.4byte	.LVL4-1
 3143 0028 0100     		.2byte	0x1
 3144 002a 50       		.byte	0x50
 3145 002b 00000000 		.4byte	0
 3146 002f 00000000 		.4byte	0
 3147              	.LLST2:
 3148 0033 00000000 		.4byte	.LFB4
 3149 0037 02000000 		.4byte	.LCFI1
 3150 003b 0200     		.2byte	0x2
 3151 003d 7D       		.byte	0x7d
 3152 003e 00       		.sleb128 0
 3153 003f 02000000 		.4byte	.LCFI1
 3154 0043 28000000 		.4byte	.LFE4
 3155 0047 0200     		.2byte	0x2
 3156 0049 7D       		.byte	0x7d
 3157 004a 08       		.sleb128 8
 3158 004b 00000000 		.4byte	0
 3159 004f 00000000 		.4byte	0
 3160              	.LLST3:
 3161 0053 00000000 		.4byte	.LVL5
 3162 0057 07000000 		.4byte	.LVL6-1
 3163 005b 0100     		.2byte	0x1
 3164 005d 50       		.byte	0x50
 3165 005e 07000000 		.4byte	.LVL6-1
 3166 0062 16000000 		.4byte	.LVL7
 3167 0066 0100     		.2byte	0x1
 3168 0068 54       		.byte	0x54
 3169 0069 16000000 		.4byte	.LVL7
 3170 006d 28000000 		.4byte	.LFE4
 3171 0071 0400     		.2byte	0x4
 3172 0073 F3       		.byte	0xf3
 3173 0074 01       		.uleb128 0x1
 3174 0075 50       		.byte	0x50
 3175 0076 9F       		.byte	0x9f
 3176 0077 00000000 		.4byte	0
 3177 007b 00000000 		.4byte	0
 3178              	.LLST4:
 3179 007f 08000000 		.4byte	.LVL6
 3180 0083 1B000000 		.4byte	.LVL8-1
 3181 0087 0100     		.2byte	0x1
 3182 0089 50       		.byte	0x50
 3183 008a 00000000 		.4byte	0
 3184 008e 00000000 		.4byte	0
 3185              	.LLST5:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 86


 3186 0092 00000000 		.4byte	.LFB5
 3187 0096 02000000 		.4byte	.LCFI2
 3188 009a 0200     		.2byte	0x2
 3189 009c 7D       		.byte	0x7d
 3190 009d 00       		.sleb128 0
 3191 009e 02000000 		.4byte	.LCFI2
 3192 00a2 28000000 		.4byte	.LFE5
 3193 00a6 0200     		.2byte	0x2
 3194 00a8 7D       		.byte	0x7d
 3195 00a9 08       		.sleb128 8
 3196 00aa 00000000 		.4byte	0
 3197 00ae 00000000 		.4byte	0
 3198              	.LLST6:
 3199 00b2 00000000 		.4byte	.LVL9
 3200 00b6 07000000 		.4byte	.LVL10-1
 3201 00ba 0100     		.2byte	0x1
 3202 00bc 50       		.byte	0x50
 3203 00bd 07000000 		.4byte	.LVL10-1
 3204 00c1 16000000 		.4byte	.LVL11
 3205 00c5 0100     		.2byte	0x1
 3206 00c7 54       		.byte	0x54
 3207 00c8 16000000 		.4byte	.LVL11
 3208 00cc 28000000 		.4byte	.LFE5
 3209 00d0 0400     		.2byte	0x4
 3210 00d2 F3       		.byte	0xf3
 3211 00d3 01       		.uleb128 0x1
 3212 00d4 50       		.byte	0x50
 3213 00d5 9F       		.byte	0x9f
 3214 00d6 00000000 		.4byte	0
 3215 00da 00000000 		.4byte	0
 3216              	.LLST7:
 3217 00de 08000000 		.4byte	.LVL10
 3218 00e2 1B000000 		.4byte	.LVL12-1
 3219 00e6 0100     		.2byte	0x1
 3220 00e8 50       		.byte	0x50
 3221 00e9 00000000 		.4byte	0
 3222 00ed 00000000 		.4byte	0
 3223              	.LLST8:
 3224 00f1 00000000 		.4byte	.LFB6
 3225 00f5 02000000 		.4byte	.LCFI3
 3226 00f9 0200     		.2byte	0x2
 3227 00fb 7D       		.byte	0x7d
 3228 00fc 00       		.sleb128 0
 3229 00fd 02000000 		.4byte	.LCFI3
 3230 0101 28000000 		.4byte	.LFE6
 3231 0105 0200     		.2byte	0x2
 3232 0107 7D       		.byte	0x7d
 3233 0108 08       		.sleb128 8
 3234 0109 00000000 		.4byte	0
 3235 010d 00000000 		.4byte	0
 3236              	.LLST9:
 3237 0111 00000000 		.4byte	.LVL13
 3238 0115 07000000 		.4byte	.LVL14-1
 3239 0119 0100     		.2byte	0x1
 3240 011b 50       		.byte	0x50
 3241 011c 07000000 		.4byte	.LVL14-1
 3242 0120 16000000 		.4byte	.LVL15
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 87


 3243 0124 0100     		.2byte	0x1
 3244 0126 54       		.byte	0x54
 3245 0127 16000000 		.4byte	.LVL15
 3246 012b 28000000 		.4byte	.LFE6
 3247 012f 0400     		.2byte	0x4
 3248 0131 F3       		.byte	0xf3
 3249 0132 01       		.uleb128 0x1
 3250 0133 50       		.byte	0x50
 3251 0134 9F       		.byte	0x9f
 3252 0135 00000000 		.4byte	0
 3253 0139 00000000 		.4byte	0
 3254              	.LLST10:
 3255 013d 08000000 		.4byte	.LVL14
 3256 0141 1B000000 		.4byte	.LVL16-1
 3257 0145 0100     		.2byte	0x1
 3258 0147 50       		.byte	0x50
 3259 0148 00000000 		.4byte	0
 3260 014c 00000000 		.4byte	0
 3261              	.LLST11:
 3262 0150 00000000 		.4byte	.LFB7
 3263 0154 02000000 		.4byte	.LCFI4
 3264 0158 0200     		.2byte	0x2
 3265 015a 7D       		.byte	0x7d
 3266 015b 00       		.sleb128 0
 3267 015c 02000000 		.4byte	.LCFI4
 3268 0160 2C000000 		.4byte	.LFE7
 3269 0164 0200     		.2byte	0x2
 3270 0166 7D       		.byte	0x7d
 3271 0167 08       		.sleb128 8
 3272 0168 00000000 		.4byte	0
 3273 016c 00000000 		.4byte	0
 3274              	.LLST12:
 3275 0170 00000000 		.4byte	.LVL17
 3276 0174 07000000 		.4byte	.LVL18-1
 3277 0178 0100     		.2byte	0x1
 3278 017a 50       		.byte	0x50
 3279 017b 07000000 		.4byte	.LVL18-1
 3280 017f 18000000 		.4byte	.LVL19
 3281 0183 0100     		.2byte	0x1
 3282 0185 54       		.byte	0x54
 3283 0186 18000000 		.4byte	.LVL19
 3284 018a 2C000000 		.4byte	.LFE7
 3285 018e 0400     		.2byte	0x4
 3286 0190 F3       		.byte	0xf3
 3287 0191 01       		.uleb128 0x1
 3288 0192 50       		.byte	0x50
 3289 0193 9F       		.byte	0x9f
 3290 0194 00000000 		.4byte	0
 3291 0198 00000000 		.4byte	0
 3292              	.LLST13:
 3293 019c 08000000 		.4byte	.LVL18
 3294 01a0 21000000 		.4byte	.LVL20-1
 3295 01a4 0100     		.2byte	0x1
 3296 01a6 50       		.byte	0x50
 3297 01a7 00000000 		.4byte	0
 3298 01ab 00000000 		.4byte	0
 3299              	.LLST14:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 88


 3300 01af 00000000 		.4byte	.LVL21
 3301 01b3 06000000 		.4byte	.LVL22
 3302 01b7 0100     		.2byte	0x1
 3303 01b9 50       		.byte	0x50
 3304 01ba 06000000 		.4byte	.LVL22
 3305 01be 10000000 		.4byte	.LFE8
 3306 01c2 0400     		.2byte	0x4
 3307 01c4 F3       		.byte	0xf3
 3308 01c5 01       		.uleb128 0x1
 3309 01c6 50       		.byte	0x50
 3310 01c7 9F       		.byte	0x9f
 3311 01c8 00000000 		.4byte	0
 3312 01cc 00000000 		.4byte	0
 3313              	.LLST15:
 3314 01d0 00000000 		.4byte	.LFB9
 3315 01d4 02000000 		.4byte	.LCFI5
 3316 01d8 0200     		.2byte	0x2
 3317 01da 7D       		.byte	0x7d
 3318 01db 00       		.sleb128 0
 3319 01dc 02000000 		.4byte	.LCFI5
 3320 01e0 28000000 		.4byte	.LFE9
 3321 01e4 0200     		.2byte	0x2
 3322 01e6 7D       		.byte	0x7d
 3323 01e7 08       		.sleb128 8
 3324 01e8 00000000 		.4byte	0
 3325 01ec 00000000 		.4byte	0
 3326              	.LLST16:
 3327 01f0 00000000 		.4byte	.LVL23
 3328 01f4 07000000 		.4byte	.LVL24-1
 3329 01f8 0100     		.2byte	0x1
 3330 01fa 50       		.byte	0x50
 3331 01fb 07000000 		.4byte	.LVL24-1
 3332 01ff 18000000 		.4byte	.LVL25
 3333 0203 0100     		.2byte	0x1
 3334 0205 54       		.byte	0x54
 3335 0206 18000000 		.4byte	.LVL25
 3336 020a 28000000 		.4byte	.LFE9
 3337 020e 0400     		.2byte	0x4
 3338 0210 F3       		.byte	0xf3
 3339 0211 01       		.uleb128 0x1
 3340 0212 50       		.byte	0x50
 3341 0213 9F       		.byte	0x9f
 3342 0214 00000000 		.4byte	0
 3343 0218 00000000 		.4byte	0
 3344              	.LLST17:
 3345 021c 08000000 		.4byte	.LVL24
 3346 0220 21000000 		.4byte	.LVL26-1
 3347 0224 0100     		.2byte	0x1
 3348 0226 50       		.byte	0x50
 3349 0227 00000000 		.4byte	0
 3350 022b 00000000 		.4byte	0
 3351              	.LLST18:
 3352 022f 00000000 		.4byte	.LFB10
 3353 0233 02000000 		.4byte	.LCFI6
 3354 0237 0200     		.2byte	0x2
 3355 0239 7D       		.byte	0x7d
 3356 023a 00       		.sleb128 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 89


 3357 023b 02000000 		.4byte	.LCFI6
 3358 023f 28000000 		.4byte	.LFE10
 3359 0243 0200     		.2byte	0x2
 3360 0245 7D       		.byte	0x7d
 3361 0246 08       		.sleb128 8
 3362 0247 00000000 		.4byte	0
 3363 024b 00000000 		.4byte	0
 3364              	.LLST19:
 3365 024f 00000000 		.4byte	.LVL27
 3366 0253 07000000 		.4byte	.LVL28-1
 3367 0257 0100     		.2byte	0x1
 3368 0259 50       		.byte	0x50
 3369 025a 07000000 		.4byte	.LVL28-1
 3370 025e 18000000 		.4byte	.LVL29
 3371 0262 0100     		.2byte	0x1
 3372 0264 54       		.byte	0x54
 3373 0265 18000000 		.4byte	.LVL29
 3374 0269 28000000 		.4byte	.LFE10
 3375 026d 0400     		.2byte	0x4
 3376 026f F3       		.byte	0xf3
 3377 0270 01       		.uleb128 0x1
 3378 0271 50       		.byte	0x50
 3379 0272 9F       		.byte	0x9f
 3380 0273 00000000 		.4byte	0
 3381 0277 00000000 		.4byte	0
 3382              	.LLST20:
 3383 027b 08000000 		.4byte	.LVL28
 3384 027f 21000000 		.4byte	.LVL30-1
 3385 0283 0100     		.2byte	0x1
 3386 0285 50       		.byte	0x50
 3387 0286 00000000 		.4byte	0
 3388 028a 00000000 		.4byte	0
 3389              	.LLST21:
 3390 028e 00000000 		.4byte	.LFB11
 3391 0292 02000000 		.4byte	.LCFI7
 3392 0296 0200     		.2byte	0x2
 3393 0298 7D       		.byte	0x7d
 3394 0299 00       		.sleb128 0
 3395 029a 02000000 		.4byte	.LCFI7
 3396 029e 2C000000 		.4byte	.LFE11
 3397 02a2 0200     		.2byte	0x2
 3398 02a4 7D       		.byte	0x7d
 3399 02a5 08       		.sleb128 8
 3400 02a6 00000000 		.4byte	0
 3401 02aa 00000000 		.4byte	0
 3402              	.LLST22:
 3403 02ae 00000000 		.4byte	.LVL31
 3404 02b2 07000000 		.4byte	.LVL32-1
 3405 02b6 0100     		.2byte	0x1
 3406 02b8 50       		.byte	0x50
 3407 02b9 07000000 		.4byte	.LVL32-1
 3408 02bd 10000000 		.4byte	.LVL33
 3409 02c1 0100     		.2byte	0x1
 3410 02c3 54       		.byte	0x54
 3411 02c4 10000000 		.4byte	.LVL33
 3412 02c8 2C000000 		.4byte	.LFE11
 3413 02cc 0400     		.2byte	0x4
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 90


 3414 02ce F3       		.byte	0xf3
 3415 02cf 01       		.uleb128 0x1
 3416 02d0 50       		.byte	0x50
 3417 02d1 9F       		.byte	0x9f
 3418 02d2 00000000 		.4byte	0
 3419 02d6 00000000 		.4byte	0
 3420              	.LLST23:
 3421 02da 08000000 		.4byte	.LVL32
 3422 02de 1F000000 		.4byte	.LVL34-1
 3423 02e2 0100     		.2byte	0x1
 3424 02e4 50       		.byte	0x50
 3425 02e5 00000000 		.4byte	0
 3426 02e9 00000000 		.4byte	0
 3427              	.LLST24:
 3428 02ed 00000000 		.4byte	.LFB12
 3429 02f1 02000000 		.4byte	.LCFI8
 3430 02f5 0200     		.2byte	0x2
 3431 02f7 7D       		.byte	0x7d
 3432 02f8 00       		.sleb128 0
 3433 02f9 02000000 		.4byte	.LCFI8
 3434 02fd 28000000 		.4byte	.LFE12
 3435 0301 0200     		.2byte	0x2
 3436 0303 7D       		.byte	0x7d
 3437 0304 08       		.sleb128 8
 3438 0305 00000000 		.4byte	0
 3439 0309 00000000 		.4byte	0
 3440              	.LLST25:
 3441 030d 00000000 		.4byte	.LVL35
 3442 0311 07000000 		.4byte	.LVL36-1
 3443 0315 0100     		.2byte	0x1
 3444 0317 50       		.byte	0x50
 3445 0318 07000000 		.4byte	.LVL36-1
 3446 031c 16000000 		.4byte	.LVL37
 3447 0320 0100     		.2byte	0x1
 3448 0322 54       		.byte	0x54
 3449 0323 16000000 		.4byte	.LVL37
 3450 0327 28000000 		.4byte	.LFE12
 3451 032b 0400     		.2byte	0x4
 3452 032d F3       		.byte	0xf3
 3453 032e 01       		.uleb128 0x1
 3454 032f 50       		.byte	0x50
 3455 0330 9F       		.byte	0x9f
 3456 0331 00000000 		.4byte	0
 3457 0335 00000000 		.4byte	0
 3458              	.LLST26:
 3459 0339 08000000 		.4byte	.LVL36
 3460 033d 1B000000 		.4byte	.LVL38-1
 3461 0341 0100     		.2byte	0x1
 3462 0343 50       		.byte	0x50
 3463 0344 00000000 		.4byte	0
 3464 0348 00000000 		.4byte	0
 3465              	.LLST27:
 3466 034c 00000000 		.4byte	.LVL39
 3467 0350 04000000 		.4byte	.LVL40
 3468 0354 0100     		.2byte	0x1
 3469 0356 50       		.byte	0x50
 3470 0357 04000000 		.4byte	.LVL40
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 91


 3471 035b 0C000000 		.4byte	.LFE13
 3472 035f 0400     		.2byte	0x4
 3473 0361 F3       		.byte	0xf3
 3474 0362 01       		.uleb128 0x1
 3475 0363 50       		.byte	0x50
 3476 0364 9F       		.byte	0x9f
 3477 0365 00000000 		.4byte	0
 3478 0369 00000000 		.4byte	0
 3479              	.LLST28:
 3480 036d 00000000 		.4byte	.LFB15
 3481 0371 02000000 		.4byte	.LCFI9
 3482 0375 0200     		.2byte	0x2
 3483 0377 7D       		.byte	0x7d
 3484 0378 00       		.sleb128 0
 3485 0379 02000000 		.4byte	.LCFI9
 3486 037d 28000000 		.4byte	.LFE15
 3487 0381 0200     		.2byte	0x2
 3488 0383 7D       		.byte	0x7d
 3489 0384 08       		.sleb128 8
 3490 0385 00000000 		.4byte	0
 3491 0389 00000000 		.4byte	0
 3492              	.LLST29:
 3493 038d 00000000 		.4byte	.LVL41
 3494 0391 07000000 		.4byte	.LVL42-1
 3495 0395 0100     		.2byte	0x1
 3496 0397 50       		.byte	0x50
 3497 0398 07000000 		.4byte	.LVL42-1
 3498 039c 16000000 		.4byte	.LVL43
 3499 03a0 0100     		.2byte	0x1
 3500 03a2 54       		.byte	0x54
 3501 03a3 16000000 		.4byte	.LVL43
 3502 03a7 28000000 		.4byte	.LFE15
 3503 03ab 0400     		.2byte	0x4
 3504 03ad F3       		.byte	0xf3
 3505 03ae 01       		.uleb128 0x1
 3506 03af 50       		.byte	0x50
 3507 03b0 9F       		.byte	0x9f
 3508 03b1 00000000 		.4byte	0
 3509 03b5 00000000 		.4byte	0
 3510              	.LLST30:
 3511 03b9 08000000 		.4byte	.LVL42
 3512 03bd 1B000000 		.4byte	.LVL44-1
 3513 03c1 0100     		.2byte	0x1
 3514 03c3 50       		.byte	0x50
 3515 03c4 00000000 		.4byte	0
 3516 03c8 00000000 		.4byte	0
 3517              	.LLST31:
 3518 03cc 00000000 		.4byte	.LVL45
 3519 03d0 04000000 		.4byte	.LVL46
 3520 03d4 0100     		.2byte	0x1
 3521 03d6 50       		.byte	0x50
 3522 03d7 04000000 		.4byte	.LVL46
 3523 03db 0C000000 		.4byte	.LFE16
 3524 03df 0400     		.2byte	0x4
 3525 03e1 F3       		.byte	0xf3
 3526 03e2 01       		.uleb128 0x1
 3527 03e3 50       		.byte	0x50
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 92


 3528 03e4 9F       		.byte	0x9f
 3529 03e5 00000000 		.4byte	0
 3530 03e9 00000000 		.4byte	0
 3531              	.LLST32:
 3532 03ed 00000000 		.4byte	.LFB18
 3533 03f1 02000000 		.4byte	.LCFI10
 3534 03f5 0200     		.2byte	0x2
 3535 03f7 7D       		.byte	0x7d
 3536 03f8 00       		.sleb128 0
 3537 03f9 02000000 		.4byte	.LCFI10
 3538 03fd 24000000 		.4byte	.LFE18
 3539 0401 0200     		.2byte	0x2
 3540 0403 7D       		.byte	0x7d
 3541 0404 08       		.sleb128 8
 3542 0405 00000000 		.4byte	0
 3543 0409 00000000 		.4byte	0
 3544              	.LLST33:
 3545 040d 00000000 		.4byte	.LVL47
 3546 0411 07000000 		.4byte	.LVL48-1
 3547 0415 0100     		.2byte	0x1
 3548 0417 50       		.byte	0x50
 3549 0418 07000000 		.4byte	.LVL48-1
 3550 041c 1E000000 		.4byte	.LVL50
 3551 0420 0100     		.2byte	0x1
 3552 0422 54       		.byte	0x54
 3553 0423 1E000000 		.4byte	.LVL50
 3554 0427 24000000 		.4byte	.LFE18
 3555 042b 0400     		.2byte	0x4
 3556 042d F3       		.byte	0xf3
 3557 042e 01       		.uleb128 0x1
 3558 042f 50       		.byte	0x50
 3559 0430 9F       		.byte	0x9f
 3560 0431 00000000 		.4byte	0
 3561 0435 00000000 		.4byte	0
 3562              	.LLST34:
 3563 0439 08000000 		.4byte	.LVL48
 3564 043d 1D000000 		.4byte	.LVL49-1
 3565 0441 0100     		.2byte	0x1
 3566 0443 50       		.byte	0x50
 3567 0444 00000000 		.4byte	0
 3568 0448 00000000 		.4byte	0
 3569              	.LLST35:
 3570 044c 00000000 		.4byte	.LVL51
 3571 0450 04000000 		.4byte	.LVL52
 3572 0454 0100     		.2byte	0x1
 3573 0456 50       		.byte	0x50
 3574 0457 04000000 		.4byte	.LVL52
 3575 045b 0C000000 		.4byte	.LFE19
 3576 045f 0400     		.2byte	0x4
 3577 0461 F3       		.byte	0xf3
 3578 0462 01       		.uleb128 0x1
 3579 0463 50       		.byte	0x50
 3580 0464 9F       		.byte	0x9f
 3581 0465 00000000 		.4byte	0
 3582 0469 00000000 		.4byte	0
 3583              	.LLST36:
 3584 046d 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 93


 3585 0471 02000000 		.4byte	.LCFI11
 3586 0475 0200     		.2byte	0x2
 3587 0477 7D       		.byte	0x7d
 3588 0478 00       		.sleb128 0
 3589 0479 02000000 		.4byte	.LCFI11
 3590 047d 28000000 		.4byte	.LFE21
 3591 0481 0200     		.2byte	0x2
 3592 0483 7D       		.byte	0x7d
 3593 0484 08       		.sleb128 8
 3594 0485 00000000 		.4byte	0
 3595 0489 00000000 		.4byte	0
 3596              	.LLST37:
 3597 048d 00000000 		.4byte	.LVL53
 3598 0491 07000000 		.4byte	.LVL54-1
 3599 0495 0100     		.2byte	0x1
 3600 0497 50       		.byte	0x50
 3601 0498 07000000 		.4byte	.LVL54-1
 3602 049c 18000000 		.4byte	.LVL55
 3603 04a0 0100     		.2byte	0x1
 3604 04a2 54       		.byte	0x54
 3605 04a3 18000000 		.4byte	.LVL55
 3606 04a7 28000000 		.4byte	.LFE21
 3607 04ab 0400     		.2byte	0x4
 3608 04ad F3       		.byte	0xf3
 3609 04ae 01       		.uleb128 0x1
 3610 04af 50       		.byte	0x50
 3611 04b0 9F       		.byte	0x9f
 3612 04b1 00000000 		.4byte	0
 3613 04b5 00000000 		.4byte	0
 3614              	.LLST38:
 3615 04b9 08000000 		.4byte	.LVL54
 3616 04bd 21000000 		.4byte	.LVL56-1
 3617 04c1 0100     		.2byte	0x1
 3618 04c3 50       		.byte	0x50
 3619 04c4 00000000 		.4byte	0
 3620 04c8 00000000 		.4byte	0
 3621              	.LLST39:
 3622 04cc 00000000 		.4byte	.LVL57
 3623 04d0 04000000 		.4byte	.LVL58
 3624 04d4 0100     		.2byte	0x1
 3625 04d6 50       		.byte	0x50
 3626 04d7 04000000 		.4byte	.LVL58
 3627 04db 0C000000 		.4byte	.LFE22
 3628 04df 0400     		.2byte	0x4
 3629 04e1 F3       		.byte	0xf3
 3630 04e2 01       		.uleb128 0x1
 3631 04e3 50       		.byte	0x50
 3632 04e4 9F       		.byte	0x9f
 3633 04e5 00000000 		.4byte	0
 3634 04e9 00000000 		.4byte	0
 3635              	.LLST40:
 3636 04ed 00000000 		.4byte	.LVL59
 3637 04f1 04000000 		.4byte	.LVL60
 3638 04f5 0100     		.2byte	0x1
 3639 04f7 50       		.byte	0x50
 3640 04f8 04000000 		.4byte	.LVL60
 3641 04fc 0C000000 		.4byte	.LFE24
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 94


 3642 0500 0400     		.2byte	0x4
 3643 0502 F3       		.byte	0xf3
 3644 0503 01       		.uleb128 0x1
 3645 0504 50       		.byte	0x50
 3646 0505 9F       		.byte	0x9f
 3647 0506 00000000 		.4byte	0
 3648 050a 00000000 		.4byte	0
 3649              	.LLST41:
 3650 050e 00000000 		.4byte	.LFB28
 3651 0512 02000000 		.4byte	.LCFI12
 3652 0516 0200     		.2byte	0x2
 3653 0518 7D       		.byte	0x7d
 3654 0519 00       		.sleb128 0
 3655 051a 02000000 		.4byte	.LCFI12
 3656 051e 24000000 		.4byte	.LFE28
 3657 0522 0200     		.2byte	0x2
 3658 0524 7D       		.byte	0x7d
 3659 0525 08       		.sleb128 8
 3660 0526 00000000 		.4byte	0
 3661 052a 00000000 		.4byte	0
 3662              	.LLST42:
 3663 052e 00000000 		.4byte	.LVL61
 3664 0532 07000000 		.4byte	.LVL62-1
 3665 0536 0100     		.2byte	0x1
 3666 0538 50       		.byte	0x50
 3667 0539 07000000 		.4byte	.LVL62-1
 3668 053d 16000000 		.4byte	.LVL63
 3669 0541 0100     		.2byte	0x1
 3670 0543 54       		.byte	0x54
 3671 0544 16000000 		.4byte	.LVL63
 3672 0548 24000000 		.4byte	.LFE28
 3673 054c 0400     		.2byte	0x4
 3674 054e F3       		.byte	0xf3
 3675 054f 01       		.uleb128 0x1
 3676 0550 50       		.byte	0x50
 3677 0551 9F       		.byte	0x9f
 3678 0552 00000000 		.4byte	0
 3679 0556 00000000 		.4byte	0
 3680              	.LLST43:
 3681 055a 08000000 		.4byte	.LVL62
 3682 055e 1B000000 		.4byte	.LVL64-1
 3683 0562 0100     		.2byte	0x1
 3684 0564 50       		.byte	0x50
 3685 0565 00000000 		.4byte	0
 3686 0569 00000000 		.4byte	0
 3687              	.LLST44:
 3688 056d 00000000 		.4byte	.LFB29
 3689 0571 02000000 		.4byte	.LCFI13
 3690 0575 0200     		.2byte	0x2
 3691 0577 7D       		.byte	0x7d
 3692 0578 00       		.sleb128 0
 3693 0579 02000000 		.4byte	.LCFI13
 3694 057d 24000000 		.4byte	.LFE29
 3695 0581 0200     		.2byte	0x2
 3696 0583 7D       		.byte	0x7d
 3697 0584 08       		.sleb128 8
 3698 0585 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 95


 3699 0589 00000000 		.4byte	0
 3700              	.LLST45:
 3701 058d 00000000 		.4byte	.LVL65
 3702 0591 07000000 		.4byte	.LVL66-1
 3703 0595 0100     		.2byte	0x1
 3704 0597 50       		.byte	0x50
 3705 0598 07000000 		.4byte	.LVL66-1
 3706 059c 10000000 		.4byte	.LVL67
 3707 05a0 0100     		.2byte	0x1
 3708 05a2 54       		.byte	0x54
 3709 05a3 10000000 		.4byte	.LVL67
 3710 05a7 24000000 		.4byte	.LFE29
 3711 05ab 0400     		.2byte	0x4
 3712 05ad F3       		.byte	0xf3
 3713 05ae 01       		.uleb128 0x1
 3714 05af 50       		.byte	0x50
 3715 05b0 9F       		.byte	0x9f
 3716 05b1 00000000 		.4byte	0
 3717 05b5 00000000 		.4byte	0
 3718              	.LLST46:
 3719 05b9 08000000 		.4byte	.LVL66
 3720 05bd 1D000000 		.4byte	.LVL68-1
 3721 05c1 0100     		.2byte	0x1
 3722 05c3 50       		.byte	0x50
 3723 05c4 00000000 		.4byte	0
 3724 05c8 00000000 		.4byte	0
 3725              	.LLST47:
 3726 05cc 00000000 		.4byte	.LFB30
 3727 05d0 02000000 		.4byte	.LCFI14
 3728 05d4 0200     		.2byte	0x2
 3729 05d6 7D       		.byte	0x7d
 3730 05d7 00       		.sleb128 0
 3731 05d8 02000000 		.4byte	.LCFI14
 3732 05dc 28000000 		.4byte	.LFE30
 3733 05e0 0200     		.2byte	0x2
 3734 05e2 7D       		.byte	0x7d
 3735 05e3 08       		.sleb128 8
 3736 05e4 00000000 		.4byte	0
 3737 05e8 00000000 		.4byte	0
 3738              	.LLST48:
 3739 05ec 00000000 		.4byte	.LVL69
 3740 05f0 07000000 		.4byte	.LVL70-1
 3741 05f4 0100     		.2byte	0x1
 3742 05f6 50       		.byte	0x50
 3743 05f7 07000000 		.4byte	.LVL70-1
 3744 05fb 10000000 		.4byte	.LVL71
 3745 05ff 0100     		.2byte	0x1
 3746 0601 54       		.byte	0x54
 3747 0602 10000000 		.4byte	.LVL71
 3748 0606 28000000 		.4byte	.LFE30
 3749 060a 0400     		.2byte	0x4
 3750 060c F3       		.byte	0xf3
 3751 060d 01       		.uleb128 0x1
 3752 060e 50       		.byte	0x50
 3753 060f 9F       		.byte	0x9f
 3754 0610 00000000 		.4byte	0
 3755 0614 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 96


 3756              	.LLST49:
 3757 0618 08000000 		.4byte	.LVL70
 3758 061c 1D000000 		.4byte	.LVL72-1
 3759 0620 0100     		.2byte	0x1
 3760 0622 50       		.byte	0x50
 3761 0623 00000000 		.4byte	0
 3762 0627 00000000 		.4byte	0
 3763              	.LLST50:
 3764 062b 00000000 		.4byte	.LFB31
 3765 062f 02000000 		.4byte	.LCFI15
 3766 0633 0200     		.2byte	0x2
 3767 0635 7D       		.byte	0x7d
 3768 0636 00       		.sleb128 0
 3769 0637 02000000 		.4byte	.LCFI15
 3770 063b 24000000 		.4byte	.LFE31
 3771 063f 0200     		.2byte	0x2
 3772 0641 7D       		.byte	0x7d
 3773 0642 08       		.sleb128 8
 3774 0643 00000000 		.4byte	0
 3775 0647 00000000 		.4byte	0
 3776              	.LLST51:
 3777 064b 00000000 		.4byte	.LVL73
 3778 064f 07000000 		.4byte	.LVL74-1
 3779 0653 0100     		.2byte	0x1
 3780 0655 50       		.byte	0x50
 3781 0656 07000000 		.4byte	.LVL74-1
 3782 065a 10000000 		.4byte	.LVL75
 3783 065e 0100     		.2byte	0x1
 3784 0660 54       		.byte	0x54
 3785 0661 10000000 		.4byte	.LVL75
 3786 0665 24000000 		.4byte	.LFE31
 3787 0669 0400     		.2byte	0x4
 3788 066b F3       		.byte	0xf3
 3789 066c 01       		.uleb128 0x1
 3790 066d 50       		.byte	0x50
 3791 066e 9F       		.byte	0x9f
 3792 066f 00000000 		.4byte	0
 3793 0673 00000000 		.4byte	0
 3794              	.LLST52:
 3795 0677 08000000 		.4byte	.LVL74
 3796 067b 1D000000 		.4byte	.LVL76-1
 3797 067f 0100     		.2byte	0x1
 3798 0681 50       		.byte	0x50
 3799 0682 00000000 		.4byte	0
 3800 0686 00000000 		.4byte	0
 3801              	.LLST53:
 3802 068a 00000000 		.4byte	.LFB32
 3803 068e 02000000 		.4byte	.LCFI16
 3804 0692 0200     		.2byte	0x2
 3805 0694 7D       		.byte	0x7d
 3806 0695 00       		.sleb128 0
 3807 0696 02000000 		.4byte	.LCFI16
 3808 069a 24000000 		.4byte	.LFE32
 3809 069e 0200     		.2byte	0x2
 3810 06a0 7D       		.byte	0x7d
 3811 06a1 08       		.sleb128 8
 3812 06a2 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 97


 3813 06a6 00000000 		.4byte	0
 3814              	.LLST54:
 3815 06aa 00000000 		.4byte	.LVL77
 3816 06ae 07000000 		.4byte	.LVL78-1
 3817 06b2 0100     		.2byte	0x1
 3818 06b4 50       		.byte	0x50
 3819 06b5 07000000 		.4byte	.LVL78-1
 3820 06b9 10000000 		.4byte	.LVL79
 3821 06bd 0100     		.2byte	0x1
 3822 06bf 54       		.byte	0x54
 3823 06c0 10000000 		.4byte	.LVL79
 3824 06c4 24000000 		.4byte	.LFE32
 3825 06c8 0400     		.2byte	0x4
 3826 06ca F3       		.byte	0xf3
 3827 06cb 01       		.uleb128 0x1
 3828 06cc 50       		.byte	0x50
 3829 06cd 9F       		.byte	0x9f
 3830 06ce 00000000 		.4byte	0
 3831 06d2 00000000 		.4byte	0
 3832              	.LLST55:
 3833 06d6 08000000 		.4byte	.LVL78
 3834 06da 1D000000 		.4byte	.LVL80-1
 3835 06de 0100     		.2byte	0x1
 3836 06e0 50       		.byte	0x50
 3837 06e1 00000000 		.4byte	0
 3838 06e5 00000000 		.4byte	0
 3839              	.LLST56:
 3840 06e9 00000000 		.4byte	.LFB33
 3841 06ed 02000000 		.4byte	.LCFI17
 3842 06f1 0200     		.2byte	0x2
 3843 06f3 7D       		.byte	0x7d
 3844 06f4 00       		.sleb128 0
 3845 06f5 02000000 		.4byte	.LCFI17
 3846 06f9 1C000000 		.4byte	.LFE33
 3847 06fd 0200     		.2byte	0x2
 3848 06ff 7D       		.byte	0x7d
 3849 0700 10       		.sleb128 16
 3850 0701 00000000 		.4byte	0
 3851 0705 00000000 		.4byte	0
 3852              	.LLST57:
 3853 0709 00000000 		.4byte	.LVL81
 3854 070d 09000000 		.4byte	.LVL82-1
 3855 0711 0100     		.2byte	0x1
 3856 0713 50       		.byte	0x50
 3857 0714 09000000 		.4byte	.LVL82-1
 3858 0718 0E000000 		.4byte	.LVL83
 3859 071c 0100     		.2byte	0x1
 3860 071e 55       		.byte	0x55
 3861 071f 0E000000 		.4byte	.LVL83
 3862 0723 1C000000 		.4byte	.LFE33
 3863 0727 0400     		.2byte	0x4
 3864 0729 F3       		.byte	0xf3
 3865 072a 01       		.uleb128 0x1
 3866 072b 50       		.byte	0x50
 3867 072c 9F       		.byte	0x9f
 3868 072d 00000000 		.4byte	0
 3869 0731 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 98


 3870              	.LLST58:
 3871 0735 00000000 		.4byte	.LVL81
 3872 0739 09000000 		.4byte	.LVL82-1
 3873 073d 0100     		.2byte	0x1
 3874 073f 51       		.byte	0x51
 3875 0740 09000000 		.4byte	.LVL82-1
 3876 0744 14000000 		.4byte	.LVL85
 3877 0748 0100     		.2byte	0x1
 3878 074a 54       		.byte	0x54
 3879 074b 14000000 		.4byte	.LVL85
 3880 074f 1C000000 		.4byte	.LFE33
 3881 0753 0400     		.2byte	0x4
 3882 0755 F3       		.byte	0xf3
 3883 0756 01       		.uleb128 0x1
 3884 0757 51       		.byte	0x51
 3885 0758 9F       		.byte	0x9f
 3886 0759 00000000 		.4byte	0
 3887 075d 00000000 		.4byte	0
 3888              	.LLST59:
 3889 0761 0A000000 		.4byte	.LVL82
 3890 0765 13000000 		.4byte	.LVL84-1
 3891 0769 0100     		.2byte	0x1
 3892 076b 50       		.byte	0x50
 3893 076c 00000000 		.4byte	0
 3894 0770 00000000 		.4byte	0
 3895              	.LLST60:
 3896 0774 00000000 		.4byte	.LFB1
 3897 0778 02000000 		.4byte	.LCFI18
 3898 077c 0200     		.2byte	0x2
 3899 077e 7D       		.byte	0x7d
 3900 077f 00       		.sleb128 0
 3901 0780 02000000 		.4byte	.LCFI18
 3902 0784 24000000 		.4byte	.LFE1
 3903 0788 0200     		.2byte	0x2
 3904 078a 7D       		.byte	0x7d
 3905 078b 08       		.sleb128 8
 3906 078c 00000000 		.4byte	0
 3907 0790 00000000 		.4byte	0
 3908              	.LLST61:
 3909 0794 06000000 		.4byte	.LVL86
 3910 0798 13000000 		.4byte	.LVL87-1
 3911 079c 0100     		.2byte	0x1
 3912 079e 50       		.byte	0x50
 3913 079f 00000000 		.4byte	0
 3914 07a3 00000000 		.4byte	0
 3915              	.LLST62:
 3916 07a7 00000000 		.4byte	.LFB2
 3917 07ab 02000000 		.4byte	.LCFI19
 3918 07af 0200     		.2byte	0x2
 3919 07b1 7D       		.byte	0x7d
 3920 07b2 00       		.sleb128 0
 3921 07b3 02000000 		.4byte	.LCFI19
 3922 07b7 1C000000 		.4byte	.LFE2
 3923 07bb 0200     		.2byte	0x2
 3924 07bd 7D       		.byte	0x7d
 3925 07be 08       		.sleb128 8
 3926 07bf 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 99


 3927 07c3 00000000 		.4byte	0
 3928              		.section	.debug_aranges,"",%progbits
 3929 0000 54010000 		.4byte	0x154
 3930 0004 0200     		.2byte	0x2
 3931 0006 00000000 		.4byte	.Ldebug_info0
 3932 000a 04       		.byte	0x4
 3933 000b 00       		.byte	0
 3934 000c 0000     		.2byte	0
 3935 000e 0000     		.2byte	0
 3936 0010 00000000 		.4byte	.LFB0
 3937 0014 48000000 		.4byte	.LFE0-.LFB0
 3938 0018 00000000 		.4byte	.LFB3
 3939 001c 1C000000 		.4byte	.LFE3-.LFB3
 3940 0020 00000000 		.4byte	.LFB4
 3941 0024 28000000 		.4byte	.LFE4-.LFB4
 3942 0028 00000000 		.4byte	.LFB5
 3943 002c 28000000 		.4byte	.LFE5-.LFB5
 3944 0030 00000000 		.4byte	.LFB6
 3945 0034 28000000 		.4byte	.LFE6-.LFB6
 3946 0038 00000000 		.4byte	.LFB7
 3947 003c 2C000000 		.4byte	.LFE7-.LFB7
 3948 0040 00000000 		.4byte	.LFB8
 3949 0044 10000000 		.4byte	.LFE8-.LFB8
 3950 0048 00000000 		.4byte	.LFB9
 3951 004c 28000000 		.4byte	.LFE9-.LFB9
 3952 0050 00000000 		.4byte	.LFB10
 3953 0054 28000000 		.4byte	.LFE10-.LFB10
 3954 0058 00000000 		.4byte	.LFB11
 3955 005c 2C000000 		.4byte	.LFE11-.LFB11
 3956 0060 00000000 		.4byte	.LFB12
 3957 0064 28000000 		.4byte	.LFE12-.LFB12
 3958 0068 00000000 		.4byte	.LFB13
 3959 006c 0C000000 		.4byte	.LFE13-.LFB13
 3960 0070 00000000 		.4byte	.LFB14
 3961 0074 0C000000 		.4byte	.LFE14-.LFB14
 3962 0078 00000000 		.4byte	.LFB15
 3963 007c 28000000 		.4byte	.LFE15-.LFB15
 3964 0080 00000000 		.4byte	.LFB16
 3965 0084 0C000000 		.4byte	.LFE16-.LFB16
 3966 0088 00000000 		.4byte	.LFB17
 3967 008c 0C000000 		.4byte	.LFE17-.LFB17
 3968 0090 00000000 		.4byte	.LFB18
 3969 0094 24000000 		.4byte	.LFE18-.LFB18
 3970 0098 00000000 		.4byte	.LFB19
 3971 009c 0C000000 		.4byte	.LFE19-.LFB19
 3972 00a0 00000000 		.4byte	.LFB20
 3973 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3974 00a8 00000000 		.4byte	.LFB21
 3975 00ac 28000000 		.4byte	.LFE21-.LFB21
 3976 00b0 00000000 		.4byte	.LFB22
 3977 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3978 00b8 00000000 		.4byte	.LFB23
 3979 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3980 00c0 00000000 		.4byte	.LFB24
 3981 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3982 00c8 00000000 		.4byte	.LFB25
 3983 00cc 0C000000 		.4byte	.LFE25-.LFB25
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 100


 3984 00d0 00000000 		.4byte	.LFB26
 3985 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3986 00d8 00000000 		.4byte	.LFB27
 3987 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3988 00e0 00000000 		.4byte	.LFB28
 3989 00e4 24000000 		.4byte	.LFE28-.LFB28
 3990 00e8 00000000 		.4byte	.LFB29
 3991 00ec 24000000 		.4byte	.LFE29-.LFB29
 3992 00f0 00000000 		.4byte	.LFB30
 3993 00f4 28000000 		.4byte	.LFE30-.LFB30
 3994 00f8 00000000 		.4byte	.LFB31
 3995 00fc 24000000 		.4byte	.LFE31-.LFB31
 3996 0100 00000000 		.4byte	.LFB32
 3997 0104 24000000 		.4byte	.LFE32-.LFB32
 3998 0108 00000000 		.4byte	.LFB33
 3999 010c 1C000000 		.4byte	.LFE33-.LFB33
 4000 0110 00000000 		.4byte	.LFB1
 4001 0114 24000000 		.4byte	.LFE1-.LFB1
 4002 0118 00000000 		.4byte	.LFB2
 4003 011c 1C000000 		.4byte	.LFE2-.LFB2
 4004 0120 00000000 		.4byte	.LFB34
 4005 0124 14000000 		.4byte	.LFE34-.LFB34
 4006 0128 00000000 		.4byte	.LFB35
 4007 012c 0C000000 		.4byte	.LFE35-.LFB35
 4008 0130 00000000 		.4byte	.LFB36
 4009 0134 0C000000 		.4byte	.LFE36-.LFB36
 4010 0138 00000000 		.4byte	.LFB37
 4011 013c 0C000000 		.4byte	.LFE37-.LFB37
 4012 0140 00000000 		.4byte	.LFB38
 4013 0144 0C000000 		.4byte	.LFE38-.LFB38
 4014 0148 00000000 		.4byte	.LFB39
 4015 014c 0C000000 		.4byte	.LFE39-.LFB39
 4016 0150 00000000 		.4byte	0
 4017 0154 00000000 		.4byte	0
 4018              		.section	.debug_ranges,"",%progbits
 4019              	.Ldebug_ranges0:
 4020 0000 10000000 		.4byte	.LBB8
 4021 0004 12000000 		.4byte	.LBE8
 4022 0008 16000000 		.4byte	.LBB12
 4023 000c 18000000 		.4byte	.LBE12
 4024 0010 1E000000 		.4byte	.LBB16
 4025 0014 20000000 		.4byte	.LBE16
 4026 0018 00000000 		.4byte	0
 4027 001c 00000000 		.4byte	0
 4028 0020 1A000000 		.4byte	.LBB13
 4029 0024 1E000000 		.4byte	.LBE13
 4030 0028 20000000 		.4byte	.LBB17
 4031 002c 22000000 		.4byte	.LBE17
 4032 0030 00000000 		.4byte	0
 4033 0034 00000000 		.4byte	0
 4034 0038 22000000 		.4byte	.LBB18
 4035 003c 24000000 		.4byte	.LBE18
 4036 0040 26000000 		.4byte	.LBB22
 4037 0044 28000000 		.4byte	.LBE22
 4038 0048 2A000000 		.4byte	.LBB23
 4039 004c 2C000000 		.4byte	.LBE23
 4040 0050 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 101


 4041 0054 00000000 		.4byte	0
 4042 0058 00000000 		.4byte	.LFB0
 4043 005c 48000000 		.4byte	.LFE0
 4044 0060 00000000 		.4byte	.LFB3
 4045 0064 1C000000 		.4byte	.LFE3
 4046 0068 00000000 		.4byte	.LFB4
 4047 006c 28000000 		.4byte	.LFE4
 4048 0070 00000000 		.4byte	.LFB5
 4049 0074 28000000 		.4byte	.LFE5
 4050 0078 00000000 		.4byte	.LFB6
 4051 007c 28000000 		.4byte	.LFE6
 4052 0080 00000000 		.4byte	.LFB7
 4053 0084 2C000000 		.4byte	.LFE7
 4054 0088 00000000 		.4byte	.LFB8
 4055 008c 10000000 		.4byte	.LFE8
 4056 0090 00000000 		.4byte	.LFB9
 4057 0094 28000000 		.4byte	.LFE9
 4058 0098 00000000 		.4byte	.LFB10
 4059 009c 28000000 		.4byte	.LFE10
 4060 00a0 00000000 		.4byte	.LFB11
 4061 00a4 2C000000 		.4byte	.LFE11
 4062 00a8 00000000 		.4byte	.LFB12
 4063 00ac 28000000 		.4byte	.LFE12
 4064 00b0 00000000 		.4byte	.LFB13
 4065 00b4 0C000000 		.4byte	.LFE13
 4066 00b8 00000000 		.4byte	.LFB14
 4067 00bc 0C000000 		.4byte	.LFE14
 4068 00c0 00000000 		.4byte	.LFB15
 4069 00c4 28000000 		.4byte	.LFE15
 4070 00c8 00000000 		.4byte	.LFB16
 4071 00cc 0C000000 		.4byte	.LFE16
 4072 00d0 00000000 		.4byte	.LFB17
 4073 00d4 0C000000 		.4byte	.LFE17
 4074 00d8 00000000 		.4byte	.LFB18
 4075 00dc 24000000 		.4byte	.LFE18
 4076 00e0 00000000 		.4byte	.LFB19
 4077 00e4 0C000000 		.4byte	.LFE19
 4078 00e8 00000000 		.4byte	.LFB20
 4079 00ec 0C000000 		.4byte	.LFE20
 4080 00f0 00000000 		.4byte	.LFB21
 4081 00f4 28000000 		.4byte	.LFE21
 4082 00f8 00000000 		.4byte	.LFB22
 4083 00fc 0C000000 		.4byte	.LFE22
 4084 0100 00000000 		.4byte	.LFB23
 4085 0104 0C000000 		.4byte	.LFE23
 4086 0108 00000000 		.4byte	.LFB24
 4087 010c 0C000000 		.4byte	.LFE24
 4088 0110 00000000 		.4byte	.LFB25
 4089 0114 0C000000 		.4byte	.LFE25
 4090 0118 00000000 		.4byte	.LFB26
 4091 011c 0C000000 		.4byte	.LFE26
 4092 0120 00000000 		.4byte	.LFB27
 4093 0124 0C000000 		.4byte	.LFE27
 4094 0128 00000000 		.4byte	.LFB28
 4095 012c 24000000 		.4byte	.LFE28
 4096 0130 00000000 		.4byte	.LFB29
 4097 0134 24000000 		.4byte	.LFE29
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 102


 4098 0138 00000000 		.4byte	.LFB30
 4099 013c 28000000 		.4byte	.LFE30
 4100 0140 00000000 		.4byte	.LFB31
 4101 0144 24000000 		.4byte	.LFE31
 4102 0148 00000000 		.4byte	.LFB32
 4103 014c 24000000 		.4byte	.LFE32
 4104 0150 00000000 		.4byte	.LFB33
 4105 0154 1C000000 		.4byte	.LFE33
 4106 0158 00000000 		.4byte	.LFB1
 4107 015c 24000000 		.4byte	.LFE1
 4108 0160 00000000 		.4byte	.LFB2
 4109 0164 1C000000 		.4byte	.LFE2
 4110 0168 00000000 		.4byte	.LFB34
 4111 016c 14000000 		.4byte	.LFE34
 4112 0170 00000000 		.4byte	.LFB35
 4113 0174 0C000000 		.4byte	.LFE35
 4114 0178 00000000 		.4byte	.LFB36
 4115 017c 0C000000 		.4byte	.LFE36
 4116 0180 00000000 		.4byte	.LFB37
 4117 0184 0C000000 		.4byte	.LFE37
 4118 0188 00000000 		.4byte	.LFB38
 4119 018c 0C000000 		.4byte	.LFE38
 4120 0190 00000000 		.4byte	.LFB39
 4121 0194 0C000000 		.4byte	.LFE39
 4122 0198 00000000 		.4byte	0
 4123 019c 00000000 		.4byte	0
 4124              		.section	.debug_line,"",%progbits
 4125              	.Ldebug_line0:
 4126 0000 17040000 		.section	.debug_str,"MS",%progbits,1
 4126      02005500 
 4126      00000201 
 4126      FB0E0D00 
 4126      01010101 
 4127              	.LASF17:
 4128 0000 4E61764C 		.ascii	"NavLightPWM_WritePeriod\000"
 4128      69676874 
 4128      50574D5F 
 4128      57726974 
 4128      65506572 
 4129              	.LASF81:
 4130 0018 43794578 		.ascii	"CyExitCriticalSection\000"
 4130      69744372 
 4130      69746963 
 4130      616C5365 
 4130      6374696F 
 4131              	.LASF43:
 4132 002e 4E61764C 		.ascii	"NavLightPWM_WriteCounter\000"
 4132      69676874 
 4132      50574D5F 
 4132      57726974 
 4132      65436F75 
 4133              	.LASF49:
 4134 0047 4E61764C 		.ascii	"NavLightPWM_SetCompareSwap\000"
 4134      69676874 
 4134      50574D5F 
 4134      53657443 
 4134      6F6D7061 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 103


 4135              	.LASF70:
 4136 0062 4E61764C 		.ascii	"NavLightPWM_Start\000"
 4136      69676874 
 4136      50574D5F 
 4136      53746172 
 4136      7400
 4137              	.LASF19:
 4138 0074 70657269 		.ascii	"period\000"
 4138      6F6400
 4139              	.LASF7:
 4140 007b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4140      206C6F6E 
 4140      6720756E 
 4140      7369676E 
 4140      65642069 
 4141              	.LASF73:
 4142 0092 4E61764C 		.ascii	"NavLightPWM_GetInterruptSource\000"
 4142      69676874 
 4142      50574D5F 
 4142      47657449 
 4142      6E746572 
 4143              	.LASF28:
 4144 00b1 71644D6F 		.ascii	"qdMode\000"
 4144      646500
 4145              	.LASF37:
 4146 00b8 4E61764C 		.ascii	"NavLightPWM_SetPWMStopOnKill\000"
 4146      69676874 
 4146      50574D5F 
 4146      53657450 
 4146      574D5374 
 4147              	.LASF6:
 4148 00d5 6C6F6E67 		.ascii	"long long int\000"
 4148      206C6F6E 
 4148      6720696E 
 4148      7400
 4149              	.LASF0:
 4150 00e3 7369676E 		.ascii	"signed char\000"
 4150      65642063 
 4150      68617200 
 4151              	.LASF59:
 4152 00ef 4E61764C 		.ascii	"NavLightPWM_ReadCapture\000"
 4152      69676874 
 4152      50574D5F 
 4152      52656164 
 4152      43617074 
 4153              	.LASF41:
 4154 0107 4E61764C 		.ascii	"NavLightPWM_SetPWMInvert\000"
 4154      69676874 
 4154      50574D5F 
 4154      53657450 
 4154      574D496E 
 4155              	.LASF78:
 4156 0120 433A5C55 		.ascii	"C:\\Users\\SNFU\\Documents\\T-50_UAV_Project\\Softw"
 4156      73657273 
 4156      5C534E46 
 4156      555C446F 
 4156      63756D65 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 104


 4157 014e 6172655C 		.ascii	"are\\T-50_Project\\T-50_Project.cydsn\000"
 4157      542D3530 
 4157      5F50726F 
 4157      6A656374 
 4157      5C542D35 
 4158              	.LASF64:
 4159 0172 4E61764C 		.ascii	"NavLightPWM_SetStartMode\000"
 4159      69676874 
 4159      50574D5F 
 4159      53657453 
 4159      74617274 
 4160              	.LASF72:
 4161 018b 4E61764C 		.ascii	"NavLightPWM_GetInterruptSourceMasked\000"
 4161      69676874 
 4161      50574D5F 
 4161      47657449 
 4161      6E746572 
 4162              	.LASF4:
 4163 01b0 6C6F6E67 		.ascii	"long int\000"
 4163      20696E74 
 4163      00
 4164              	.LASF53:
 4165 01b9 4E61764C 		.ascii	"NavLightPWM_ReadPeriodBuf\000"
 4165      69676874 
 4165      50574D5F 
 4165      52656164 
 4165      50657269 
 4166              	.LASF9:
 4167 01d3 75696E74 		.ascii	"uint8\000"
 4167      3800
 4168              	.LASF12:
 4169 01d9 646F7562 		.ascii	"double\000"
 4169      6C6500
 4170              	.LASF31:
 4171 01e0 4E61764C 		.ascii	"NavLightPWM_SetOneShot\000"
 4171      69676874 
 4171      50574D5F 
 4171      5365744F 
 4171      6E655368 
 4172              	.LASF10:
 4173 01f7 75696E74 		.ascii	"uint32\000"
 4173      333200
 4174              	.LASF44:
 4175 01fe 636F756E 		.ascii	"count\000"
 4175      7400
 4176              	.LASF54:
 4177 0204 4E61764C 		.ascii	"NavLightPWM_SetPeriodSwap\000"
 4177      69676874 
 4177      50574D5F 
 4177      53657450 
 4177      6572696F 
 4178              	.LASF29:
 4179 021e 4E61764C 		.ascii	"NavLightPWM_SetPrescaler\000"
 4179      69676874 
 4179      50574D5F 
 4179      53657450 
 4179      72657363 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 105


 4180              	.LASF42:
 4181 0237 6D61736B 		.ascii	"mask\000"
 4181      00
 4182              	.LASF51:
 4183 023c 4E61764C 		.ascii	"NavLightPWM_WritePeriodBuf\000"
 4183      69676874 
 4183      50574D5F 
 4183      57726974 
 4183      65506572 
 4184              	.LASF40:
 4185 0257 64656164 		.ascii	"deadTime\000"
 4185      54696D65 
 4185      00
 4186              	.LASF24:
 4187 0260 4E61764C 		.ascii	"NavLightPWM_SetMode\000"
 4187      69676874 
 4187      50574D5F 
 4187      5365744D 
 4187      6F646500 
 4188              	.LASF8:
 4189 0274 756E7369 		.ascii	"unsigned int\000"
 4189      676E6564 
 4189      20696E74 
 4189      00
 4190              	.LASF68:
 4191 0281 636F6D6D 		.ascii	"command\000"
 4191      616E6400 
 4192              	.LASF56:
 4193 0289 4E61764C 		.ascii	"NavLightPWM_WriteCompareBuf\000"
 4193      69676874 
 4193      50574D5F 
 4193      57726974 
 4193      65436F6D 
 4194              	.LASF5:
 4195 02a5 6C6F6E67 		.ascii	"long unsigned int\000"
 4195      20756E73 
 4195      69676E65 
 4195      6420696E 
 4195      7400
 4196              	.LASF34:
 4197 02b7 6D6F6465 		.ascii	"modeMask\000"
 4197      4D61736B 
 4197      00
 4198              	.LASF16:
 4199 02c0 4E61764C 		.ascii	"NavLightPWM_SetInterruptMode\000"
 4199      69676874 
 4199      50574D5F 
 4199      53657449 
 4199      6E746572 
 4200              	.LASF33:
 4201 02dd 4E61764C 		.ascii	"NavLightPWM_SetPWMMode\000"
 4201      69676874 
 4201      50574D5F 
 4201      53657450 
 4201      574D4D6F 
 4202              	.LASF23:
 4203 02f4 4E61764C 		.ascii	"NavLightPWM_Stop\000"
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 106


 4203      69676874 
 4203      50574D5F 
 4203      53746F70 
 4203      00
 4204              	.LASF3:
 4205 0305 73686F72 		.ascii	"short unsigned int\000"
 4205      7420756E 
 4205      7369676E 
 4205      65642069 
 4205      6E7400
 4206              	.LASF60:
 4207 0318 4E61764C 		.ascii	"NavLightPWM_ReadCaptureBuf\000"
 4207      69676874 
 4207      50574D5F 
 4207      52656164 
 4207      43617074 
 4208              	.LASF26:
 4209 0333 4E61764C 		.ascii	"NavLightPWM_SetQDMode\000"
 4209      69676874 
 4209      50574D5F 
 4209      53657451 
 4209      444D6F64 
 4210              	.LASF80:
 4211 0349 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4211      74657243 
 4211      72697469 
 4211      63616C53 
 4211      65637469 
 4212              	.LASF32:
 4213 0360 6F6E6553 		.ascii	"oneShotEnable\000"
 4213      686F7445 
 4213      6E61626C 
 4213      6500
 4214              	.LASF69:
 4215 036e 4E61764C 		.ascii	"NavLightPWM_Enable\000"
 4215      69676874 
 4215      50574D5F 
 4215      456E6162 
 4215      6C6500
 4216              	.LASF63:
 4217 0381 4E61764C 		.ascii	"NavLightPWM_SetReloadMode\000"
 4217      69676874 
 4217      50574D5F 
 4217      53657452 
 4217      656C6F61 
 4218              	.LASF14:
 4219 039b 72656733 		.ascii	"reg32\000"
 4219      3200
 4220              	.LASF46:
 4221 03a1 636F756E 		.ascii	"counterMode\000"
 4221      7465724D 
 4221      6F646500 
 4222              	.LASF15:
 4223 03ad 73697A65 		.ascii	"sizetype\000"
 4223      74797065 
 4223      00
 4224              	.LASF36:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 107


 4225 03b6 73796E63 		.ascii	"syncKillEnable\000"
 4225      4B696C6C 
 4225      456E6162 
 4225      6C6500
 4226              	.LASF45:
 4227 03c5 4E61764C 		.ascii	"NavLightPWM_SetCounterMode\000"
 4227      69676874 
 4227      50574D5F 
 4227      53657443 
 4227      6F756E74 
 4228              	.LASF21:
 4229 03e0 636F6D70 		.ascii	"compare\000"
 4229      61726500 
 4230              	.LASF55:
 4231 03e8 4E61764C 		.ascii	"NavLightPWM_ReadCompare\000"
 4231      69676874 
 4231      50574D5F 
 4231      52656164 
 4231      436F6D70 
 4232              	.LASF35:
 4233 0400 4E61764C 		.ascii	"NavLightPWM_SetPWMSyncKill\000"
 4233      69676874 
 4233      50574D5F 
 4233      53657450 
 4233      574D5379 
 4234              	.LASF11:
 4235 041b 666C6F61 		.ascii	"float\000"
 4235      7400
 4236              	.LASF30:
 4237 0421 70726573 		.ascii	"prescaler\000"
 4237      63616C65 
 4237      7200
 4238              	.LASF76:
 4239 042b 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4239      4320342E 
 4239      372E3320 
 4239      32303133 
 4239      30333132 
 4240 045e 616E6368 		.ascii	"anch revision 196615]\000"
 4240      20726576 
 4240      6973696F 
 4240      6E203139 
 4240      36363135 
 4241              	.LASF1:
 4242 0474 756E7369 		.ascii	"unsigned char\000"
 4242      676E6564 
 4242      20636861 
 4242      7200
 4243              	.LASF61:
 4244 0482 4E61764C 		.ascii	"NavLightPWM_SetCaptureMode\000"
 4244      69676874 
 4244      50574D5F 
 4244      53657443 
 4244      61707475 
 4245              	.LASF38:
 4246 049d 73746F70 		.ascii	"stopOnKillEnable\000"
 4246      4F6E4B69 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 108


 4246      6C6C456E 
 4246      61626C65 
 4246      00
 4247              	.LASF2:
 4248 04ae 73686F72 		.ascii	"short int\000"
 4248      7420696E 
 4248      7400
 4249              	.LASF77:
 4250 04b8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\NavLightPWM.c\000"
 4250      6E657261 
 4250      7465645F 
 4250      536F7572 
 4250      63655C50 
 4251              	.LASF75:
 4252 04df 4E61764C 		.ascii	"NavLightPWM_SetInterrupt\000"
 4252      69676874 
 4252      50574D5F 
 4252      53657449 
 4252      6E746572 
 4253              	.LASF18:
 4254 04f8 696E7465 		.ascii	"interruptMask\000"
 4254      72727570 
 4254      744D6173 
 4254      6B00
 4255              	.LASF74:
 4256 0506 4E61764C 		.ascii	"NavLightPWM_ClearInterrupt\000"
 4256      69676874 
 4256      50574D5F 
 4256      436C6561 
 4256      72496E74 
 4257              	.LASF62:
 4258 0521 74726967 		.ascii	"triggerMode\000"
 4258      6765724D 
 4258      6F646500 
 4259              	.LASF48:
 4260 052d 4E61764C 		.ascii	"NavLightPWM_ReadPeriod\000"
 4260      69676874 
 4260      50574D5F 
 4260      52656164 
 4260      50657269 
 4261              	.LASF13:
 4262 0544 63686172 		.ascii	"char\000"
 4262      00
 4263              	.LASF27:
 4264 0549 6D6F6465 		.ascii	"mode\000"
 4264      00
 4265              	.LASF58:
 4266 054e 4E61764C 		.ascii	"NavLightPWM_ReadCompareBuf\000"
 4266      69676874 
 4266      50574D5F 
 4266      52656164 
 4266      436F6D70 
 4267              	.LASF22:
 4268 0569 4E61764C 		.ascii	"NavLightPWM_Init\000"
 4268      69676874 
 4268      50574D5F 
 4268      496E6974 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 109


 4268      00
 4269              	.LASF47:
 4270 057a 4E61764C 		.ascii	"NavLightPWM_ReadCounter\000"
 4270      69676874 
 4270      50574D5F 
 4270      52656164 
 4270      436F756E 
 4271              	.LASF57:
 4272 0592 636F6D70 		.ascii	"compareBuf\000"
 4272      61726542 
 4272      756600
 4273              	.LASF65:
 4274 059d 4E61764C 		.ascii	"NavLightPWM_SetStopMode\000"
 4274      69676874 
 4274      50574D5F 
 4274      53657453 
 4274      746F704D 
 4275              	.LASF66:
 4276 05b5 4E61764C 		.ascii	"NavLightPWM_SetCountMode\000"
 4276      69676874 
 4276      50574D5F 
 4276      53657443 
 4276      6F756E74 
 4277              	.LASF25:
 4278 05ce 656E6162 		.ascii	"enableInterrupts\000"
 4278      6C65496E 
 4278      74657272 
 4278      75707473 
 4278      00
 4279              	.LASF39:
 4280 05df 4E61764C 		.ascii	"NavLightPWM_SetPWMDeadTime\000"
 4280      69676874 
 4280      50574D5F 
 4280      53657450 
 4280      574D4465 
 4281              	.LASF20:
 4282 05fa 4E61764C 		.ascii	"NavLightPWM_WriteCompare\000"
 4282      69676874 
 4282      50574D5F 
 4282      57726974 
 4282      65436F6D 
 4283              	.LASF79:
 4284 0613 4E61764C 		.ascii	"NavLightPWM_initVar\000"
 4284      69676874 
 4284      50574D5F 
 4284      696E6974 
 4284      56617200 
 4285              	.LASF50:
 4286 0627 73776170 		.ascii	"swapEnable\000"
 4286      456E6162 
 4286      6C6500
 4287              	.LASF52:
 4288 0632 70657269 		.ascii	"periodBuf\000"
 4288      6F644275 
 4288      6600
 4289              	.LASF67:
 4290 063c 4E61764C 		.ascii	"NavLightPWM_TriggerCommand\000"
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDRynv3.s 			page 110


 4290      69676874 
 4290      50574D5F 
 4290      54726967 
 4290      67657243 
 4291              	.LASF71:
 4292 0657 4E61764C 		.ascii	"NavLightPWM_ReadStatus\000"
 4292      69676874 
 4292      50574D5F 
 4292      52656164 
 4292      53746174 
 4293              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
