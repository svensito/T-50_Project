ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ServoTimer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ServoTimer_Init,"ax",%progbits
  18              		.align	1
  19              		.global	ServoTimer_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ServoTimer_Init, %function
  23              	ServoTimer_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ServoTimer.c"
   1:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ServoTimer.c **** * File Name: ServoTimer.c
   3:.\Generated_Source\PSoC4/ServoTimer.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/ServoTimer.c **** *
   5:.\Generated_Source\PSoC4/ServoTimer.c **** * Description:
   6:.\Generated_Source\PSoC4/ServoTimer.c **** *  This file provides the source code to the API for the ServoTimer
   7:.\Generated_Source\PSoC4/ServoTimer.c **** *  component
   8:.\Generated_Source\PSoC4/ServoTimer.c **** *
   9:.\Generated_Source\PSoC4/ServoTimer.c **** * Note:
  10:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
  11:.\Generated_Source\PSoC4/ServoTimer.c **** *
  12:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/ServoTimer.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/ServoTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/ServoTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/ServoTimer.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/ServoTimer.c **** 
  19:.\Generated_Source\PSoC4/ServoTimer.c **** #include "ServoTimer.h"
  20:.\Generated_Source\PSoC4/ServoTimer.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/ServoTimer.c **** 
  22:.\Generated_Source\PSoC4/ServoTimer.c **** uint8 ServoTimer_initVar = 0u;
  23:.\Generated_Source\PSoC4/ServoTimer.c **** 
  24:.\Generated_Source\PSoC4/ServoTimer.c **** 
  25:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Init
  27:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/ServoTimer.c **** *
  29:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
  30:.\Generated_Source\PSoC4/ServoTimer.c **** *  Initialize/Restore default ServoTimer configuration.
  31:.\Generated_Source\PSoC4/ServoTimer.c **** *
  32:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 2


  33:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
  34:.\Generated_Source\PSoC4/ServoTimer.c **** *
  35:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
  36:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
  37:.\Generated_Source\PSoC4/ServoTimer.c **** *
  38:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Init(void)
  40:.\Generated_Source\PSoC4/ServoTimer.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  41:.\Generated_Source\PSoC4/ServoTimer.c **** 
  42:.\Generated_Source\PSoC4/ServoTimer.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__QUAD == ServoTimer_CONFIG)
  44:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_CONTROL_REG =
  45:.\Generated_Source\PSoC4/ServoTimer.c ****         (((uint32)(ServoTimer_QUAD_ENCODING_MODES     << ServoTimer_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_CONFIG                  << ServoTimer_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__QUAD == ServoTimer_CONFIG) */
  48:.\Generated_Source\PSoC4/ServoTimer.c **** 
  49:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__PWM_SEL == ServoTimer_CONFIG)
  50:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_CONTROL_REG =
  51:.\Generated_Source\PSoC4/ServoTimer.c ****         (((uint32)(ServoTimer_PWM_STOP_EVENT          << ServoTimer_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_PWM_OUT_INVERT          << ServoTimer_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_PWM_OUT_N_INVERT        << ServoTimer_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_PWM_MODE                << ServoTimer_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/ServoTimer.c **** 
  56:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM_PR == ServoTimer_PWM_MODE)
  57:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/ServoTimer.c ****             ((uint32)(ServoTimer_PWM_RUN_MODE         << ServoTimer_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/ServoTimer.c **** 
  60:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCounter(ServoTimer_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/ServoTimer.c ****         #else
  62:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |=
  63:.\Generated_Source\PSoC4/ServoTimer.c ****             (((uint32)(ServoTimer_PWM_ALIGN           << ServoTimer_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/ServoTimer.c ****              ((uint32)(ServoTimer_PWM_KILL_EVENT      << ServoTimer_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM_PR == ServoTimer_PWM_MODE) */
  66:.\Generated_Source\PSoC4/ServoTimer.c **** 
  67:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM_DT == ServoTimer_PWM_MODE)
  68:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/ServoTimer.c ****             ((uint32)(ServoTimer_PWM_DEAD_TIME_CYCLE  << ServoTimer_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM_DT == ServoTimer_PWM_MODE) */
  71:.\Generated_Source\PSoC4/ServoTimer.c **** 
  72:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM == ServoTimer_PWM_MODE)
  73:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_CONTROL_REG |=
  74:.\Generated_Source\PSoC4/ServoTimer.c ****             ((uint32)ServoTimer_PWM_PRESCALER         << ServoTimer_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM == ServoTimer_PWM_MODE) */
  76:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__PWM_SEL == ServoTimer_CONFIG) */
  77:.\Generated_Source\PSoC4/ServoTimer.c **** 
  78:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__TIMER == ServoTimer_CONFIG)
  79:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_CONTROL_REG =
  28              		.loc 1 79 0
  29 0000 074B     		ldr	r3, .L2
  30 0002 0022     		mov	r2, #0
  31 0004 1A60     		str	r2, [r3]
  80:.\Generated_Source\PSoC4/ServoTimer.c ****         (((uint32)(ServoTimer_TC_PRESCALER            << ServoTimer_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_TC_COUNTER_MODE         << ServoTimer_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_TC_RUN_MODE             << ServoTimer_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_TC_COMP_CAP_MODE        << ServoTimer_MODE_SHIFT)));
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 3


  84:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__TIMER == ServoTimer_CONFIG) */
  85:.\Generated_Source\PSoC4/ServoTimer.c **** 
  86:.\Generated_Source\PSoC4/ServoTimer.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__QUAD == ServoTimer_CONFIG)
  88:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/ServoTimer.c ****         (((uint32)(ServoTimer_QUAD_PHIA_SIGNAL_MODE   << ServoTimer_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_QUAD_INDEX_SIGNAL_MODE  << ServoTimer_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_QUAD_STOP_SIGNAL_MODE   << ServoTimer_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_QUAD_PHIB_SIGNAL_MODE   << ServoTimer_START_SHIFT)));
  93:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__QUAD == ServoTimer_CONFIG) */
  94:.\Generated_Source\PSoC4/ServoTimer.c **** 
  95:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__PWM_SEL == ServoTimer_CONFIG)
  96:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  =
  97:.\Generated_Source\PSoC4/ServoTimer.c ****         (((uint32)(ServoTimer_PWM_SWITCH_SIGNAL_MODE  << ServoTimer_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_PWM_COUNT_SIGNAL_MODE   << ServoTimer_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_PWM_RELOAD_SIGNAL_MODE  << ServoTimer_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_PWM_STOP_SIGNAL_MODE    << ServoTimer_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_PWM_START_SIGNAL_MODE   << ServoTimer_START_SHIFT)));
 102:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__PWM_SEL == ServoTimer_CONFIG) */
 103:.\Generated_Source\PSoC4/ServoTimer.c **** 
 104:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__TIMER == ServoTimer_CONFIG)
 105:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  =
  32              		.loc 1 105 0
  33 0006 0749     		ldr	r1, .L2+4
  34              	.LBB8:
  35              	.LBB9:
 106:.\Generated_Source\PSoC4/ServoTimer.c ****         (((uint32)(ServoTimer_TC_CAPTURE_SIGNAL_MODE  << ServoTimer_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_TC_COUNT_SIGNAL_MODE    << ServoTimer_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_TC_RELOAD_SIGNAL_MODE   << ServoTimer_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_TC_STOP_SIGNAL_MODE     << ServoTimer_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/ServoTimer.c ****          ((uint32)(ServoTimer_TC_START_SIGNAL_MODE    << ServoTimer_START_SHIFT)));
 111:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__TIMER == ServoTimer_CONFIG) */
 112:.\Generated_Source\PSoC4/ServoTimer.c **** 
 113:.\Generated_Source\PSoC4/ServoTimer.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__QUAD == ServoTimer_CONFIG)
 115:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_SetInterruptMode(ServoTimer_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__QUAD == ServoTimer_CONFIG) */
 117:.\Generated_Source\PSoC4/ServoTimer.c **** 
 118:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__PWM_SEL == ServoTimer_CONFIG)
 119:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_SetInterruptMode(ServoTimer_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__PWM_SEL == ServoTimer_CONFIG) */
 121:.\Generated_Source\PSoC4/ServoTimer.c **** 
 122:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__TIMER == ServoTimer_CONFIG)
 123:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_SetInterruptMode(ServoTimer_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__TIMER == ServoTimer_CONFIG) */
 125:.\Generated_Source\PSoC4/ServoTimer.c **** 
 126:.\Generated_Source\PSoC4/ServoTimer.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__TIMER == ServoTimer_CONFIG)
 128:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WritePeriod(ServoTimer_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/ServoTimer.c **** 
 130:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__COUNT_DOWN == ServoTimer_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCounter(ServoTimer_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__COUNT_DOWN == ServoTimer_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/ServoTimer.c **** 
 134:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__COMPARE == ServoTimer_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCompare(ServoTimer_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/ServoTimer.c **** 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 4


 137:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (1u == ServoTimer_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_WriteCompareBuf(ServoTimer_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* (1u == ServoTimer_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__COMPARE == ServoTimer_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__TIMER == ServoTimer_CONFIG) */
 143:.\Generated_Source\PSoC4/ServoTimer.c **** 
 144:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__PWM_SEL == ServoTimer_CONFIG)
 145:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WritePeriod(ServoTimer_PWM_PERIOD_VALUE );
 146:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_WriteCompare(ServoTimer_PWM_COMPARE_VALUE);
 147:.\Generated_Source\PSoC4/ServoTimer.c **** 
 148:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (1u == ServoTimer_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WriteCompareBuf(ServoTimer_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (1u == ServoTimer_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/ServoTimer.c **** 
 153:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (1u == ServoTimer_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_WritePeriodBuf(ServoTimer_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (1u == ServoTimer_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/ServoTimer.c **** 
 158:.\Generated_Source\PSoC4/ServoTimer.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (ServoTimer__PWM_PR == ServoTimer_PWM_MODE)
 160:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/ServoTimer.c ****                     (ServoTimer_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/ServoTimer.c ****                     ServoTimer_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/ServoTimer.c ****                     ServoTimer_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/ServoTimer.c ****         #else
 165:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__LEFT == ServoTimer_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_LEFT;
 167:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* ( ServoTimer_PWM_LEFT == ServoTimer_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/ServoTimer.c **** 
 169:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__RIGHT == ServoTimer_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_WriteCounter(ServoTimer_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* ( ServoTimer_PWM_RIGHT == ServoTimer_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/ServoTimer.c **** 
 174:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__CENTER == ServoTimer_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* ( ServoTimer_PWM_CENTER == ServoTimer_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/ServoTimer.c **** 
 178:.\Generated_Source\PSoC4/ServoTimer.c ****             #if (ServoTimer__ASYMMETRIC == ServoTimer_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/ServoTimer.c ****                 ServoTimer_TRIG_CONTROL2_REG = ServoTimer_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/ServoTimer.c ****             #endif  /* (ServoTimer__ASYMMETRIC == ServoTimer_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif  /* (ServoTimer__PWM_PR == ServoTimer_PWM_MODE) */
 182:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif  /* (ServoTimer__PWM_SEL == ServoTimer_CONFIG) */
 183:.\Generated_Source\PSoC4/ServoTimer.c **** }
 184:.\Generated_Source\PSoC4/ServoTimer.c **** 
 185:.\Generated_Source\PSoC4/ServoTimer.c **** 
 186:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Enable
 188:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/ServoTimer.c **** *
 190:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 191:.\Generated_Source\PSoC4/ServoTimer.c **** *  Enables the ServoTimer.
 192:.\Generated_Source\PSoC4/ServoTimer.c **** *
 193:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 5


 194:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 195:.\Generated_Source\PSoC4/ServoTimer.c **** *
 196:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 197:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 198:.\Generated_Source\PSoC4/ServoTimer.c **** *
 199:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Enable(void)
 201:.\Generated_Source\PSoC4/ServoTimer.c **** {
 202:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/ServoTimer.c **** 
 204:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 205:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG |= ServoTimer_MASK;
 206:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 207:.\Generated_Source\PSoC4/ServoTimer.c **** 
 208:.\Generated_Source\PSoC4/ServoTimer.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__PWM_SEL == ServoTimer_CONFIG)
 210:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (0u == ServoTimer_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TriggerCommand(ServoTimer_MASK, ServoTimer_CMD_START);
 212:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif /* (0u == ServoTimer_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer__PWM_SEL == ServoTimer_CONFIG) */
 214:.\Generated_Source\PSoC4/ServoTimer.c **** 
 215:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer__TIMER == ServoTimer_CONFIG)
 216:.\Generated_Source\PSoC4/ServoTimer.c ****         #if (0u == ServoTimer_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TriggerCommand(ServoTimer_MASK, ServoTimer_CMD_START);
 218:.\Generated_Source\PSoC4/ServoTimer.c ****         #endif /* (0u == ServoTimer_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer__TIMER == ServoTimer_CONFIG) */
 220:.\Generated_Source\PSoC4/ServoTimer.c **** }
 221:.\Generated_Source\PSoC4/ServoTimer.c **** 
 222:.\Generated_Source\PSoC4/ServoTimer.c **** 
 223:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Start
 225:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/ServoTimer.c **** *
 227:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 228:.\Generated_Source\PSoC4/ServoTimer.c **** *  Initializes the ServoTimer with default customizer
 229:.\Generated_Source\PSoC4/ServoTimer.c **** *  values when called the first time and enables the ServoTimer.
 230:.\Generated_Source\PSoC4/ServoTimer.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/ServoTimer.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/ServoTimer.c **** *
 233:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 234:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 235:.\Generated_Source\PSoC4/ServoTimer.c **** *
 236:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 237:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 238:.\Generated_Source\PSoC4/ServoTimer.c **** *
 239:.\Generated_Source\PSoC4/ServoTimer.c **** * Global variables:
 240:.\Generated_Source\PSoC4/ServoTimer.c **** *  ServoTimer_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/ServoTimer.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/ServoTimer.c **** *  to 1 the first time ServoTimer_Start() is called. This allows
 243:.\Generated_Source\PSoC4/ServoTimer.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/ServoTimer.c **** *  calls to the ServoTimer_Start() routine.
 245:.\Generated_Source\PSoC4/ServoTimer.c **** *
 246:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Start(void)
 248:.\Generated_Source\PSoC4/ServoTimer.c **** {
 249:.\Generated_Source\PSoC4/ServoTimer.c ****     if (0u == ServoTimer_initVar)
 250:.\Generated_Source\PSoC4/ServoTimer.c ****     {
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 6


 251:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_Init();
 252:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_initVar = 1u;
 253:.\Generated_Source\PSoC4/ServoTimer.c ****     }
 254:.\Generated_Source\PSoC4/ServoTimer.c **** 
 255:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_Enable();
 256:.\Generated_Source\PSoC4/ServoTimer.c **** }
 257:.\Generated_Source\PSoC4/ServoTimer.c **** 
 258:.\Generated_Source\PSoC4/ServoTimer.c **** 
 259:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_Stop
 261:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/ServoTimer.c **** *
 263:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 264:.\Generated_Source\PSoC4/ServoTimer.c **** *  Disables the ServoTimer.
 265:.\Generated_Source\PSoC4/ServoTimer.c **** *
 266:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 267:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 268:.\Generated_Source\PSoC4/ServoTimer.c **** *
 269:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 270:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 271:.\Generated_Source\PSoC4/ServoTimer.c **** *
 272:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_Stop(void)
 274:.\Generated_Source\PSoC4/ServoTimer.c **** {
 275:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/ServoTimer.c **** 
 277:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 278:.\Generated_Source\PSoC4/ServoTimer.c **** 
 279:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG &= (uint32)~ServoTimer_MASK;
 280:.\Generated_Source\PSoC4/ServoTimer.c **** 
 281:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 282:.\Generated_Source\PSoC4/ServoTimer.c **** }
 283:.\Generated_Source\PSoC4/ServoTimer.c **** 
 284:.\Generated_Source\PSoC4/ServoTimer.c **** 
 285:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetMode
 287:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/ServoTimer.c **** *
 289:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 290:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the operation mode of the ServoTimer. This function is used when
 291:.\Generated_Source\PSoC4/ServoTimer.c **** *  configured as a generic ServoTimer and the actual mode of operation is
 292:.\Generated_Source\PSoC4/ServoTimer.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/ServoTimer.c **** *
 294:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 295:.\Generated_Source\PSoC4/ServoTimer.c **** *  mode: Mode for the ServoTimer to operate in
 296:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 297:.\Generated_Source\PSoC4/ServoTimer.c **** *   - ServoTimer_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/ServoTimer.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/ServoTimer.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/ServoTimer.c **** *
 306:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 307:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 7


 308:.\Generated_Source\PSoC4/ServoTimer.c **** *
 309:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/ServoTimer.c **** {
 312:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/ServoTimer.c **** 
 314:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 315:.\Generated_Source\PSoC4/ServoTimer.c **** 
 316:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_MODE_MASK;
 317:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mode;
 318:.\Generated_Source\PSoC4/ServoTimer.c **** 
 319:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 320:.\Generated_Source\PSoC4/ServoTimer.c **** }
 321:.\Generated_Source\PSoC4/ServoTimer.c **** 
 322:.\Generated_Source\PSoC4/ServoTimer.c **** 
 323:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetQDMode
 325:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/ServoTimer.c **** *
 327:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 328:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/ServoTimer.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/ServoTimer.c **** *
 331:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 332:.\Generated_Source\PSoC4/ServoTimer.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 334:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/ServoTimer.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/ServoTimer.c **** *
 339:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 340:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 341:.\Generated_Source\PSoC4/ServoTimer.c **** *
 342:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/ServoTimer.c **** {
 345:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/ServoTimer.c **** 
 347:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 348:.\Generated_Source\PSoC4/ServoTimer.c **** 
 349:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_QUAD_MODE_MASK;
 350:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= qdMode;
 351:.\Generated_Source\PSoC4/ServoTimer.c **** 
 352:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 353:.\Generated_Source\PSoC4/ServoTimer.c **** }
 354:.\Generated_Source\PSoC4/ServoTimer.c **** 
 355:.\Generated_Source\PSoC4/ServoTimer.c **** 
 356:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPrescaler
 358:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/ServoTimer.c **** *
 360:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 361:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/ServoTimer.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/ServoTimer.c **** *
 364:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 8


 365:.\Generated_Source\PSoC4/ServoTimer.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 367:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/ServoTimer.c **** *
 376:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 377:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 378:.\Generated_Source\PSoC4/ServoTimer.c **** *
 379:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/ServoTimer.c **** {
 382:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/ServoTimer.c **** 
 384:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 385:.\Generated_Source\PSoC4/ServoTimer.c **** 
 386:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 387:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= prescaler;
 388:.\Generated_Source\PSoC4/ServoTimer.c **** 
 389:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 390:.\Generated_Source\PSoC4/ServoTimer.c **** }
 391:.\Generated_Source\PSoC4/ServoTimer.c **** 
 392:.\Generated_Source\PSoC4/ServoTimer.c **** 
 393:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetOneShot
 395:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/ServoTimer.c **** *
 397:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 398:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the ServoTimer runs
 399:.\Generated_Source\PSoC4/ServoTimer.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/ServoTimer.c **** *  ServoTimer operates in the continuous mode.
 401:.\Generated_Source\PSoC4/ServoTimer.c **** *
 402:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 403:.\Generated_Source\PSoC4/ServoTimer.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 405:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/ServoTimer.c **** *
 408:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 409:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 410:.\Generated_Source\PSoC4/ServoTimer.c **** *
 411:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/ServoTimer.c **** {
 414:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/ServoTimer.c **** 
 416:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 417:.\Generated_Source\PSoC4/ServoTimer.c **** 
 418:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_ONESHOT_MASK;
 419:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((oneShotEnable & ServoTimer_1BIT_MASK) <<
 420:.\Generated_Source\PSoC4/ServoTimer.c ****                                                                ServoTimer_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/ServoTimer.c **** 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 9


 422:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 423:.\Generated_Source\PSoC4/ServoTimer.c **** }
 424:.\Generated_Source\PSoC4/ServoTimer.c **** 
 425:.\Generated_Source\PSoC4/ServoTimer.c **** 
 426:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMMode
 428:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/ServoTimer.c **** *
 430:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 431:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/ServoTimer.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/ServoTimer.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/ServoTimer.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/ServoTimer.c **** *  the mode.
 436:.\Generated_Source\PSoC4/ServoTimer.c **** *
 437:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ServoTimer.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/ServoTimer.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 441:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/ServoTimer.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/ServoTimer.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/ServoTimer.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/ServoTimer.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/ServoTimer.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/ServoTimer.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/ServoTimer.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/ServoTimer.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/ServoTimer.c **** *
 462:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 463:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 464:.\Generated_Source\PSoC4/ServoTimer.c **** *
 465:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/ServoTimer.c **** {
 468:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL2_REG = (modeMask & ServoTimer_6BIT_MASK);
 469:.\Generated_Source\PSoC4/ServoTimer.c **** }
 470:.\Generated_Source\PSoC4/ServoTimer.c **** 
 471:.\Generated_Source\PSoC4/ServoTimer.c **** 
 472:.\Generated_Source\PSoC4/ServoTimer.c **** 
 473:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/ServoTimer.c **** *
 477:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 478:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 10


 479:.\Generated_Source\PSoC4/ServoTimer.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/ServoTimer.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/ServoTimer.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/ServoTimer.c **** *
 483:.\Generated_Source\PSoC4/ServoTimer.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/ServoTimer.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/ServoTimer.c **** *
 486:.\Generated_Source\PSoC4/ServoTimer.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/ServoTimer.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/ServoTimer.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/ServoTimer.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/ServoTimer.c **** 
 491:.\Generated_Source\PSoC4/ServoTimer.c **** *
 492:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 493:.\Generated_Source\PSoC4/ServoTimer.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 495:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/ServoTimer.c **** *
 498:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 499:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 500:.\Generated_Source\PSoC4/ServoTimer.c **** *
 501:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/ServoTimer.c **** {
 504:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/ServoTimer.c **** 
 506:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 507:.\Generated_Source\PSoC4/ServoTimer.c **** 
 508:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_SYNC_KILL_MASK;
 509:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((syncKillEnable & ServoTimer_1BIT_MASK)  <<
 510:.\Generated_Source\PSoC4/ServoTimer.c ****                                                ServoTimer_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/ServoTimer.c **** 
 512:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 513:.\Generated_Source\PSoC4/ServoTimer.c **** }
 514:.\Generated_Source\PSoC4/ServoTimer.c **** 
 515:.\Generated_Source\PSoC4/ServoTimer.c **** 
 516:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/ServoTimer.c **** *
 520:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 521:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/ServoTimer.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/ServoTimer.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/ServoTimer.c **** *
 525:.\Generated_Source\PSoC4/ServoTimer.c **** *
 526:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 527:.\Generated_Source\PSoC4/ServoTimer.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 529:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/ServoTimer.c **** *
 532:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 533:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 534:.\Generated_Source\PSoC4/ServoTimer.c **** *
 535:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 11


 536:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/ServoTimer.c **** {
 538:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/ServoTimer.c **** 
 540:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 541:.\Generated_Source\PSoC4/ServoTimer.c **** 
 542:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_STOP_KILL_MASK;
 543:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((stopOnKillEnable & ServoTimer_1BIT_MASK)  <<
 544:.\Generated_Source\PSoC4/ServoTimer.c ****                                                          ServoTimer_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/ServoTimer.c **** 
 546:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 547:.\Generated_Source\PSoC4/ServoTimer.c **** }
 548:.\Generated_Source\PSoC4/ServoTimer.c **** 
 549:.\Generated_Source\PSoC4/ServoTimer.c **** 
 550:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/ServoTimer.c **** *
 554:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 555:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/ServoTimer.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/ServoTimer.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/ServoTimer.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/ServoTimer.c **** 
 560:.\Generated_Source\PSoC4/ServoTimer.c **** *
 561:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 562:.\Generated_Source\PSoC4/ServoTimer.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/ServoTimer.c **** *
 565:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 566:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 567:.\Generated_Source\PSoC4/ServoTimer.c **** *
 568:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/ServoTimer.c **** {
 571:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/ServoTimer.c **** 
 573:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 574:.\Generated_Source\PSoC4/ServoTimer.c **** 
 575:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 576:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((deadTime & ServoTimer_8BIT_MASK) <<
 577:.\Generated_Source\PSoC4/ServoTimer.c ****                                                           ServoTimer_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/ServoTimer.c **** 
 579:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 580:.\Generated_Source\PSoC4/ServoTimer.c **** }
 581:.\Generated_Source\PSoC4/ServoTimer.c **** 
 582:.\Generated_Source\PSoC4/ServoTimer.c **** 
 583:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPWMInvert
 585:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/ServoTimer.c **** *
 587:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 588:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/ServoTimer.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/ServoTimer.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/ServoTimer.c **** *
 592:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 12


 593:.\Generated_Source\PSoC4/ServoTimer.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 595:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/ServoTimer.c **** *         - ServoTimer_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/ServoTimer.c **** *
 598:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 599:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 600:.\Generated_Source\PSoC4/ServoTimer.c **** *
 601:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/ServoTimer.c **** {
 604:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/ServoTimer.c **** 
 606:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 607:.\Generated_Source\PSoC4/ServoTimer.c **** 
 608:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_INV_OUT_MASK;
 609:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mask;
 610:.\Generated_Source\PSoC4/ServoTimer.c **** 
 611:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 612:.\Generated_Source\PSoC4/ServoTimer.c **** }
 613:.\Generated_Source\PSoC4/ServoTimer.c **** 
 614:.\Generated_Source\PSoC4/ServoTimer.c **** 
 615:.\Generated_Source\PSoC4/ServoTimer.c **** 
 616:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WriteCounter
 618:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/ServoTimer.c **** *
 620:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 621:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/ServoTimer.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/ServoTimer.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/ServoTimer.c **** *
 625:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 626:.\Generated_Source\PSoC4/ServoTimer.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/ServoTimer.c **** *
 628:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 629:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 630:.\Generated_Source\PSoC4/ServoTimer.c **** *
 631:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/ServoTimer.c **** {
 634:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COUNTER_REG = (count & ServoTimer_16BIT_MASK);
 635:.\Generated_Source\PSoC4/ServoTimer.c **** }
 636:.\Generated_Source\PSoC4/ServoTimer.c **** 
 637:.\Generated_Source\PSoC4/ServoTimer.c **** 
 638:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCounter
 640:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/ServoTimer.c **** *
 642:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 643:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/ServoTimer.c **** *
 645:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 646:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 647:.\Generated_Source\PSoC4/ServoTimer.c **** *
 648:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 649:.\Generated_Source\PSoC4/ServoTimer.c **** *  Current counter value
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 13


 650:.\Generated_Source\PSoC4/ServoTimer.c **** *
 651:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCounter(void)
 653:.\Generated_Source\PSoC4/ServoTimer.c **** {
 654:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COUNTER_REG & ServoTimer_16BIT_MASK);
 655:.\Generated_Source\PSoC4/ServoTimer.c **** }
 656:.\Generated_Source\PSoC4/ServoTimer.c **** 
 657:.\Generated_Source\PSoC4/ServoTimer.c **** 
 658:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCounterMode
 660:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/ServoTimer.c **** *
 662:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 663:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/ServoTimer.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/ServoTimer.c **** *
 666:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 667:.\Generated_Source\PSoC4/ServoTimer.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 669:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/ServoTimer.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/ServoTimer.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/ServoTimer.c **** *                                         and period
 676:.\Generated_Source\PSoC4/ServoTimer.c **** *
 677:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 678:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 679:.\Generated_Source\PSoC4/ServoTimer.c **** *
 680:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/ServoTimer.c **** {
 683:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/ServoTimer.c **** 
 685:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 686:.\Generated_Source\PSoC4/ServoTimer.c **** 
 687:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_UPDOWN_MASK;
 688:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= counterMode;
 689:.\Generated_Source\PSoC4/ServoTimer.c **** 
 690:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 691:.\Generated_Source\PSoC4/ServoTimer.c **** }
 692:.\Generated_Source\PSoC4/ServoTimer.c **** 
 693:.\Generated_Source\PSoC4/ServoTimer.c **** 
 694:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WritePeriod
 696:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/ServoTimer.c **** *
 698:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 699:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/ServoTimer.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/ServoTimer.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/ServoTimer.c **** *
 703:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 704:.\Generated_Source\PSoC4/ServoTimer.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/ServoTimer.c **** *
 706:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 14


 707:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 708:.\Generated_Source\PSoC4/ServoTimer.c **** *
 709:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/ServoTimer.c **** {
 712:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
 713:.\Generated_Source\PSoC4/ServoTimer.c **** }
 714:.\Generated_Source\PSoC4/ServoTimer.c **** 
 715:.\Generated_Source\PSoC4/ServoTimer.c **** 
 716:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadPeriod
 718:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/ServoTimer.c **** *
 720:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 721:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/ServoTimer.c **** *
 723:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 724:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 725:.\Generated_Source\PSoC4/ServoTimer.c **** *
 726:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 727:.\Generated_Source\PSoC4/ServoTimer.c **** *  Period value
 728:.\Generated_Source\PSoC4/ServoTimer.c **** *
 729:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/ServoTimer.c **** {
 732:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_REG & ServoTimer_16BIT_MASK);
 733:.\Generated_Source\PSoC4/ServoTimer.c **** }
 734:.\Generated_Source\PSoC4/ServoTimer.c **** 
 735:.\Generated_Source\PSoC4/ServoTimer.c **** 
 736:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCompareSwap
 738:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/ServoTimer.c **** *
 740:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 741:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/ServoTimer.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/ServoTimer.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/ServoTimer.c **** *
 746:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 747:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 749:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/ServoTimer.c **** *
 752:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 753:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 754:.\Generated_Source\PSoC4/ServoTimer.c **** *
 755:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/ServoTimer.c **** {
 758:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/ServoTimer.c **** 
 760:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 761:.\Generated_Source\PSoC4/ServoTimer.c **** 
 762:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_CC_MASK;
 763:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= (swapEnable & ServoTimer_1BIT_MASK);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 15


 764:.\Generated_Source\PSoC4/ServoTimer.c **** 
 765:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/ServoTimer.c **** }
 767:.\Generated_Source\PSoC4/ServoTimer.c **** 
 768:.\Generated_Source\PSoC4/ServoTimer.c **** 
 769:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WritePeriodBuf
 771:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/ServoTimer.c **** *
 773:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 774:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/ServoTimer.c **** *
 776:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 777:.\Generated_Source\PSoC4/ServoTimer.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/ServoTimer.c **** *
 779:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 780:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 781:.\Generated_Source\PSoC4/ServoTimer.c **** *
 782:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/ServoTimer.c **** {
 785:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_BUF_REG = (periodBuf & ServoTimer_16BIT_MASK);
 786:.\Generated_Source\PSoC4/ServoTimer.c **** }
 787:.\Generated_Source\PSoC4/ServoTimer.c **** 
 788:.\Generated_Source\PSoC4/ServoTimer.c **** 
 789:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/ServoTimer.c **** *
 793:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 794:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/ServoTimer.c **** *
 796:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 797:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 798:.\Generated_Source\PSoC4/ServoTimer.c **** *
 799:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 800:.\Generated_Source\PSoC4/ServoTimer.c **** *  Period value
 801:.\Generated_Source\PSoC4/ServoTimer.c **** *
 802:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/ServoTimer.c **** {
 805:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_BUF_REG & ServoTimer_16BIT_MASK);
 806:.\Generated_Source\PSoC4/ServoTimer.c **** }
 807:.\Generated_Source\PSoC4/ServoTimer.c **** 
 808:.\Generated_Source\PSoC4/ServoTimer.c **** 
 809:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetPeriodSwap
 811:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/ServoTimer.c **** *
 813:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 814:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/ServoTimer.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/ServoTimer.c **** *  switch event.
 818:.\Generated_Source\PSoC4/ServoTimer.c **** *
 819:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 820:.\Generated_Source\PSoC4/ServoTimer.c **** *  swapEnable
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 16


 821:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
 822:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/ServoTimer.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/ServoTimer.c **** *
 825:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 826:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 827:.\Generated_Source\PSoC4/ServoTimer.c **** *
 828:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/ServoTimer.c **** {
 831:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/ServoTimer.c **** 
 833:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/ServoTimer.c **** 
 835:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_PERIOD_MASK;
 836:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((swapEnable & ServoTimer_1BIT_MASK) <<
 837:.\Generated_Source\PSoC4/ServoTimer.c ****                                                             ServoTimer_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/ServoTimer.c **** 
 839:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 840:.\Generated_Source\PSoC4/ServoTimer.c **** }
 841:.\Generated_Source\PSoC4/ServoTimer.c **** 
 842:.\Generated_Source\PSoC4/ServoTimer.c **** 
 843:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WriteCompare
 845:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/ServoTimer.c **** *
 847:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 848:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/ServoTimer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/ServoTimer.c **** *
 851:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 852:.\Generated_Source\PSoC4/ServoTimer.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/ServoTimer.c **** *
 854:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 855:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 856:.\Generated_Source\PSoC4/ServoTimer.c **** *
 857:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/ServoTimer.c **** {
 860:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/ServoTimer.c **** 
 864:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
 866:.\Generated_Source\PSoC4/ServoTimer.c **** 
 867:.\Generated_Source\PSoC4/ServoTimer.c ****         if (ServoTimer__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 869:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_COMP_CAP_REG = ((compare + 1u) & ServoTimer_16BIT_MASK);
 870:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 871:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (ServoTimer__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 873:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_COMP_CAP_REG = ((compare - 1u) & ServoTimer_16BIT_MASK);
 874:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 875:.\Generated_Source\PSoC4/ServoTimer.c ****         else
 876:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 877:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 17


 878:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 879:.\Generated_Source\PSoC4/ServoTimer.c ****     #else
 880:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
 881:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/ServoTimer.c **** }
 883:.\Generated_Source\PSoC4/ServoTimer.c **** 
 884:.\Generated_Source\PSoC4/ServoTimer.c **** 
 885:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCompare
 887:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/ServoTimer.c **** *
 889:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 890:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/ServoTimer.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/ServoTimer.c **** *
 893:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 894:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 895:.\Generated_Source\PSoC4/ServoTimer.c **** *
 896:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 897:.\Generated_Source\PSoC4/ServoTimer.c **** *  Compare value
 898:.\Generated_Source\PSoC4/ServoTimer.c **** *
 899:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCompare(void)
 901:.\Generated_Source\PSoC4/ServoTimer.c **** {
 902:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/ServoTimer.c **** 
 907:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
 909:.\Generated_Source\PSoC4/ServoTimer.c **** 
 910:.\Generated_Source\PSoC4/ServoTimer.c ****         if (ServoTimer__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 912:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal = ((ServoTimer_COMP_CAP_REG - 1u) & ServoTimer_16BIT_MASK);
 913:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 914:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (ServoTimer__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 916:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal = ((ServoTimer_COMP_CAP_REG + 1u) & ServoTimer_16BIT_MASK);
 917:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 918:.\Generated_Source\PSoC4/ServoTimer.c ****         else
 919:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 920:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal = (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 921:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 922:.\Generated_Source\PSoC4/ServoTimer.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/ServoTimer.c ****     #else
 924:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 925:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/ServoTimer.c **** }
 927:.\Generated_Source\PSoC4/ServoTimer.c **** 
 928:.\Generated_Source\PSoC4/ServoTimer.c **** 
 929:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_WriteCompareBuf
 931:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/ServoTimer.c **** *
 933:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 934:.\Generated_Source\PSoC4/ServoTimer.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 18


 935:.\Generated_Source\PSoC4/ServoTimer.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/ServoTimer.c **** *
 937:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 938:.\Generated_Source\PSoC4/ServoTimer.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/ServoTimer.c **** *
 940:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 941:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 942:.\Generated_Source\PSoC4/ServoTimer.c **** *
 943:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/ServoTimer.c **** {
 946:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/ServoTimer.c **** 
 950:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
 952:.\Generated_Source\PSoC4/ServoTimer.c **** 
 953:.\Generated_Source\PSoC4/ServoTimer.c ****         if (ServoTimer__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 955:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_COMP_CAP_BUF_REG = ((compareBuf + 1u) & ServoTimer_16BIT_MASK);
 956:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 957:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (ServoTimer__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 959:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_COMP_CAP_BUF_REG = ((compareBuf - 1u) & ServoTimer_16BIT_MASK);
 960:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 961:.\Generated_Source\PSoC4/ServoTimer.c ****         else
 962:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 963:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_COMP_CAP_BUF_REG = (compareBuf & ServoTimer_16BIT_MASK);
 964:.\Generated_Source\PSoC4/ServoTimer.c ****         }
 965:.\Generated_Source\PSoC4/ServoTimer.c ****     #else
 966:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_COMP_CAP_BUF_REG = (compareBuf & ServoTimer_16BIT_MASK);
 967:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/ServoTimer.c **** }
 969:.\Generated_Source\PSoC4/ServoTimer.c **** 
 970:.\Generated_Source\PSoC4/ServoTimer.c **** 
 971:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCompareBuf
 973:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/ServoTimer.c **** *
 975:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
 976:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/ServoTimer.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/ServoTimer.c **** *
 979:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
 980:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
 981:.\Generated_Source\PSoC4/ServoTimer.c **** *
 982:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
 983:.\Generated_Source\PSoC4/ServoTimer.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/ServoTimer.c **** *
 985:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/ServoTimer.c **** {
 988:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/ServoTimer.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 19


 992:.\Generated_Source\PSoC4/ServoTimer.c **** 
 993:.\Generated_Source\PSoC4/ServoTimer.c ****     #if (ServoTimer_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/ServoTimer.c ****         currentMode = ((ServoTimer_CONTROL_REG & ServoTimer_UPDOWN_MASK) >> ServoTimer_UPDOWN_SHIFT
 995:.\Generated_Source\PSoC4/ServoTimer.c **** 
 996:.\Generated_Source\PSoC4/ServoTimer.c ****         if (ServoTimer__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/ServoTimer.c ****         {
 998:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal = ((ServoTimer_COMP_CAP_BUF_REG - 1u) & ServoTimer_16BIT_MASK);
 999:.\Generated_Source\PSoC4/ServoTimer.c ****         }
1000:.\Generated_Source\PSoC4/ServoTimer.c ****         else if (ServoTimer__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/ServoTimer.c ****         {
1002:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal = ((ServoTimer_COMP_CAP_BUF_REG + 1u) & ServoTimer_16BIT_MASK);
1003:.\Generated_Source\PSoC4/ServoTimer.c ****         }
1004:.\Generated_Source\PSoC4/ServoTimer.c ****         else
1005:.\Generated_Source\PSoC4/ServoTimer.c ****         {
1006:.\Generated_Source\PSoC4/ServoTimer.c ****             regVal = (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
1007:.\Generated_Source\PSoC4/ServoTimer.c ****         }
1008:.\Generated_Source\PSoC4/ServoTimer.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/ServoTimer.c ****     #else
1010:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
1011:.\Generated_Source\PSoC4/ServoTimer.c ****     #endif /* (ServoTimer_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/ServoTimer.c **** }
1013:.\Generated_Source\PSoC4/ServoTimer.c **** 
1014:.\Generated_Source\PSoC4/ServoTimer.c **** 
1015:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCapture
1017:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/ServoTimer.c **** *
1019:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1020:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/ServoTimer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/ServoTimer.c **** *
1023:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1024:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1025:.\Generated_Source\PSoC4/ServoTimer.c **** *
1026:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1027:.\Generated_Source\PSoC4/ServoTimer.c **** *  Capture value
1028:.\Generated_Source\PSoC4/ServoTimer.c **** *
1029:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCapture(void)
1031:.\Generated_Source\PSoC4/ServoTimer.c **** {
1032:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
1033:.\Generated_Source\PSoC4/ServoTimer.c **** }
1034:.\Generated_Source\PSoC4/ServoTimer.c **** 
1035:.\Generated_Source\PSoC4/ServoTimer.c **** 
1036:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/ServoTimer.c **** *
1040:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1041:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/ServoTimer.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/ServoTimer.c **** *
1044:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1045:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1046:.\Generated_Source\PSoC4/ServoTimer.c **** *
1047:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1048:.\Generated_Source\PSoC4/ServoTimer.c **** *  Capture buffer value
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 20


1049:.\Generated_Source\PSoC4/ServoTimer.c **** *
1050:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/ServoTimer.c **** {
1053:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
1054:.\Generated_Source\PSoC4/ServoTimer.c **** }
1055:.\Generated_Source\PSoC4/ServoTimer.c **** 
1056:.\Generated_Source\PSoC4/ServoTimer.c **** 
1057:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCaptureMode
1059:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/ServoTimer.c **** *
1061:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1062:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/ServoTimer.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/ServoTimer.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/ServoTimer.c **** *
1066:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1067:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1069:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/ServoTimer.c **** *
1074:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1075:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1076:.\Generated_Source\PSoC4/ServoTimer.c **** *
1077:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/ServoTimer.c **** {
1080:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/ServoTimer.c **** 
1082:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1083:.\Generated_Source\PSoC4/ServoTimer.c **** 
1084:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_CAPTURE_MASK;
1085:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= triggerMode;
1086:.\Generated_Source\PSoC4/ServoTimer.c **** 
1087:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1088:.\Generated_Source\PSoC4/ServoTimer.c **** }
1089:.\Generated_Source\PSoC4/ServoTimer.c **** 
1090:.\Generated_Source\PSoC4/ServoTimer.c **** 
1091:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetReloadMode
1093:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/ServoTimer.c **** *
1095:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1096:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/ServoTimer.c **** *  input.
1098:.\Generated_Source\PSoC4/ServoTimer.c **** *
1099:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1100:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1102:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 21


1106:.\Generated_Source\PSoC4/ServoTimer.c **** *
1107:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1108:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1109:.\Generated_Source\PSoC4/ServoTimer.c **** *
1110:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/ServoTimer.c **** {
1113:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/ServoTimer.c **** 
1115:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1116:.\Generated_Source\PSoC4/ServoTimer.c **** 
1117:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_RELOAD_MASK;
1118:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
1119:.\Generated_Source\PSoC4/ServoTimer.c **** 
1120:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1121:.\Generated_Source\PSoC4/ServoTimer.c **** }
1122:.\Generated_Source\PSoC4/ServoTimer.c **** 
1123:.\Generated_Source\PSoC4/ServoTimer.c **** 
1124:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetStartMode
1126:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/ServoTimer.c **** *
1128:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1129:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/ServoTimer.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/ServoTimer.c **** *
1132:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1133:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1135:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/ServoTimer.c **** *
1140:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1141:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1142:.\Generated_Source\PSoC4/ServoTimer.c **** *
1143:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/ServoTimer.c **** {
1146:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/ServoTimer.c **** 
1148:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1149:.\Generated_Source\PSoC4/ServoTimer.c **** 
1150:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_START_MASK;
1151:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
1152:.\Generated_Source\PSoC4/ServoTimer.c **** 
1153:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1154:.\Generated_Source\PSoC4/ServoTimer.c **** }
1155:.\Generated_Source\PSoC4/ServoTimer.c **** 
1156:.\Generated_Source\PSoC4/ServoTimer.c **** 
1157:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetStopMode
1159:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/ServoTimer.c **** *
1161:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1162:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 22


1163:.\Generated_Source\PSoC4/ServoTimer.c **** *
1164:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1165:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1167:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/ServoTimer.c **** *
1172:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1173:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1174:.\Generated_Source\PSoC4/ServoTimer.c **** *
1175:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/ServoTimer.c **** {
1178:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/ServoTimer.c **** 
1180:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1181:.\Generated_Source\PSoC4/ServoTimer.c **** 
1182:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_STOP_MASK;
1183:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
1184:.\Generated_Source\PSoC4/ServoTimer.c **** 
1185:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1186:.\Generated_Source\PSoC4/ServoTimer.c **** }
1187:.\Generated_Source\PSoC4/ServoTimer.c **** 
1188:.\Generated_Source\PSoC4/ServoTimer.c **** 
1189:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetCountMode
1191:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/ServoTimer.c **** *
1193:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1194:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/ServoTimer.c **** *  input.
1196:.\Generated_Source\PSoC4/ServoTimer.c **** *
1197:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1198:.\Generated_Source\PSoC4/ServoTimer.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1200:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/ServoTimer.c **** *
1205:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1206:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1207:.\Generated_Source\PSoC4/ServoTimer.c **** *
1208:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/ServoTimer.c **** {
1211:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/ServoTimer.c **** 
1213:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1214:.\Generated_Source\PSoC4/ServoTimer.c **** 
1215:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_COUNT_MASK;
1216:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
1217:.\Generated_Source\PSoC4/ServoTimer.c **** 
1218:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1219:.\Generated_Source\PSoC4/ServoTimer.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 23


1220:.\Generated_Source\PSoC4/ServoTimer.c **** 
1221:.\Generated_Source\PSoC4/ServoTimer.c **** 
1222:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_TriggerCommand
1224:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/ServoTimer.c **** *
1226:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1227:.\Generated_Source\PSoC4/ServoTimer.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/ServoTimer.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/ServoTimer.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/ServoTimer.c **** *
1231:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1232:.\Generated_Source\PSoC4/ServoTimer.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/ServoTimer.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/ServoTimer.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/ServoTimer.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/ServoTimer.c **** *        define.
1237:.\Generated_Source\PSoC4/ServoTimer.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/ServoTimer.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1240:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/ServoTimer.c **** *
1245:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1246:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1247:.\Generated_Source\PSoC4/ServoTimer.c **** *
1248:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/ServoTimer.c **** {
1251:.\Generated_Source\PSoC4/ServoTimer.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/ServoTimer.c **** 
1253:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
1254:.\Generated_Source\PSoC4/ServoTimer.c **** 
1255:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMMAND_REG = ((uint32)(mask << command));
1256:.\Generated_Source\PSoC4/ServoTimer.c **** 
1257:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
1258:.\Generated_Source\PSoC4/ServoTimer.c **** }
1259:.\Generated_Source\PSoC4/ServoTimer.c **** 
1260:.\Generated_Source\PSoC4/ServoTimer.c **** 
1261:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ReadStatus
1263:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/ServoTimer.c **** *
1265:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1266:.\Generated_Source\PSoC4/ServoTimer.c **** *  Reads the status of the ServoTimer.
1267:.\Generated_Source\PSoC4/ServoTimer.c **** *
1268:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1269:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1270:.\Generated_Source\PSoC4/ServoTimer.c **** *
1271:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1272:.\Generated_Source\PSoC4/ServoTimer.c **** *  Status
1273:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1274:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/ServoTimer.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 24


1277:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_ReadStatus(void)
1279:.\Generated_Source\PSoC4/ServoTimer.c **** {
1280:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
1281:.\Generated_Source\PSoC4/ServoTimer.c ****             (ServoTimer_STATUS_REG & ServoTimer_STATUS_DOWN));
1282:.\Generated_Source\PSoC4/ServoTimer.c **** }
1283:.\Generated_Source\PSoC4/ServoTimer.c **** 
1284:.\Generated_Source\PSoC4/ServoTimer.c **** 
1285:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetInterruptMode
1287:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/ServoTimer.c **** *
1289:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1290:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/ServoTimer.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/ServoTimer.c **** *
1293:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1294:.\Generated_Source\PSoC4/ServoTimer.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1296:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/ServoTimer.c **** *
1299:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1300:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1301:.\Generated_Source\PSoC4/ServoTimer.c **** *
1302:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/ServoTimer.c **** {
1305:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_MASK_REG =  interruptMask;
  36              		.loc 1 1305 0
  37 0008 074B     		ldr	r3, .L2+8
  38              	.LBE9:
  39              	.LBE8:
 105:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  =
  40              		.loc 1 105 0
  41 000a 0C20     		mov	r0, #12
  42              	.LBB12:
  43              	.LBB10:
  44              		.loc 1 1305 0
  45 000c 0122     		mov	r2, #1
  46              	.LBE10:
  47              	.LBE12:
 105:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_TRIG_CONTROL1_REG  =
  48              		.loc 1 105 0
  49 000e 0860     		str	r0, [r1]
  50              	.LVL0:
  51              	.LBB13:
  52              	.LBB11:
  53              		.loc 1 1305 0
  54 0010 1A60     		str	r2, [r3]
  55              	.LVL1:
  56              	.LBE11:
  57              	.LBE13:
  58              	.LBB14:
  59              	.LBB15:
 712:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
  60              		.loc 1 712 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 25


  61 0012 0648     		ldr	r0, .L2+12
  62 0014 0649     		ldr	r1, .L2+16
  63              	.LBE15:
  64              	.LBE14:
  65              	.LBB17:
  66              	.LBB18:
 880:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
  67              		.loc 1 880 0
  68 0016 074A     		ldr	r2, .L2+20
  69              	.LBE18:
  70              	.LBE17:
  71              	.LBB20:
  72              	.LBB16:
 712:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
  73              		.loc 1 712 0
  74 0018 0860     		str	r0, [r1]
  75              	.LVL2:
  76              	.LBE16:
  77              	.LBE20:
 183:.\Generated_Source\PSoC4/ServoTimer.c **** }
  78              		.loc 1 183 0
  79              		@ sp needed for prologue
  80              	.LBB21:
  81              	.LBB19:
 880:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
  82              		.loc 1 880 0
  83 001a 1060     		str	r0, [r2]
  84              	.LBE19:
  85              	.LBE21:
 183:.\Generated_Source\PSoC4/ServoTimer.c **** }
  86              		.loc 1 183 0
  87 001c 7047     		bx	lr
  88              	.L3:
  89 001e C046     		.align	2
  90              	.L2:
  91 0020 40010540 		.word	1074069824
  92 0024 64010540 		.word	1074069860
  93 0028 78010540 		.word	1074069880
  94 002c FFFF0000 		.word	65535
  95 0030 54010540 		.word	1074069844
  96 0034 4C010540 		.word	1074069836
  97              		.cfi_endproc
  98              	.LFE0:
  99              		.size	ServoTimer_Init, .-ServoTimer_Init
 100              		.section	.text.ServoTimer_Stop,"ax",%progbits
 101              		.align	1
 102              		.global	ServoTimer_Stop
 103              		.code	16
 104              		.thumb_func
 105              		.type	ServoTimer_Stop, %function
 106              	ServoTimer_Stop:
 107              	.LFB3:
 274:.\Generated_Source\PSoC4/ServoTimer.c **** {
 108              		.loc 1 274 0
 109              		.cfi_startproc
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI0:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 26


 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
 277:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 115              		.loc 1 277 0
 116 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 117              	.LVL3:
 279:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG &= (uint32)~ServoTimer_MASK;
 118              		.loc 1 279 0
 119 0006 044B     		ldr	r3, .L5
 120 0008 0221     		mov	r1, #2
 121 000a 1A68     		ldr	r2, [r3]
 282:.\Generated_Source\PSoC4/ServoTimer.c **** }
 122              		.loc 1 282 0
 123              		@ sp needed for prologue
 279:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG &= (uint32)~ServoTimer_MASK;
 124              		.loc 1 279 0
 125 000c 8A43     		bic	r2, r1
 126 000e 1A60     		str	r2, [r3]
 281:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 127              		.loc 1 281 0
 128 0010 FFF7FEFF 		bl	CyExitCriticalSection
 129              	.LVL4:
 282:.\Generated_Source\PSoC4/ServoTimer.c **** }
 130              		.loc 1 282 0
 131 0014 08BD     		pop	{r3, pc}
 132              	.L6:
 133 0016 C046     		.align	2
 134              	.L5:
 135 0018 00000540 		.word	1074069504
 136              		.cfi_endproc
 137              	.LFE3:
 138              		.size	ServoTimer_Stop, .-ServoTimer_Stop
 139              		.section	.text.ServoTimer_SetMode,"ax",%progbits
 140              		.align	1
 141              		.global	ServoTimer_SetMode
 142              		.code	16
 143              		.thumb_func
 144              		.type	ServoTimer_SetMode, %function
 145              	ServoTimer_SetMode:
 146              	.LFB4:
 311:.\Generated_Source\PSoC4/ServoTimer.c **** {
 147              		.loc 1 311 0
 148              		.cfi_startproc
 149              	.LVL5:
 150 0000 10B5     		push	{r4, lr}
 151              	.LCFI1:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 4, -8
 154              		.cfi_offset 14, -4
 311:.\Generated_Source\PSoC4/ServoTimer.c **** {
 155              		.loc 1 311 0
 156 0002 041C     		mov	r4, r0
 314:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 157              		.loc 1 314 0
 158 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 159              	.LVL6:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 27


 316:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_MODE_MASK;
 160              		.loc 1 316 0
 161 0008 054B     		ldr	r3, .L8
 162 000a 064A     		ldr	r2, .L8+4
 163 000c 1968     		ldr	r1, [r3]
 320:.\Generated_Source\PSoC4/ServoTimer.c **** }
 164              		.loc 1 320 0
 165              		@ sp needed for prologue
 316:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_MODE_MASK;
 166              		.loc 1 316 0
 167 000e 0A40     		and	r2, r1
 168 0010 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mode;
 169              		.loc 1 317 0
 170 0012 1968     		ldr	r1, [r3]
 171 0014 0C43     		orr	r4, r1
 172              	.LVL7:
 173 0016 1C60     		str	r4, [r3]
 319:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 174              		.loc 1 319 0
 175 0018 FFF7FEFF 		bl	CyExitCriticalSection
 176              	.LVL8:
 320:.\Generated_Source\PSoC4/ServoTimer.c **** }
 177              		.loc 1 320 0
 178 001c 10BD     		pop	{r4, pc}
 179              	.L9:
 180 001e C046     		.align	2
 181              	.L8:
 182 0020 40010540 		.word	1074069824
 183 0024 FFFFFFF8 		.word	-117440513
 184              		.cfi_endproc
 185              	.LFE4:
 186              		.size	ServoTimer_SetMode, .-ServoTimer_SetMode
 187              		.section	.text.ServoTimer_SetQDMode,"ax",%progbits
 188              		.align	1
 189              		.global	ServoTimer_SetQDMode
 190              		.code	16
 191              		.thumb_func
 192              		.type	ServoTimer_SetQDMode, %function
 193              	ServoTimer_SetQDMode:
 194              	.LFB5:
 344:.\Generated_Source\PSoC4/ServoTimer.c **** {
 195              		.loc 1 344 0
 196              		.cfi_startproc
 197              	.LVL9:
 198 0000 10B5     		push	{r4, lr}
 199              	.LCFI2:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 14, -4
 344:.\Generated_Source\PSoC4/ServoTimer.c **** {
 203              		.loc 1 344 0
 204 0002 041C     		mov	r4, r0
 347:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 205              		.loc 1 347 0
 206 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 207              	.LVL10:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 28


 349:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_QUAD_MODE_MASK;
 208              		.loc 1 349 0
 209 0008 054B     		ldr	r3, .L11
 210 000a 064A     		ldr	r2, .L11+4
 211 000c 1968     		ldr	r1, [r3]
 353:.\Generated_Source\PSoC4/ServoTimer.c **** }
 212              		.loc 1 353 0
 213              		@ sp needed for prologue
 349:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_QUAD_MODE_MASK;
 214              		.loc 1 349 0
 215 000e 0A40     		and	r2, r1
 216 0010 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= qdMode;
 217              		.loc 1 350 0
 218 0012 1968     		ldr	r1, [r3]
 219 0014 0C43     		orr	r4, r1
 220              	.LVL11:
 221 0016 1C60     		str	r4, [r3]
 352:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 222              		.loc 1 352 0
 223 0018 FFF7FEFF 		bl	CyExitCriticalSection
 224              	.LVL12:
 353:.\Generated_Source\PSoC4/ServoTimer.c **** }
 225              		.loc 1 353 0
 226 001c 10BD     		pop	{r4, pc}
 227              	.L12:
 228 001e C046     		.align	2
 229              	.L11:
 230 0020 40010540 		.word	1074069824
 231 0024 FFFF8FFF 		.word	-7340033
 232              		.cfi_endproc
 233              	.LFE5:
 234              		.size	ServoTimer_SetQDMode, .-ServoTimer_SetQDMode
 235              		.section	.text.ServoTimer_SetPrescaler,"ax",%progbits
 236              		.align	1
 237              		.global	ServoTimer_SetPrescaler
 238              		.code	16
 239              		.thumb_func
 240              		.type	ServoTimer_SetPrescaler, %function
 241              	ServoTimer_SetPrescaler:
 242              	.LFB6:
 381:.\Generated_Source\PSoC4/ServoTimer.c **** {
 243              		.loc 1 381 0
 244              		.cfi_startproc
 245              	.LVL13:
 246 0000 10B5     		push	{r4, lr}
 247              	.LCFI3:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 381:.\Generated_Source\PSoC4/ServoTimer.c **** {
 251              		.loc 1 381 0
 252 0002 041C     		mov	r4, r0
 384:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 253              		.loc 1 384 0
 254 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 255              	.LVL14:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 29


 386:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 256              		.loc 1 386 0
 257 0008 054B     		ldr	r3, .L14
 258 000a 064A     		ldr	r2, .L14+4
 259 000c 1968     		ldr	r1, [r3]
 390:.\Generated_Source\PSoC4/ServoTimer.c **** }
 260              		.loc 1 390 0
 261              		@ sp needed for prologue
 386:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 262              		.loc 1 386 0
 263 000e 0A40     		and	r2, r1
 264 0010 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= prescaler;
 265              		.loc 1 387 0
 266 0012 1968     		ldr	r1, [r3]
 267 0014 0C43     		orr	r4, r1
 268              	.LVL15:
 269 0016 1C60     		str	r4, [r3]
 389:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 270              		.loc 1 389 0
 271 0018 FFF7FEFF 		bl	CyExitCriticalSection
 272              	.LVL16:
 390:.\Generated_Source\PSoC4/ServoTimer.c **** }
 273              		.loc 1 390 0
 274 001c 10BD     		pop	{r4, pc}
 275              	.L15:
 276 001e C046     		.align	2
 277              	.L14:
 278 0020 40010540 		.word	1074069824
 279 0024 FF00FFFF 		.word	-65281
 280              		.cfi_endproc
 281              	.LFE6:
 282              		.size	ServoTimer_SetPrescaler, .-ServoTimer_SetPrescaler
 283              		.section	.text.ServoTimer_SetOneShot,"ax",%progbits
 284              		.align	1
 285              		.global	ServoTimer_SetOneShot
 286              		.code	16
 287              		.thumb_func
 288              		.type	ServoTimer_SetOneShot, %function
 289              	ServoTimer_SetOneShot:
 290              	.LFB7:
 413:.\Generated_Source\PSoC4/ServoTimer.c **** {
 291              		.loc 1 413 0
 292              		.cfi_startproc
 293              	.LVL17:
 294 0000 10B5     		push	{r4, lr}
 295              	.LCFI4:
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 413:.\Generated_Source\PSoC4/ServoTimer.c **** {
 299              		.loc 1 413 0
 300 0002 041C     		mov	r4, r0
 416:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 301              		.loc 1 416 0
 302 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 303              	.LVL18:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 30


 418:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_ONESHOT_MASK;
 304              		.loc 1 418 0
 305 0008 064B     		ldr	r3, .L17
 306 000a 074A     		ldr	r2, .L17+4
 307 000c 1968     		ldr	r1, [r3]
 423:.\Generated_Source\PSoC4/ServoTimer.c **** }
 308              		.loc 1 423 0
 309              		@ sp needed for prologue
 418:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_ONESHOT_MASK;
 310              		.loc 1 418 0
 311 000e 0A40     		and	r2, r1
 312 0010 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((oneShotEnable & ServoTimer_1BIT_MASK) <<
 313              		.loc 1 419 0
 314 0012 0121     		mov	r1, #1
 315 0014 1A68     		ldr	r2, [r3]
 316 0016 0C40     		and	r4, r1
 317              	.LVL19:
 318 0018 A404     		lsl	r4, r4, #18
 319 001a 1443     		orr	r4, r2
 320 001c 1C60     		str	r4, [r3]
 422:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 321              		.loc 1 422 0
 322 001e FFF7FEFF 		bl	CyExitCriticalSection
 323              	.LVL20:
 423:.\Generated_Source\PSoC4/ServoTimer.c **** }
 324              		.loc 1 423 0
 325 0022 10BD     		pop	{r4, pc}
 326              	.L18:
 327              		.align	2
 328              	.L17:
 329 0024 40010540 		.word	1074069824
 330 0028 FFFFFBFF 		.word	-262145
 331              		.cfi_endproc
 332              	.LFE7:
 333              		.size	ServoTimer_SetOneShot, .-ServoTimer_SetOneShot
 334              		.section	.text.ServoTimer_SetPWMMode,"ax",%progbits
 335              		.align	1
 336              		.global	ServoTimer_SetPWMMode
 337              		.code	16
 338              		.thumb_func
 339              		.type	ServoTimer_SetPWMMode, %function
 340              	ServoTimer_SetPWMMode:
 341              	.LFB8:
 467:.\Generated_Source\PSoC4/ServoTimer.c **** {
 342              		.loc 1 467 0
 343              		.cfi_startproc
 344              	.LVL21:
 468:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL2_REG = (modeMask & ServoTimer_6BIT_MASK);
 345              		.loc 1 468 0
 346 0000 3F23     		mov	r3, #63
 347 0002 0249     		ldr	r1, .L20
 348 0004 1840     		and	r0, r3
 349              	.LVL22:
 350 0006 0860     		str	r0, [r1]
 469:.\Generated_Source\PSoC4/ServoTimer.c **** }
 351              		.loc 1 469 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 31


 352              		@ sp needed for prologue
 353 0008 7047     		bx	lr
 354              	.L21:
 355 000a C046     		.align	2
 356              	.L20:
 357 000c 68010540 		.word	1074069864
 358              		.cfi_endproc
 359              	.LFE8:
 360              		.size	ServoTimer_SetPWMMode, .-ServoTimer_SetPWMMode
 361              		.section	.text.ServoTimer_SetPWMSyncKill,"ax",%progbits
 362              		.align	1
 363              		.global	ServoTimer_SetPWMSyncKill
 364              		.code	16
 365              		.thumb_func
 366              		.type	ServoTimer_SetPWMSyncKill, %function
 367              	ServoTimer_SetPWMSyncKill:
 368              	.LFB9:
 503:.\Generated_Source\PSoC4/ServoTimer.c **** {
 369              		.loc 1 503 0
 370              		.cfi_startproc
 371              	.LVL23:
 372 0000 10B5     		push	{r4, lr}
 373              	.LCFI5:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 4, -8
 376              		.cfi_offset 14, -4
 503:.\Generated_Source\PSoC4/ServoTimer.c **** {
 377              		.loc 1 503 0
 378 0002 041C     		mov	r4, r0
 506:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 379              		.loc 1 506 0
 380 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 381              	.LVL24:
 508:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_SYNC_KILL_MASK;
 382              		.loc 1 508 0
 383 0008 064B     		ldr	r3, .L23
 384 000a 0421     		mov	r1, #4
 385 000c 1A68     		ldr	r2, [r3]
 513:.\Generated_Source\PSoC4/ServoTimer.c **** }
 386              		.loc 1 513 0
 387              		@ sp needed for prologue
 508:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_SYNC_KILL_MASK;
 388              		.loc 1 508 0
 389 000e 8A43     		bic	r2, r1
 390 0010 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((syncKillEnable & ServoTimer_1BIT_MASK)  <<
 391              		.loc 1 509 0
 392 0012 0121     		mov	r1, #1
 393 0014 1A68     		ldr	r2, [r3]
 394 0016 0C40     		and	r4, r1
 395              	.LVL25:
 396 0018 A400     		lsl	r4, r4, #2
 397 001a 1443     		orr	r4, r2
 398 001c 1C60     		str	r4, [r3]
 512:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 399              		.loc 1 512 0
 400 001e FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 32


 401              	.LVL26:
 513:.\Generated_Source\PSoC4/ServoTimer.c **** }
 402              		.loc 1 513 0
 403 0022 10BD     		pop	{r4, pc}
 404              	.L24:
 405              		.align	2
 406              	.L23:
 407 0024 40010540 		.word	1074069824
 408              		.cfi_endproc
 409              	.LFE9:
 410              		.size	ServoTimer_SetPWMSyncKill, .-ServoTimer_SetPWMSyncKill
 411              		.section	.text.ServoTimer_SetPWMStopOnKill,"ax",%progbits
 412              		.align	1
 413              		.global	ServoTimer_SetPWMStopOnKill
 414              		.code	16
 415              		.thumb_func
 416              		.type	ServoTimer_SetPWMStopOnKill, %function
 417              	ServoTimer_SetPWMStopOnKill:
 418              	.LFB10:
 537:.\Generated_Source\PSoC4/ServoTimer.c **** {
 419              		.loc 1 537 0
 420              		.cfi_startproc
 421              	.LVL27:
 422 0000 10B5     		push	{r4, lr}
 423              	.LCFI6:
 424              		.cfi_def_cfa_offset 8
 425              		.cfi_offset 4, -8
 426              		.cfi_offset 14, -4
 537:.\Generated_Source\PSoC4/ServoTimer.c **** {
 427              		.loc 1 537 0
 428 0002 041C     		mov	r4, r0
 540:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 429              		.loc 1 540 0
 430 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 431              	.LVL28:
 542:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_STOP_KILL_MASK;
 432              		.loc 1 542 0
 433 0008 064B     		ldr	r3, .L26
 434 000a 0821     		mov	r1, #8
 435 000c 1A68     		ldr	r2, [r3]
 547:.\Generated_Source\PSoC4/ServoTimer.c **** }
 436              		.loc 1 547 0
 437              		@ sp needed for prologue
 542:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PWM_STOP_KILL_MASK;
 438              		.loc 1 542 0
 439 000e 8A43     		bic	r2, r1
 440 0010 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((stopOnKillEnable & ServoTimer_1BIT_MASK)  <<
 441              		.loc 1 543 0
 442 0012 0121     		mov	r1, #1
 443 0014 1A68     		ldr	r2, [r3]
 444 0016 0C40     		and	r4, r1
 445              	.LVL29:
 446 0018 E400     		lsl	r4, r4, #3
 447 001a 1443     		orr	r4, r2
 448 001c 1C60     		str	r4, [r3]
 546:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 33


 449              		.loc 1 546 0
 450 001e FFF7FEFF 		bl	CyExitCriticalSection
 451              	.LVL30:
 547:.\Generated_Source\PSoC4/ServoTimer.c **** }
 452              		.loc 1 547 0
 453 0022 10BD     		pop	{r4, pc}
 454              	.L27:
 455              		.align	2
 456              	.L26:
 457 0024 40010540 		.word	1074069824
 458              		.cfi_endproc
 459              	.LFE10:
 460              		.size	ServoTimer_SetPWMStopOnKill, .-ServoTimer_SetPWMStopOnKill
 461              		.section	.text.ServoTimer_SetPWMDeadTime,"ax",%progbits
 462              		.align	1
 463              		.global	ServoTimer_SetPWMDeadTime
 464              		.code	16
 465              		.thumb_func
 466              		.type	ServoTimer_SetPWMDeadTime, %function
 467              	ServoTimer_SetPWMDeadTime:
 468              	.LFB11:
 570:.\Generated_Source\PSoC4/ServoTimer.c **** {
 469              		.loc 1 570 0
 470              		.cfi_startproc
 471              	.LVL31:
 472 0000 10B5     		push	{r4, lr}
 473              	.LCFI7:
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 4, -8
 476              		.cfi_offset 14, -4
 570:.\Generated_Source\PSoC4/ServoTimer.c **** {
 477              		.loc 1 570 0
 478 0002 041C     		mov	r4, r0
 573:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 479              		.loc 1 573 0
 480 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 481              	.LVL32:
 575:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 482              		.loc 1 575 0
 483 0008 064B     		ldr	r3, .L29
 484 000a 074A     		ldr	r2, .L29+4
 485 000c 1968     		ldr	r1, [r3]
 576:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((deadTime & ServoTimer_8BIT_MASK) <<
 486              		.loc 1 576 0
 487 000e 2406     		lsl	r4, r4, #24
 488              	.LVL33:
 575:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_PRESCALER_MASK;
 489              		.loc 1 575 0
 490 0010 0A40     		and	r2, r1
 491 0012 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((deadTime & ServoTimer_8BIT_MASK) <<
 492              		.loc 1 576 0
 493 0014 1968     		ldr	r1, [r3]
 494 0016 220C     		lsr	r2, r4, #16
 495 0018 0A43     		orr	r2, r1
 496 001a 1A60     		str	r2, [r3]
 579:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 34


 497              		.loc 1 579 0
 498 001c FFF7FEFF 		bl	CyExitCriticalSection
 499              	.LVL34:
 580:.\Generated_Source\PSoC4/ServoTimer.c **** }
 500              		.loc 1 580 0
 501              		@ sp needed for prologue
 502 0020 10BD     		pop	{r4, pc}
 503              	.L30:
 504 0022 C046     		.align	2
 505              	.L29:
 506 0024 40010540 		.word	1074069824
 507 0028 FF00FFFF 		.word	-65281
 508              		.cfi_endproc
 509              	.LFE11:
 510              		.size	ServoTimer_SetPWMDeadTime, .-ServoTimer_SetPWMDeadTime
 511              		.section	.text.ServoTimer_SetPWMInvert,"ax",%progbits
 512              		.align	1
 513              		.global	ServoTimer_SetPWMInvert
 514              		.code	16
 515              		.thumb_func
 516              		.type	ServoTimer_SetPWMInvert, %function
 517              	ServoTimer_SetPWMInvert:
 518              	.LFB12:
 603:.\Generated_Source\PSoC4/ServoTimer.c **** {
 519              		.loc 1 603 0
 520              		.cfi_startproc
 521              	.LVL35:
 522 0000 10B5     		push	{r4, lr}
 523              	.LCFI8:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 14, -4
 603:.\Generated_Source\PSoC4/ServoTimer.c **** {
 527              		.loc 1 603 0
 528 0002 041C     		mov	r4, r0
 606:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 529              		.loc 1 606 0
 530 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 531              	.LVL36:
 608:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_INV_OUT_MASK;
 532              		.loc 1 608 0
 533 0008 054B     		ldr	r3, .L32
 534 000a 064A     		ldr	r2, .L32+4
 535 000c 1968     		ldr	r1, [r3]
 612:.\Generated_Source\PSoC4/ServoTimer.c **** }
 536              		.loc 1 612 0
 537              		@ sp needed for prologue
 608:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_INV_OUT_MASK;
 538              		.loc 1 608 0
 539 000e 0A40     		and	r2, r1
 540 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= mask;
 541              		.loc 1 609 0
 542 0012 1968     		ldr	r1, [r3]
 543 0014 0C43     		orr	r4, r1
 544              	.LVL37:
 545 0016 1C60     		str	r4, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 35


 611:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 546              		.loc 1 611 0
 547 0018 FFF7FEFF 		bl	CyExitCriticalSection
 548              	.LVL38:
 612:.\Generated_Source\PSoC4/ServoTimer.c **** }
 549              		.loc 1 612 0
 550 001c 10BD     		pop	{r4, pc}
 551              	.L33:
 552 001e C046     		.align	2
 553              	.L32:
 554 0020 40010540 		.word	1074069824
 555 0024 FFFFCFFF 		.word	-3145729
 556              		.cfi_endproc
 557              	.LFE12:
 558              		.size	ServoTimer_SetPWMInvert, .-ServoTimer_SetPWMInvert
 559              		.section	.text.ServoTimer_WriteCounter,"ax",%progbits
 560              		.align	1
 561              		.global	ServoTimer_WriteCounter
 562              		.code	16
 563              		.thumb_func
 564              		.type	ServoTimer_WriteCounter, %function
 565              	ServoTimer_WriteCounter:
 566              	.LFB13:
 633:.\Generated_Source\PSoC4/ServoTimer.c **** {
 567              		.loc 1 633 0
 568              		.cfi_startproc
 569              	.LVL39:
 634:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COUNTER_REG = (count & ServoTimer_16BIT_MASK);
 570              		.loc 1 634 0
 571 0000 014B     		ldr	r3, .L35
 572 0002 80B2     		uxth	r0, r0
 573              	.LVL40:
 574 0004 1860     		str	r0, [r3]
 635:.\Generated_Source\PSoC4/ServoTimer.c **** }
 575              		.loc 1 635 0
 576              		@ sp needed for prologue
 577 0006 7047     		bx	lr
 578              	.L36:
 579              		.align	2
 580              	.L35:
 581 0008 48010540 		.word	1074069832
 582              		.cfi_endproc
 583              	.LFE13:
 584              		.size	ServoTimer_WriteCounter, .-ServoTimer_WriteCounter
 585              		.section	.text.ServoTimer_ReadCounter,"ax",%progbits
 586              		.align	1
 587              		.global	ServoTimer_ReadCounter
 588              		.code	16
 589              		.thumb_func
 590              		.type	ServoTimer_ReadCounter, %function
 591              	ServoTimer_ReadCounter:
 592              	.LFB14:
 653:.\Generated_Source\PSoC4/ServoTimer.c **** {
 593              		.loc 1 653 0
 594              		.cfi_startproc
 654:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COUNTER_REG & ServoTimer_16BIT_MASK);
 595              		.loc 1 654 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 36


 596 0000 014B     		ldr	r3, .L38
 655:.\Generated_Source\PSoC4/ServoTimer.c **** }
 597              		.loc 1 655 0
 598              		@ sp needed for prologue
 654:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COUNTER_REG & ServoTimer_16BIT_MASK);
 599              		.loc 1 654 0
 600 0002 1868     		ldr	r0, [r3]
 601 0004 80B2     		uxth	r0, r0
 655:.\Generated_Source\PSoC4/ServoTimer.c **** }
 602              		.loc 1 655 0
 603 0006 7047     		bx	lr
 604              	.L39:
 605              		.align	2
 606              	.L38:
 607 0008 48010540 		.word	1074069832
 608              		.cfi_endproc
 609              	.LFE14:
 610              		.size	ServoTimer_ReadCounter, .-ServoTimer_ReadCounter
 611              		.section	.text.ServoTimer_SetCounterMode,"ax",%progbits
 612              		.align	1
 613              		.global	ServoTimer_SetCounterMode
 614              		.code	16
 615              		.thumb_func
 616              		.type	ServoTimer_SetCounterMode, %function
 617              	ServoTimer_SetCounterMode:
 618              	.LFB15:
 682:.\Generated_Source\PSoC4/ServoTimer.c **** {
 619              		.loc 1 682 0
 620              		.cfi_startproc
 621              	.LVL41:
 622 0000 10B5     		push	{r4, lr}
 623              	.LCFI9:
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 682:.\Generated_Source\PSoC4/ServoTimer.c **** {
 627              		.loc 1 682 0
 628 0002 041C     		mov	r4, r0
 685:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 629              		.loc 1 685 0
 630 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 631              	.LVL42:
 687:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_UPDOWN_MASK;
 632              		.loc 1 687 0
 633 0008 054B     		ldr	r3, .L41
 634 000a 064A     		ldr	r2, .L41+4
 635 000c 1968     		ldr	r1, [r3]
 691:.\Generated_Source\PSoC4/ServoTimer.c **** }
 636              		.loc 1 691 0
 637              		@ sp needed for prologue
 687:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_UPDOWN_MASK;
 638              		.loc 1 687 0
 639 000e 0A40     		and	r2, r1
 640 0010 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= counterMode;
 641              		.loc 1 688 0
 642 0012 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 37


 643 0014 0C43     		orr	r4, r1
 644              	.LVL43:
 645 0016 1C60     		str	r4, [r3]
 690:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 646              		.loc 1 690 0
 647 0018 FFF7FEFF 		bl	CyExitCriticalSection
 648              	.LVL44:
 691:.\Generated_Source\PSoC4/ServoTimer.c **** }
 649              		.loc 1 691 0
 650 001c 10BD     		pop	{r4, pc}
 651              	.L42:
 652 001e C046     		.align	2
 653              	.L41:
 654 0020 40010540 		.word	1074069824
 655 0024 FFFFFCFF 		.word	-196609
 656              		.cfi_endproc
 657              	.LFE15:
 658              		.size	ServoTimer_SetCounterMode, .-ServoTimer_SetCounterMode
 659              		.section	.text.ServoTimer_WritePeriod,"ax",%progbits
 660              		.align	1
 661              		.global	ServoTimer_WritePeriod
 662              		.code	16
 663              		.thumb_func
 664              		.type	ServoTimer_WritePeriod, %function
 665              	ServoTimer_WritePeriod:
 666              	.LFB16:
 711:.\Generated_Source\PSoC4/ServoTimer.c **** {
 667              		.loc 1 711 0
 668              		.cfi_startproc
 669              	.LVL45:
 712:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_REG = (period & ServoTimer_16BIT_MASK);
 670              		.loc 1 712 0
 671 0000 014B     		ldr	r3, .L44
 672 0002 80B2     		uxth	r0, r0
 673              	.LVL46:
 674 0004 1860     		str	r0, [r3]
 713:.\Generated_Source\PSoC4/ServoTimer.c **** }
 675              		.loc 1 713 0
 676              		@ sp needed for prologue
 677 0006 7047     		bx	lr
 678              	.L45:
 679              		.align	2
 680              	.L44:
 681 0008 54010540 		.word	1074069844
 682              		.cfi_endproc
 683              	.LFE16:
 684              		.size	ServoTimer_WritePeriod, .-ServoTimer_WritePeriod
 685              		.section	.text.ServoTimer_ReadPeriod,"ax",%progbits
 686              		.align	1
 687              		.global	ServoTimer_ReadPeriod
 688              		.code	16
 689              		.thumb_func
 690              		.type	ServoTimer_ReadPeriod, %function
 691              	ServoTimer_ReadPeriod:
 692              	.LFB17:
 731:.\Generated_Source\PSoC4/ServoTimer.c **** {
 693              		.loc 1 731 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 38


 694              		.cfi_startproc
 732:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_REG & ServoTimer_16BIT_MASK);
 695              		.loc 1 732 0
 696 0000 014B     		ldr	r3, .L47
 733:.\Generated_Source\PSoC4/ServoTimer.c **** }
 697              		.loc 1 733 0
 698              		@ sp needed for prologue
 732:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_REG & ServoTimer_16BIT_MASK);
 699              		.loc 1 732 0
 700 0002 1868     		ldr	r0, [r3]
 701 0004 80B2     		uxth	r0, r0
 733:.\Generated_Source\PSoC4/ServoTimer.c **** }
 702              		.loc 1 733 0
 703 0006 7047     		bx	lr
 704              	.L48:
 705              		.align	2
 706              	.L47:
 707 0008 54010540 		.word	1074069844
 708              		.cfi_endproc
 709              	.LFE17:
 710              		.size	ServoTimer_ReadPeriod, .-ServoTimer_ReadPeriod
 711              		.section	.text.ServoTimer_SetCompareSwap,"ax",%progbits
 712              		.align	1
 713              		.global	ServoTimer_SetCompareSwap
 714              		.code	16
 715              		.thumb_func
 716              		.type	ServoTimer_SetCompareSwap, %function
 717              	ServoTimer_SetCompareSwap:
 718              	.LFB18:
 757:.\Generated_Source\PSoC4/ServoTimer.c **** {
 719              		.loc 1 757 0
 720              		.cfi_startproc
 721              	.LVL47:
 722 0000 10B5     		push	{r4, lr}
 723              	.LCFI10:
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 4, -8
 726              		.cfi_offset 14, -4
 757:.\Generated_Source\PSoC4/ServoTimer.c **** {
 727              		.loc 1 757 0
 728 0002 041C     		mov	r4, r0
 760:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 729              		.loc 1 760 0
 730 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 731              	.LVL48:
 762:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_CC_MASK;
 732              		.loc 1 762 0
 733 0008 054B     		ldr	r3, .L50
 734 000a 0122     		mov	r2, #1
 735 000c 1968     		ldr	r1, [r3]
 766:.\Generated_Source\PSoC4/ServoTimer.c **** }
 736              		.loc 1 766 0
 737              		@ sp needed for prologue
 762:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_CC_MASK;
 738              		.loc 1 762 0
 739 000e 9143     		bic	r1, r2
 740 0010 1960     		str	r1, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 39


 763:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= (swapEnable & ServoTimer_1BIT_MASK);
 741              		.loc 1 763 0
 742 0012 1968     		ldr	r1, [r3]
 743 0014 2240     		and	r2, r4
 744 0016 0A43     		orr	r2, r1
 745 0018 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 746              		.loc 1 765 0
 747 001a FFF7FEFF 		bl	CyExitCriticalSection
 748              	.LVL49:
 749              	.LVL50:
 766:.\Generated_Source\PSoC4/ServoTimer.c **** }
 750              		.loc 1 766 0
 751 001e 10BD     		pop	{r4, pc}
 752              	.L51:
 753              		.align	2
 754              	.L50:
 755 0020 40010540 		.word	1074069824
 756              		.cfi_endproc
 757              	.LFE18:
 758              		.size	ServoTimer_SetCompareSwap, .-ServoTimer_SetCompareSwap
 759              		.section	.text.ServoTimer_WritePeriodBuf,"ax",%progbits
 760              		.align	1
 761              		.global	ServoTimer_WritePeriodBuf
 762              		.code	16
 763              		.thumb_func
 764              		.type	ServoTimer_WritePeriodBuf, %function
 765              	ServoTimer_WritePeriodBuf:
 766              	.LFB19:
 784:.\Generated_Source\PSoC4/ServoTimer.c **** {
 767              		.loc 1 784 0
 768              		.cfi_startproc
 769              	.LVL51:
 785:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_PERIOD_BUF_REG = (periodBuf & ServoTimer_16BIT_MASK);
 770              		.loc 1 785 0
 771 0000 014B     		ldr	r3, .L53
 772 0002 80B2     		uxth	r0, r0
 773              	.LVL52:
 774 0004 1860     		str	r0, [r3]
 786:.\Generated_Source\PSoC4/ServoTimer.c **** }
 775              		.loc 1 786 0
 776              		@ sp needed for prologue
 777 0006 7047     		bx	lr
 778              	.L54:
 779              		.align	2
 780              	.L53:
 781 0008 58010540 		.word	1074069848
 782              		.cfi_endproc
 783              	.LFE19:
 784              		.size	ServoTimer_WritePeriodBuf, .-ServoTimer_WritePeriodBuf
 785              		.section	.text.ServoTimer_ReadPeriodBuf,"ax",%progbits
 786              		.align	1
 787              		.global	ServoTimer_ReadPeriodBuf
 788              		.code	16
 789              		.thumb_func
 790              		.type	ServoTimer_ReadPeriodBuf, %function
 791              	ServoTimer_ReadPeriodBuf:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 40


 792              	.LFB20:
 804:.\Generated_Source\PSoC4/ServoTimer.c **** {
 793              		.loc 1 804 0
 794              		.cfi_startproc
 805:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_BUF_REG & ServoTimer_16BIT_MASK);
 795              		.loc 1 805 0
 796 0000 014B     		ldr	r3, .L56
 806:.\Generated_Source\PSoC4/ServoTimer.c **** }
 797              		.loc 1 806 0
 798              		@ sp needed for prologue
 805:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_PERIOD_BUF_REG & ServoTimer_16BIT_MASK);
 799              		.loc 1 805 0
 800 0002 1868     		ldr	r0, [r3]
 801 0004 80B2     		uxth	r0, r0
 806:.\Generated_Source\PSoC4/ServoTimer.c **** }
 802              		.loc 1 806 0
 803 0006 7047     		bx	lr
 804              	.L57:
 805              		.align	2
 806              	.L56:
 807 0008 58010540 		.word	1074069848
 808              		.cfi_endproc
 809              	.LFE20:
 810              		.size	ServoTimer_ReadPeriodBuf, .-ServoTimer_ReadPeriodBuf
 811              		.section	.text.ServoTimer_SetPeriodSwap,"ax",%progbits
 812              		.align	1
 813              		.global	ServoTimer_SetPeriodSwap
 814              		.code	16
 815              		.thumb_func
 816              		.type	ServoTimer_SetPeriodSwap, %function
 817              	ServoTimer_SetPeriodSwap:
 818              	.LFB21:
 830:.\Generated_Source\PSoC4/ServoTimer.c **** {
 819              		.loc 1 830 0
 820              		.cfi_startproc
 821              	.LVL53:
 822 0000 10B5     		push	{r4, lr}
 823              	.LCFI11:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 4, -8
 826              		.cfi_offset 14, -4
 830:.\Generated_Source\PSoC4/ServoTimer.c **** {
 827              		.loc 1 830 0
 828 0002 041C     		mov	r4, r0
 833:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 829              		.loc 1 833 0
 830 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 831              	.LVL54:
 835:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_PERIOD_MASK;
 832              		.loc 1 835 0
 833 0008 064B     		ldr	r3, .L59
 834 000a 0221     		mov	r1, #2
 835 000c 1A68     		ldr	r2, [r3]
 840:.\Generated_Source\PSoC4/ServoTimer.c **** }
 836              		.loc 1 840 0
 837              		@ sp needed for prologue
 835:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG &= (uint32)~ServoTimer_RELOAD_PERIOD_MASK;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 41


 838              		.loc 1 835 0
 839 000e 8A43     		bic	r2, r1
 840 0010 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_CONTROL_REG |= ((uint32)((swapEnable & ServoTimer_1BIT_MASK) <<
 841              		.loc 1 836 0
 842 0012 0121     		mov	r1, #1
 843 0014 1A68     		ldr	r2, [r3]
 844 0016 0C40     		and	r4, r1
 845              	.LVL55:
 846 0018 8C40     		lsl	r4, r4, r1
 847 001a 1443     		orr	r4, r2
 848 001c 1C60     		str	r4, [r3]
 839:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 849              		.loc 1 839 0
 850 001e FFF7FEFF 		bl	CyExitCriticalSection
 851              	.LVL56:
 840:.\Generated_Source\PSoC4/ServoTimer.c **** }
 852              		.loc 1 840 0
 853 0022 10BD     		pop	{r4, pc}
 854              	.L60:
 855              		.align	2
 856              	.L59:
 857 0024 40010540 		.word	1074069824
 858              		.cfi_endproc
 859              	.LFE21:
 860              		.size	ServoTimer_SetPeriodSwap, .-ServoTimer_SetPeriodSwap
 861              		.section	.text.ServoTimer_WriteCompare,"ax",%progbits
 862              		.align	1
 863              		.global	ServoTimer_WriteCompare
 864              		.code	16
 865              		.thumb_func
 866              		.type	ServoTimer_WriteCompare, %function
 867              	ServoTimer_WriteCompare:
 868              	.LFB22:
 859:.\Generated_Source\PSoC4/ServoTimer.c **** {
 869              		.loc 1 859 0
 870              		.cfi_startproc
 871              	.LVL57:
 880:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_COMP_CAP_REG = (compare & ServoTimer_16BIT_MASK);
 872              		.loc 1 880 0
 873 0000 014B     		ldr	r3, .L62
 874 0002 80B2     		uxth	r0, r0
 875              	.LVL58:
 876 0004 1860     		str	r0, [r3]
 882:.\Generated_Source\PSoC4/ServoTimer.c **** }
 877              		.loc 1 882 0
 878              		@ sp needed for prologue
 879 0006 7047     		bx	lr
 880              	.L63:
 881              		.align	2
 882              	.L62:
 883 0008 4C010540 		.word	1074069836
 884              		.cfi_endproc
 885              	.LFE22:
 886              		.size	ServoTimer_WriteCompare, .-ServoTimer_WriteCompare
 887              		.section	.text.ServoTimer_ReadCompare,"ax",%progbits
 888              		.align	1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 42


 889              		.global	ServoTimer_ReadCompare
 890              		.code	16
 891              		.thumb_func
 892              		.type	ServoTimer_ReadCompare, %function
 893              	ServoTimer_ReadCompare:
 894              	.LFB23:
 901:.\Generated_Source\PSoC4/ServoTimer.c **** {
 895              		.loc 1 901 0
 896              		.cfi_startproc
 924:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 897              		.loc 1 924 0
 898 0000 014B     		ldr	r3, .L65
 926:.\Generated_Source\PSoC4/ServoTimer.c **** }
 899              		.loc 1 926 0
 900              		@ sp needed for prologue
 924:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 901              		.loc 1 924 0
 902 0002 1868     		ldr	r0, [r3]
 903 0004 80B2     		uxth	r0, r0
 926:.\Generated_Source\PSoC4/ServoTimer.c **** }
 904              		.loc 1 926 0
 905 0006 7047     		bx	lr
 906              	.L66:
 907              		.align	2
 908              	.L65:
 909 0008 4C010540 		.word	1074069836
 910              		.cfi_endproc
 911              	.LFE23:
 912              		.size	ServoTimer_ReadCompare, .-ServoTimer_ReadCompare
 913              		.section	.text.ServoTimer_WriteCompareBuf,"ax",%progbits
 914              		.align	1
 915              		.global	ServoTimer_WriteCompareBuf
 916              		.code	16
 917              		.thumb_func
 918              		.type	ServoTimer_WriteCompareBuf, %function
 919              	ServoTimer_WriteCompareBuf:
 920              	.LFB24:
 945:.\Generated_Source\PSoC4/ServoTimer.c **** {
 921              		.loc 1 945 0
 922              		.cfi_startproc
 923              	.LVL59:
 966:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_COMP_CAP_BUF_REG = (compareBuf & ServoTimer_16BIT_MASK);
 924              		.loc 1 966 0
 925 0000 014B     		ldr	r3, .L68
 926 0002 80B2     		uxth	r0, r0
 927              	.LVL60:
 928 0004 1860     		str	r0, [r3]
 968:.\Generated_Source\PSoC4/ServoTimer.c **** }
 929              		.loc 1 968 0
 930              		@ sp needed for prologue
 931 0006 7047     		bx	lr
 932              	.L69:
 933              		.align	2
 934              	.L68:
 935 0008 50010540 		.word	1074069840
 936              		.cfi_endproc
 937              	.LFE24:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 43


 938              		.size	ServoTimer_WriteCompareBuf, .-ServoTimer_WriteCompareBuf
 939              		.section	.text.ServoTimer_ReadCompareBuf,"ax",%progbits
 940              		.align	1
 941              		.global	ServoTimer_ReadCompareBuf
 942              		.code	16
 943              		.thumb_func
 944              		.type	ServoTimer_ReadCompareBuf, %function
 945              	ServoTimer_ReadCompareBuf:
 946              	.LFB25:
 987:.\Generated_Source\PSoC4/ServoTimer.c **** {
 947              		.loc 1 987 0
 948              		.cfi_startproc
1010:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 949              		.loc 1 1010 0
 950 0000 014B     		ldr	r3, .L71
1012:.\Generated_Source\PSoC4/ServoTimer.c **** }
 951              		.loc 1 1012 0
 952              		@ sp needed for prologue
1010:.\Generated_Source\PSoC4/ServoTimer.c ****         return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 953              		.loc 1 1010 0
 954 0002 1868     		ldr	r0, [r3]
 955 0004 80B2     		uxth	r0, r0
1012:.\Generated_Source\PSoC4/ServoTimer.c **** }
 956              		.loc 1 1012 0
 957 0006 7047     		bx	lr
 958              	.L72:
 959              		.align	2
 960              	.L71:
 961 0008 50010540 		.word	1074069840
 962              		.cfi_endproc
 963              	.LFE25:
 964              		.size	ServoTimer_ReadCompareBuf, .-ServoTimer_ReadCompareBuf
 965              		.section	.text.ServoTimer_ReadCapture,"ax",%progbits
 966              		.align	1
 967              		.global	ServoTimer_ReadCapture
 968              		.code	16
 969              		.thumb_func
 970              		.type	ServoTimer_ReadCapture, %function
 971              	ServoTimer_ReadCapture:
 972              	.LFB26:
1031:.\Generated_Source\PSoC4/ServoTimer.c **** {
 973              		.loc 1 1031 0
 974              		.cfi_startproc
1032:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 975              		.loc 1 1032 0
 976 0000 014B     		ldr	r3, .L74
1033:.\Generated_Source\PSoC4/ServoTimer.c **** }
 977              		.loc 1 1033 0
 978              		@ sp needed for prologue
1032:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_REG & ServoTimer_16BIT_MASK);
 979              		.loc 1 1032 0
 980 0002 1868     		ldr	r0, [r3]
 981 0004 80B2     		uxth	r0, r0
1033:.\Generated_Source\PSoC4/ServoTimer.c **** }
 982              		.loc 1 1033 0
 983 0006 7047     		bx	lr
 984              	.L75:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 44


 985              		.align	2
 986              	.L74:
 987 0008 4C010540 		.word	1074069836
 988              		.cfi_endproc
 989              	.LFE26:
 990              		.size	ServoTimer_ReadCapture, .-ServoTimer_ReadCapture
 991              		.section	.text.ServoTimer_ReadCaptureBuf,"ax",%progbits
 992              		.align	1
 993              		.global	ServoTimer_ReadCaptureBuf
 994              		.code	16
 995              		.thumb_func
 996              		.type	ServoTimer_ReadCaptureBuf, %function
 997              	ServoTimer_ReadCaptureBuf:
 998              	.LFB27:
1052:.\Generated_Source\PSoC4/ServoTimer.c **** {
 999              		.loc 1 1052 0
 1000              		.cfi_startproc
1053:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 1001              		.loc 1 1053 0
 1002 0000 014B     		ldr	r3, .L77
1054:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1003              		.loc 1 1054 0
 1004              		@ sp needed for prologue
1053:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_COMP_CAP_BUF_REG & ServoTimer_16BIT_MASK);
 1005              		.loc 1 1053 0
 1006 0002 1868     		ldr	r0, [r3]
 1007 0004 80B2     		uxth	r0, r0
1054:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1008              		.loc 1 1054 0
 1009 0006 7047     		bx	lr
 1010              	.L78:
 1011              		.align	2
 1012              	.L77:
 1013 0008 50010540 		.word	1074069840
 1014              		.cfi_endproc
 1015              	.LFE27:
 1016              		.size	ServoTimer_ReadCaptureBuf, .-ServoTimer_ReadCaptureBuf
 1017              		.section	.text.ServoTimer_SetCaptureMode,"ax",%progbits
 1018              		.align	1
 1019              		.global	ServoTimer_SetCaptureMode
 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	ServoTimer_SetCaptureMode, %function
 1023              	ServoTimer_SetCaptureMode:
 1024              	.LFB28:
1079:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1025              		.loc 1 1079 0
 1026              		.cfi_startproc
 1027              	.LVL61:
 1028 0000 10B5     		push	{r4, lr}
 1029              	.LCFI12:
 1030              		.cfi_def_cfa_offset 8
 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
1079:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1033              		.loc 1 1079 0
 1034 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 45


1082:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1035              		.loc 1 1082 0
 1036 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1037              	.LVL62:
1084:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_CAPTURE_MASK;
 1038              		.loc 1 1084 0
 1039 0008 054B     		ldr	r3, .L80
 1040 000a 0321     		mov	r1, #3
 1041 000c 1A68     		ldr	r2, [r3]
1088:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1042              		.loc 1 1088 0
 1043              		@ sp needed for prologue
1084:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_CAPTURE_MASK;
 1044              		.loc 1 1084 0
 1045 000e 8A43     		bic	r2, r1
 1046 0010 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= triggerMode;
 1047              		.loc 1 1085 0
 1048 0012 1A68     		ldr	r2, [r3]
 1049 0014 1443     		orr	r4, r2
 1050              	.LVL63:
 1051 0016 1C60     		str	r4, [r3]
1087:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1052              		.loc 1 1087 0
 1053 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1054              	.LVL64:
1088:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1055              		.loc 1 1088 0
 1056 001c 10BD     		pop	{r4, pc}
 1057              	.L81:
 1058 001e C046     		.align	2
 1059              	.L80:
 1060 0020 64010540 		.word	1074069860
 1061              		.cfi_endproc
 1062              	.LFE28:
 1063              		.size	ServoTimer_SetCaptureMode, .-ServoTimer_SetCaptureMode
 1064              		.section	.text.ServoTimer_SetReloadMode,"ax",%progbits
 1065              		.align	1
 1066              		.global	ServoTimer_SetReloadMode
 1067              		.code	16
 1068              		.thumb_func
 1069              		.type	ServoTimer_SetReloadMode, %function
 1070              	ServoTimer_SetReloadMode:
 1071              	.LFB29:
1112:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1072              		.loc 1 1112 0
 1073              		.cfi_startproc
 1074              	.LVL65:
 1075 0000 10B5     		push	{r4, lr}
 1076              	.LCFI13:
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 4, -8
 1079              		.cfi_offset 14, -4
1112:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1080              		.loc 1 1112 0
 1081 0002 041C     		mov	r4, r0
1115:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 46


 1082              		.loc 1 1115 0
 1083 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1084              	.LVL66:
1117:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_RELOAD_MASK;
 1085              		.loc 1 1117 0
 1086 0008 054B     		ldr	r3, .L83
 1087 000a 3021     		mov	r1, #48
 1088 000c 1A68     		ldr	r2, [r3]
1118:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
 1089              		.loc 1 1118 0
 1090 000e 2401     		lsl	r4, r4, #4
 1091              	.LVL67:
1117:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_RELOAD_MASK;
 1092              		.loc 1 1117 0
 1093 0010 8A43     		bic	r2, r1
 1094 0012 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
 1095              		.loc 1 1118 0
 1096 0014 1A68     		ldr	r2, [r3]
1121:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1097              		.loc 1 1121 0
 1098              		@ sp needed for prologue
1118:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_RELOAD_SHIFT));
 1099              		.loc 1 1118 0
 1100 0016 1443     		orr	r4, r2
 1101 0018 1C60     		str	r4, [r3]
1120:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1102              		.loc 1 1120 0
 1103 001a FFF7FEFF 		bl	CyExitCriticalSection
 1104              	.LVL68:
1121:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1105              		.loc 1 1121 0
 1106 001e 10BD     		pop	{r4, pc}
 1107              	.L84:
 1108              		.align	2
 1109              	.L83:
 1110 0020 64010540 		.word	1074069860
 1111              		.cfi_endproc
 1112              	.LFE29:
 1113              		.size	ServoTimer_SetReloadMode, .-ServoTimer_SetReloadMode
 1114              		.section	.text.ServoTimer_SetStartMode,"ax",%progbits
 1115              		.align	1
 1116              		.global	ServoTimer_SetStartMode
 1117              		.code	16
 1118              		.thumb_func
 1119              		.type	ServoTimer_SetStartMode, %function
 1120              	ServoTimer_SetStartMode:
 1121              	.LFB30:
1145:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1122              		.loc 1 1145 0
 1123              		.cfi_startproc
 1124              	.LVL69:
 1125 0000 10B5     		push	{r4, lr}
 1126              	.LCFI14:
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 4, -8
 1129              		.cfi_offset 14, -4
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 47


1145:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1130              		.loc 1 1145 0
 1131 0002 041C     		mov	r4, r0
1148:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1132              		.loc 1 1148 0
 1133 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1134              	.LVL70:
1150:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_START_MASK;
 1135              		.loc 1 1150 0
 1136 0008 054B     		ldr	r3, .L86
 1137 000a 064A     		ldr	r2, .L86+4
 1138 000c 1968     		ldr	r1, [r3]
1151:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
 1139              		.loc 1 1151 0
 1140 000e 2402     		lsl	r4, r4, #8
 1141              	.LVL71:
1150:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_START_MASK;
 1142              		.loc 1 1150 0
 1143 0010 0A40     		and	r2, r1
 1144 0012 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
 1145              		.loc 1 1151 0
 1146 0014 1968     		ldr	r1, [r3]
1154:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1147              		.loc 1 1154 0
 1148              		@ sp needed for prologue
1151:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_START_SHIFT));
 1149              		.loc 1 1151 0
 1150 0016 0C43     		orr	r4, r1
 1151 0018 1C60     		str	r4, [r3]
1153:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1152              		.loc 1 1153 0
 1153 001a FFF7FEFF 		bl	CyExitCriticalSection
 1154              	.LVL72:
1154:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1155              		.loc 1 1154 0
 1156 001e 10BD     		pop	{r4, pc}
 1157              	.L87:
 1158              		.align	2
 1159              	.L86:
 1160 0020 64010540 		.word	1074069860
 1161 0024 FFFCFFFF 		.word	-769
 1162              		.cfi_endproc
 1163              	.LFE30:
 1164              		.size	ServoTimer_SetStartMode, .-ServoTimer_SetStartMode
 1165              		.section	.text.ServoTimer_SetStopMode,"ax",%progbits
 1166              		.align	1
 1167              		.global	ServoTimer_SetStopMode
 1168              		.code	16
 1169              		.thumb_func
 1170              		.type	ServoTimer_SetStopMode, %function
 1171              	ServoTimer_SetStopMode:
 1172              	.LFB31:
1177:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1173              		.loc 1 1177 0
 1174              		.cfi_startproc
 1175              	.LVL73:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 48


 1176 0000 10B5     		push	{r4, lr}
 1177              	.LCFI15:
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 4, -8
 1180              		.cfi_offset 14, -4
1177:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1181              		.loc 1 1177 0
 1182 0002 041C     		mov	r4, r0
1180:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1183              		.loc 1 1180 0
 1184 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1185              	.LVL74:
1182:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_STOP_MASK;
 1186              		.loc 1 1182 0
 1187 0008 054B     		ldr	r3, .L89
 1188 000a C021     		mov	r1, #192
 1189 000c 1A68     		ldr	r2, [r3]
1183:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
 1190              		.loc 1 1183 0
 1191 000e A401     		lsl	r4, r4, #6
 1192              	.LVL75:
1182:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_STOP_MASK;
 1193              		.loc 1 1182 0
 1194 0010 8A43     		bic	r2, r1
 1195 0012 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
 1196              		.loc 1 1183 0
 1197 0014 1A68     		ldr	r2, [r3]
1186:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1198              		.loc 1 1186 0
 1199              		@ sp needed for prologue
1183:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_STOP_SHIFT));
 1200              		.loc 1 1183 0
 1201 0016 1443     		orr	r4, r2
 1202 0018 1C60     		str	r4, [r3]
1185:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1203              		.loc 1 1185 0
 1204 001a FFF7FEFF 		bl	CyExitCriticalSection
 1205              	.LVL76:
1186:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1206              		.loc 1 1186 0
 1207 001e 10BD     		pop	{r4, pc}
 1208              	.L90:
 1209              		.align	2
 1210              	.L89:
 1211 0020 64010540 		.word	1074069860
 1212              		.cfi_endproc
 1213              	.LFE31:
 1214              		.size	ServoTimer_SetStopMode, .-ServoTimer_SetStopMode
 1215              		.section	.text.ServoTimer_SetCountMode,"ax",%progbits
 1216              		.align	1
 1217              		.global	ServoTimer_SetCountMode
 1218              		.code	16
 1219              		.thumb_func
 1220              		.type	ServoTimer_SetCountMode, %function
 1221              	ServoTimer_SetCountMode:
 1222              	.LFB32:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 49


1210:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1223              		.loc 1 1210 0
 1224              		.cfi_startproc
 1225              	.LVL77:
 1226 0000 10B5     		push	{r4, lr}
 1227              	.LCFI16:
 1228              		.cfi_def_cfa_offset 8
 1229              		.cfi_offset 4, -8
 1230              		.cfi_offset 14, -4
1210:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1231              		.loc 1 1210 0
 1232 0002 041C     		mov	r4, r0
1213:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1233              		.loc 1 1213 0
 1234 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1235              	.LVL78:
1215:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_COUNT_MASK;
 1236              		.loc 1 1215 0
 1237 0008 054B     		ldr	r3, .L92
 1238 000a 0C21     		mov	r1, #12
 1239 000c 1A68     		ldr	r2, [r3]
1216:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
 1240              		.loc 1 1216 0
 1241 000e A400     		lsl	r4, r4, #2
 1242              	.LVL79:
1215:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG &= (uint32)~ServoTimer_COUNT_MASK;
 1243              		.loc 1 1215 0
 1244 0010 8A43     		bic	r2, r1
 1245 0012 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
 1246              		.loc 1 1216 0
 1247 0014 1A68     		ldr	r2, [r3]
1219:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1248              		.loc 1 1219 0
 1249              		@ sp needed for prologue
1216:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << ServoTimer_COUNT_SHIFT));
 1250              		.loc 1 1216 0
 1251 0016 1443     		orr	r4, r2
 1252 0018 1C60     		str	r4, [r3]
1218:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1253              		.loc 1 1218 0
 1254 001a FFF7FEFF 		bl	CyExitCriticalSection
 1255              	.LVL80:
1219:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1256              		.loc 1 1219 0
 1257 001e 10BD     		pop	{r4, pc}
 1258              	.L93:
 1259              		.align	2
 1260              	.L92:
 1261 0020 64010540 		.word	1074069860
 1262              		.cfi_endproc
 1263              	.LFE32:
 1264              		.size	ServoTimer_SetCountMode, .-ServoTimer_SetCountMode
 1265              		.section	.text.ServoTimer_TriggerCommand,"ax",%progbits
 1266              		.align	1
 1267              		.global	ServoTimer_TriggerCommand
 1268              		.code	16
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 50


 1269              		.thumb_func
 1270              		.type	ServoTimer_TriggerCommand, %function
 1271              	ServoTimer_TriggerCommand:
 1272              	.LFB33:
1250:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1273              		.loc 1 1250 0
 1274              		.cfi_startproc
 1275              	.LVL81:
 1276 0000 38B5     		push	{r3, r4, r5, lr}
 1277              	.LCFI17:
 1278              		.cfi_def_cfa_offset 16
 1279              		.cfi_offset 3, -16
 1280              		.cfi_offset 4, -12
 1281              		.cfi_offset 5, -8
 1282              		.cfi_offset 14, -4
1250:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1283              		.loc 1 1250 0
 1284 0002 0C1C     		mov	r4, r1
 1285 0004 051C     		mov	r5, r0
1253:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1286              		.loc 1 1253 0
 1287 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1288              	.LVL82:
1255:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_COMMAND_REG = ((uint32)(mask << command));
 1289              		.loc 1 1255 0
 1290 000a 034B     		ldr	r3, .L95
 1291 000c A540     		lsl	r5, r5, r4
 1292              	.LVL83:
 1293 000e 1D60     		str	r5, [r3]
1257:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1294              		.loc 1 1257 0
 1295 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1296              	.LVL84:
1258:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1297              		.loc 1 1258 0
 1298              		@ sp needed for prologue
 1299              	.LVL85:
 1300 0014 38BD     		pop	{r3, r4, r5, pc}
 1301              	.L96:
 1302 0016 C046     		.align	2
 1303              	.L95:
 1304 0018 08000540 		.word	1074069512
 1305              		.cfi_endproc
 1306              	.LFE33:
 1307              		.size	ServoTimer_TriggerCommand, .-ServoTimer_TriggerCommand
 1308              		.section	.text.ServoTimer_Enable,"ax",%progbits
 1309              		.align	1
 1310              		.global	ServoTimer_Enable
 1311              		.code	16
 1312              		.thumb_func
 1313              		.type	ServoTimer_Enable, %function
 1314              	ServoTimer_Enable:
 1315              	.LFB1:
 201:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1316              		.loc 1 201 0
 1317              		.cfi_startproc
 1318 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 51


 1319              	.LCFI18:
 1320              		.cfi_def_cfa_offset 8
 1321              		.cfi_offset 4, -8
 1322              		.cfi_offset 14, -4
 204:.\Generated_Source\PSoC4/ServoTimer.c ****     enableInterrupts = CyEnterCriticalSection();
 1323              		.loc 1 204 0
 1324 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1325              	.LVL86:
 205:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG |= ServoTimer_MASK;
 1326              		.loc 1 205 0
 1327 0006 064B     		ldr	r3, .L98
 1328 0008 0224     		mov	r4, #2
 1329 000a 1A68     		ldr	r2, [r3]
 220:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1330              		.loc 1 220 0
 1331              		@ sp needed for prologue
 205:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_BLOCK_CONTROL_REG |= ServoTimer_MASK;
 1332              		.loc 1 205 0
 1333 000c 2243     		orr	r2, r4
 1334 000e 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/ServoTimer.c ****     CyExitCriticalSection(enableInterrupts);
 1335              		.loc 1 206 0
 1336 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1337              	.LVL87:
 217:.\Generated_Source\PSoC4/ServoTimer.c ****             ServoTimer_TriggerCommand(ServoTimer_MASK, ServoTimer_CMD_START);
 1338              		.loc 1 217 0
 1339 0014 201C     		mov	r0, r4
 1340 0016 1821     		mov	r1, #24
 1341 0018 FFF7FEFF 		bl	ServoTimer_TriggerCommand
 1342              	.LVL88:
 220:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1343              		.loc 1 220 0
 1344 001c 10BD     		pop	{r4, pc}
 1345              	.L99:
 1346 001e C046     		.align	2
 1347              	.L98:
 1348 0020 00000540 		.word	1074069504
 1349              		.cfi_endproc
 1350              	.LFE1:
 1351              		.size	ServoTimer_Enable, .-ServoTimer_Enable
 1352              		.section	.text.ServoTimer_Start,"ax",%progbits
 1353              		.align	1
 1354              		.global	ServoTimer_Start
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	ServoTimer_Start, %function
 1358              	ServoTimer_Start:
 1359              	.LFB2:
 248:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1360              		.loc 1 248 0
 1361              		.cfi_startproc
 1362 0000 10B5     		push	{r4, lr}
 1363              	.LCFI19:
 1364              		.cfi_def_cfa_offset 8
 1365              		.cfi_offset 4, -8
 1366              		.cfi_offset 14, -4
 249:.\Generated_Source\PSoC4/ServoTimer.c ****     if (0u == ServoTimer_initVar)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 52


 1367              		.loc 1 249 0
 1368 0002 054C     		ldr	r4, .L103
 1369 0004 2378     		ldrb	r3, [r4]
 1370 0006 002B     		cmp	r3, #0
 1371 0008 03D1     		bne	.L101
 251:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_Init();
 1372              		.loc 1 251 0
 1373 000a FFF7FEFF 		bl	ServoTimer_Init
 1374              	.LVL89:
 252:.\Generated_Source\PSoC4/ServoTimer.c ****         ServoTimer_initVar = 1u;
 1375              		.loc 1 252 0
 1376 000e 0120     		mov	r0, #1
 1377 0010 2070     		strb	r0, [r4]
 1378              	.L101:
 255:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_Enable();
 1379              		.loc 1 255 0
 1380 0012 FFF7FEFF 		bl	ServoTimer_Enable
 1381              	.LVL90:
 256:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1382              		.loc 1 256 0
 1383              		@ sp needed for prologue
 1384 0016 10BD     		pop	{r4, pc}
 1385              	.L104:
 1386              		.align	2
 1387              	.L103:
 1388 0018 00000000 		.word	.LANCHOR0
 1389              		.cfi_endproc
 1390              	.LFE2:
 1391              		.size	ServoTimer_Start, .-ServoTimer_Start
 1392              		.section	.text.ServoTimer_ReadStatus,"ax",%progbits
 1393              		.align	1
 1394              		.global	ServoTimer_ReadStatus
 1395              		.code	16
 1396              		.thumb_func
 1397              		.type	ServoTimer_ReadStatus, %function
 1398              	ServoTimer_ReadStatus:
 1399              	.LFB34:
1279:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1400              		.loc 1 1279 0
 1401              		.cfi_startproc
1280:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
 1402              		.loc 1 1280 0
 1403 0000 034B     		ldr	r3, .L106
1281:.\Generated_Source\PSoC4/ServoTimer.c ****             (ServoTimer_STATUS_REG & ServoTimer_STATUS_DOWN));
 1404              		.loc 1 1281 0
 1405 0002 0121     		mov	r1, #1
1280:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
 1406              		.loc 1 1280 0
 1407 0004 1A68     		ldr	r2, [r3]
1281:.\Generated_Source\PSoC4/ServoTimer.c ****             (ServoTimer_STATUS_REG & ServoTimer_STATUS_DOWN));
 1408              		.loc 1 1281 0
 1409 0006 1868     		ldr	r0, [r3]
1280:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
 1410              		.loc 1 1280 0
 1411 0008 930F     		lsr	r3, r2, #30
1281:.\Generated_Source\PSoC4/ServoTimer.c ****             (ServoTimer_STATUS_REG & ServoTimer_STATUS_DOWN));
 1412              		.loc 1 1281 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 53


 1413 000a 0840     		and	r0, r1
1280:.\Generated_Source\PSoC4/ServoTimer.c ****     return ((ServoTimer_STATUS_REG >> ServoTimer_RUNNING_STATUS_SHIFT) |
 1414              		.loc 1 1280 0
 1415 000c 1843     		orr	r0, r3
1282:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1416              		.loc 1 1282 0
 1417              		@ sp needed for prologue
 1418 000e 7047     		bx	lr
 1419              	.L107:
 1420              		.align	2
 1421              	.L106:
 1422 0010 44010540 		.word	1074069828
 1423              		.cfi_endproc
 1424              	.LFE34:
 1425              		.size	ServoTimer_ReadStatus, .-ServoTimer_ReadStatus
 1426              		.section	.text.ServoTimer_SetInterruptMode,"ax",%progbits
 1427              		.align	1
 1428              		.global	ServoTimer_SetInterruptMode
 1429              		.code	16
 1430              		.thumb_func
 1431              		.type	ServoTimer_SetInterruptMode, %function
 1432              	ServoTimer_SetInterruptMode:
 1433              	.LFB35:
1304:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1434              		.loc 1 1304 0
 1435              		.cfi_startproc
 1436              	.LVL91:
 1437              		.loc 1 1305 0
 1438 0000 014B     		ldr	r3, .L109
1306:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1439              		.loc 1 1306 0
 1440              		@ sp needed for prologue
1305:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_MASK_REG =  interruptMask;
 1441              		.loc 1 1305 0
 1442 0002 1860     		str	r0, [r3]
 1443              		.loc 1 1306 0
 1444 0004 7047     		bx	lr
 1445              	.L110:
 1446 0006 C046     		.align	2
 1447              	.L109:
 1448 0008 78010540 		.word	1074069880
 1449              		.cfi_endproc
 1450              	.LFE35:
 1451              		.size	ServoTimer_SetInterruptMode, .-ServoTimer_SetInterruptMode
 1452              		.section	.text.ServoTimer_GetInterruptSourceMasked,"ax",%progbits
 1453              		.align	1
 1454              		.global	ServoTimer_GetInterruptSourceMasked
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	ServoTimer_GetInterruptSourceMasked, %function
 1458              	ServoTimer_GetInterruptSourceMasked:
 1459              	.LFB36:
1307:.\Generated_Source\PSoC4/ServoTimer.c **** 
1308:.\Generated_Source\PSoC4/ServoTimer.c **** 
1309:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 54


1312:.\Generated_Source\PSoC4/ServoTimer.c **** *
1313:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1314:.\Generated_Source\PSoC4/ServoTimer.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/ServoTimer.c **** *
1316:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1317:.\Generated_Source\PSoC4/ServoTimer.c **** *   None
1318:.\Generated_Source\PSoC4/ServoTimer.c **** *
1319:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1320:.\Generated_Source\PSoC4/ServoTimer.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1322:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/ServoTimer.c **** *
1325:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1460              		.loc 1 1327 0
 1461              		.cfi_startproc
1328:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_MASKED_REG);
 1462              		.loc 1 1328 0
 1463 0000 014B     		ldr	r3, .L112
1329:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1464              		.loc 1 1329 0
 1465              		@ sp needed for prologue
1328:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_MASKED_REG);
 1466              		.loc 1 1328 0
 1467 0002 1868     		ldr	r0, [r3]
 1468              		.loc 1 1329 0
 1469 0004 7047     		bx	lr
 1470              	.L113:
 1471 0006 C046     		.align	2
 1472              	.L112:
 1473 0008 7C010540 		.word	1074069884
 1474              		.cfi_endproc
 1475              	.LFE36:
 1476              		.size	ServoTimer_GetInterruptSourceMasked, .-ServoTimer_GetInterruptSourceMasked
 1477              		.section	.text.ServoTimer_GetInterruptSource,"ax",%progbits
 1478              		.align	1
 1479              		.global	ServoTimer_GetInterruptSource
 1480              		.code	16
 1481              		.thumb_func
 1482              		.type	ServoTimer_GetInterruptSource, %function
 1483              	ServoTimer_GetInterruptSource:
 1484              	.LFB37:
1330:.\Generated_Source\PSoC4/ServoTimer.c **** 
1331:.\Generated_Source\PSoC4/ServoTimer.c **** 
1332:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_GetInterruptSource
1334:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/ServoTimer.c **** *
1336:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1337:.\Generated_Source\PSoC4/ServoTimer.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/ServoTimer.c **** *
1339:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1340:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1341:.\Generated_Source\PSoC4/ServoTimer.c **** *
1342:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 55


1343:.\Generated_Source\PSoC4/ServoTimer.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1345:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/ServoTimer.c **** *
1348:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/ServoTimer.c **** uint32 ServoTimer_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1485              		.loc 1 1350 0
 1486              		.cfi_startproc
1351:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_REQ_REG);
 1487              		.loc 1 1351 0
 1488 0000 014B     		ldr	r3, .L115
1352:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1489              		.loc 1 1352 0
 1490              		@ sp needed for prologue
1351:.\Generated_Source\PSoC4/ServoTimer.c ****     return (ServoTimer_INTERRUPT_REQ_REG);
 1491              		.loc 1 1351 0
 1492 0002 1868     		ldr	r0, [r3]
 1493              		.loc 1 1352 0
 1494 0004 7047     		bx	lr
 1495              	.L116:
 1496 0006 C046     		.align	2
 1497              	.L115:
 1498 0008 70010540 		.word	1074069872
 1499              		.cfi_endproc
 1500              	.LFE37:
 1501              		.size	ServoTimer_GetInterruptSource, .-ServoTimer_GetInterruptSource
 1502              		.section	.text.ServoTimer_ClearInterrupt,"ax",%progbits
 1503              		.align	1
 1504              		.global	ServoTimer_ClearInterrupt
 1505              		.code	16
 1506              		.thumb_func
 1507              		.type	ServoTimer_ClearInterrupt, %function
 1508              	ServoTimer_ClearInterrupt:
 1509              	.LFB38:
1353:.\Generated_Source\PSoC4/ServoTimer.c **** 
1354:.\Generated_Source\PSoC4/ServoTimer.c **** 
1355:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_ClearInterrupt
1357:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/ServoTimer.c **** *
1359:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1360:.\Generated_Source\PSoC4/ServoTimer.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/ServoTimer.c **** *
1362:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1363:.\Generated_Source\PSoC4/ServoTimer.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1365:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/ServoTimer.c **** *
1368:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1369:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1370:.\Generated_Source\PSoC4/ServoTimer.c **** *
1371:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/ServoTimer.c **** {
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 56


 1510              		.loc 1 1373 0
 1511              		.cfi_startproc
 1512              	.LVL92:
1374:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_REQ_REG = interruptMask;
 1513              		.loc 1 1374 0
 1514 0000 014B     		ldr	r3, .L118
1375:.\Generated_Source\PSoC4/ServoTimer.c **** }
 1515              		.loc 1 1375 0
 1516              		@ sp needed for prologue
1374:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_REQ_REG = interruptMask;
 1517              		.loc 1 1374 0
 1518 0002 1860     		str	r0, [r3]
 1519              		.loc 1 1375 0
 1520 0004 7047     		bx	lr
 1521              	.L119:
 1522 0006 C046     		.align	2
 1523              	.L118:
 1524 0008 70010540 		.word	1074069872
 1525              		.cfi_endproc
 1526              	.LFE38:
 1527              		.size	ServoTimer_ClearInterrupt, .-ServoTimer_ClearInterrupt
 1528              		.section	.text.ServoTimer_SetInterrupt,"ax",%progbits
 1529              		.align	1
 1530              		.global	ServoTimer_SetInterrupt
 1531              		.code	16
 1532              		.thumb_func
 1533              		.type	ServoTimer_SetInterrupt, %function
 1534              	ServoTimer_SetInterrupt:
 1535              	.LFB39:
1376:.\Generated_Source\PSoC4/ServoTimer.c **** 
1377:.\Generated_Source\PSoC4/ServoTimer.c **** 
1378:.\Generated_Source\PSoC4/ServoTimer.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/ServoTimer.c **** * Function Name: ServoTimer_SetInterrupt
1380:.\Generated_Source\PSoC4/ServoTimer.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/ServoTimer.c **** *
1382:.\Generated_Source\PSoC4/ServoTimer.c **** * Summary:
1383:.\Generated_Source\PSoC4/ServoTimer.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/ServoTimer.c **** *
1385:.\Generated_Source\PSoC4/ServoTimer.c **** * Parameters:
1386:.\Generated_Source\PSoC4/ServoTimer.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/ServoTimer.c **** *   Values:
1388:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/ServoTimer.c **** *     - ServoTimer_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/ServoTimer.c **** *
1391:.\Generated_Source\PSoC4/ServoTimer.c **** * Return:
1392:.\Generated_Source\PSoC4/ServoTimer.c **** *  None
1393:.\Generated_Source\PSoC4/ServoTimer.c **** *
1394:.\Generated_Source\PSoC4/ServoTimer.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/ServoTimer.c **** void ServoTimer_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/ServoTimer.c **** {
 1536              		.loc 1 1396 0
 1537              		.cfi_startproc
 1538              	.LVL93:
1397:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_SET_REG = interruptMask;
 1539              		.loc 1 1397 0
 1540 0000 014B     		ldr	r3, .L121
1398:.\Generated_Source\PSoC4/ServoTimer.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 57


 1541              		.loc 1 1398 0
 1542              		@ sp needed for prologue
1397:.\Generated_Source\PSoC4/ServoTimer.c ****     ServoTimer_INTERRUPT_SET_REG = interruptMask;
 1543              		.loc 1 1397 0
 1544 0002 1860     		str	r0, [r3]
 1545              		.loc 1 1398 0
 1546 0004 7047     		bx	lr
 1547              	.L122:
 1548 0006 C046     		.align	2
 1549              	.L121:
 1550 0008 74010540 		.word	1074069876
 1551              		.cfi_endproc
 1552              	.LFE39:
 1553              		.size	ServoTimer_SetInterrupt, .-ServoTimer_SetInterrupt
 1554              		.global	ServoTimer_initVar
 1555              		.bss
 1556              		.set	.LANCHOR0,. + 0
 1557              		.type	ServoTimer_initVar, %object
 1558              		.size	ServoTimer_initVar, 1
 1559              	ServoTimer_initVar:
 1560 0000 00       		.space	1
 1561              		.text
 1562              	.Letext0:
 1563              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1564              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1565              		.section	.debug_info,"",%progbits
 1566              	.Ldebug_info0:
 1567 0000 EF090000 		.4byte	0x9ef
 1568 0004 0200     		.2byte	0x2
 1569 0006 00000000 		.4byte	.Ldebug_abbrev0
 1570 000a 04       		.byte	0x4
 1571 000b 01       		.uleb128 0x1
 1572 000c 39040000 		.4byte	.LASF76
 1573 0010 01       		.byte	0x1
 1574 0011 1E000000 		.4byte	.LASF77
 1575 0015 19010000 		.4byte	.LASF78
 1576 0019 50000000 		.4byte	.Ldebug_ranges0+0x50
 1577 001d 00000000 		.4byte	0
 1578 0021 00000000 		.4byte	0
 1579 0025 00000000 		.4byte	.Ldebug_line0
 1580 0029 02       		.uleb128 0x2
 1581 002a 01       		.byte	0x1
 1582 002b 06       		.byte	0x6
 1583 002c 0D010000 		.4byte	.LASF0
 1584 0030 02       		.uleb128 0x2
 1585 0031 01       		.byte	0x1
 1586 0032 08       		.byte	0x8
 1587 0033 82040000 		.4byte	.LASF1
 1588 0037 02       		.uleb128 0x2
 1589 0038 02       		.byte	0x2
 1590 0039 05       		.byte	0x5
 1591 003a A1040000 		.4byte	.LASF2
 1592 003e 02       		.uleb128 0x2
 1593 003f 02       		.byte	0x2
 1594 0040 07       		.byte	0x7
 1595 0041 12030000 		.4byte	.LASF3
 1596 0045 02       		.uleb128 0x2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 58


 1597 0046 04       		.byte	0x4
 1598 0047 05       		.byte	0x5
 1599 0048 83010000 		.4byte	.LASF4
 1600 004c 02       		.uleb128 0x2
 1601 004d 04       		.byte	0x4
 1602 004e 07       		.byte	0x7
 1603 004f 95020000 		.4byte	.LASF5
 1604 0053 02       		.uleb128 0x2
 1605 0054 08       		.byte	0x8
 1606 0055 05       		.byte	0x5
 1607 0056 FF000000 		.4byte	.LASF6
 1608 005a 02       		.uleb128 0x2
 1609 005b 08       		.byte	0x8
 1610 005c 07       		.byte	0x7
 1611 005d B7000000 		.4byte	.LASF7
 1612 0061 03       		.uleb128 0x3
 1613 0062 04       		.byte	0x4
 1614 0063 05       		.byte	0x5
 1615 0064 696E7400 		.ascii	"int\000"
 1616 0068 02       		.uleb128 0x2
 1617 0069 04       		.byte	0x4
 1618 006a 07       		.byte	0x7
 1619 006b 36020000 		.4byte	.LASF8
 1620 006f 04       		.uleb128 0x4
 1621 0070 A3010000 		.4byte	.LASF9
 1622 0074 02       		.byte	0x2
 1623 0075 5B       		.byte	0x5b
 1624 0076 30000000 		.4byte	0x30
 1625 007a 04       		.uleb128 0x4
 1626 007b C5010000 		.4byte	.LASF10
 1627 007f 02       		.byte	0x2
 1628 0080 5D       		.byte	0x5d
 1629 0081 4C000000 		.4byte	0x4c
 1630 0085 02       		.uleb128 0x2
 1631 0086 04       		.byte	0x4
 1632 0087 04       		.byte	0x4
 1633 0088 29040000 		.4byte	.LASF11
 1634 008c 02       		.uleb128 0x2
 1635 008d 08       		.byte	0x8
 1636 008e 04       		.byte	0x4
 1637 008f BE010000 		.4byte	.LASF12
 1638 0093 02       		.uleb128 0x2
 1639 0094 01       		.byte	0x1
 1640 0095 08       		.byte	0x8
 1641 0096 1C050000 		.4byte	.LASF13
 1642 009a 04       		.uleb128 0x4
 1643 009b 78030000 		.4byte	.LASF14
 1644 009f 02       		.byte	0x2
 1645 00a0 F2       		.byte	0xf2
 1646 00a1 A5000000 		.4byte	0xa5
 1647 00a5 05       		.uleb128 0x5
 1648 00a6 7A000000 		.4byte	0x7a
 1649 00aa 02       		.uleb128 0x2
 1650 00ab 04       		.byte	0x4
 1651 00ac 07       		.byte	0x7
 1652 00ad 98030000 		.4byte	.LASF15
 1653 00b1 06       		.uleb128 0x6
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 59


 1654 00b2 01       		.byte	0x1
 1655 00b3 00050000 		.4byte	.LASF16
 1656 00b7 01       		.byte	0x1
 1657 00b8 1705     		.2byte	0x517
 1658 00ba 01       		.byte	0x1
 1659 00bb 01       		.byte	0x1
 1660 00bc CD000000 		.4byte	0xcd
 1661 00c0 07       		.uleb128 0x7
 1662 00c1 DB040000 		.4byte	.LASF18
 1663 00c5 01       		.byte	0x1
 1664 00c6 1705     		.2byte	0x517
 1665 00c8 7A000000 		.4byte	0x7a
 1666 00cc 00       		.byte	0
 1667 00cd 06       		.uleb128 0x6
 1668 00ce 01       		.byte	0x1
 1669 00cf 86000000 		.4byte	.LASF17
 1670 00d3 01       		.byte	0x1
 1671 00d4 C602     		.2byte	0x2c6
 1672 00d6 01       		.byte	0x1
 1673 00d7 01       		.byte	0x1
 1674 00d8 E9000000 		.4byte	0xe9
 1675 00dc 07       		.uleb128 0x7
 1676 00dd B0000000 		.4byte	.LASF19
 1677 00e1 01       		.byte	0x1
 1678 00e2 C602     		.2byte	0x2c6
 1679 00e4 7A000000 		.4byte	0x7a
 1680 00e8 00       		.byte	0
 1681 00e9 06       		.uleb128 0x6
 1682 00ea 01       		.byte	0x1
 1683 00eb 6B010000 		.4byte	.LASF20
 1684 00ef 01       		.byte	0x1
 1685 00f0 5A03     		.2byte	0x35a
 1686 00f2 01       		.byte	0x1
 1687 00f3 01       		.byte	0x1
 1688 00f4 05010000 		.4byte	0x105
 1689 00f8 07       		.uleb128 0x7
 1690 00f9 0A040000 		.4byte	.LASF21
 1691 00fd 01       		.byte	0x1
 1692 00fe 5A03     		.2byte	0x35a
 1693 0100 7A000000 		.4byte	0x7a
 1694 0104 00       		.byte	0
 1695 0105 08       		.uleb128 0x8
 1696 0106 01       		.byte	0x1
 1697 0107 A1030000 		.4byte	.LASF22
 1698 010b 01       		.byte	0x1
 1699 010c 27       		.byte	0x27
 1700 010d 01       		.byte	0x1
 1701 010e 00000000 		.4byte	.LFB0
 1702 0112 38000000 		.4byte	.LFE0
 1703 0116 02       		.byte	0x2
 1704 0117 7D       		.byte	0x7d
 1705 0118 00       		.sleb128 0
 1706 0119 01       		.byte	0x1
 1707 011a 6B010000 		.4byte	0x16b
 1708 011e 09       		.uleb128 0x9
 1709 011f B1000000 		.4byte	0xb1
 1710 0123 08000000 		.4byte	.LBB8
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 60


 1711 0127 00000000 		.4byte	.Ldebug_ranges0+0
 1712 012b 01       		.byte	0x1
 1713 012c 7B       		.byte	0x7b
 1714 012d 38010000 		.4byte	0x138
 1715 0131 0A       		.uleb128 0xa
 1716 0132 C0000000 		.4byte	0xc0
 1717 0136 01       		.byte	0x1
 1718 0137 00       		.byte	0
 1719 0138 09       		.uleb128 0x9
 1720 0139 CD000000 		.4byte	0xcd
 1721 013d 12000000 		.4byte	.LBB14
 1722 0141 20000000 		.4byte	.Ldebug_ranges0+0x20
 1723 0145 01       		.byte	0x1
 1724 0146 80       		.byte	0x80
 1725 0147 53010000 		.4byte	0x153
 1726 014b 0B       		.uleb128 0xb
 1727 014c DC000000 		.4byte	0xdc
 1728 0150 FFFF     		.2byte	0xffff
 1729 0152 00       		.byte	0
 1730 0153 0C       		.uleb128 0xc
 1731 0154 E9000000 		.4byte	0xe9
 1732 0158 16000000 		.4byte	.LBB17
 1733 015c 38000000 		.4byte	.Ldebug_ranges0+0x38
 1734 0160 01       		.byte	0x1
 1735 0161 87       		.byte	0x87
 1736 0162 0B       		.uleb128 0xb
 1737 0163 F8000000 		.4byte	0xf8
 1738 0167 FFFF     		.2byte	0xffff
 1739 0169 00       		.byte	0
 1740 016a 00       		.byte	0
 1741 016b 0D       		.uleb128 0xd
 1742 016c 01       		.byte	0x1
 1743 016d E8000000 		.4byte	.LASF23
 1744 0171 01       		.byte	0x1
 1745 0172 1101     		.2byte	0x111
 1746 0174 01       		.byte	0x1
 1747 0175 00000000 		.4byte	.LFB3
 1748 0179 1C000000 		.4byte	.LFE3
 1749 017d 00000000 		.4byte	.LLST0
 1750 0181 01       		.byte	0x1
 1751 0182 A9010000 		.4byte	0x1a9
 1752 0186 0E       		.uleb128 0xe
 1753 0187 88050000 		.4byte	.LASF25
 1754 018b 01       		.byte	0x1
 1755 018c 1301     		.2byte	0x113
 1756 018e 6F000000 		.4byte	0x6f
 1757 0192 20000000 		.4byte	.LLST1
 1758 0196 0F       		.uleb128 0xf
 1759 0197 06000000 		.4byte	.LVL3
 1760 019b D4090000 		.4byte	0x9d4
 1761 019f 0F       		.uleb128 0xf
 1762 01a0 14000000 		.4byte	.LVL4
 1763 01a4 E2090000 		.4byte	0x9e2
 1764 01a8 00       		.byte	0
 1765 01a9 0D       		.uleb128 0xd
 1766 01aa 01       		.byte	0x1
 1767 01ab 5A000000 		.4byte	.LASF24
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 61


 1768 01af 01       		.byte	0x1
 1769 01b0 3601     		.2byte	0x136
 1770 01b2 01       		.byte	0x1
 1771 01b3 00000000 		.4byte	.LFB4
 1772 01b7 28000000 		.4byte	.LFE4
 1773 01bb 33000000 		.4byte	.LLST2
 1774 01bf 01       		.byte	0x1
 1775 01c0 F7010000 		.4byte	0x1f7
 1776 01c4 10       		.uleb128 0x10
 1777 01c5 21050000 		.4byte	.LASF27
 1778 01c9 01       		.byte	0x1
 1779 01ca 3601     		.2byte	0x136
 1780 01cc 7A000000 		.4byte	0x7a
 1781 01d0 53000000 		.4byte	.LLST3
 1782 01d4 0E       		.uleb128 0xe
 1783 01d5 88050000 		.4byte	.LASF25
 1784 01d9 01       		.byte	0x1
 1785 01da 3801     		.2byte	0x138
 1786 01dc 6F000000 		.4byte	0x6f
 1787 01e0 7F000000 		.4byte	.LLST4
 1788 01e4 0F       		.uleb128 0xf
 1789 01e5 08000000 		.4byte	.LVL6
 1790 01e9 D4090000 		.4byte	0x9d4
 1791 01ed 0F       		.uleb128 0xf
 1792 01ee 1C000000 		.4byte	.LVL8
 1793 01f2 E2090000 		.4byte	0x9e2
 1794 01f6 00       		.byte	0
 1795 01f7 0D       		.uleb128 0xd
 1796 01f8 01       		.byte	0x1
 1797 01f9 A9010000 		.4byte	.LASF26
 1798 01fd 01       		.byte	0x1
 1799 01fe 5701     		.2byte	0x157
 1800 0200 01       		.byte	0x1
 1801 0201 00000000 		.4byte	.LFB5
 1802 0205 28000000 		.4byte	.LFE5
 1803 0209 92000000 		.4byte	.LLST5
 1804 020d 01       		.byte	0x1
 1805 020e 45020000 		.4byte	0x245
 1806 0212 10       		.uleb128 0x10
 1807 0213 F8000000 		.4byte	.LASF28
 1808 0217 01       		.byte	0x1
 1809 0218 5701     		.2byte	0x157
 1810 021a 7A000000 		.4byte	0x7a
 1811 021e B2000000 		.4byte	.LLST6
 1812 0222 0E       		.uleb128 0xe
 1813 0223 88050000 		.4byte	.LASF25
 1814 0227 01       		.byte	0x1
 1815 0228 5901     		.2byte	0x159
 1816 022a 6F000000 		.4byte	0x6f
 1817 022e DE000000 		.4byte	.LLST7
 1818 0232 0F       		.uleb128 0xf
 1819 0233 08000000 		.4byte	.LVL10
 1820 0237 D4090000 		.4byte	0x9d4
 1821 023b 0F       		.uleb128 0xf
 1822 023c 1C000000 		.4byte	.LVL12
 1823 0240 E2090000 		.4byte	0x9e2
 1824 0244 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 62


 1825 0245 0D       		.uleb128 0xd
 1826 0246 01       		.byte	0x1
 1827 0247 F2030000 		.4byte	.LASF29
 1828 024b 01       		.byte	0x1
 1829 024c 7C01     		.2byte	0x17c
 1830 024e 01       		.byte	0x1
 1831 024f 00000000 		.4byte	.LFB6
 1832 0253 28000000 		.4byte	.LFE6
 1833 0257 F1000000 		.4byte	.LLST8
 1834 025b 01       		.byte	0x1
 1835 025c 93020000 		.4byte	0x293
 1836 0260 10       		.uleb128 0x10
 1837 0261 2F040000 		.4byte	.LASF30
 1838 0265 01       		.byte	0x1
 1839 0266 7C01     		.2byte	0x17c
 1840 0268 7A000000 		.4byte	0x7a
 1841 026c 11010000 		.4byte	.LLST9
 1842 0270 0E       		.uleb128 0xe
 1843 0271 88050000 		.4byte	.LASF25
 1844 0275 01       		.byte	0x1
 1845 0276 7E01     		.2byte	0x17e
 1846 0278 6F000000 		.4byte	0x6f
 1847 027c 3D010000 		.4byte	.LLST10
 1848 0280 0F       		.uleb128 0xf
 1849 0281 08000000 		.4byte	.LVL14
 1850 0285 D4090000 		.4byte	0x9d4
 1851 0289 0F       		.uleb128 0xf
 1852 028a 1C000000 		.4byte	.LVL16
 1853 028e E2090000 		.4byte	0x9e2
 1854 0292 00       		.byte	0
 1855 0293 0D       		.uleb128 0xd
 1856 0294 01       		.byte	0x1
 1857 0295 CC010000 		.4byte	.LASF31
 1858 0299 01       		.byte	0x1
 1859 029a 9C01     		.2byte	0x19c
 1860 029c 01       		.byte	0x1
 1861 029d 00000000 		.4byte	.LFB7
 1862 02a1 2C000000 		.4byte	.LFE7
 1863 02a5 50010000 		.4byte	.LLST11
 1864 02a9 01       		.byte	0x1
 1865 02aa E1020000 		.4byte	0x2e1
 1866 02ae 10       		.uleb128 0x10
 1867 02af 3F030000 		.4byte	.LASF32
 1868 02b3 01       		.byte	0x1
 1869 02b4 9C01     		.2byte	0x19c
 1870 02b6 7A000000 		.4byte	0x7a
 1871 02ba 70010000 		.4byte	.LLST12
 1872 02be 0E       		.uleb128 0xe
 1873 02bf 88050000 		.4byte	.LASF25
 1874 02c3 01       		.byte	0x1
 1875 02c4 9E01     		.2byte	0x19e
 1876 02c6 6F000000 		.4byte	0x6f
 1877 02ca 9C010000 		.4byte	.LLST13
 1878 02ce 0F       		.uleb128 0xf
 1879 02cf 08000000 		.4byte	.LVL18
 1880 02d3 D4090000 		.4byte	0x9d4
 1881 02d7 0F       		.uleb128 0xf
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 63


 1882 02d8 22000000 		.4byte	.LVL20
 1883 02dc E2090000 		.4byte	0x9e2
 1884 02e0 00       		.byte	0
 1885 02e1 11       		.uleb128 0x11
 1886 02e2 01       		.byte	0x1
 1887 02e3 C5040000 		.4byte	.LASF33
 1888 02e7 01       		.byte	0x1
 1889 02e8 D201     		.2byte	0x1d2
 1890 02ea 01       		.byte	0x1
 1891 02eb 00000000 		.4byte	.LFB8
 1892 02ef 10000000 		.4byte	.LFE8
 1893 02f3 02       		.byte	0x2
 1894 02f4 7D       		.byte	0x7d
 1895 02f5 00       		.sleb128 0
 1896 02f6 01       		.byte	0x1
 1897 02f7 0C030000 		.4byte	0x30c
 1898 02fb 10       		.uleb128 0x10
 1899 02fc A7020000 		.4byte	.LASF34
 1900 0300 01       		.byte	0x1
 1901 0301 D201     		.2byte	0x1d2
 1902 0303 7A000000 		.4byte	0x7a
 1903 0307 AF010000 		.4byte	.LLST14
 1904 030b 00       		.byte	0
 1905 030c 0D       		.uleb128 0xd
 1906 030d 01       		.byte	0x1
 1907 030e AB040000 		.4byte	.LASF35
 1908 0312 01       		.byte	0x1
 1909 0313 F601     		.2byte	0x1f6
 1910 0315 01       		.byte	0x1
 1911 0316 00000000 		.4byte	.LFB9
 1912 031a 28000000 		.4byte	.LFE9
 1913 031e D0010000 		.4byte	.LLST15
 1914 0322 01       		.byte	0x1
 1915 0323 5A030000 		.4byte	0x35a
 1916 0327 10       		.uleb128 0x10
 1917 0328 B1030000 		.4byte	.LASF36
 1918 032c 01       		.byte	0x1
 1919 032d F601     		.2byte	0x1f6
 1920 032f 7A000000 		.4byte	0x7a
 1921 0333 F0010000 		.4byte	.LLST16
 1922 0337 0E       		.uleb128 0xe
 1923 0338 88050000 		.4byte	.LASF25
 1924 033c 01       		.byte	0x1
 1925 033d F801     		.2byte	0x1f8
 1926 033f 6F000000 		.4byte	0x6f
 1927 0343 1C020000 		.4byte	.LLST17
 1928 0347 0F       		.uleb128 0xf
 1929 0348 08000000 		.4byte	.LVL24
 1930 034c D4090000 		.4byte	0x9d4
 1931 0350 0F       		.uleb128 0xf
 1932 0351 22000000 		.4byte	.LVL26
 1933 0355 E2090000 		.4byte	0x9e2
 1934 0359 00       		.byte	0
 1935 035a 0D       		.uleb128 0xd
 1936 035b 01       		.byte	0x1
 1937 035c C0030000 		.4byte	.LASF37
 1938 0360 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 64


 1939 0361 1802     		.2byte	0x218
 1940 0363 01       		.byte	0x1
 1941 0364 00000000 		.4byte	.LFB10
 1942 0368 28000000 		.4byte	.LFE10
 1943 036c 2F020000 		.4byte	.LLST18
 1944 0370 01       		.byte	0x1
 1945 0371 A8030000 		.4byte	0x3a8
 1946 0375 10       		.uleb128 0x10
 1947 0376 90040000 		.4byte	.LASF38
 1948 037a 01       		.byte	0x1
 1949 037b 1802     		.2byte	0x218
 1950 037d 7A000000 		.4byte	0x7a
 1951 0381 4F020000 		.4byte	.LLST19
 1952 0385 0E       		.uleb128 0xe
 1953 0386 88050000 		.4byte	.LASF25
 1954 038a 01       		.byte	0x1
 1955 038b 1A02     		.2byte	0x21a
 1956 038d 6F000000 		.4byte	0x6f
 1957 0391 7B020000 		.4byte	.LLST20
 1958 0395 0F       		.uleb128 0xf
 1959 0396 08000000 		.4byte	.LVL28
 1960 039a D4090000 		.4byte	0x9d4
 1961 039e 0F       		.uleb128 0xf
 1962 039f 22000000 		.4byte	.LVL30
 1963 03a3 E2090000 		.4byte	0x9e2
 1964 03a7 00       		.byte	0
 1965 03a8 0D       		.uleb128 0xd
 1966 03a9 01       		.byte	0x1
 1967 03aa 20060000 		.4byte	.LASF39
 1968 03ae 01       		.byte	0x1
 1969 03af 3902     		.2byte	0x239
 1970 03b1 01       		.byte	0x1
 1971 03b2 00000000 		.4byte	.LFB11
 1972 03b6 2C000000 		.4byte	.LFE11
 1973 03ba 8E020000 		.4byte	.LLST21
 1974 03be 01       		.byte	0x1
 1975 03bf F6030000 		.4byte	0x3f6
 1976 03c3 10       		.uleb128 0x10
 1977 03c4 17020000 		.4byte	.LASF40
 1978 03c8 01       		.byte	0x1
 1979 03c9 3902     		.2byte	0x239
 1980 03cb 7A000000 		.4byte	0x7a
 1981 03cf AE020000 		.4byte	.LLST22
 1982 03d3 0E       		.uleb128 0xe
 1983 03d4 88050000 		.4byte	.LASF25
 1984 03d8 01       		.byte	0x1
 1985 03d9 3B02     		.2byte	0x23b
 1986 03db 6F000000 		.4byte	0x6f
 1987 03df DA020000 		.4byte	.LLST23
 1988 03e3 0F       		.uleb128 0xf
 1989 03e4 08000000 		.4byte	.LVL32
 1990 03e8 D4090000 		.4byte	0x9d4
 1991 03ec 0F       		.uleb128 0xf
 1992 03ed 20000000 		.4byte	.LVL34
 1993 03f1 E2090000 		.4byte	0x9e2
 1994 03f5 00       		.byte	0
 1995 03f6 0D       		.uleb128 0xd
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 65


 1996 03f7 01       		.byte	0x1
 1997 03f8 B0020000 		.4byte	.LASF41
 1998 03fc 01       		.byte	0x1
 1999 03fd 5A02     		.2byte	0x25a
 2000 03ff 01       		.byte	0x1
 2001 0400 00000000 		.4byte	.LFB12
 2002 0404 28000000 		.4byte	.LFE12
 2003 0408 ED020000 		.4byte	.LLST24
 2004 040c 01       		.byte	0x1
 2005 040d 44040000 		.4byte	0x444
 2006 0411 10       		.uleb128 0x10
 2007 0412 12020000 		.4byte	.LASF42
 2008 0416 01       		.byte	0x1
 2009 0417 5A02     		.2byte	0x25a
 2010 0419 7A000000 		.4byte	0x7a
 2011 041d 0D030000 		.4byte	.LLST25
 2012 0421 0E       		.uleb128 0xe
 2013 0422 88050000 		.4byte	.LASF25
 2014 0426 01       		.byte	0x1
 2015 0427 5C02     		.2byte	0x25c
 2016 0429 6F000000 		.4byte	0x6f
 2017 042d 39030000 		.4byte	.LLST26
 2018 0431 0F       		.uleb128 0xf
 2019 0432 08000000 		.4byte	.LVL36
 2020 0436 D4090000 		.4byte	0x9d4
 2021 043a 0F       		.uleb128 0xf
 2022 043b 1C000000 		.4byte	.LVL38
 2023 043f E2090000 		.4byte	0x9e2
 2024 0443 00       		.byte	0
 2025 0444 11       		.uleb128 0x11
 2026 0445 01       		.byte	0x1
 2027 0446 4B050000 		.4byte	.LASF43
 2028 044a 01       		.byte	0x1
 2029 044b 7802     		.2byte	0x278
 2030 044d 01       		.byte	0x1
 2031 044e 00000000 		.4byte	.LFB13
 2032 0452 0C000000 		.4byte	.LFE13
 2033 0456 02       		.byte	0x2
 2034 0457 7D       		.byte	0x7d
 2035 0458 00       		.sleb128 0
 2036 0459 01       		.byte	0x1
 2037 045a 6F040000 		.4byte	0x46f
 2038 045e 10       		.uleb128 0x10
 2039 045f 18000000 		.4byte	.LASF44
 2040 0463 01       		.byte	0x1
 2041 0464 7802     		.2byte	0x278
 2042 0466 7A000000 		.4byte	0x7a
 2043 046a 4C030000 		.4byte	.LLST27
 2044 046e 00       		.byte	0
 2045 046f 12       		.uleb128 0x12
 2046 0470 01       		.byte	0x1
 2047 0471 E9040000 		.4byte	.LASF47
 2048 0475 01       		.byte	0x1
 2049 0476 8C02     		.2byte	0x28c
 2050 0478 01       		.byte	0x1
 2051 0479 7A000000 		.4byte	0x7a
 2052 047d 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 66


 2053 0481 0C000000 		.4byte	.LFE14
 2054 0485 02       		.byte	0x2
 2055 0486 7D       		.byte	0x7d
 2056 0487 00       		.sleb128 0
 2057 0488 01       		.byte	0x1
 2058 0489 0D       		.uleb128 0xd
 2059 048a 01       		.byte	0x1
 2060 048b 43020000 		.4byte	.LASF45
 2061 048f 01       		.byte	0x1
 2062 0490 A902     		.2byte	0x2a9
 2063 0492 01       		.byte	0x1
 2064 0493 00000000 		.4byte	.LFB15
 2065 0497 28000000 		.4byte	.LFE15
 2066 049b 6D030000 		.4byte	.LLST28
 2067 049f 01       		.byte	0x1
 2068 04a0 D7040000 		.4byte	0x4d7
 2069 04a4 10       		.uleb128 0x10
 2070 04a5 3F050000 		.4byte	.LASF46
 2071 04a9 01       		.byte	0x1
 2072 04aa A902     		.2byte	0x2a9
 2073 04ac 7A000000 		.4byte	0x7a
 2074 04b0 8D030000 		.4byte	.LLST29
 2075 04b4 0E       		.uleb128 0xe
 2076 04b5 88050000 		.4byte	.LASF25
 2077 04b9 01       		.byte	0x1
 2078 04ba AB02     		.2byte	0x2ab
 2079 04bc 6F000000 		.4byte	0x6f
 2080 04c0 B9030000 		.4byte	.LLST30
 2081 04c4 0F       		.uleb128 0xf
 2082 04c5 08000000 		.4byte	.LVL42
 2083 04c9 D4090000 		.4byte	0x9d4
 2084 04cd 0F       		.uleb128 0xf
 2085 04ce 1C000000 		.4byte	.LVL44
 2086 04d2 E2090000 		.4byte	0x9e2
 2087 04d6 00       		.byte	0
 2088 04d7 13       		.uleb128 0x13
 2089 04d8 CD000000 		.4byte	0xcd
 2090 04dc 00000000 		.4byte	.LFB16
 2091 04e0 0C000000 		.4byte	.LFE16
 2092 04e4 02       		.byte	0x2
 2093 04e5 7D       		.byte	0x7d
 2094 04e6 00       		.sleb128 0
 2095 04e7 01       		.byte	0x1
 2096 04e8 F6040000 		.4byte	0x4f6
 2097 04ec 14       		.uleb128 0x14
 2098 04ed DC000000 		.4byte	0xdc
 2099 04f1 CC030000 		.4byte	.LLST31
 2100 04f5 00       		.byte	0
 2101 04f6 12       		.uleb128 0x12
 2102 04f7 01       		.byte	0x1
 2103 04f8 DC030000 		.4byte	.LASF48
 2104 04fc 01       		.byte	0x1
 2105 04fd DA02     		.2byte	0x2da
 2106 04ff 01       		.byte	0x1
 2107 0500 7A000000 		.4byte	0x7a
 2108 0504 00000000 		.4byte	.LFB17
 2109 0508 0C000000 		.4byte	.LFE17
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 67


 2110 050c 02       		.byte	0x2
 2111 050d 7D       		.byte	0x7d
 2112 050e 00       		.sleb128 0
 2113 050f 01       		.byte	0x1
 2114 0510 0D       		.uleb128 0xd
 2115 0511 01       		.byte	0x1
 2116 0512 E4050000 		.4byte	.LASF49
 2117 0516 01       		.byte	0x1
 2118 0517 F402     		.2byte	0x2f4
 2119 0519 01       		.byte	0x1
 2120 051a 00000000 		.4byte	.LFB18
 2121 051e 24000000 		.4byte	.LFE18
 2122 0522 ED030000 		.4byte	.LLST32
 2123 0526 01       		.byte	0x1
 2124 0527 5E050000 		.4byte	0x55e
 2125 052b 10       		.uleb128 0x10
 2126 052c 15060000 		.4byte	.LASF50
 2127 0530 01       		.byte	0x1
 2128 0531 F402     		.2byte	0x2f4
 2129 0533 7A000000 		.4byte	0x7a
 2130 0537 0D040000 		.4byte	.LLST33
 2131 053b 0E       		.uleb128 0xe
 2132 053c 88050000 		.4byte	.LASF25
 2133 0540 01       		.byte	0x1
 2134 0541 F602     		.2byte	0x2f6
 2135 0543 6F000000 		.4byte	0x6f
 2136 0547 39040000 		.4byte	.LLST34
 2137 054b 0F       		.uleb128 0xf
 2138 054c 08000000 		.4byte	.LVL48
 2139 0550 D4090000 		.4byte	0x9d4
 2140 0554 0F       		.uleb128 0xf
 2141 0555 1E000000 		.4byte	.LVL49
 2142 0559 E2090000 		.4byte	0x9e2
 2143 055d 00       		.byte	0
 2144 055e 11       		.uleb128 0x11
 2145 055f 01       		.byte	0x1
 2146 0560 25030000 		.4byte	.LASF51
 2147 0564 01       		.byte	0x1
 2148 0565 0F03     		.2byte	0x30f
 2149 0567 01       		.byte	0x1
 2150 0568 00000000 		.4byte	.LFB19
 2151 056c 0C000000 		.4byte	.LFE19
 2152 0570 02       		.byte	0x2
 2153 0571 7D       		.byte	0x7d
 2154 0572 00       		.sleb128 0
 2155 0573 01       		.byte	0x1
 2156 0574 89050000 		.4byte	0x589
 2157 0578 10       		.uleb128 0x10
 2158 0579 3A060000 		.4byte	.LASF52
 2159 057d 01       		.byte	0x1
 2160 057e 0F03     		.2byte	0x30f
 2161 0580 7A000000 		.4byte	0x7a
 2162 0584 4C040000 		.4byte	.LLST35
 2163 0588 00       		.byte	0
 2164 0589 12       		.uleb128 0x12
 2165 058a 01       		.byte	0x1
 2166 058b 26050000 		.4byte	.LASF53
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 68


 2167 058f 01       		.byte	0x1
 2168 0590 2303     		.2byte	0x323
 2169 0592 01       		.byte	0x1
 2170 0593 7A000000 		.4byte	0x7a
 2171 0597 00000000 		.4byte	.LFB20
 2172 059b 0C000000 		.4byte	.LFE20
 2173 059f 02       		.byte	0x2
 2174 05a0 7D       		.byte	0x7d
 2175 05a1 00       		.sleb128 0
 2176 05a2 01       		.byte	0x1
 2177 05a3 0D       		.uleb128 0xd
 2178 05a4 01       		.byte	0x1
 2179 05a5 99050000 		.4byte	.LASF54
 2180 05a9 01       		.byte	0x1
 2181 05aa 3D03     		.2byte	0x33d
 2182 05ac 01       		.byte	0x1
 2183 05ad 00000000 		.4byte	.LFB21
 2184 05b1 28000000 		.4byte	.LFE21
 2185 05b5 6D040000 		.4byte	.LLST36
 2186 05b9 01       		.byte	0x1
 2187 05ba F1050000 		.4byte	0x5f1
 2188 05be 10       		.uleb128 0x10
 2189 05bf 15060000 		.4byte	.LASF50
 2190 05c3 01       		.byte	0x1
 2191 05c4 3D03     		.2byte	0x33d
 2192 05c6 7A000000 		.4byte	0x7a
 2193 05ca 8D040000 		.4byte	.LLST37
 2194 05ce 0E       		.uleb128 0xe
 2195 05cf 88050000 		.4byte	.LASF25
 2196 05d3 01       		.byte	0x1
 2197 05d4 3F03     		.2byte	0x33f
 2198 05d6 6F000000 		.4byte	0x6f
 2199 05da B9040000 		.4byte	.LLST38
 2200 05de 0F       		.uleb128 0xf
 2201 05df 08000000 		.4byte	.LVL54
 2202 05e3 D4090000 		.4byte	0x9d4
 2203 05e7 0F       		.uleb128 0xf
 2204 05e8 22000000 		.4byte	.LVL56
 2205 05ec E2090000 		.4byte	0x9e2
 2206 05f0 00       		.byte	0
 2207 05f1 13       		.uleb128 0x13
 2208 05f2 E9000000 		.4byte	0xe9
 2209 05f6 00000000 		.4byte	.LFB22
 2210 05fa 0C000000 		.4byte	.LFE22
 2211 05fe 02       		.byte	0x2
 2212 05ff 7D       		.byte	0x7d
 2213 0600 00       		.sleb128 0
 2214 0601 01       		.byte	0x1
 2215 0602 10060000 		.4byte	0x610
 2216 0606 14       		.uleb128 0x14
 2217 0607 F8000000 		.4byte	0xf8
 2218 060b CC040000 		.4byte	.LLST39
 2219 060f 00       		.byte	0
 2220 0610 12       		.uleb128 0x12
 2221 0611 01       		.byte	0x1
 2222 0612 12040000 		.4byte	.LASF55
 2223 0616 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 69


 2224 0617 8403     		.2byte	0x384
 2225 0619 01       		.byte	0x1
 2226 061a 7A000000 		.4byte	0x7a
 2227 061e 00000000 		.4byte	.LFB23
 2228 0622 0C000000 		.4byte	.LFE23
 2229 0626 02       		.byte	0x2
 2230 0627 7D       		.byte	0x7d
 2231 0628 00       		.sleb128 0
 2232 0629 01       		.byte	0x1
 2233 062a 11       		.uleb128 0x11
 2234 062b 01       		.byte	0x1
 2235 062c F7020000 		.4byte	.LASF56
 2236 0630 01       		.byte	0x1
 2237 0631 B003     		.2byte	0x3b0
 2238 0633 01       		.byte	0x1
 2239 0634 00000000 		.4byte	.LFB24
 2240 0638 0C000000 		.4byte	.LFE24
 2241 063c 02       		.byte	0x2
 2242 063d 7D       		.byte	0x7d
 2243 063e 00       		.sleb128 0
 2244 063f 01       		.byte	0x1
 2245 0640 55060000 		.4byte	0x655
 2246 0644 10       		.uleb128 0x10
 2247 0645 7D050000 		.4byte	.LASF57
 2248 0649 01       		.byte	0x1
 2249 064a B003     		.2byte	0x3b0
 2250 064c 7A000000 		.4byte	0x7a
 2251 0650 ED040000 		.4byte	.LLST40
 2252 0654 00       		.byte	0
 2253 0655 12       		.uleb128 0x12
 2254 0656 01       		.byte	0x1
 2255 0657 CA050000 		.4byte	.LASF58
 2256 065b 01       		.byte	0x1
 2257 065c DA03     		.2byte	0x3da
 2258 065e 01       		.byte	0x1
 2259 065f 7A000000 		.4byte	0x7a
 2260 0663 00000000 		.4byte	.LFB25
 2261 0667 0C000000 		.4byte	.LFE25
 2262 066b 02       		.byte	0x2
 2263 066c 7D       		.byte	0x7d
 2264 066d 00       		.sleb128 0
 2265 066e 01       		.byte	0x1
 2266 066f 12       		.uleb128 0x12
 2267 0670 01       		.byte	0x1
 2268 0671 8C010000 		.4byte	.LASF59
 2269 0675 01       		.byte	0x1
 2270 0676 0604     		.2byte	0x406
 2271 0678 01       		.byte	0x1
 2272 0679 7A000000 		.4byte	0x7a
 2273 067d 00000000 		.4byte	.LFB26
 2274 0681 0C000000 		.4byte	.LFE26
 2275 0685 02       		.byte	0x2
 2276 0686 7D       		.byte	0x7d
 2277 0687 00       		.sleb128 0
 2278 0688 01       		.byte	0x1
 2279 0689 12       		.uleb128 0x12
 2280 068a 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 70


 2281 068b 7E030000 		.4byte	.LASF60
 2282 068f 01       		.byte	0x1
 2283 0690 1B04     		.2byte	0x41b
 2284 0692 01       		.byte	0x1
 2285 0693 7A000000 		.4byte	0x7a
 2286 0697 00000000 		.4byte	.LFB27
 2287 069b 0C000000 		.4byte	.LFE27
 2288 069f 02       		.byte	0x2
 2289 06a0 7D       		.byte	0x7d
 2290 06a1 00       		.sleb128 0
 2291 06a2 01       		.byte	0x1
 2292 06a3 0D       		.uleb128 0xd
 2293 06a4 01       		.byte	0x1
 2294 06a5 5E030000 		.4byte	.LASF61
 2295 06a9 01       		.byte	0x1
 2296 06aa 3604     		.2byte	0x436
 2297 06ac 01       		.byte	0x1
 2298 06ad 00000000 		.4byte	.LFB28
 2299 06b1 24000000 		.4byte	.LFE28
 2300 06b5 0E050000 		.4byte	.LLST41
 2301 06b9 01       		.byte	0x1
 2302 06ba F1060000 		.4byte	0x6f1
 2303 06be 10       		.uleb128 0x10
 2304 06bf 06020000 		.4byte	.LASF62
 2305 06c3 01       		.byte	0x1
 2306 06c4 3604     		.2byte	0x436
 2307 06c6 7A000000 		.4byte	0x7a
 2308 06ca 2E050000 		.4byte	.LLST42
 2309 06ce 0E       		.uleb128 0xe
 2310 06cf 88050000 		.4byte	.LASF25
 2311 06d3 01       		.byte	0x1
 2312 06d4 3804     		.2byte	0x438
 2313 06d6 6F000000 		.4byte	0x6f
 2314 06da 5A050000 		.4byte	.LLST43
 2315 06de 0F       		.uleb128 0xf
 2316 06df 08000000 		.4byte	.LVL62
 2317 06e3 D4090000 		.4byte	0x9d4
 2318 06e7 0F       		.uleb128 0xf
 2319 06e8 1C000000 		.4byte	.LVL64
 2320 06ec E2090000 		.4byte	0x9e2
 2321 06f0 00       		.byte	0
 2322 06f1 0D       		.uleb128 0xd
 2323 06f2 01       		.byte	0x1
 2324 06f3 6D000000 		.4byte	.LASF63
 2325 06f7 01       		.byte	0x1
 2326 06f8 5704     		.2byte	0x457
 2327 06fa 01       		.byte	0x1
 2328 06fb 00000000 		.4byte	.LFB29
 2329 06ff 24000000 		.4byte	.LFE29
 2330 0703 6D050000 		.4byte	.LLST44
 2331 0707 01       		.byte	0x1
 2332 0708 3F070000 		.4byte	0x73f
 2333 070c 10       		.uleb128 0x10
 2334 070d 06020000 		.4byte	.LASF62
 2335 0711 01       		.byte	0x1
 2336 0712 5704     		.2byte	0x457
 2337 0714 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 71


 2338 0718 8D050000 		.4byte	.LLST45
 2339 071c 0E       		.uleb128 0xe
 2340 071d 88050000 		.4byte	.LASF25
 2341 0721 01       		.byte	0x1
 2342 0722 5904     		.2byte	0x459
 2343 0724 6F000000 		.4byte	0x6f
 2344 0728 B9050000 		.4byte	.LLST46
 2345 072c 0F       		.uleb128 0xf
 2346 072d 08000000 		.4byte	.LVL66
 2347 0731 D4090000 		.4byte	0x9d4
 2348 0735 0F       		.uleb128 0xf
 2349 0736 1E000000 		.4byte	.LVL68
 2350 073a E2090000 		.4byte	0x9e2
 2351 073e 00       		.byte	0
 2352 073f 0D       		.uleb128 0xd
 2353 0740 01       		.byte	0x1
 2354 0741 DF020000 		.4byte	.LASF64
 2355 0745 01       		.byte	0x1
 2356 0746 7804     		.2byte	0x478
 2357 0748 01       		.byte	0x1
 2358 0749 00000000 		.4byte	.LFB30
 2359 074d 28000000 		.4byte	.LFE30
 2360 0751 CC050000 		.4byte	.LLST47
 2361 0755 01       		.byte	0x1
 2362 0756 8D070000 		.4byte	0x78d
 2363 075a 10       		.uleb128 0x10
 2364 075b 06020000 		.4byte	.LASF62
 2365 075f 01       		.byte	0x1
 2366 0760 7804     		.2byte	0x478
 2367 0762 7A000000 		.4byte	0x7a
 2368 0766 EC050000 		.4byte	.LLST48
 2369 076a 0E       		.uleb128 0xe
 2370 076b 88050000 		.4byte	.LASF25
 2371 076f 01       		.byte	0x1
 2372 0770 7A04     		.2byte	0x47a
 2373 0772 6F000000 		.4byte	0x6f
 2374 0776 18060000 		.4byte	.LLST49
 2375 077a 0F       		.uleb128 0xf
 2376 077b 08000000 		.4byte	.LVL70
 2377 077f D4090000 		.4byte	0x9d4
 2378 0783 0F       		.uleb128 0xf
 2379 0784 1E000000 		.4byte	.LVL72
 2380 0788 E2090000 		.4byte	0x9e2
 2381 078c 00       		.byte	0
 2382 078d 0D       		.uleb128 0xd
 2383 078e 01       		.byte	0x1
 2384 078f FE050000 		.4byte	.LASF65
 2385 0793 01       		.byte	0x1
 2386 0794 9804     		.2byte	0x498
 2387 0796 01       		.byte	0x1
 2388 0797 00000000 		.4byte	.LFB31
 2389 079b 24000000 		.4byte	.LFE31
 2390 079f 2B060000 		.4byte	.LLST50
 2391 07a3 01       		.byte	0x1
 2392 07a4 DB070000 		.4byte	0x7db
 2393 07a8 10       		.uleb128 0x10
 2394 07a9 06020000 		.4byte	.LASF62
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 72


 2395 07ad 01       		.byte	0x1
 2396 07ae 9804     		.2byte	0x498
 2397 07b0 7A000000 		.4byte	0x7a
 2398 07b4 4B060000 		.4byte	.LLST51
 2399 07b8 0E       		.uleb128 0xe
 2400 07b9 88050000 		.4byte	.LASF25
 2401 07bd 01       		.byte	0x1
 2402 07be 9A04     		.2byte	0x49a
 2403 07c0 6F000000 		.4byte	0x6f
 2404 07c4 77060000 		.4byte	.LLST52
 2405 07c8 0F       		.uleb128 0xf
 2406 07c9 08000000 		.4byte	.LVL74
 2407 07cd D4090000 		.4byte	0x9d4
 2408 07d1 0F       		.uleb128 0xf
 2409 07d2 1E000000 		.4byte	.LVL76
 2410 07d6 E2090000 		.4byte	0x9e2
 2411 07da 00       		.byte	0
 2412 07db 0D       		.uleb128 0xd
 2413 07dc 01       		.byte	0x1
 2414 07dd 00000000 		.4byte	.LASF66
 2415 07e1 01       		.byte	0x1
 2416 07e2 B904     		.2byte	0x4b9
 2417 07e4 01       		.byte	0x1
 2418 07e5 00000000 		.4byte	.LFB32
 2419 07e9 24000000 		.4byte	.LFE32
 2420 07ed 8A060000 		.4byte	.LLST53
 2421 07f1 01       		.byte	0x1
 2422 07f2 29080000 		.4byte	0x829
 2423 07f6 10       		.uleb128 0x10
 2424 07f7 06020000 		.4byte	.LASF62
 2425 07fb 01       		.byte	0x1
 2426 07fc B904     		.2byte	0x4b9
 2427 07fe 7A000000 		.4byte	0x7a
 2428 0802 AA060000 		.4byte	.LLST54
 2429 0806 0E       		.uleb128 0xe
 2430 0807 88050000 		.4byte	.LASF25
 2431 080b 01       		.byte	0x1
 2432 080c BB04     		.2byte	0x4bb
 2433 080e 6F000000 		.4byte	0x6f
 2434 0812 D6060000 		.4byte	.LLST55
 2435 0816 0F       		.uleb128 0xf
 2436 0817 08000000 		.4byte	.LVL78
 2437 081b D4090000 		.4byte	0x9d4
 2438 081f 0F       		.uleb128 0xf
 2439 0820 1E000000 		.4byte	.LVL80
 2440 0824 E2090000 		.4byte	0x9e2
 2441 0828 00       		.byte	0
 2442 0829 0D       		.uleb128 0xd
 2443 082a 01       		.byte	0x1
 2444 082b CE000000 		.4byte	.LASF67
 2445 082f 01       		.byte	0x1
 2446 0830 E104     		.2byte	0x4e1
 2447 0832 01       		.byte	0x1
 2448 0833 00000000 		.4byte	.LFB33
 2449 0837 1C000000 		.4byte	.LFE33
 2450 083b E9060000 		.4byte	.LLST56
 2451 083f 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 73


 2452 0840 87080000 		.4byte	0x887
 2453 0844 10       		.uleb128 0x10
 2454 0845 12020000 		.4byte	.LASF42
 2455 0849 01       		.byte	0x1
 2456 084a E104     		.2byte	0x4e1
 2457 084c 7A000000 		.4byte	0x7a
 2458 0850 09070000 		.4byte	.LLST57
 2459 0854 10       		.uleb128 0x10
 2460 0855 8D020000 		.4byte	.LASF68
 2461 0859 01       		.byte	0x1
 2462 085a E104     		.2byte	0x4e1
 2463 085c 7A000000 		.4byte	0x7a
 2464 0860 35070000 		.4byte	.LLST58
 2465 0864 0E       		.uleb128 0xe
 2466 0865 88050000 		.4byte	.LASF25
 2467 0869 01       		.byte	0x1
 2468 086a E304     		.2byte	0x4e3
 2469 086c 6F000000 		.4byte	0x6f
 2470 0870 61070000 		.4byte	.LLST59
 2471 0874 0F       		.uleb128 0xf
 2472 0875 0A000000 		.4byte	.LVL82
 2473 0879 D4090000 		.4byte	0x9d4
 2474 087d 0F       		.uleb128 0xf
 2475 087e 14000000 		.4byte	.LVL84
 2476 0882 E2090000 		.4byte	0x9e2
 2477 0886 00       		.byte	0
 2478 0887 15       		.uleb128 0x15
 2479 0888 01       		.byte	0x1
 2480 0889 5D020000 		.4byte	.LASF69
 2481 088d 01       		.byte	0x1
 2482 088e C8       		.byte	0xc8
 2483 088f 01       		.byte	0x1
 2484 0890 00000000 		.4byte	.LFB1
 2485 0894 24000000 		.4byte	.LFE1
 2486 0898 74070000 		.4byte	.LLST60
 2487 089c 01       		.byte	0x1
 2488 089d D8080000 		.4byte	0x8d8
 2489 08a1 16       		.uleb128 0x16
 2490 08a2 88050000 		.4byte	.LASF25
 2491 08a6 01       		.byte	0x1
 2492 08a7 CA       		.byte	0xca
 2493 08a8 6F000000 		.4byte	0x6f
 2494 08ac 94070000 		.4byte	.LLST61
 2495 08b0 0F       		.uleb128 0xf
 2496 08b1 06000000 		.4byte	.LVL86
 2497 08b5 D4090000 		.4byte	0x9d4
 2498 08b9 0F       		.uleb128 0xf
 2499 08ba 14000000 		.4byte	.LVL87
 2500 08be E2090000 		.4byte	0x9e2
 2501 08c2 17       		.uleb128 0x17
 2502 08c3 1C000000 		.4byte	.LVL88
 2503 08c7 29080000 		.4byte	0x829
 2504 08cb 18       		.uleb128 0x18
 2505 08cc 01       		.byte	0x1
 2506 08cd 51       		.byte	0x51
 2507 08ce 01       		.byte	0x1
 2508 08cf 48       		.byte	0x48
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 74


 2509 08d0 18       		.uleb128 0x18
 2510 08d1 01       		.byte	0x1
 2511 08d2 50       		.byte	0x50
 2512 08d3 02       		.byte	0x2
 2513 08d4 74       		.byte	0x74
 2514 08d5 00       		.sleb128 0
 2515 08d6 00       		.byte	0
 2516 08d7 00       		.byte	0
 2517 08d8 15       		.uleb128 0x15
 2518 08d9 01       		.byte	0x1
 2519 08da 4D030000 		.4byte	.LASF70
 2520 08de 01       		.byte	0x1
 2521 08df F7       		.byte	0xf7
 2522 08e0 01       		.byte	0x1
 2523 08e1 00000000 		.4byte	.LFB2
 2524 08e5 1C000000 		.4byte	.LFE2
 2525 08e9 A7070000 		.4byte	.LLST62
 2526 08ed 01       		.byte	0x1
 2527 08ee 05090000 		.4byte	0x905
 2528 08f2 0F       		.uleb128 0xf
 2529 08f3 0E000000 		.4byte	.LVL89
 2530 08f7 05010000 		.4byte	0x105
 2531 08fb 0F       		.uleb128 0xf
 2532 08fc 16000000 		.4byte	.LVL90
 2533 0900 87080000 		.4byte	0x887
 2534 0904 00       		.byte	0
 2535 0905 12       		.uleb128 0x12
 2536 0906 01       		.byte	0x1
 2537 0907 20020000 		.4byte	.LASF71
 2538 090b 01       		.byte	0x1
 2539 090c FE04     		.2byte	0x4fe
 2540 090e 01       		.byte	0x1
 2541 090f 7A000000 		.4byte	0x7a
 2542 0913 00000000 		.4byte	.LFB34
 2543 0917 14000000 		.4byte	.LFE34
 2544 091b 02       		.byte	0x2
 2545 091c 7D       		.byte	0x7d
 2546 091d 00       		.sleb128 0
 2547 091e 01       		.byte	0x1
 2548 091f 13       		.uleb128 0x13
 2549 0920 B1000000 		.4byte	0xb1
 2550 0924 00000000 		.4byte	.LFB35
 2551 0928 0C000000 		.4byte	.LFE35
 2552 092c 02       		.byte	0x2
 2553 092d 7D       		.byte	0x7d
 2554 092e 00       		.sleb128 0
 2555 092f 01       		.byte	0x1
 2556 0930 3C090000 		.4byte	0x93c
 2557 0934 19       		.uleb128 0x19
 2558 0935 C0000000 		.4byte	0xc0
 2559 0939 01       		.byte	0x1
 2560 093a 50       		.byte	0x50
 2561 093b 00       		.byte	0
 2562 093c 12       		.uleb128 0x12
 2563 093d 01       		.byte	0x1
 2564 093e E2010000 		.4byte	.LASF72
 2565 0942 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 75


 2566 0943 2E05     		.2byte	0x52e
 2567 0945 01       		.byte	0x1
 2568 0946 7A000000 		.4byte	0x7a
 2569 094a 00000000 		.4byte	.LFB36
 2570 094e 0C000000 		.4byte	.LFE36
 2571 0952 02       		.byte	0x2
 2572 0953 7D       		.byte	0x7d
 2573 0954 00       		.sleb128 0
 2574 0955 01       		.byte	0x1
 2575 0956 12       		.uleb128 0x12
 2576 0957 01       		.byte	0x1
 2577 0958 6F020000 		.4byte	.LASF73
 2578 095c 01       		.byte	0x1
 2579 095d 4505     		.2byte	0x545
 2580 095f 01       		.byte	0x1
 2581 0960 7A000000 		.4byte	0x7a
 2582 0964 00000000 		.4byte	.LFB37
 2583 0968 0C000000 		.4byte	.LFE37
 2584 096c 02       		.byte	0x2
 2585 096d 7D       		.byte	0x7d
 2586 096e 00       		.sleb128 0
 2587 096f 01       		.byte	0x1
 2588 0970 11       		.uleb128 0x11
 2589 0971 01       		.byte	0x1
 2590 0972 63050000 		.4byte	.LASF74
 2591 0976 01       		.byte	0x1
 2592 0977 5C05     		.2byte	0x55c
 2593 0979 01       		.byte	0x1
 2594 097a 00000000 		.4byte	.LFB38
 2595 097e 0C000000 		.4byte	.LFE38
 2596 0982 02       		.byte	0x2
 2597 0983 7D       		.byte	0x7d
 2598 0984 00       		.sleb128 0
 2599 0985 01       		.byte	0x1
 2600 0986 99090000 		.4byte	0x999
 2601 098a 1A       		.uleb128 0x1a
 2602 098b DB040000 		.4byte	.LASF18
 2603 098f 01       		.byte	0x1
 2604 0990 5C05     		.2byte	0x55c
 2605 0992 7A000000 		.4byte	0x7a
 2606 0996 01       		.byte	0x1
 2607 0997 50       		.byte	0x50
 2608 0998 00       		.byte	0
 2609 0999 11       		.uleb128 0x11
 2610 099a 01       		.byte	0x1
 2611 099b B2050000 		.4byte	.LASF75
 2612 099f 01       		.byte	0x1
 2613 09a0 7305     		.2byte	0x573
 2614 09a2 01       		.byte	0x1
 2615 09a3 00000000 		.4byte	.LFB39
 2616 09a7 0C000000 		.4byte	.LFE39
 2617 09ab 02       		.byte	0x2
 2618 09ac 7D       		.byte	0x7d
 2619 09ad 00       		.sleb128 0
 2620 09ae 01       		.byte	0x1
 2621 09af C2090000 		.4byte	0x9c2
 2622 09b3 1A       		.uleb128 0x1a
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 76


 2623 09b4 DB040000 		.4byte	.LASF18
 2624 09b8 01       		.byte	0x1
 2625 09b9 7305     		.2byte	0x573
 2626 09bb 7A000000 		.4byte	0x7a
 2627 09bf 01       		.byte	0x1
 2628 09c0 50       		.byte	0x50
 2629 09c1 00       		.byte	0
 2630 09c2 1B       		.uleb128 0x1b
 2631 09c3 9D000000 		.4byte	.LASF79
 2632 09c7 01       		.byte	0x1
 2633 09c8 16       		.byte	0x16
 2634 09c9 6F000000 		.4byte	0x6f
 2635 09cd 01       		.byte	0x1
 2636 09ce 05       		.byte	0x5
 2637 09cf 03       		.byte	0x3
 2638 09d0 00000000 		.4byte	ServoTimer_initVar
 2639 09d4 1C       		.uleb128 0x1c
 2640 09d5 01       		.byte	0x1
 2641 09d6 C8020000 		.4byte	.LASF80
 2642 09da 03       		.byte	0x3
 2643 09db 73       		.byte	0x73
 2644 09dc 01       		.byte	0x1
 2645 09dd 6F000000 		.4byte	0x6f
 2646 09e1 01       		.byte	0x1
 2647 09e2 1D       		.uleb128 0x1d
 2648 09e3 01       		.byte	0x1
 2649 09e4 44000000 		.4byte	.LASF81
 2650 09e8 03       		.byte	0x3
 2651 09e9 74       		.byte	0x74
 2652 09ea 01       		.byte	0x1
 2653 09eb 01       		.byte	0x1
 2654 09ec 1E       		.uleb128 0x1e
 2655 09ed 6F000000 		.4byte	0x6f
 2656 09f1 00       		.byte	0
 2657 09f2 00       		.byte	0
 2658              		.section	.debug_abbrev,"",%progbits
 2659              	.Ldebug_abbrev0:
 2660 0000 01       		.uleb128 0x1
 2661 0001 11       		.uleb128 0x11
 2662 0002 01       		.byte	0x1
 2663 0003 25       		.uleb128 0x25
 2664 0004 0E       		.uleb128 0xe
 2665 0005 13       		.uleb128 0x13
 2666 0006 0B       		.uleb128 0xb
 2667 0007 03       		.uleb128 0x3
 2668 0008 0E       		.uleb128 0xe
 2669 0009 1B       		.uleb128 0x1b
 2670 000a 0E       		.uleb128 0xe
 2671 000b 55       		.uleb128 0x55
 2672 000c 06       		.uleb128 0x6
 2673 000d 11       		.uleb128 0x11
 2674 000e 01       		.uleb128 0x1
 2675 000f 52       		.uleb128 0x52
 2676 0010 01       		.uleb128 0x1
 2677 0011 10       		.uleb128 0x10
 2678 0012 06       		.uleb128 0x6
 2679 0013 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 77


 2680 0014 00       		.byte	0
 2681 0015 02       		.uleb128 0x2
 2682 0016 24       		.uleb128 0x24
 2683 0017 00       		.byte	0
 2684 0018 0B       		.uleb128 0xb
 2685 0019 0B       		.uleb128 0xb
 2686 001a 3E       		.uleb128 0x3e
 2687 001b 0B       		.uleb128 0xb
 2688 001c 03       		.uleb128 0x3
 2689 001d 0E       		.uleb128 0xe
 2690 001e 00       		.byte	0
 2691 001f 00       		.byte	0
 2692 0020 03       		.uleb128 0x3
 2693 0021 24       		.uleb128 0x24
 2694 0022 00       		.byte	0
 2695 0023 0B       		.uleb128 0xb
 2696 0024 0B       		.uleb128 0xb
 2697 0025 3E       		.uleb128 0x3e
 2698 0026 0B       		.uleb128 0xb
 2699 0027 03       		.uleb128 0x3
 2700 0028 08       		.uleb128 0x8
 2701 0029 00       		.byte	0
 2702 002a 00       		.byte	0
 2703 002b 04       		.uleb128 0x4
 2704 002c 16       		.uleb128 0x16
 2705 002d 00       		.byte	0
 2706 002e 03       		.uleb128 0x3
 2707 002f 0E       		.uleb128 0xe
 2708 0030 3A       		.uleb128 0x3a
 2709 0031 0B       		.uleb128 0xb
 2710 0032 3B       		.uleb128 0x3b
 2711 0033 0B       		.uleb128 0xb
 2712 0034 49       		.uleb128 0x49
 2713 0035 13       		.uleb128 0x13
 2714 0036 00       		.byte	0
 2715 0037 00       		.byte	0
 2716 0038 05       		.uleb128 0x5
 2717 0039 35       		.uleb128 0x35
 2718 003a 00       		.byte	0
 2719 003b 49       		.uleb128 0x49
 2720 003c 13       		.uleb128 0x13
 2721 003d 00       		.byte	0
 2722 003e 00       		.byte	0
 2723 003f 06       		.uleb128 0x6
 2724 0040 2E       		.uleb128 0x2e
 2725 0041 01       		.byte	0x1
 2726 0042 3F       		.uleb128 0x3f
 2727 0043 0C       		.uleb128 0xc
 2728 0044 03       		.uleb128 0x3
 2729 0045 0E       		.uleb128 0xe
 2730 0046 3A       		.uleb128 0x3a
 2731 0047 0B       		.uleb128 0xb
 2732 0048 3B       		.uleb128 0x3b
 2733 0049 05       		.uleb128 0x5
 2734 004a 27       		.uleb128 0x27
 2735 004b 0C       		.uleb128 0xc
 2736 004c 20       		.uleb128 0x20
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 78


 2737 004d 0B       		.uleb128 0xb
 2738 004e 01       		.uleb128 0x1
 2739 004f 13       		.uleb128 0x13
 2740 0050 00       		.byte	0
 2741 0051 00       		.byte	0
 2742 0052 07       		.uleb128 0x7
 2743 0053 05       		.uleb128 0x5
 2744 0054 00       		.byte	0
 2745 0055 03       		.uleb128 0x3
 2746 0056 0E       		.uleb128 0xe
 2747 0057 3A       		.uleb128 0x3a
 2748 0058 0B       		.uleb128 0xb
 2749 0059 3B       		.uleb128 0x3b
 2750 005a 05       		.uleb128 0x5
 2751 005b 49       		.uleb128 0x49
 2752 005c 13       		.uleb128 0x13
 2753 005d 00       		.byte	0
 2754 005e 00       		.byte	0
 2755 005f 08       		.uleb128 0x8
 2756 0060 2E       		.uleb128 0x2e
 2757 0061 01       		.byte	0x1
 2758 0062 3F       		.uleb128 0x3f
 2759 0063 0C       		.uleb128 0xc
 2760 0064 03       		.uleb128 0x3
 2761 0065 0E       		.uleb128 0xe
 2762 0066 3A       		.uleb128 0x3a
 2763 0067 0B       		.uleb128 0xb
 2764 0068 3B       		.uleb128 0x3b
 2765 0069 0B       		.uleb128 0xb
 2766 006a 27       		.uleb128 0x27
 2767 006b 0C       		.uleb128 0xc
 2768 006c 11       		.uleb128 0x11
 2769 006d 01       		.uleb128 0x1
 2770 006e 12       		.uleb128 0x12
 2771 006f 01       		.uleb128 0x1
 2772 0070 40       		.uleb128 0x40
 2773 0071 0A       		.uleb128 0xa
 2774 0072 9742     		.uleb128 0x2117
 2775 0074 0C       		.uleb128 0xc
 2776 0075 01       		.uleb128 0x1
 2777 0076 13       		.uleb128 0x13
 2778 0077 00       		.byte	0
 2779 0078 00       		.byte	0
 2780 0079 09       		.uleb128 0x9
 2781 007a 1D       		.uleb128 0x1d
 2782 007b 01       		.byte	0x1
 2783 007c 31       		.uleb128 0x31
 2784 007d 13       		.uleb128 0x13
 2785 007e 52       		.uleb128 0x52
 2786 007f 01       		.uleb128 0x1
 2787 0080 55       		.uleb128 0x55
 2788 0081 06       		.uleb128 0x6
 2789 0082 58       		.uleb128 0x58
 2790 0083 0B       		.uleb128 0xb
 2791 0084 59       		.uleb128 0x59
 2792 0085 0B       		.uleb128 0xb
 2793 0086 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 79


 2794 0087 13       		.uleb128 0x13
 2795 0088 00       		.byte	0
 2796 0089 00       		.byte	0
 2797 008a 0A       		.uleb128 0xa
 2798 008b 05       		.uleb128 0x5
 2799 008c 00       		.byte	0
 2800 008d 31       		.uleb128 0x31
 2801 008e 13       		.uleb128 0x13
 2802 008f 1C       		.uleb128 0x1c
 2803 0090 0B       		.uleb128 0xb
 2804 0091 00       		.byte	0
 2805 0092 00       		.byte	0
 2806 0093 0B       		.uleb128 0xb
 2807 0094 05       		.uleb128 0x5
 2808 0095 00       		.byte	0
 2809 0096 31       		.uleb128 0x31
 2810 0097 13       		.uleb128 0x13
 2811 0098 1C       		.uleb128 0x1c
 2812 0099 05       		.uleb128 0x5
 2813 009a 00       		.byte	0
 2814 009b 00       		.byte	0
 2815 009c 0C       		.uleb128 0xc
 2816 009d 1D       		.uleb128 0x1d
 2817 009e 01       		.byte	0x1
 2818 009f 31       		.uleb128 0x31
 2819 00a0 13       		.uleb128 0x13
 2820 00a1 52       		.uleb128 0x52
 2821 00a2 01       		.uleb128 0x1
 2822 00a3 55       		.uleb128 0x55
 2823 00a4 06       		.uleb128 0x6
 2824 00a5 58       		.uleb128 0x58
 2825 00a6 0B       		.uleb128 0xb
 2826 00a7 59       		.uleb128 0x59
 2827 00a8 0B       		.uleb128 0xb
 2828 00a9 00       		.byte	0
 2829 00aa 00       		.byte	0
 2830 00ab 0D       		.uleb128 0xd
 2831 00ac 2E       		.uleb128 0x2e
 2832 00ad 01       		.byte	0x1
 2833 00ae 3F       		.uleb128 0x3f
 2834 00af 0C       		.uleb128 0xc
 2835 00b0 03       		.uleb128 0x3
 2836 00b1 0E       		.uleb128 0xe
 2837 00b2 3A       		.uleb128 0x3a
 2838 00b3 0B       		.uleb128 0xb
 2839 00b4 3B       		.uleb128 0x3b
 2840 00b5 05       		.uleb128 0x5
 2841 00b6 27       		.uleb128 0x27
 2842 00b7 0C       		.uleb128 0xc
 2843 00b8 11       		.uleb128 0x11
 2844 00b9 01       		.uleb128 0x1
 2845 00ba 12       		.uleb128 0x12
 2846 00bb 01       		.uleb128 0x1
 2847 00bc 40       		.uleb128 0x40
 2848 00bd 06       		.uleb128 0x6
 2849 00be 9742     		.uleb128 0x2117
 2850 00c0 0C       		.uleb128 0xc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 80


 2851 00c1 01       		.uleb128 0x1
 2852 00c2 13       		.uleb128 0x13
 2853 00c3 00       		.byte	0
 2854 00c4 00       		.byte	0
 2855 00c5 0E       		.uleb128 0xe
 2856 00c6 34       		.uleb128 0x34
 2857 00c7 00       		.byte	0
 2858 00c8 03       		.uleb128 0x3
 2859 00c9 0E       		.uleb128 0xe
 2860 00ca 3A       		.uleb128 0x3a
 2861 00cb 0B       		.uleb128 0xb
 2862 00cc 3B       		.uleb128 0x3b
 2863 00cd 05       		.uleb128 0x5
 2864 00ce 49       		.uleb128 0x49
 2865 00cf 13       		.uleb128 0x13
 2866 00d0 02       		.uleb128 0x2
 2867 00d1 06       		.uleb128 0x6
 2868 00d2 00       		.byte	0
 2869 00d3 00       		.byte	0
 2870 00d4 0F       		.uleb128 0xf
 2871 00d5 898201   		.uleb128 0x4109
 2872 00d8 00       		.byte	0
 2873 00d9 11       		.uleb128 0x11
 2874 00da 01       		.uleb128 0x1
 2875 00db 31       		.uleb128 0x31
 2876 00dc 13       		.uleb128 0x13
 2877 00dd 00       		.byte	0
 2878 00de 00       		.byte	0
 2879 00df 10       		.uleb128 0x10
 2880 00e0 05       		.uleb128 0x5
 2881 00e1 00       		.byte	0
 2882 00e2 03       		.uleb128 0x3
 2883 00e3 0E       		.uleb128 0xe
 2884 00e4 3A       		.uleb128 0x3a
 2885 00e5 0B       		.uleb128 0xb
 2886 00e6 3B       		.uleb128 0x3b
 2887 00e7 05       		.uleb128 0x5
 2888 00e8 49       		.uleb128 0x49
 2889 00e9 13       		.uleb128 0x13
 2890 00ea 02       		.uleb128 0x2
 2891 00eb 06       		.uleb128 0x6
 2892 00ec 00       		.byte	0
 2893 00ed 00       		.byte	0
 2894 00ee 11       		.uleb128 0x11
 2895 00ef 2E       		.uleb128 0x2e
 2896 00f0 01       		.byte	0x1
 2897 00f1 3F       		.uleb128 0x3f
 2898 00f2 0C       		.uleb128 0xc
 2899 00f3 03       		.uleb128 0x3
 2900 00f4 0E       		.uleb128 0xe
 2901 00f5 3A       		.uleb128 0x3a
 2902 00f6 0B       		.uleb128 0xb
 2903 00f7 3B       		.uleb128 0x3b
 2904 00f8 05       		.uleb128 0x5
 2905 00f9 27       		.uleb128 0x27
 2906 00fa 0C       		.uleb128 0xc
 2907 00fb 11       		.uleb128 0x11
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 81


 2908 00fc 01       		.uleb128 0x1
 2909 00fd 12       		.uleb128 0x12
 2910 00fe 01       		.uleb128 0x1
 2911 00ff 40       		.uleb128 0x40
 2912 0100 0A       		.uleb128 0xa
 2913 0101 9742     		.uleb128 0x2117
 2914 0103 0C       		.uleb128 0xc
 2915 0104 01       		.uleb128 0x1
 2916 0105 13       		.uleb128 0x13
 2917 0106 00       		.byte	0
 2918 0107 00       		.byte	0
 2919 0108 12       		.uleb128 0x12
 2920 0109 2E       		.uleb128 0x2e
 2921 010a 00       		.byte	0
 2922 010b 3F       		.uleb128 0x3f
 2923 010c 0C       		.uleb128 0xc
 2924 010d 03       		.uleb128 0x3
 2925 010e 0E       		.uleb128 0xe
 2926 010f 3A       		.uleb128 0x3a
 2927 0110 0B       		.uleb128 0xb
 2928 0111 3B       		.uleb128 0x3b
 2929 0112 05       		.uleb128 0x5
 2930 0113 27       		.uleb128 0x27
 2931 0114 0C       		.uleb128 0xc
 2932 0115 49       		.uleb128 0x49
 2933 0116 13       		.uleb128 0x13
 2934 0117 11       		.uleb128 0x11
 2935 0118 01       		.uleb128 0x1
 2936 0119 12       		.uleb128 0x12
 2937 011a 01       		.uleb128 0x1
 2938 011b 40       		.uleb128 0x40
 2939 011c 0A       		.uleb128 0xa
 2940 011d 9742     		.uleb128 0x2117
 2941 011f 0C       		.uleb128 0xc
 2942 0120 00       		.byte	0
 2943 0121 00       		.byte	0
 2944 0122 13       		.uleb128 0x13
 2945 0123 2E       		.uleb128 0x2e
 2946 0124 01       		.byte	0x1
 2947 0125 31       		.uleb128 0x31
 2948 0126 13       		.uleb128 0x13
 2949 0127 11       		.uleb128 0x11
 2950 0128 01       		.uleb128 0x1
 2951 0129 12       		.uleb128 0x12
 2952 012a 01       		.uleb128 0x1
 2953 012b 40       		.uleb128 0x40
 2954 012c 0A       		.uleb128 0xa
 2955 012d 9742     		.uleb128 0x2117
 2956 012f 0C       		.uleb128 0xc
 2957 0130 01       		.uleb128 0x1
 2958 0131 13       		.uleb128 0x13
 2959 0132 00       		.byte	0
 2960 0133 00       		.byte	0
 2961 0134 14       		.uleb128 0x14
 2962 0135 05       		.uleb128 0x5
 2963 0136 00       		.byte	0
 2964 0137 31       		.uleb128 0x31
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 82


 2965 0138 13       		.uleb128 0x13
 2966 0139 02       		.uleb128 0x2
 2967 013a 06       		.uleb128 0x6
 2968 013b 00       		.byte	0
 2969 013c 00       		.byte	0
 2970 013d 15       		.uleb128 0x15
 2971 013e 2E       		.uleb128 0x2e
 2972 013f 01       		.byte	0x1
 2973 0140 3F       		.uleb128 0x3f
 2974 0141 0C       		.uleb128 0xc
 2975 0142 03       		.uleb128 0x3
 2976 0143 0E       		.uleb128 0xe
 2977 0144 3A       		.uleb128 0x3a
 2978 0145 0B       		.uleb128 0xb
 2979 0146 3B       		.uleb128 0x3b
 2980 0147 0B       		.uleb128 0xb
 2981 0148 27       		.uleb128 0x27
 2982 0149 0C       		.uleb128 0xc
 2983 014a 11       		.uleb128 0x11
 2984 014b 01       		.uleb128 0x1
 2985 014c 12       		.uleb128 0x12
 2986 014d 01       		.uleb128 0x1
 2987 014e 40       		.uleb128 0x40
 2988 014f 06       		.uleb128 0x6
 2989 0150 9742     		.uleb128 0x2117
 2990 0152 0C       		.uleb128 0xc
 2991 0153 01       		.uleb128 0x1
 2992 0154 13       		.uleb128 0x13
 2993 0155 00       		.byte	0
 2994 0156 00       		.byte	0
 2995 0157 16       		.uleb128 0x16
 2996 0158 34       		.uleb128 0x34
 2997 0159 00       		.byte	0
 2998 015a 03       		.uleb128 0x3
 2999 015b 0E       		.uleb128 0xe
 3000 015c 3A       		.uleb128 0x3a
 3001 015d 0B       		.uleb128 0xb
 3002 015e 3B       		.uleb128 0x3b
 3003 015f 0B       		.uleb128 0xb
 3004 0160 49       		.uleb128 0x49
 3005 0161 13       		.uleb128 0x13
 3006 0162 02       		.uleb128 0x2
 3007 0163 06       		.uleb128 0x6
 3008 0164 00       		.byte	0
 3009 0165 00       		.byte	0
 3010 0166 17       		.uleb128 0x17
 3011 0167 898201   		.uleb128 0x4109
 3012 016a 01       		.byte	0x1
 3013 016b 11       		.uleb128 0x11
 3014 016c 01       		.uleb128 0x1
 3015 016d 31       		.uleb128 0x31
 3016 016e 13       		.uleb128 0x13
 3017 016f 00       		.byte	0
 3018 0170 00       		.byte	0
 3019 0171 18       		.uleb128 0x18
 3020 0172 8A8201   		.uleb128 0x410a
 3021 0175 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 83


 3022 0176 02       		.uleb128 0x2
 3023 0177 0A       		.uleb128 0xa
 3024 0178 9142     		.uleb128 0x2111
 3025 017a 0A       		.uleb128 0xa
 3026 017b 00       		.byte	0
 3027 017c 00       		.byte	0
 3028 017d 19       		.uleb128 0x19
 3029 017e 05       		.uleb128 0x5
 3030 017f 00       		.byte	0
 3031 0180 31       		.uleb128 0x31
 3032 0181 13       		.uleb128 0x13
 3033 0182 02       		.uleb128 0x2
 3034 0183 0A       		.uleb128 0xa
 3035 0184 00       		.byte	0
 3036 0185 00       		.byte	0
 3037 0186 1A       		.uleb128 0x1a
 3038 0187 05       		.uleb128 0x5
 3039 0188 00       		.byte	0
 3040 0189 03       		.uleb128 0x3
 3041 018a 0E       		.uleb128 0xe
 3042 018b 3A       		.uleb128 0x3a
 3043 018c 0B       		.uleb128 0xb
 3044 018d 3B       		.uleb128 0x3b
 3045 018e 05       		.uleb128 0x5
 3046 018f 49       		.uleb128 0x49
 3047 0190 13       		.uleb128 0x13
 3048 0191 02       		.uleb128 0x2
 3049 0192 0A       		.uleb128 0xa
 3050 0193 00       		.byte	0
 3051 0194 00       		.byte	0
 3052 0195 1B       		.uleb128 0x1b
 3053 0196 34       		.uleb128 0x34
 3054 0197 00       		.byte	0
 3055 0198 03       		.uleb128 0x3
 3056 0199 0E       		.uleb128 0xe
 3057 019a 3A       		.uleb128 0x3a
 3058 019b 0B       		.uleb128 0xb
 3059 019c 3B       		.uleb128 0x3b
 3060 019d 0B       		.uleb128 0xb
 3061 019e 49       		.uleb128 0x49
 3062 019f 13       		.uleb128 0x13
 3063 01a0 3F       		.uleb128 0x3f
 3064 01a1 0C       		.uleb128 0xc
 3065 01a2 02       		.uleb128 0x2
 3066 01a3 0A       		.uleb128 0xa
 3067 01a4 00       		.byte	0
 3068 01a5 00       		.byte	0
 3069 01a6 1C       		.uleb128 0x1c
 3070 01a7 2E       		.uleb128 0x2e
 3071 01a8 00       		.byte	0
 3072 01a9 3F       		.uleb128 0x3f
 3073 01aa 0C       		.uleb128 0xc
 3074 01ab 03       		.uleb128 0x3
 3075 01ac 0E       		.uleb128 0xe
 3076 01ad 3A       		.uleb128 0x3a
 3077 01ae 0B       		.uleb128 0xb
 3078 01af 3B       		.uleb128 0x3b
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 84


 3079 01b0 0B       		.uleb128 0xb
 3080 01b1 27       		.uleb128 0x27
 3081 01b2 0C       		.uleb128 0xc
 3082 01b3 49       		.uleb128 0x49
 3083 01b4 13       		.uleb128 0x13
 3084 01b5 3C       		.uleb128 0x3c
 3085 01b6 0C       		.uleb128 0xc
 3086 01b7 00       		.byte	0
 3087 01b8 00       		.byte	0
 3088 01b9 1D       		.uleb128 0x1d
 3089 01ba 2E       		.uleb128 0x2e
 3090 01bb 01       		.byte	0x1
 3091 01bc 3F       		.uleb128 0x3f
 3092 01bd 0C       		.uleb128 0xc
 3093 01be 03       		.uleb128 0x3
 3094 01bf 0E       		.uleb128 0xe
 3095 01c0 3A       		.uleb128 0x3a
 3096 01c1 0B       		.uleb128 0xb
 3097 01c2 3B       		.uleb128 0x3b
 3098 01c3 0B       		.uleb128 0xb
 3099 01c4 27       		.uleb128 0x27
 3100 01c5 0C       		.uleb128 0xc
 3101 01c6 3C       		.uleb128 0x3c
 3102 01c7 0C       		.uleb128 0xc
 3103 01c8 00       		.byte	0
 3104 01c9 00       		.byte	0
 3105 01ca 1E       		.uleb128 0x1e
 3106 01cb 05       		.uleb128 0x5
 3107 01cc 00       		.byte	0
 3108 01cd 49       		.uleb128 0x49
 3109 01ce 13       		.uleb128 0x13
 3110 01cf 00       		.byte	0
 3111 01d0 00       		.byte	0
 3112 01d1 00       		.byte	0
 3113              		.section	.debug_loc,"",%progbits
 3114              	.Ldebug_loc0:
 3115              	.LLST0:
 3116 0000 00000000 		.4byte	.LFB3
 3117 0004 02000000 		.4byte	.LCFI0
 3118 0008 0200     		.2byte	0x2
 3119 000a 7D       		.byte	0x7d
 3120 000b 00       		.sleb128 0
 3121 000c 02000000 		.4byte	.LCFI0
 3122 0010 1C000000 		.4byte	.LFE3
 3123 0014 0200     		.2byte	0x2
 3124 0016 7D       		.byte	0x7d
 3125 0017 08       		.sleb128 8
 3126 0018 00000000 		.4byte	0
 3127 001c 00000000 		.4byte	0
 3128              	.LLST1:
 3129 0020 06000000 		.4byte	.LVL3
 3130 0024 13000000 		.4byte	.LVL4-1
 3131 0028 0100     		.2byte	0x1
 3132 002a 50       		.byte	0x50
 3133 002b 00000000 		.4byte	0
 3134 002f 00000000 		.4byte	0
 3135              	.LLST2:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 85


 3136 0033 00000000 		.4byte	.LFB4
 3137 0037 02000000 		.4byte	.LCFI1
 3138 003b 0200     		.2byte	0x2
 3139 003d 7D       		.byte	0x7d
 3140 003e 00       		.sleb128 0
 3141 003f 02000000 		.4byte	.LCFI1
 3142 0043 28000000 		.4byte	.LFE4
 3143 0047 0200     		.2byte	0x2
 3144 0049 7D       		.byte	0x7d
 3145 004a 08       		.sleb128 8
 3146 004b 00000000 		.4byte	0
 3147 004f 00000000 		.4byte	0
 3148              	.LLST3:
 3149 0053 00000000 		.4byte	.LVL5
 3150 0057 07000000 		.4byte	.LVL6-1
 3151 005b 0100     		.2byte	0x1
 3152 005d 50       		.byte	0x50
 3153 005e 07000000 		.4byte	.LVL6-1
 3154 0062 16000000 		.4byte	.LVL7
 3155 0066 0100     		.2byte	0x1
 3156 0068 54       		.byte	0x54
 3157 0069 16000000 		.4byte	.LVL7
 3158 006d 28000000 		.4byte	.LFE4
 3159 0071 0400     		.2byte	0x4
 3160 0073 F3       		.byte	0xf3
 3161 0074 01       		.uleb128 0x1
 3162 0075 50       		.byte	0x50
 3163 0076 9F       		.byte	0x9f
 3164 0077 00000000 		.4byte	0
 3165 007b 00000000 		.4byte	0
 3166              	.LLST4:
 3167 007f 08000000 		.4byte	.LVL6
 3168 0083 1B000000 		.4byte	.LVL8-1
 3169 0087 0100     		.2byte	0x1
 3170 0089 50       		.byte	0x50
 3171 008a 00000000 		.4byte	0
 3172 008e 00000000 		.4byte	0
 3173              	.LLST5:
 3174 0092 00000000 		.4byte	.LFB5
 3175 0096 02000000 		.4byte	.LCFI2
 3176 009a 0200     		.2byte	0x2
 3177 009c 7D       		.byte	0x7d
 3178 009d 00       		.sleb128 0
 3179 009e 02000000 		.4byte	.LCFI2
 3180 00a2 28000000 		.4byte	.LFE5
 3181 00a6 0200     		.2byte	0x2
 3182 00a8 7D       		.byte	0x7d
 3183 00a9 08       		.sleb128 8
 3184 00aa 00000000 		.4byte	0
 3185 00ae 00000000 		.4byte	0
 3186              	.LLST6:
 3187 00b2 00000000 		.4byte	.LVL9
 3188 00b6 07000000 		.4byte	.LVL10-1
 3189 00ba 0100     		.2byte	0x1
 3190 00bc 50       		.byte	0x50
 3191 00bd 07000000 		.4byte	.LVL10-1
 3192 00c1 16000000 		.4byte	.LVL11
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 86


 3193 00c5 0100     		.2byte	0x1
 3194 00c7 54       		.byte	0x54
 3195 00c8 16000000 		.4byte	.LVL11
 3196 00cc 28000000 		.4byte	.LFE5
 3197 00d0 0400     		.2byte	0x4
 3198 00d2 F3       		.byte	0xf3
 3199 00d3 01       		.uleb128 0x1
 3200 00d4 50       		.byte	0x50
 3201 00d5 9F       		.byte	0x9f
 3202 00d6 00000000 		.4byte	0
 3203 00da 00000000 		.4byte	0
 3204              	.LLST7:
 3205 00de 08000000 		.4byte	.LVL10
 3206 00e2 1B000000 		.4byte	.LVL12-1
 3207 00e6 0100     		.2byte	0x1
 3208 00e8 50       		.byte	0x50
 3209 00e9 00000000 		.4byte	0
 3210 00ed 00000000 		.4byte	0
 3211              	.LLST8:
 3212 00f1 00000000 		.4byte	.LFB6
 3213 00f5 02000000 		.4byte	.LCFI3
 3214 00f9 0200     		.2byte	0x2
 3215 00fb 7D       		.byte	0x7d
 3216 00fc 00       		.sleb128 0
 3217 00fd 02000000 		.4byte	.LCFI3
 3218 0101 28000000 		.4byte	.LFE6
 3219 0105 0200     		.2byte	0x2
 3220 0107 7D       		.byte	0x7d
 3221 0108 08       		.sleb128 8
 3222 0109 00000000 		.4byte	0
 3223 010d 00000000 		.4byte	0
 3224              	.LLST9:
 3225 0111 00000000 		.4byte	.LVL13
 3226 0115 07000000 		.4byte	.LVL14-1
 3227 0119 0100     		.2byte	0x1
 3228 011b 50       		.byte	0x50
 3229 011c 07000000 		.4byte	.LVL14-1
 3230 0120 16000000 		.4byte	.LVL15
 3231 0124 0100     		.2byte	0x1
 3232 0126 54       		.byte	0x54
 3233 0127 16000000 		.4byte	.LVL15
 3234 012b 28000000 		.4byte	.LFE6
 3235 012f 0400     		.2byte	0x4
 3236 0131 F3       		.byte	0xf3
 3237 0132 01       		.uleb128 0x1
 3238 0133 50       		.byte	0x50
 3239 0134 9F       		.byte	0x9f
 3240 0135 00000000 		.4byte	0
 3241 0139 00000000 		.4byte	0
 3242              	.LLST10:
 3243 013d 08000000 		.4byte	.LVL14
 3244 0141 1B000000 		.4byte	.LVL16-1
 3245 0145 0100     		.2byte	0x1
 3246 0147 50       		.byte	0x50
 3247 0148 00000000 		.4byte	0
 3248 014c 00000000 		.4byte	0
 3249              	.LLST11:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 87


 3250 0150 00000000 		.4byte	.LFB7
 3251 0154 02000000 		.4byte	.LCFI4
 3252 0158 0200     		.2byte	0x2
 3253 015a 7D       		.byte	0x7d
 3254 015b 00       		.sleb128 0
 3255 015c 02000000 		.4byte	.LCFI4
 3256 0160 2C000000 		.4byte	.LFE7
 3257 0164 0200     		.2byte	0x2
 3258 0166 7D       		.byte	0x7d
 3259 0167 08       		.sleb128 8
 3260 0168 00000000 		.4byte	0
 3261 016c 00000000 		.4byte	0
 3262              	.LLST12:
 3263 0170 00000000 		.4byte	.LVL17
 3264 0174 07000000 		.4byte	.LVL18-1
 3265 0178 0100     		.2byte	0x1
 3266 017a 50       		.byte	0x50
 3267 017b 07000000 		.4byte	.LVL18-1
 3268 017f 18000000 		.4byte	.LVL19
 3269 0183 0100     		.2byte	0x1
 3270 0185 54       		.byte	0x54
 3271 0186 18000000 		.4byte	.LVL19
 3272 018a 2C000000 		.4byte	.LFE7
 3273 018e 0400     		.2byte	0x4
 3274 0190 F3       		.byte	0xf3
 3275 0191 01       		.uleb128 0x1
 3276 0192 50       		.byte	0x50
 3277 0193 9F       		.byte	0x9f
 3278 0194 00000000 		.4byte	0
 3279 0198 00000000 		.4byte	0
 3280              	.LLST13:
 3281 019c 08000000 		.4byte	.LVL18
 3282 01a0 21000000 		.4byte	.LVL20-1
 3283 01a4 0100     		.2byte	0x1
 3284 01a6 50       		.byte	0x50
 3285 01a7 00000000 		.4byte	0
 3286 01ab 00000000 		.4byte	0
 3287              	.LLST14:
 3288 01af 00000000 		.4byte	.LVL21
 3289 01b3 06000000 		.4byte	.LVL22
 3290 01b7 0100     		.2byte	0x1
 3291 01b9 50       		.byte	0x50
 3292 01ba 06000000 		.4byte	.LVL22
 3293 01be 10000000 		.4byte	.LFE8
 3294 01c2 0400     		.2byte	0x4
 3295 01c4 F3       		.byte	0xf3
 3296 01c5 01       		.uleb128 0x1
 3297 01c6 50       		.byte	0x50
 3298 01c7 9F       		.byte	0x9f
 3299 01c8 00000000 		.4byte	0
 3300 01cc 00000000 		.4byte	0
 3301              	.LLST15:
 3302 01d0 00000000 		.4byte	.LFB9
 3303 01d4 02000000 		.4byte	.LCFI5
 3304 01d8 0200     		.2byte	0x2
 3305 01da 7D       		.byte	0x7d
 3306 01db 00       		.sleb128 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 88


 3307 01dc 02000000 		.4byte	.LCFI5
 3308 01e0 28000000 		.4byte	.LFE9
 3309 01e4 0200     		.2byte	0x2
 3310 01e6 7D       		.byte	0x7d
 3311 01e7 08       		.sleb128 8
 3312 01e8 00000000 		.4byte	0
 3313 01ec 00000000 		.4byte	0
 3314              	.LLST16:
 3315 01f0 00000000 		.4byte	.LVL23
 3316 01f4 07000000 		.4byte	.LVL24-1
 3317 01f8 0100     		.2byte	0x1
 3318 01fa 50       		.byte	0x50
 3319 01fb 07000000 		.4byte	.LVL24-1
 3320 01ff 18000000 		.4byte	.LVL25
 3321 0203 0100     		.2byte	0x1
 3322 0205 54       		.byte	0x54
 3323 0206 18000000 		.4byte	.LVL25
 3324 020a 28000000 		.4byte	.LFE9
 3325 020e 0400     		.2byte	0x4
 3326 0210 F3       		.byte	0xf3
 3327 0211 01       		.uleb128 0x1
 3328 0212 50       		.byte	0x50
 3329 0213 9F       		.byte	0x9f
 3330 0214 00000000 		.4byte	0
 3331 0218 00000000 		.4byte	0
 3332              	.LLST17:
 3333 021c 08000000 		.4byte	.LVL24
 3334 0220 21000000 		.4byte	.LVL26-1
 3335 0224 0100     		.2byte	0x1
 3336 0226 50       		.byte	0x50
 3337 0227 00000000 		.4byte	0
 3338 022b 00000000 		.4byte	0
 3339              	.LLST18:
 3340 022f 00000000 		.4byte	.LFB10
 3341 0233 02000000 		.4byte	.LCFI6
 3342 0237 0200     		.2byte	0x2
 3343 0239 7D       		.byte	0x7d
 3344 023a 00       		.sleb128 0
 3345 023b 02000000 		.4byte	.LCFI6
 3346 023f 28000000 		.4byte	.LFE10
 3347 0243 0200     		.2byte	0x2
 3348 0245 7D       		.byte	0x7d
 3349 0246 08       		.sleb128 8
 3350 0247 00000000 		.4byte	0
 3351 024b 00000000 		.4byte	0
 3352              	.LLST19:
 3353 024f 00000000 		.4byte	.LVL27
 3354 0253 07000000 		.4byte	.LVL28-1
 3355 0257 0100     		.2byte	0x1
 3356 0259 50       		.byte	0x50
 3357 025a 07000000 		.4byte	.LVL28-1
 3358 025e 18000000 		.4byte	.LVL29
 3359 0262 0100     		.2byte	0x1
 3360 0264 54       		.byte	0x54
 3361 0265 18000000 		.4byte	.LVL29
 3362 0269 28000000 		.4byte	.LFE10
 3363 026d 0400     		.2byte	0x4
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 89


 3364 026f F3       		.byte	0xf3
 3365 0270 01       		.uleb128 0x1
 3366 0271 50       		.byte	0x50
 3367 0272 9F       		.byte	0x9f
 3368 0273 00000000 		.4byte	0
 3369 0277 00000000 		.4byte	0
 3370              	.LLST20:
 3371 027b 08000000 		.4byte	.LVL28
 3372 027f 21000000 		.4byte	.LVL30-1
 3373 0283 0100     		.2byte	0x1
 3374 0285 50       		.byte	0x50
 3375 0286 00000000 		.4byte	0
 3376 028a 00000000 		.4byte	0
 3377              	.LLST21:
 3378 028e 00000000 		.4byte	.LFB11
 3379 0292 02000000 		.4byte	.LCFI7
 3380 0296 0200     		.2byte	0x2
 3381 0298 7D       		.byte	0x7d
 3382 0299 00       		.sleb128 0
 3383 029a 02000000 		.4byte	.LCFI7
 3384 029e 2C000000 		.4byte	.LFE11
 3385 02a2 0200     		.2byte	0x2
 3386 02a4 7D       		.byte	0x7d
 3387 02a5 08       		.sleb128 8
 3388 02a6 00000000 		.4byte	0
 3389 02aa 00000000 		.4byte	0
 3390              	.LLST22:
 3391 02ae 00000000 		.4byte	.LVL31
 3392 02b2 07000000 		.4byte	.LVL32-1
 3393 02b6 0100     		.2byte	0x1
 3394 02b8 50       		.byte	0x50
 3395 02b9 07000000 		.4byte	.LVL32-1
 3396 02bd 10000000 		.4byte	.LVL33
 3397 02c1 0100     		.2byte	0x1
 3398 02c3 54       		.byte	0x54
 3399 02c4 10000000 		.4byte	.LVL33
 3400 02c8 2C000000 		.4byte	.LFE11
 3401 02cc 0400     		.2byte	0x4
 3402 02ce F3       		.byte	0xf3
 3403 02cf 01       		.uleb128 0x1
 3404 02d0 50       		.byte	0x50
 3405 02d1 9F       		.byte	0x9f
 3406 02d2 00000000 		.4byte	0
 3407 02d6 00000000 		.4byte	0
 3408              	.LLST23:
 3409 02da 08000000 		.4byte	.LVL32
 3410 02de 1F000000 		.4byte	.LVL34-1
 3411 02e2 0100     		.2byte	0x1
 3412 02e4 50       		.byte	0x50
 3413 02e5 00000000 		.4byte	0
 3414 02e9 00000000 		.4byte	0
 3415              	.LLST24:
 3416 02ed 00000000 		.4byte	.LFB12
 3417 02f1 02000000 		.4byte	.LCFI8
 3418 02f5 0200     		.2byte	0x2
 3419 02f7 7D       		.byte	0x7d
 3420 02f8 00       		.sleb128 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 90


 3421 02f9 02000000 		.4byte	.LCFI8
 3422 02fd 28000000 		.4byte	.LFE12
 3423 0301 0200     		.2byte	0x2
 3424 0303 7D       		.byte	0x7d
 3425 0304 08       		.sleb128 8
 3426 0305 00000000 		.4byte	0
 3427 0309 00000000 		.4byte	0
 3428              	.LLST25:
 3429 030d 00000000 		.4byte	.LVL35
 3430 0311 07000000 		.4byte	.LVL36-1
 3431 0315 0100     		.2byte	0x1
 3432 0317 50       		.byte	0x50
 3433 0318 07000000 		.4byte	.LVL36-1
 3434 031c 16000000 		.4byte	.LVL37
 3435 0320 0100     		.2byte	0x1
 3436 0322 54       		.byte	0x54
 3437 0323 16000000 		.4byte	.LVL37
 3438 0327 28000000 		.4byte	.LFE12
 3439 032b 0400     		.2byte	0x4
 3440 032d F3       		.byte	0xf3
 3441 032e 01       		.uleb128 0x1
 3442 032f 50       		.byte	0x50
 3443 0330 9F       		.byte	0x9f
 3444 0331 00000000 		.4byte	0
 3445 0335 00000000 		.4byte	0
 3446              	.LLST26:
 3447 0339 08000000 		.4byte	.LVL36
 3448 033d 1B000000 		.4byte	.LVL38-1
 3449 0341 0100     		.2byte	0x1
 3450 0343 50       		.byte	0x50
 3451 0344 00000000 		.4byte	0
 3452 0348 00000000 		.4byte	0
 3453              	.LLST27:
 3454 034c 00000000 		.4byte	.LVL39
 3455 0350 04000000 		.4byte	.LVL40
 3456 0354 0100     		.2byte	0x1
 3457 0356 50       		.byte	0x50
 3458 0357 04000000 		.4byte	.LVL40
 3459 035b 0C000000 		.4byte	.LFE13
 3460 035f 0400     		.2byte	0x4
 3461 0361 F3       		.byte	0xf3
 3462 0362 01       		.uleb128 0x1
 3463 0363 50       		.byte	0x50
 3464 0364 9F       		.byte	0x9f
 3465 0365 00000000 		.4byte	0
 3466 0369 00000000 		.4byte	0
 3467              	.LLST28:
 3468 036d 00000000 		.4byte	.LFB15
 3469 0371 02000000 		.4byte	.LCFI9
 3470 0375 0200     		.2byte	0x2
 3471 0377 7D       		.byte	0x7d
 3472 0378 00       		.sleb128 0
 3473 0379 02000000 		.4byte	.LCFI9
 3474 037d 28000000 		.4byte	.LFE15
 3475 0381 0200     		.2byte	0x2
 3476 0383 7D       		.byte	0x7d
 3477 0384 08       		.sleb128 8
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 91


 3478 0385 00000000 		.4byte	0
 3479 0389 00000000 		.4byte	0
 3480              	.LLST29:
 3481 038d 00000000 		.4byte	.LVL41
 3482 0391 07000000 		.4byte	.LVL42-1
 3483 0395 0100     		.2byte	0x1
 3484 0397 50       		.byte	0x50
 3485 0398 07000000 		.4byte	.LVL42-1
 3486 039c 16000000 		.4byte	.LVL43
 3487 03a0 0100     		.2byte	0x1
 3488 03a2 54       		.byte	0x54
 3489 03a3 16000000 		.4byte	.LVL43
 3490 03a7 28000000 		.4byte	.LFE15
 3491 03ab 0400     		.2byte	0x4
 3492 03ad F3       		.byte	0xf3
 3493 03ae 01       		.uleb128 0x1
 3494 03af 50       		.byte	0x50
 3495 03b0 9F       		.byte	0x9f
 3496 03b1 00000000 		.4byte	0
 3497 03b5 00000000 		.4byte	0
 3498              	.LLST30:
 3499 03b9 08000000 		.4byte	.LVL42
 3500 03bd 1B000000 		.4byte	.LVL44-1
 3501 03c1 0100     		.2byte	0x1
 3502 03c3 50       		.byte	0x50
 3503 03c4 00000000 		.4byte	0
 3504 03c8 00000000 		.4byte	0
 3505              	.LLST31:
 3506 03cc 00000000 		.4byte	.LVL45
 3507 03d0 04000000 		.4byte	.LVL46
 3508 03d4 0100     		.2byte	0x1
 3509 03d6 50       		.byte	0x50
 3510 03d7 04000000 		.4byte	.LVL46
 3511 03db 0C000000 		.4byte	.LFE16
 3512 03df 0400     		.2byte	0x4
 3513 03e1 F3       		.byte	0xf3
 3514 03e2 01       		.uleb128 0x1
 3515 03e3 50       		.byte	0x50
 3516 03e4 9F       		.byte	0x9f
 3517 03e5 00000000 		.4byte	0
 3518 03e9 00000000 		.4byte	0
 3519              	.LLST32:
 3520 03ed 00000000 		.4byte	.LFB18
 3521 03f1 02000000 		.4byte	.LCFI10
 3522 03f5 0200     		.2byte	0x2
 3523 03f7 7D       		.byte	0x7d
 3524 03f8 00       		.sleb128 0
 3525 03f9 02000000 		.4byte	.LCFI10
 3526 03fd 24000000 		.4byte	.LFE18
 3527 0401 0200     		.2byte	0x2
 3528 0403 7D       		.byte	0x7d
 3529 0404 08       		.sleb128 8
 3530 0405 00000000 		.4byte	0
 3531 0409 00000000 		.4byte	0
 3532              	.LLST33:
 3533 040d 00000000 		.4byte	.LVL47
 3534 0411 07000000 		.4byte	.LVL48-1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 92


 3535 0415 0100     		.2byte	0x1
 3536 0417 50       		.byte	0x50
 3537 0418 07000000 		.4byte	.LVL48-1
 3538 041c 1E000000 		.4byte	.LVL50
 3539 0420 0100     		.2byte	0x1
 3540 0422 54       		.byte	0x54
 3541 0423 1E000000 		.4byte	.LVL50
 3542 0427 24000000 		.4byte	.LFE18
 3543 042b 0400     		.2byte	0x4
 3544 042d F3       		.byte	0xf3
 3545 042e 01       		.uleb128 0x1
 3546 042f 50       		.byte	0x50
 3547 0430 9F       		.byte	0x9f
 3548 0431 00000000 		.4byte	0
 3549 0435 00000000 		.4byte	0
 3550              	.LLST34:
 3551 0439 08000000 		.4byte	.LVL48
 3552 043d 1D000000 		.4byte	.LVL49-1
 3553 0441 0100     		.2byte	0x1
 3554 0443 50       		.byte	0x50
 3555 0444 00000000 		.4byte	0
 3556 0448 00000000 		.4byte	0
 3557              	.LLST35:
 3558 044c 00000000 		.4byte	.LVL51
 3559 0450 04000000 		.4byte	.LVL52
 3560 0454 0100     		.2byte	0x1
 3561 0456 50       		.byte	0x50
 3562 0457 04000000 		.4byte	.LVL52
 3563 045b 0C000000 		.4byte	.LFE19
 3564 045f 0400     		.2byte	0x4
 3565 0461 F3       		.byte	0xf3
 3566 0462 01       		.uleb128 0x1
 3567 0463 50       		.byte	0x50
 3568 0464 9F       		.byte	0x9f
 3569 0465 00000000 		.4byte	0
 3570 0469 00000000 		.4byte	0
 3571              	.LLST36:
 3572 046d 00000000 		.4byte	.LFB21
 3573 0471 02000000 		.4byte	.LCFI11
 3574 0475 0200     		.2byte	0x2
 3575 0477 7D       		.byte	0x7d
 3576 0478 00       		.sleb128 0
 3577 0479 02000000 		.4byte	.LCFI11
 3578 047d 28000000 		.4byte	.LFE21
 3579 0481 0200     		.2byte	0x2
 3580 0483 7D       		.byte	0x7d
 3581 0484 08       		.sleb128 8
 3582 0485 00000000 		.4byte	0
 3583 0489 00000000 		.4byte	0
 3584              	.LLST37:
 3585 048d 00000000 		.4byte	.LVL53
 3586 0491 07000000 		.4byte	.LVL54-1
 3587 0495 0100     		.2byte	0x1
 3588 0497 50       		.byte	0x50
 3589 0498 07000000 		.4byte	.LVL54-1
 3590 049c 18000000 		.4byte	.LVL55
 3591 04a0 0100     		.2byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 93


 3592 04a2 54       		.byte	0x54
 3593 04a3 18000000 		.4byte	.LVL55
 3594 04a7 28000000 		.4byte	.LFE21
 3595 04ab 0400     		.2byte	0x4
 3596 04ad F3       		.byte	0xf3
 3597 04ae 01       		.uleb128 0x1
 3598 04af 50       		.byte	0x50
 3599 04b0 9F       		.byte	0x9f
 3600 04b1 00000000 		.4byte	0
 3601 04b5 00000000 		.4byte	0
 3602              	.LLST38:
 3603 04b9 08000000 		.4byte	.LVL54
 3604 04bd 21000000 		.4byte	.LVL56-1
 3605 04c1 0100     		.2byte	0x1
 3606 04c3 50       		.byte	0x50
 3607 04c4 00000000 		.4byte	0
 3608 04c8 00000000 		.4byte	0
 3609              	.LLST39:
 3610 04cc 00000000 		.4byte	.LVL57
 3611 04d0 04000000 		.4byte	.LVL58
 3612 04d4 0100     		.2byte	0x1
 3613 04d6 50       		.byte	0x50
 3614 04d7 04000000 		.4byte	.LVL58
 3615 04db 0C000000 		.4byte	.LFE22
 3616 04df 0400     		.2byte	0x4
 3617 04e1 F3       		.byte	0xf3
 3618 04e2 01       		.uleb128 0x1
 3619 04e3 50       		.byte	0x50
 3620 04e4 9F       		.byte	0x9f
 3621 04e5 00000000 		.4byte	0
 3622 04e9 00000000 		.4byte	0
 3623              	.LLST40:
 3624 04ed 00000000 		.4byte	.LVL59
 3625 04f1 04000000 		.4byte	.LVL60
 3626 04f5 0100     		.2byte	0x1
 3627 04f7 50       		.byte	0x50
 3628 04f8 04000000 		.4byte	.LVL60
 3629 04fc 0C000000 		.4byte	.LFE24
 3630 0500 0400     		.2byte	0x4
 3631 0502 F3       		.byte	0xf3
 3632 0503 01       		.uleb128 0x1
 3633 0504 50       		.byte	0x50
 3634 0505 9F       		.byte	0x9f
 3635 0506 00000000 		.4byte	0
 3636 050a 00000000 		.4byte	0
 3637              	.LLST41:
 3638 050e 00000000 		.4byte	.LFB28
 3639 0512 02000000 		.4byte	.LCFI12
 3640 0516 0200     		.2byte	0x2
 3641 0518 7D       		.byte	0x7d
 3642 0519 00       		.sleb128 0
 3643 051a 02000000 		.4byte	.LCFI12
 3644 051e 24000000 		.4byte	.LFE28
 3645 0522 0200     		.2byte	0x2
 3646 0524 7D       		.byte	0x7d
 3647 0525 08       		.sleb128 8
 3648 0526 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 94


 3649 052a 00000000 		.4byte	0
 3650              	.LLST42:
 3651 052e 00000000 		.4byte	.LVL61
 3652 0532 07000000 		.4byte	.LVL62-1
 3653 0536 0100     		.2byte	0x1
 3654 0538 50       		.byte	0x50
 3655 0539 07000000 		.4byte	.LVL62-1
 3656 053d 16000000 		.4byte	.LVL63
 3657 0541 0100     		.2byte	0x1
 3658 0543 54       		.byte	0x54
 3659 0544 16000000 		.4byte	.LVL63
 3660 0548 24000000 		.4byte	.LFE28
 3661 054c 0400     		.2byte	0x4
 3662 054e F3       		.byte	0xf3
 3663 054f 01       		.uleb128 0x1
 3664 0550 50       		.byte	0x50
 3665 0551 9F       		.byte	0x9f
 3666 0552 00000000 		.4byte	0
 3667 0556 00000000 		.4byte	0
 3668              	.LLST43:
 3669 055a 08000000 		.4byte	.LVL62
 3670 055e 1B000000 		.4byte	.LVL64-1
 3671 0562 0100     		.2byte	0x1
 3672 0564 50       		.byte	0x50
 3673 0565 00000000 		.4byte	0
 3674 0569 00000000 		.4byte	0
 3675              	.LLST44:
 3676 056d 00000000 		.4byte	.LFB29
 3677 0571 02000000 		.4byte	.LCFI13
 3678 0575 0200     		.2byte	0x2
 3679 0577 7D       		.byte	0x7d
 3680 0578 00       		.sleb128 0
 3681 0579 02000000 		.4byte	.LCFI13
 3682 057d 24000000 		.4byte	.LFE29
 3683 0581 0200     		.2byte	0x2
 3684 0583 7D       		.byte	0x7d
 3685 0584 08       		.sleb128 8
 3686 0585 00000000 		.4byte	0
 3687 0589 00000000 		.4byte	0
 3688              	.LLST45:
 3689 058d 00000000 		.4byte	.LVL65
 3690 0591 07000000 		.4byte	.LVL66-1
 3691 0595 0100     		.2byte	0x1
 3692 0597 50       		.byte	0x50
 3693 0598 07000000 		.4byte	.LVL66-1
 3694 059c 10000000 		.4byte	.LVL67
 3695 05a0 0100     		.2byte	0x1
 3696 05a2 54       		.byte	0x54
 3697 05a3 10000000 		.4byte	.LVL67
 3698 05a7 24000000 		.4byte	.LFE29
 3699 05ab 0400     		.2byte	0x4
 3700 05ad F3       		.byte	0xf3
 3701 05ae 01       		.uleb128 0x1
 3702 05af 50       		.byte	0x50
 3703 05b0 9F       		.byte	0x9f
 3704 05b1 00000000 		.4byte	0
 3705 05b5 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 95


 3706              	.LLST46:
 3707 05b9 08000000 		.4byte	.LVL66
 3708 05bd 1D000000 		.4byte	.LVL68-1
 3709 05c1 0100     		.2byte	0x1
 3710 05c3 50       		.byte	0x50
 3711 05c4 00000000 		.4byte	0
 3712 05c8 00000000 		.4byte	0
 3713              	.LLST47:
 3714 05cc 00000000 		.4byte	.LFB30
 3715 05d0 02000000 		.4byte	.LCFI14
 3716 05d4 0200     		.2byte	0x2
 3717 05d6 7D       		.byte	0x7d
 3718 05d7 00       		.sleb128 0
 3719 05d8 02000000 		.4byte	.LCFI14
 3720 05dc 28000000 		.4byte	.LFE30
 3721 05e0 0200     		.2byte	0x2
 3722 05e2 7D       		.byte	0x7d
 3723 05e3 08       		.sleb128 8
 3724 05e4 00000000 		.4byte	0
 3725 05e8 00000000 		.4byte	0
 3726              	.LLST48:
 3727 05ec 00000000 		.4byte	.LVL69
 3728 05f0 07000000 		.4byte	.LVL70-1
 3729 05f4 0100     		.2byte	0x1
 3730 05f6 50       		.byte	0x50
 3731 05f7 07000000 		.4byte	.LVL70-1
 3732 05fb 10000000 		.4byte	.LVL71
 3733 05ff 0100     		.2byte	0x1
 3734 0601 54       		.byte	0x54
 3735 0602 10000000 		.4byte	.LVL71
 3736 0606 28000000 		.4byte	.LFE30
 3737 060a 0400     		.2byte	0x4
 3738 060c F3       		.byte	0xf3
 3739 060d 01       		.uleb128 0x1
 3740 060e 50       		.byte	0x50
 3741 060f 9F       		.byte	0x9f
 3742 0610 00000000 		.4byte	0
 3743 0614 00000000 		.4byte	0
 3744              	.LLST49:
 3745 0618 08000000 		.4byte	.LVL70
 3746 061c 1D000000 		.4byte	.LVL72-1
 3747 0620 0100     		.2byte	0x1
 3748 0622 50       		.byte	0x50
 3749 0623 00000000 		.4byte	0
 3750 0627 00000000 		.4byte	0
 3751              	.LLST50:
 3752 062b 00000000 		.4byte	.LFB31
 3753 062f 02000000 		.4byte	.LCFI15
 3754 0633 0200     		.2byte	0x2
 3755 0635 7D       		.byte	0x7d
 3756 0636 00       		.sleb128 0
 3757 0637 02000000 		.4byte	.LCFI15
 3758 063b 24000000 		.4byte	.LFE31
 3759 063f 0200     		.2byte	0x2
 3760 0641 7D       		.byte	0x7d
 3761 0642 08       		.sleb128 8
 3762 0643 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 96


 3763 0647 00000000 		.4byte	0
 3764              	.LLST51:
 3765 064b 00000000 		.4byte	.LVL73
 3766 064f 07000000 		.4byte	.LVL74-1
 3767 0653 0100     		.2byte	0x1
 3768 0655 50       		.byte	0x50
 3769 0656 07000000 		.4byte	.LVL74-1
 3770 065a 10000000 		.4byte	.LVL75
 3771 065e 0100     		.2byte	0x1
 3772 0660 54       		.byte	0x54
 3773 0661 10000000 		.4byte	.LVL75
 3774 0665 24000000 		.4byte	.LFE31
 3775 0669 0400     		.2byte	0x4
 3776 066b F3       		.byte	0xf3
 3777 066c 01       		.uleb128 0x1
 3778 066d 50       		.byte	0x50
 3779 066e 9F       		.byte	0x9f
 3780 066f 00000000 		.4byte	0
 3781 0673 00000000 		.4byte	0
 3782              	.LLST52:
 3783 0677 08000000 		.4byte	.LVL74
 3784 067b 1D000000 		.4byte	.LVL76-1
 3785 067f 0100     		.2byte	0x1
 3786 0681 50       		.byte	0x50
 3787 0682 00000000 		.4byte	0
 3788 0686 00000000 		.4byte	0
 3789              	.LLST53:
 3790 068a 00000000 		.4byte	.LFB32
 3791 068e 02000000 		.4byte	.LCFI16
 3792 0692 0200     		.2byte	0x2
 3793 0694 7D       		.byte	0x7d
 3794 0695 00       		.sleb128 0
 3795 0696 02000000 		.4byte	.LCFI16
 3796 069a 24000000 		.4byte	.LFE32
 3797 069e 0200     		.2byte	0x2
 3798 06a0 7D       		.byte	0x7d
 3799 06a1 08       		.sleb128 8
 3800 06a2 00000000 		.4byte	0
 3801 06a6 00000000 		.4byte	0
 3802              	.LLST54:
 3803 06aa 00000000 		.4byte	.LVL77
 3804 06ae 07000000 		.4byte	.LVL78-1
 3805 06b2 0100     		.2byte	0x1
 3806 06b4 50       		.byte	0x50
 3807 06b5 07000000 		.4byte	.LVL78-1
 3808 06b9 10000000 		.4byte	.LVL79
 3809 06bd 0100     		.2byte	0x1
 3810 06bf 54       		.byte	0x54
 3811 06c0 10000000 		.4byte	.LVL79
 3812 06c4 24000000 		.4byte	.LFE32
 3813 06c8 0400     		.2byte	0x4
 3814 06ca F3       		.byte	0xf3
 3815 06cb 01       		.uleb128 0x1
 3816 06cc 50       		.byte	0x50
 3817 06cd 9F       		.byte	0x9f
 3818 06ce 00000000 		.4byte	0
 3819 06d2 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 97


 3820              	.LLST55:
 3821 06d6 08000000 		.4byte	.LVL78
 3822 06da 1D000000 		.4byte	.LVL80-1
 3823 06de 0100     		.2byte	0x1
 3824 06e0 50       		.byte	0x50
 3825 06e1 00000000 		.4byte	0
 3826 06e5 00000000 		.4byte	0
 3827              	.LLST56:
 3828 06e9 00000000 		.4byte	.LFB33
 3829 06ed 02000000 		.4byte	.LCFI17
 3830 06f1 0200     		.2byte	0x2
 3831 06f3 7D       		.byte	0x7d
 3832 06f4 00       		.sleb128 0
 3833 06f5 02000000 		.4byte	.LCFI17
 3834 06f9 1C000000 		.4byte	.LFE33
 3835 06fd 0200     		.2byte	0x2
 3836 06ff 7D       		.byte	0x7d
 3837 0700 10       		.sleb128 16
 3838 0701 00000000 		.4byte	0
 3839 0705 00000000 		.4byte	0
 3840              	.LLST57:
 3841 0709 00000000 		.4byte	.LVL81
 3842 070d 09000000 		.4byte	.LVL82-1
 3843 0711 0100     		.2byte	0x1
 3844 0713 50       		.byte	0x50
 3845 0714 09000000 		.4byte	.LVL82-1
 3846 0718 0E000000 		.4byte	.LVL83
 3847 071c 0100     		.2byte	0x1
 3848 071e 55       		.byte	0x55
 3849 071f 0E000000 		.4byte	.LVL83
 3850 0723 1C000000 		.4byte	.LFE33
 3851 0727 0400     		.2byte	0x4
 3852 0729 F3       		.byte	0xf3
 3853 072a 01       		.uleb128 0x1
 3854 072b 50       		.byte	0x50
 3855 072c 9F       		.byte	0x9f
 3856 072d 00000000 		.4byte	0
 3857 0731 00000000 		.4byte	0
 3858              	.LLST58:
 3859 0735 00000000 		.4byte	.LVL81
 3860 0739 09000000 		.4byte	.LVL82-1
 3861 073d 0100     		.2byte	0x1
 3862 073f 51       		.byte	0x51
 3863 0740 09000000 		.4byte	.LVL82-1
 3864 0744 14000000 		.4byte	.LVL85
 3865 0748 0100     		.2byte	0x1
 3866 074a 54       		.byte	0x54
 3867 074b 14000000 		.4byte	.LVL85
 3868 074f 1C000000 		.4byte	.LFE33
 3869 0753 0400     		.2byte	0x4
 3870 0755 F3       		.byte	0xf3
 3871 0756 01       		.uleb128 0x1
 3872 0757 51       		.byte	0x51
 3873 0758 9F       		.byte	0x9f
 3874 0759 00000000 		.4byte	0
 3875 075d 00000000 		.4byte	0
 3876              	.LLST59:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 98


 3877 0761 0A000000 		.4byte	.LVL82
 3878 0765 13000000 		.4byte	.LVL84-1
 3879 0769 0100     		.2byte	0x1
 3880 076b 50       		.byte	0x50
 3881 076c 00000000 		.4byte	0
 3882 0770 00000000 		.4byte	0
 3883              	.LLST60:
 3884 0774 00000000 		.4byte	.LFB1
 3885 0778 02000000 		.4byte	.LCFI18
 3886 077c 0200     		.2byte	0x2
 3887 077e 7D       		.byte	0x7d
 3888 077f 00       		.sleb128 0
 3889 0780 02000000 		.4byte	.LCFI18
 3890 0784 24000000 		.4byte	.LFE1
 3891 0788 0200     		.2byte	0x2
 3892 078a 7D       		.byte	0x7d
 3893 078b 08       		.sleb128 8
 3894 078c 00000000 		.4byte	0
 3895 0790 00000000 		.4byte	0
 3896              	.LLST61:
 3897 0794 06000000 		.4byte	.LVL86
 3898 0798 13000000 		.4byte	.LVL87-1
 3899 079c 0100     		.2byte	0x1
 3900 079e 50       		.byte	0x50
 3901 079f 00000000 		.4byte	0
 3902 07a3 00000000 		.4byte	0
 3903              	.LLST62:
 3904 07a7 00000000 		.4byte	.LFB2
 3905 07ab 02000000 		.4byte	.LCFI19
 3906 07af 0200     		.2byte	0x2
 3907 07b1 7D       		.byte	0x7d
 3908 07b2 00       		.sleb128 0
 3909 07b3 02000000 		.4byte	.LCFI19
 3910 07b7 1C000000 		.4byte	.LFE2
 3911 07bb 0200     		.2byte	0x2
 3912 07bd 7D       		.byte	0x7d
 3913 07be 08       		.sleb128 8
 3914 07bf 00000000 		.4byte	0
 3915 07c3 00000000 		.4byte	0
 3916              		.section	.debug_aranges,"",%progbits
 3917 0000 54010000 		.4byte	0x154
 3918 0004 0200     		.2byte	0x2
 3919 0006 00000000 		.4byte	.Ldebug_info0
 3920 000a 04       		.byte	0x4
 3921 000b 00       		.byte	0
 3922 000c 0000     		.2byte	0
 3923 000e 0000     		.2byte	0
 3924 0010 00000000 		.4byte	.LFB0
 3925 0014 38000000 		.4byte	.LFE0-.LFB0
 3926 0018 00000000 		.4byte	.LFB3
 3927 001c 1C000000 		.4byte	.LFE3-.LFB3
 3928 0020 00000000 		.4byte	.LFB4
 3929 0024 28000000 		.4byte	.LFE4-.LFB4
 3930 0028 00000000 		.4byte	.LFB5
 3931 002c 28000000 		.4byte	.LFE5-.LFB5
 3932 0030 00000000 		.4byte	.LFB6
 3933 0034 28000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 99


 3934 0038 00000000 		.4byte	.LFB7
 3935 003c 2C000000 		.4byte	.LFE7-.LFB7
 3936 0040 00000000 		.4byte	.LFB8
 3937 0044 10000000 		.4byte	.LFE8-.LFB8
 3938 0048 00000000 		.4byte	.LFB9
 3939 004c 28000000 		.4byte	.LFE9-.LFB9
 3940 0050 00000000 		.4byte	.LFB10
 3941 0054 28000000 		.4byte	.LFE10-.LFB10
 3942 0058 00000000 		.4byte	.LFB11
 3943 005c 2C000000 		.4byte	.LFE11-.LFB11
 3944 0060 00000000 		.4byte	.LFB12
 3945 0064 28000000 		.4byte	.LFE12-.LFB12
 3946 0068 00000000 		.4byte	.LFB13
 3947 006c 0C000000 		.4byte	.LFE13-.LFB13
 3948 0070 00000000 		.4byte	.LFB14
 3949 0074 0C000000 		.4byte	.LFE14-.LFB14
 3950 0078 00000000 		.4byte	.LFB15
 3951 007c 28000000 		.4byte	.LFE15-.LFB15
 3952 0080 00000000 		.4byte	.LFB16
 3953 0084 0C000000 		.4byte	.LFE16-.LFB16
 3954 0088 00000000 		.4byte	.LFB17
 3955 008c 0C000000 		.4byte	.LFE17-.LFB17
 3956 0090 00000000 		.4byte	.LFB18
 3957 0094 24000000 		.4byte	.LFE18-.LFB18
 3958 0098 00000000 		.4byte	.LFB19
 3959 009c 0C000000 		.4byte	.LFE19-.LFB19
 3960 00a0 00000000 		.4byte	.LFB20
 3961 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3962 00a8 00000000 		.4byte	.LFB21
 3963 00ac 28000000 		.4byte	.LFE21-.LFB21
 3964 00b0 00000000 		.4byte	.LFB22
 3965 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3966 00b8 00000000 		.4byte	.LFB23
 3967 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3968 00c0 00000000 		.4byte	.LFB24
 3969 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3970 00c8 00000000 		.4byte	.LFB25
 3971 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3972 00d0 00000000 		.4byte	.LFB26
 3973 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3974 00d8 00000000 		.4byte	.LFB27
 3975 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3976 00e0 00000000 		.4byte	.LFB28
 3977 00e4 24000000 		.4byte	.LFE28-.LFB28
 3978 00e8 00000000 		.4byte	.LFB29
 3979 00ec 24000000 		.4byte	.LFE29-.LFB29
 3980 00f0 00000000 		.4byte	.LFB30
 3981 00f4 28000000 		.4byte	.LFE30-.LFB30
 3982 00f8 00000000 		.4byte	.LFB31
 3983 00fc 24000000 		.4byte	.LFE31-.LFB31
 3984 0100 00000000 		.4byte	.LFB32
 3985 0104 24000000 		.4byte	.LFE32-.LFB32
 3986 0108 00000000 		.4byte	.LFB33
 3987 010c 1C000000 		.4byte	.LFE33-.LFB33
 3988 0110 00000000 		.4byte	.LFB1
 3989 0114 24000000 		.4byte	.LFE1-.LFB1
 3990 0118 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 100


 3991 011c 1C000000 		.4byte	.LFE2-.LFB2
 3992 0120 00000000 		.4byte	.LFB34
 3993 0124 14000000 		.4byte	.LFE34-.LFB34
 3994 0128 00000000 		.4byte	.LFB35
 3995 012c 0C000000 		.4byte	.LFE35-.LFB35
 3996 0130 00000000 		.4byte	.LFB36
 3997 0134 0C000000 		.4byte	.LFE36-.LFB36
 3998 0138 00000000 		.4byte	.LFB37
 3999 013c 0C000000 		.4byte	.LFE37-.LFB37
 4000 0140 00000000 		.4byte	.LFB38
 4001 0144 0C000000 		.4byte	.LFE38-.LFB38
 4002 0148 00000000 		.4byte	.LFB39
 4003 014c 0C000000 		.4byte	.LFE39-.LFB39
 4004 0150 00000000 		.4byte	0
 4005 0154 00000000 		.4byte	0
 4006              		.section	.debug_ranges,"",%progbits
 4007              	.Ldebug_ranges0:
 4008 0000 08000000 		.4byte	.LBB8
 4009 0004 0A000000 		.4byte	.LBE8
 4010 0008 0C000000 		.4byte	.LBB12
 4011 000c 0E000000 		.4byte	.LBE12
 4012 0010 10000000 		.4byte	.LBB13
 4013 0014 12000000 		.4byte	.LBE13
 4014 0018 00000000 		.4byte	0
 4015 001c 00000000 		.4byte	0
 4016 0020 12000000 		.4byte	.LBB14
 4017 0024 16000000 		.4byte	.LBE14
 4018 0028 18000000 		.4byte	.LBB20
 4019 002c 1A000000 		.4byte	.LBE20
 4020 0030 00000000 		.4byte	0
 4021 0034 00000000 		.4byte	0
 4022 0038 16000000 		.4byte	.LBB17
 4023 003c 18000000 		.4byte	.LBE17
 4024 0040 1A000000 		.4byte	.LBB21
 4025 0044 1C000000 		.4byte	.LBE21
 4026 0048 00000000 		.4byte	0
 4027 004c 00000000 		.4byte	0
 4028 0050 00000000 		.4byte	.LFB0
 4029 0054 38000000 		.4byte	.LFE0
 4030 0058 00000000 		.4byte	.LFB3
 4031 005c 1C000000 		.4byte	.LFE3
 4032 0060 00000000 		.4byte	.LFB4
 4033 0064 28000000 		.4byte	.LFE4
 4034 0068 00000000 		.4byte	.LFB5
 4035 006c 28000000 		.4byte	.LFE5
 4036 0070 00000000 		.4byte	.LFB6
 4037 0074 28000000 		.4byte	.LFE6
 4038 0078 00000000 		.4byte	.LFB7
 4039 007c 2C000000 		.4byte	.LFE7
 4040 0080 00000000 		.4byte	.LFB8
 4041 0084 10000000 		.4byte	.LFE8
 4042 0088 00000000 		.4byte	.LFB9
 4043 008c 28000000 		.4byte	.LFE9
 4044 0090 00000000 		.4byte	.LFB10
 4045 0094 28000000 		.4byte	.LFE10
 4046 0098 00000000 		.4byte	.LFB11
 4047 009c 2C000000 		.4byte	.LFE11
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 101


 4048 00a0 00000000 		.4byte	.LFB12
 4049 00a4 28000000 		.4byte	.LFE12
 4050 00a8 00000000 		.4byte	.LFB13
 4051 00ac 0C000000 		.4byte	.LFE13
 4052 00b0 00000000 		.4byte	.LFB14
 4053 00b4 0C000000 		.4byte	.LFE14
 4054 00b8 00000000 		.4byte	.LFB15
 4055 00bc 28000000 		.4byte	.LFE15
 4056 00c0 00000000 		.4byte	.LFB16
 4057 00c4 0C000000 		.4byte	.LFE16
 4058 00c8 00000000 		.4byte	.LFB17
 4059 00cc 0C000000 		.4byte	.LFE17
 4060 00d0 00000000 		.4byte	.LFB18
 4061 00d4 24000000 		.4byte	.LFE18
 4062 00d8 00000000 		.4byte	.LFB19
 4063 00dc 0C000000 		.4byte	.LFE19
 4064 00e0 00000000 		.4byte	.LFB20
 4065 00e4 0C000000 		.4byte	.LFE20
 4066 00e8 00000000 		.4byte	.LFB21
 4067 00ec 28000000 		.4byte	.LFE21
 4068 00f0 00000000 		.4byte	.LFB22
 4069 00f4 0C000000 		.4byte	.LFE22
 4070 00f8 00000000 		.4byte	.LFB23
 4071 00fc 0C000000 		.4byte	.LFE23
 4072 0100 00000000 		.4byte	.LFB24
 4073 0104 0C000000 		.4byte	.LFE24
 4074 0108 00000000 		.4byte	.LFB25
 4075 010c 0C000000 		.4byte	.LFE25
 4076 0110 00000000 		.4byte	.LFB26
 4077 0114 0C000000 		.4byte	.LFE26
 4078 0118 00000000 		.4byte	.LFB27
 4079 011c 0C000000 		.4byte	.LFE27
 4080 0120 00000000 		.4byte	.LFB28
 4081 0124 24000000 		.4byte	.LFE28
 4082 0128 00000000 		.4byte	.LFB29
 4083 012c 24000000 		.4byte	.LFE29
 4084 0130 00000000 		.4byte	.LFB30
 4085 0134 28000000 		.4byte	.LFE30
 4086 0138 00000000 		.4byte	.LFB31
 4087 013c 24000000 		.4byte	.LFE31
 4088 0140 00000000 		.4byte	.LFB32
 4089 0144 24000000 		.4byte	.LFE32
 4090 0148 00000000 		.4byte	.LFB33
 4091 014c 1C000000 		.4byte	.LFE33
 4092 0150 00000000 		.4byte	.LFB1
 4093 0154 24000000 		.4byte	.LFE1
 4094 0158 00000000 		.4byte	.LFB2
 4095 015c 1C000000 		.4byte	.LFE2
 4096 0160 00000000 		.4byte	.LFB34
 4097 0164 14000000 		.4byte	.LFE34
 4098 0168 00000000 		.4byte	.LFB35
 4099 016c 0C000000 		.4byte	.LFE35
 4100 0170 00000000 		.4byte	.LFB36
 4101 0174 0C000000 		.4byte	.LFE36
 4102 0178 00000000 		.4byte	.LFB37
 4103 017c 0C000000 		.4byte	.LFE37
 4104 0180 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 102


 4105 0184 0C000000 		.4byte	.LFE38
 4106 0188 00000000 		.4byte	.LFB39
 4107 018c 0C000000 		.4byte	.LFE39
 4108 0190 00000000 		.4byte	0
 4109 0194 00000000 		.4byte	0
 4110              		.section	.debug_line,"",%progbits
 4111              	.Ldebug_line0:
 4112 0000 FC030000 		.section	.debug_str,"MS",%progbits,1
 4112      02005400 
 4112      00000201 
 4112      FB0E0D00 
 4112      01010101 
 4113              	.LASF66:
 4114 0000 53657276 		.ascii	"ServoTimer_SetCountMode\000"
 4114      6F54696D 
 4114      65725F53 
 4114      6574436F 
 4114      756E744D 
 4115              	.LASF44:
 4116 0018 636F756E 		.ascii	"count\000"
 4116      7400
 4117              	.LASF77:
 4118 001e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ServoTimer.c\000"
 4118      6E657261 
 4118      7465645F 
 4118      536F7572 
 4118      63655C50 
 4119              	.LASF81:
 4120 0044 43794578 		.ascii	"CyExitCriticalSection\000"
 4120      69744372 
 4120      69746963 
 4120      616C5365 
 4120      6374696F 
 4121              	.LASF24:
 4122 005a 53657276 		.ascii	"ServoTimer_SetMode\000"
 4122      6F54696D 
 4122      65725F53 
 4122      65744D6F 
 4122      646500
 4123              	.LASF63:
 4124 006d 53657276 		.ascii	"ServoTimer_SetReloadMode\000"
 4124      6F54696D 
 4124      65725F53 
 4124      65745265 
 4124      6C6F6164 
 4125              	.LASF17:
 4126 0086 53657276 		.ascii	"ServoTimer_WritePeriod\000"
 4126      6F54696D 
 4126      65725F57 
 4126      72697465 
 4126      50657269 
 4127              	.LASF79:
 4128 009d 53657276 		.ascii	"ServoTimer_initVar\000"
 4128      6F54696D 
 4128      65725F69 
 4128      6E697456 
 4128      617200
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 103


 4129              	.LASF19:
 4130 00b0 70657269 		.ascii	"period\000"
 4130      6F6400
 4131              	.LASF7:
 4132 00b7 6C6F6E67 		.ascii	"long long unsigned int\000"
 4132      206C6F6E 
 4132      6720756E 
 4132      7369676E 
 4132      65642069 
 4133              	.LASF67:
 4134 00ce 53657276 		.ascii	"ServoTimer_TriggerCommand\000"
 4134      6F54696D 
 4134      65725F54 
 4134      72696767 
 4134      6572436F 
 4135              	.LASF23:
 4136 00e8 53657276 		.ascii	"ServoTimer_Stop\000"
 4136      6F54696D 
 4136      65725F53 
 4136      746F7000 
 4137              	.LASF28:
 4138 00f8 71644D6F 		.ascii	"qdMode\000"
 4138      646500
 4139              	.LASF6:
 4140 00ff 6C6F6E67 		.ascii	"long long int\000"
 4140      206C6F6E 
 4140      6720696E 
 4140      7400
 4141              	.LASF0:
 4142 010d 7369676E 		.ascii	"signed char\000"
 4142      65642063 
 4142      68617200 
 4143              	.LASF78:
 4144 0119 433A5C55 		.ascii	"C:\\Users\\SNFU\\Documents\\T-50_UAV_Project\\Softw"
 4144      73657273 
 4144      5C534E46 
 4144      555C446F 
 4144      63756D65 
 4145 0147 6172655C 		.ascii	"are\\T-50_Project\\T-50_Project.cydsn\000"
 4145      542D3530 
 4145      5F50726F 
 4145      6A656374 
 4145      5C542D35 
 4146              	.LASF20:
 4147 016b 53657276 		.ascii	"ServoTimer_WriteCompare\000"
 4147      6F54696D 
 4147      65725F57 
 4147      72697465 
 4147      436F6D70 
 4148              	.LASF4:
 4149 0183 6C6F6E67 		.ascii	"long int\000"
 4149      20696E74 
 4149      00
 4150              	.LASF59:
 4151 018c 53657276 		.ascii	"ServoTimer_ReadCapture\000"
 4151      6F54696D 
 4151      65725F52 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 104


 4151      65616443 
 4151      61707475 
 4152              	.LASF9:
 4153 01a3 75696E74 		.ascii	"uint8\000"
 4153      3800
 4154              	.LASF26:
 4155 01a9 53657276 		.ascii	"ServoTimer_SetQDMode\000"
 4155      6F54696D 
 4155      65725F53 
 4155      65745144 
 4155      4D6F6465 
 4156              	.LASF12:
 4157 01be 646F7562 		.ascii	"double\000"
 4157      6C6500
 4158              	.LASF10:
 4159 01c5 75696E74 		.ascii	"uint32\000"
 4159      333200
 4160              	.LASF31:
 4161 01cc 53657276 		.ascii	"ServoTimer_SetOneShot\000"
 4161      6F54696D 
 4161      65725F53 
 4161      65744F6E 
 4161      6553686F 
 4162              	.LASF72:
 4163 01e2 53657276 		.ascii	"ServoTimer_GetInterruptSourceMasked\000"
 4163      6F54696D 
 4163      65725F47 
 4163      6574496E 
 4163      74657272 
 4164              	.LASF62:
 4165 0206 74726967 		.ascii	"triggerMode\000"
 4165      6765724D 
 4165      6F646500 
 4166              	.LASF42:
 4167 0212 6D61736B 		.ascii	"mask\000"
 4167      00
 4168              	.LASF40:
 4169 0217 64656164 		.ascii	"deadTime\000"
 4169      54696D65 
 4169      00
 4170              	.LASF71:
 4171 0220 53657276 		.ascii	"ServoTimer_ReadStatus\000"
 4171      6F54696D 
 4171      65725F52 
 4171      65616453 
 4171      74617475 
 4172              	.LASF8:
 4173 0236 756E7369 		.ascii	"unsigned int\000"
 4173      676E6564 
 4173      20696E74 
 4173      00
 4174              	.LASF45:
 4175 0243 53657276 		.ascii	"ServoTimer_SetCounterMode\000"
 4175      6F54696D 
 4175      65725F53 
 4175      6574436F 
 4175      756E7465 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 105


 4176              	.LASF69:
 4177 025d 53657276 		.ascii	"ServoTimer_Enable\000"
 4177      6F54696D 
 4177      65725F45 
 4177      6E61626C 
 4177      6500
 4178              	.LASF73:
 4179 026f 53657276 		.ascii	"ServoTimer_GetInterruptSource\000"
 4179      6F54696D 
 4179      65725F47 
 4179      6574496E 
 4179      74657272 
 4180              	.LASF68:
 4181 028d 636F6D6D 		.ascii	"command\000"
 4181      616E6400 
 4182              	.LASF5:
 4183 0295 6C6F6E67 		.ascii	"long unsigned int\000"
 4183      20756E73 
 4183      69676E65 
 4183      6420696E 
 4183      7400
 4184              	.LASF34:
 4185 02a7 6D6F6465 		.ascii	"modeMask\000"
 4185      4D61736B 
 4185      00
 4186              	.LASF41:
 4187 02b0 53657276 		.ascii	"ServoTimer_SetPWMInvert\000"
 4187      6F54696D 
 4187      65725F53 
 4187      65745057 
 4187      4D496E76 
 4188              	.LASF80:
 4189 02c8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4189      74657243 
 4189      72697469 
 4189      63616C53 
 4189      65637469 
 4190              	.LASF64:
 4191 02df 53657276 		.ascii	"ServoTimer_SetStartMode\000"
 4191      6F54696D 
 4191      65725F53 
 4191      65745374 
 4191      6172744D 
 4192              	.LASF56:
 4193 02f7 53657276 		.ascii	"ServoTimer_WriteCompareBuf\000"
 4193      6F54696D 
 4193      65725F57 
 4193      72697465 
 4193      436F6D70 
 4194              	.LASF3:
 4195 0312 73686F72 		.ascii	"short unsigned int\000"
 4195      7420756E 
 4195      7369676E 
 4195      65642069 
 4195      6E7400
 4196              	.LASF51:
 4197 0325 53657276 		.ascii	"ServoTimer_WritePeriodBuf\000"
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 106


 4197      6F54696D 
 4197      65725F57 
 4197      72697465 
 4197      50657269 
 4198              	.LASF32:
 4199 033f 6F6E6553 		.ascii	"oneShotEnable\000"
 4199      686F7445 
 4199      6E61626C 
 4199      6500
 4200              	.LASF70:
 4201 034d 53657276 		.ascii	"ServoTimer_Start\000"
 4201      6F54696D 
 4201      65725F53 
 4201      74617274 
 4201      00
 4202              	.LASF61:
 4203 035e 53657276 		.ascii	"ServoTimer_SetCaptureMode\000"
 4203      6F54696D 
 4203      65725F53 
 4203      65744361 
 4203      70747572 
 4204              	.LASF14:
 4205 0378 72656733 		.ascii	"reg32\000"
 4205      3200
 4206              	.LASF60:
 4207 037e 53657276 		.ascii	"ServoTimer_ReadCaptureBuf\000"
 4207      6F54696D 
 4207      65725F52 
 4207      65616443 
 4207      61707475 
 4208              	.LASF15:
 4209 0398 73697A65 		.ascii	"sizetype\000"
 4209      74797065 
 4209      00
 4210              	.LASF22:
 4211 03a1 53657276 		.ascii	"ServoTimer_Init\000"
 4211      6F54696D 
 4211      65725F49 
 4211      6E697400 
 4212              	.LASF36:
 4213 03b1 73796E63 		.ascii	"syncKillEnable\000"
 4213      4B696C6C 
 4213      456E6162 
 4213      6C6500
 4214              	.LASF37:
 4215 03c0 53657276 		.ascii	"ServoTimer_SetPWMStopOnKill\000"
 4215      6F54696D 
 4215      65725F53 
 4215      65745057 
 4215      4D53746F 
 4216              	.LASF48:
 4217 03dc 53657276 		.ascii	"ServoTimer_ReadPeriod\000"
 4217      6F54696D 
 4217      65725F52 
 4217      65616450 
 4217      6572696F 
 4218              	.LASF29:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 107


 4219 03f2 53657276 		.ascii	"ServoTimer_SetPrescaler\000"
 4219      6F54696D 
 4219      65725F53 
 4219      65745072 
 4219      65736361 
 4220              	.LASF21:
 4221 040a 636F6D70 		.ascii	"compare\000"
 4221      61726500 
 4222              	.LASF55:
 4223 0412 53657276 		.ascii	"ServoTimer_ReadCompare\000"
 4223      6F54696D 
 4223      65725F52 
 4223      65616443 
 4223      6F6D7061 
 4224              	.LASF11:
 4225 0429 666C6F61 		.ascii	"float\000"
 4225      7400
 4226              	.LASF30:
 4227 042f 70726573 		.ascii	"prescaler\000"
 4227      63616C65 
 4227      7200
 4228              	.LASF76:
 4229 0439 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4229      4320342E 
 4229      372E3320 
 4229      32303133 
 4229      30333132 
 4230 046c 616E6368 		.ascii	"anch revision 196615]\000"
 4230      20726576 
 4230      6973696F 
 4230      6E203139 
 4230      36363135 
 4231              	.LASF1:
 4232 0482 756E7369 		.ascii	"unsigned char\000"
 4232      676E6564 
 4232      20636861 
 4232      7200
 4233              	.LASF38:
 4234 0490 73746F70 		.ascii	"stopOnKillEnable\000"
 4234      4F6E4B69 
 4234      6C6C456E 
 4234      61626C65 
 4234      00
 4235              	.LASF2:
 4236 04a1 73686F72 		.ascii	"short int\000"
 4236      7420696E 
 4236      7400
 4237              	.LASF35:
 4238 04ab 53657276 		.ascii	"ServoTimer_SetPWMSyncKill\000"
 4238      6F54696D 
 4238      65725F53 
 4238      65745057 
 4238      4D53796E 
 4239              	.LASF33:
 4240 04c5 53657276 		.ascii	"ServoTimer_SetPWMMode\000"
 4240      6F54696D 
 4240      65725F53 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 108


 4240      65745057 
 4240      4D4D6F64 
 4241              	.LASF18:
 4242 04db 696E7465 		.ascii	"interruptMask\000"
 4242      72727570 
 4242      744D6173 
 4242      6B00
 4243              	.LASF47:
 4244 04e9 53657276 		.ascii	"ServoTimer_ReadCounter\000"
 4244      6F54696D 
 4244      65725F52 
 4244      65616443 
 4244      6F756E74 
 4245              	.LASF16:
 4246 0500 53657276 		.ascii	"ServoTimer_SetInterruptMode\000"
 4246      6F54696D 
 4246      65725F53 
 4246      6574496E 
 4246      74657272 
 4247              	.LASF13:
 4248 051c 63686172 		.ascii	"char\000"
 4248      00
 4249              	.LASF27:
 4250 0521 6D6F6465 		.ascii	"mode\000"
 4250      00
 4251              	.LASF53:
 4252 0526 53657276 		.ascii	"ServoTimer_ReadPeriodBuf\000"
 4252      6F54696D 
 4252      65725F52 
 4252      65616450 
 4252      6572696F 
 4253              	.LASF46:
 4254 053f 636F756E 		.ascii	"counterMode\000"
 4254      7465724D 
 4254      6F646500 
 4255              	.LASF43:
 4256 054b 53657276 		.ascii	"ServoTimer_WriteCounter\000"
 4256      6F54696D 
 4256      65725F57 
 4256      72697465 
 4256      436F756E 
 4257              	.LASF74:
 4258 0563 53657276 		.ascii	"ServoTimer_ClearInterrupt\000"
 4258      6F54696D 
 4258      65725F43 
 4258      6C656172 
 4258      496E7465 
 4259              	.LASF57:
 4260 057d 636F6D70 		.ascii	"compareBuf\000"
 4260      61726542 
 4260      756600
 4261              	.LASF25:
 4262 0588 656E6162 		.ascii	"enableInterrupts\000"
 4262      6C65496E 
 4262      74657272 
 4262      75707473 
 4262      00
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccm1gazw.s 			page 109


 4263              	.LASF54:
 4264 0599 53657276 		.ascii	"ServoTimer_SetPeriodSwap\000"
 4264      6F54696D 
 4264      65725F53 
 4264      65745065 
 4264      72696F64 
 4265              	.LASF75:
 4266 05b2 53657276 		.ascii	"ServoTimer_SetInterrupt\000"
 4266      6F54696D 
 4266      65725F53 
 4266      6574496E 
 4266      74657272 
 4267              	.LASF58:
 4268 05ca 53657276 		.ascii	"ServoTimer_ReadCompareBuf\000"
 4268      6F54696D 
 4268      65725F52 
 4268      65616443 
 4268      6F6D7061 
 4269              	.LASF49:
 4270 05e4 53657276 		.ascii	"ServoTimer_SetCompareSwap\000"
 4270      6F54696D 
 4270      65725F53 
 4270      6574436F 
 4270      6D706172 
 4271              	.LASF65:
 4272 05fe 53657276 		.ascii	"ServoTimer_SetStopMode\000"
 4272      6F54696D 
 4272      65725F53 
 4272      65745374 
 4272      6F704D6F 
 4273              	.LASF50:
 4274 0615 73776170 		.ascii	"swapEnable\000"
 4274      456E6162 
 4274      6C6500
 4275              	.LASF39:
 4276 0620 53657276 		.ascii	"ServoTimer_SetPWMDeadTime\000"
 4276      6F54696D 
 4276      65725F53 
 4276      65745057 
 4276      4D446561 
 4277              	.LASF52:
 4278 063a 70657269 		.ascii	"periodBuf\000"
 4278      6F644275 
 4278      6600
 4279              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
