ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PPMCounter.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PPMCounter_Init,"ax",%progbits
  18              		.align	1
  19              		.global	PPMCounter_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PPMCounter_Init, %function
  23              	PPMCounter_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PPMCounter.c"
   1:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PPMCounter.c **** * File Name: PPMCounter.c
   3:.\Generated_Source\PSoC4/PPMCounter.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/PPMCounter.c **** *
   5:.\Generated_Source\PSoC4/PPMCounter.c **** * Description:
   6:.\Generated_Source\PSoC4/PPMCounter.c **** *  This file provides the source code to the API for the PPMCounter
   7:.\Generated_Source\PSoC4/PPMCounter.c **** *  component
   8:.\Generated_Source\PSoC4/PPMCounter.c **** *
   9:.\Generated_Source\PSoC4/PPMCounter.c **** * Note:
  10:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
  11:.\Generated_Source\PSoC4/PPMCounter.c **** *
  12:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PPMCounter.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PPMCounter.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PPMCounter.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PPMCounter.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PPMCounter.c **** 
  19:.\Generated_Source\PSoC4/PPMCounter.c **** #include "PPMCounter.h"
  20:.\Generated_Source\PSoC4/PPMCounter.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/PPMCounter.c **** 
  22:.\Generated_Source\PSoC4/PPMCounter.c **** uint8 PPMCounter_initVar = 0u;
  23:.\Generated_Source\PSoC4/PPMCounter.c **** 
  24:.\Generated_Source\PSoC4/PPMCounter.c **** 
  25:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Init
  27:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PPMCounter.c **** *
  29:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
  30:.\Generated_Source\PSoC4/PPMCounter.c **** *  Initialize/Restore default PPMCounter configuration.
  31:.\Generated_Source\PSoC4/PPMCounter.c **** *
  32:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 2


  33:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
  34:.\Generated_Source\PSoC4/PPMCounter.c **** *
  35:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
  36:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
  37:.\Generated_Source\PSoC4/PPMCounter.c **** *
  38:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Init(void)
  40:.\Generated_Source\PSoC4/PPMCounter.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  41:.\Generated_Source\PSoC4/PPMCounter.c **** 
  42:.\Generated_Source\PSoC4/PPMCounter.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__QUAD == PPMCounter_CONFIG)
  44:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PPMCounter.c ****         (((uint32)(PPMCounter_QUAD_ENCODING_MODES     << PPMCounter_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_CONFIG                  << PPMCounter_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__QUAD == PPMCounter_CONFIG) */
  48:.\Generated_Source\PSoC4/PPMCounter.c **** 
  49:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__PWM_SEL == PPMCounter_CONFIG)
  50:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_CONTROL_REG =
  51:.\Generated_Source\PSoC4/PPMCounter.c ****         (((uint32)(PPMCounter_PWM_STOP_EVENT          << PPMCounter_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_PWM_OUT_INVERT          << PPMCounter_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_PWM_OUT_N_INVERT        << PPMCounter_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_PWM_MODE                << PPMCounter_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PPMCounter.c **** 
  56:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM_PR == PPMCounter_PWM_MODE)
  57:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PPMCounter.c ****             ((uint32)(PPMCounter_PWM_RUN_MODE         << PPMCounter_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PPMCounter.c **** 
  60:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCounter(PPMCounter_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PPMCounter.c ****         #else
  62:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |=
  63:.\Generated_Source\PSoC4/PPMCounter.c ****             (((uint32)(PPMCounter_PWM_ALIGN           << PPMCounter_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/PPMCounter.c ****              ((uint32)(PPMCounter_PWM_KILL_EVENT      << PPMCounter_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM_PR == PPMCounter_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PPMCounter.c **** 
  67:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM_DT == PPMCounter_PWM_MODE)
  68:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PPMCounter.c ****             ((uint32)(PPMCounter_PWM_DEAD_TIME_CYCLE  << PPMCounter_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM_DT == PPMCounter_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PPMCounter.c **** 
  72:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM == PPMCounter_PWM_MODE)
  73:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_CONTROL_REG |=
  74:.\Generated_Source\PSoC4/PPMCounter.c ****             ((uint32)PPMCounter_PWM_PRESCALER         << PPMCounter_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM == PPMCounter_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__PWM_SEL == PPMCounter_CONFIG) */
  77:.\Generated_Source\PSoC4/PPMCounter.c **** 
  78:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__TIMER == PPMCounter_CONFIG)
  79:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_CONTROL_REG =
  28              		.loc 1 79 0
  29 0000 8022     		mov	r2, #128
  30 0002 074B     		ldr	r3, .L2
  31 0004 9004     		lsl	r0, r2, #18
  32 0006 1860     		str	r0, [r3]
  80:.\Generated_Source\PSoC4/PPMCounter.c ****         (((uint32)(PPMCounter_TC_PRESCALER            << PPMCounter_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_TC_COUNTER_MODE         << PPMCounter_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_TC_RUN_MODE             << PPMCounter_ONESHOT_SHIFT))     |
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 3


  83:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_TC_COMP_CAP_MODE        << PPMCounter_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__TIMER == PPMCounter_CONFIG) */
  85:.\Generated_Source\PSoC4/PPMCounter.c **** 
  86:.\Generated_Source\PSoC4/PPMCounter.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__QUAD == PPMCounter_CONFIG)
  88:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PPMCounter.c ****         (((uint32)(PPMCounter_QUAD_PHIA_SIGNAL_MODE   << PPMCounter_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_QUAD_INDEX_SIGNAL_MODE  << PPMCounter_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_QUAD_STOP_SIGNAL_MODE   << PPMCounter_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_QUAD_PHIB_SIGNAL_MODE   << PPMCounter_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__QUAD == PPMCounter_CONFIG) */
  94:.\Generated_Source\PSoC4/PPMCounter.c **** 
  95:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__PWM_SEL == PPMCounter_CONFIG)
  96:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  =
  97:.\Generated_Source\PSoC4/PPMCounter.c ****         (((uint32)(PPMCounter_PWM_SWITCH_SIGNAL_MODE  << PPMCounter_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_PWM_COUNT_SIGNAL_MODE   << PPMCounter_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_PWM_RELOAD_SIGNAL_MODE  << PPMCounter_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_PWM_STOP_SIGNAL_MODE    << PPMCounter_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_PWM_START_SIGNAL_MODE   << PPMCounter_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__PWM_SEL == PPMCounter_CONFIG) */
 103:.\Generated_Source\PSoC4/PPMCounter.c **** 
 104:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__TIMER == PPMCounter_CONFIG)
 105:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  =
  33              		.loc 1 105 0
  34 0008 064A     		ldr	r2, .L2+4
  35              	.LBB6:
  36              	.LBB7:
 106:.\Generated_Source\PSoC4/PPMCounter.c ****         (((uint32)(PPMCounter_TC_CAPTURE_SIGNAL_MODE  << PPMCounter_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_TC_COUNT_SIGNAL_MODE    << PPMCounter_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_TC_RELOAD_SIGNAL_MODE   << PPMCounter_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_TC_STOP_SIGNAL_MODE     << PPMCounter_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PPMCounter.c ****          ((uint32)(PPMCounter_TC_START_SIGNAL_MODE    << PPMCounter_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__TIMER == PPMCounter_CONFIG) */
 112:.\Generated_Source\PSoC4/PPMCounter.c **** 
 113:.\Generated_Source\PSoC4/PPMCounter.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__QUAD == PPMCounter_CONFIG)
 115:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_SetInterruptMode(PPMCounter_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__QUAD == PPMCounter_CONFIG) */
 117:.\Generated_Source\PSoC4/PPMCounter.c **** 
 118:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__PWM_SEL == PPMCounter_CONFIG)
 119:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_SetInterruptMode(PPMCounter_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__PWM_SEL == PPMCounter_CONFIG) */
 121:.\Generated_Source\PSoC4/PPMCounter.c **** 
 122:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__TIMER == PPMCounter_CONFIG)
 123:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_SetInterruptMode(PPMCounter_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__TIMER == PPMCounter_CONFIG) */
 125:.\Generated_Source\PSoC4/PPMCounter.c **** 
 126:.\Generated_Source\PSoC4/PPMCounter.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__TIMER == PPMCounter_CONFIG)
 128:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WritePeriod(PPMCounter_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PPMCounter.c **** 
 130:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__COUNT_DOWN == PPMCounter_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCounter(PPMCounter_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__COUNT_DOWN == PPMCounter_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/PPMCounter.c **** 
 134:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__COMPARE == PPMCounter_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCompare(PPMCounter_TC_COMPARE_VALUE);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 4


 136:.\Generated_Source\PSoC4/PPMCounter.c **** 
 137:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (1u == PPMCounter_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_WriteCompareBuf(PPMCounter_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* (1u == PPMCounter_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__COMPARE == PPMCounter_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__TIMER == PPMCounter_CONFIG) */
 143:.\Generated_Source\PSoC4/PPMCounter.c **** 
 144:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__PWM_SEL == PPMCounter_CONFIG)
 145:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WritePeriod(PPMCounter_PWM_PERIOD_VALUE );
 146:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_WriteCompare(PPMCounter_PWM_COMPARE_VALUE);
 147:.\Generated_Source\PSoC4/PPMCounter.c **** 
 148:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (1u == PPMCounter_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WriteCompareBuf(PPMCounter_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (1u == PPMCounter_PWM_COMPARE_SWAP) */
 152:.\Generated_Source\PSoC4/PPMCounter.c **** 
 153:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (1u == PPMCounter_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_WritePeriodBuf(PPMCounter_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (1u == PPMCounter_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/PPMCounter.c **** 
 158:.\Generated_Source\PSoC4/PPMCounter.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (PPMCounter__PWM_PR == PPMCounter_PWM_MODE)
 160:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/PPMCounter.c ****                     (PPMCounter_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/PPMCounter.c ****                     PPMCounter_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/PPMCounter.c ****                     PPMCounter_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/PPMCounter.c ****         #else
 165:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__LEFT == PPMCounter_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_LEFT;
 167:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* ( PPMCounter_PWM_LEFT == PPMCounter_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/PPMCounter.c **** 
 169:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__RIGHT == PPMCounter_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_WriteCounter(PPMCounter_PWM_PERIOD_VALUE);
 171:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_RIGHT;
 172:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* ( PPMCounter_PWM_RIGHT == PPMCounter_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/PPMCounter.c **** 
 174:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__CENTER == PPMCounter_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* ( PPMCounter_PWM_CENTER == PPMCounter_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/PPMCounter.c **** 
 178:.\Generated_Source\PSoC4/PPMCounter.c ****             #if (PPMCounter__ASYMMETRIC == PPMCounter_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/PPMCounter.c ****                 PPMCounter_TRIG_CONTROL2_REG = PPMCounter_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/PPMCounter.c ****             #endif  /* (PPMCounter__ASYMMETRIC == PPMCounter_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif  /* (PPMCounter__PWM_PR == PPMCounter_PWM_MODE) */
 182:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif  /* (PPMCounter__PWM_SEL == PPMCounter_CONFIG) */
 183:.\Generated_Source\PSoC4/PPMCounter.c **** }
 184:.\Generated_Source\PSoC4/PPMCounter.c **** 
 185:.\Generated_Source\PSoC4/PPMCounter.c **** 
 186:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Enable
 188:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/PPMCounter.c **** *
 190:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 191:.\Generated_Source\PSoC4/PPMCounter.c **** *  Enables the PPMCounter.
 192:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 5


 193:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 194:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 195:.\Generated_Source\PSoC4/PPMCounter.c **** *
 196:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 197:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 198:.\Generated_Source\PSoC4/PPMCounter.c **** *
 199:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Enable(void)
 201:.\Generated_Source\PSoC4/PPMCounter.c **** {
 202:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/PPMCounter.c **** 
 204:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 205:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG |= PPMCounter_MASK;
 206:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 207:.\Generated_Source\PSoC4/PPMCounter.c **** 
 208:.\Generated_Source\PSoC4/PPMCounter.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__PWM_SEL == PPMCounter_CONFIG)
 210:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (0u == PPMCounter_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TriggerCommand(PPMCounter_MASK, PPMCounter_CMD_START);
 212:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif /* (0u == PPMCounter_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter__PWM_SEL == PPMCounter_CONFIG) */
 214:.\Generated_Source\PSoC4/PPMCounter.c **** 
 215:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter__TIMER == PPMCounter_CONFIG)
 216:.\Generated_Source\PSoC4/PPMCounter.c ****         #if (0u == PPMCounter_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TriggerCommand(PPMCounter_MASK, PPMCounter_CMD_START);
 218:.\Generated_Source\PSoC4/PPMCounter.c ****         #endif /* (0u == PPMCounter_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter__TIMER == PPMCounter_CONFIG) */
 220:.\Generated_Source\PSoC4/PPMCounter.c **** }
 221:.\Generated_Source\PSoC4/PPMCounter.c **** 
 222:.\Generated_Source\PSoC4/PPMCounter.c **** 
 223:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Start
 225:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/PPMCounter.c **** *
 227:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 228:.\Generated_Source\PSoC4/PPMCounter.c **** *  Initializes the PPMCounter with default customizer
 229:.\Generated_Source\PSoC4/PPMCounter.c **** *  values when called the first time and enables the PPMCounter.
 230:.\Generated_Source\PSoC4/PPMCounter.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/PPMCounter.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/PPMCounter.c **** *
 233:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 234:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 235:.\Generated_Source\PSoC4/PPMCounter.c **** *
 236:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 237:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 238:.\Generated_Source\PSoC4/PPMCounter.c **** *
 239:.\Generated_Source\PSoC4/PPMCounter.c **** * Global variables:
 240:.\Generated_Source\PSoC4/PPMCounter.c **** *  PPMCounter_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/PPMCounter.c **** *  configuration of this component.  The variable is initialized to zero and set
 242:.\Generated_Source\PSoC4/PPMCounter.c **** *  to 1 the first time PPMCounter_Start() is called. This allows
 243:.\Generated_Source\PSoC4/PPMCounter.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/PPMCounter.c **** *  calls to the PPMCounter_Start() routine.
 245:.\Generated_Source\PSoC4/PPMCounter.c **** *
 246:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Start(void)
 248:.\Generated_Source\PSoC4/PPMCounter.c **** {
 249:.\Generated_Source\PSoC4/PPMCounter.c ****     if (0u == PPMCounter_initVar)
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 6


 250:.\Generated_Source\PSoC4/PPMCounter.c ****     {
 251:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_Init();
 252:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_initVar = 1u;
 253:.\Generated_Source\PSoC4/PPMCounter.c ****     }
 254:.\Generated_Source\PSoC4/PPMCounter.c **** 
 255:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_Enable();
 256:.\Generated_Source\PSoC4/PPMCounter.c **** }
 257:.\Generated_Source\PSoC4/PPMCounter.c **** 
 258:.\Generated_Source\PSoC4/PPMCounter.c **** 
 259:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_Stop
 261:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/PPMCounter.c **** *
 263:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 264:.\Generated_Source\PSoC4/PPMCounter.c **** *  Disables the PPMCounter.
 265:.\Generated_Source\PSoC4/PPMCounter.c **** *
 266:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 267:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 268:.\Generated_Source\PSoC4/PPMCounter.c **** *
 269:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 270:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 271:.\Generated_Source\PSoC4/PPMCounter.c **** *
 272:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_Stop(void)
 274:.\Generated_Source\PSoC4/PPMCounter.c **** {
 275:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/PPMCounter.c **** 
 277:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 278:.\Generated_Source\PSoC4/PPMCounter.c **** 
 279:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG &= (uint32)~PPMCounter_MASK;
 280:.\Generated_Source\PSoC4/PPMCounter.c **** 
 281:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 282:.\Generated_Source\PSoC4/PPMCounter.c **** }
 283:.\Generated_Source\PSoC4/PPMCounter.c **** 
 284:.\Generated_Source\PSoC4/PPMCounter.c **** 
 285:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetMode
 287:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/PPMCounter.c **** *
 289:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 290:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the operation mode of the PPMCounter. This function is used when
 291:.\Generated_Source\PSoC4/PPMCounter.c **** *  configured as a generic PPMCounter and the actual mode of operation is
 292:.\Generated_Source\PSoC4/PPMCounter.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/PPMCounter.c **** *
 294:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 295:.\Generated_Source\PSoC4/PPMCounter.c **** *  mode: Mode for the PPMCounter to operate in
 296:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 297:.\Generated_Source\PSoC4/PPMCounter.c **** *   - PPMCounter_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/PPMCounter.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/PPMCounter.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/PPMCounter.c **** *
 306:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 7


 307:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 308:.\Generated_Source\PSoC4/PPMCounter.c **** *
 309:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/PPMCounter.c **** {
 312:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/PPMCounter.c **** 
 314:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 315:.\Generated_Source\PSoC4/PPMCounter.c **** 
 316:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_MODE_MASK;
 317:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mode;
 318:.\Generated_Source\PSoC4/PPMCounter.c **** 
 319:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 320:.\Generated_Source\PSoC4/PPMCounter.c **** }
 321:.\Generated_Source\PSoC4/PPMCounter.c **** 
 322:.\Generated_Source\PSoC4/PPMCounter.c **** 
 323:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetQDMode
 325:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/PPMCounter.c **** *
 327:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 328:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/PPMCounter.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/PPMCounter.c **** *
 331:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 332:.\Generated_Source\PSoC4/PPMCounter.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 334:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/PPMCounter.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/PPMCounter.c **** *
 339:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 340:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 341:.\Generated_Source\PSoC4/PPMCounter.c **** *
 342:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/PPMCounter.c **** {
 345:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/PPMCounter.c **** 
 347:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 348:.\Generated_Source\PSoC4/PPMCounter.c **** 
 349:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_QUAD_MODE_MASK;
 350:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= qdMode;
 351:.\Generated_Source\PSoC4/PPMCounter.c **** 
 352:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 353:.\Generated_Source\PSoC4/PPMCounter.c **** }
 354:.\Generated_Source\PSoC4/PPMCounter.c **** 
 355:.\Generated_Source\PSoC4/PPMCounter.c **** 
 356:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPrescaler
 358:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/PPMCounter.c **** *
 360:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 361:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/PPMCounter.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 8


 364:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 365:.\Generated_Source\PSoC4/PPMCounter.c **** *  prescaler: Prescaler divider value
 366:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 367:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/PPMCounter.c **** *
 376:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 377:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 378:.\Generated_Source\PSoC4/PPMCounter.c **** *
 379:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/PPMCounter.c **** {
 382:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/PPMCounter.c **** 
 384:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 385:.\Generated_Source\PSoC4/PPMCounter.c **** 
 386:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 387:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= prescaler;
 388:.\Generated_Source\PSoC4/PPMCounter.c **** 
 389:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 390:.\Generated_Source\PSoC4/PPMCounter.c **** }
 391:.\Generated_Source\PSoC4/PPMCounter.c **** 
 392:.\Generated_Source\PSoC4/PPMCounter.c **** 
 393:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetOneShot
 395:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/PPMCounter.c **** *
 397:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 398:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the PPMCounter runs
 399:.\Generated_Source\PSoC4/PPMCounter.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/PPMCounter.c **** *  PPMCounter operates in the continuous mode.
 401:.\Generated_Source\PSoC4/PPMCounter.c **** *
 402:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 403:.\Generated_Source\PSoC4/PPMCounter.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 405:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/PPMCounter.c **** *
 408:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 409:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 410:.\Generated_Source\PSoC4/PPMCounter.c **** *
 411:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/PPMCounter.c **** {
 414:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/PPMCounter.c **** 
 416:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 417:.\Generated_Source\PSoC4/PPMCounter.c **** 
 418:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_ONESHOT_MASK;
 419:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((oneShotEnable & PPMCounter_1BIT_MASK) <<
 420:.\Generated_Source\PSoC4/PPMCounter.c ****                                                                PPMCounter_ONESHOT_SHIFT));
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 9


 421:.\Generated_Source\PSoC4/PPMCounter.c **** 
 422:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 423:.\Generated_Source\PSoC4/PPMCounter.c **** }
 424:.\Generated_Source\PSoC4/PPMCounter.c **** 
 425:.\Generated_Source\PSoC4/PPMCounter.c **** 
 426:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMMode
 428:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/PPMCounter.c **** *
 430:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 431:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/PPMCounter.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/PPMCounter.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/PPMCounter.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/PPMCounter.c **** *  the mode.
 436:.\Generated_Source\PSoC4/PPMCounter.c **** *
 437:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 438:.\Generated_Source\PSoC4/PPMCounter.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/PPMCounter.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 441:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/PPMCounter.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/PPMCounter.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/PPMCounter.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PPMCounter.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/PPMCounter.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/PPMCounter.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/PPMCounter.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/PPMCounter.c **** *
 462:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 463:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 464:.\Generated_Source\PSoC4/PPMCounter.c **** *
 465:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMMode(uint32 modeMask)
 467:.\Generated_Source\PSoC4/PPMCounter.c **** {
 468:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL2_REG = (modeMask & PPMCounter_6BIT_MASK);
 469:.\Generated_Source\PSoC4/PPMCounter.c **** }
 470:.\Generated_Source\PSoC4/PPMCounter.c **** 
 471:.\Generated_Source\PSoC4/PPMCounter.c **** 
 472:.\Generated_Source\PSoC4/PPMCounter.c **** 
 473:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/PPMCounter.c **** *
 477:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 10


 478:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/PPMCounter.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/PPMCounter.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/PPMCounter.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/PPMCounter.c **** *
 483:.\Generated_Source\PSoC4/PPMCounter.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 484:.\Generated_Source\PSoC4/PPMCounter.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/PPMCounter.c **** *
 486:.\Generated_Source\PSoC4/PPMCounter.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/PPMCounter.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/PPMCounter.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/PPMCounter.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/PPMCounter.c **** 
 491:.\Generated_Source\PSoC4/PPMCounter.c **** *
 492:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 493:.\Generated_Source\PSoC4/PPMCounter.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 495:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/PPMCounter.c **** *
 498:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 499:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 500:.\Generated_Source\PSoC4/PPMCounter.c **** *
 501:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/PPMCounter.c **** {
 504:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/PPMCounter.c **** 
 506:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 507:.\Generated_Source\PSoC4/PPMCounter.c **** 
 508:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_SYNC_KILL_MASK;
 509:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((syncKillEnable & PPMCounter_1BIT_MASK)  <<
 510:.\Generated_Source\PSoC4/PPMCounter.c ****                                                PPMCounter_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/PPMCounter.c **** 
 512:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 513:.\Generated_Source\PSoC4/PPMCounter.c **** }
 514:.\Generated_Source\PSoC4/PPMCounter.c **** 
 515:.\Generated_Source\PSoC4/PPMCounter.c **** 
 516:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/PPMCounter.c **** *
 520:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 521:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/PPMCounter.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/PPMCounter.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/PPMCounter.c **** *
 525:.\Generated_Source\PSoC4/PPMCounter.c **** *
 526:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 527:.\Generated_Source\PSoC4/PPMCounter.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 529:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/PPMCounter.c **** *
 532:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 533:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 534:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 11


 535:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/PPMCounter.c **** {
 538:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/PPMCounter.c **** 
 540:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 541:.\Generated_Source\PSoC4/PPMCounter.c **** 
 542:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_STOP_KILL_MASK;
 543:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((stopOnKillEnable & PPMCounter_1BIT_MASK)  <<
 544:.\Generated_Source\PSoC4/PPMCounter.c ****                                                          PPMCounter_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/PPMCounter.c **** 
 546:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 547:.\Generated_Source\PSoC4/PPMCounter.c **** }
 548:.\Generated_Source\PSoC4/PPMCounter.c **** 
 549:.\Generated_Source\PSoC4/PPMCounter.c **** 
 550:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/PPMCounter.c **** *
 554:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 555:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/PPMCounter.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/PPMCounter.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/PPMCounter.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/PPMCounter.c **** 
 560:.\Generated_Source\PSoC4/PPMCounter.c **** *
 561:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 562:.\Generated_Source\PSoC4/PPMCounter.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/PPMCounter.c **** *
 565:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 566:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 567:.\Generated_Source\PSoC4/PPMCounter.c **** *
 568:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/PPMCounter.c **** {
 571:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/PPMCounter.c **** 
 573:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 574:.\Generated_Source\PSoC4/PPMCounter.c **** 
 575:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 576:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((deadTime & PPMCounter_8BIT_MASK) <<
 577:.\Generated_Source\PSoC4/PPMCounter.c ****                                                           PPMCounter_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/PPMCounter.c **** 
 579:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 580:.\Generated_Source\PSoC4/PPMCounter.c **** }
 581:.\Generated_Source\PSoC4/PPMCounter.c **** 
 582:.\Generated_Source\PSoC4/PPMCounter.c **** 
 583:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPWMInvert
 585:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/PPMCounter.c **** *
 587:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 588:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/PPMCounter.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/PPMCounter.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 12


 592:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 593:.\Generated_Source\PSoC4/PPMCounter.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 595:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/PPMCounter.c **** *         - PPMCounter_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/PPMCounter.c **** *
 598:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 599:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 600:.\Generated_Source\PSoC4/PPMCounter.c **** *
 601:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/PPMCounter.c **** {
 604:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/PPMCounter.c **** 
 606:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 607:.\Generated_Source\PSoC4/PPMCounter.c **** 
 608:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_INV_OUT_MASK;
 609:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mask;
 610:.\Generated_Source\PSoC4/PPMCounter.c **** 
 611:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 612:.\Generated_Source\PSoC4/PPMCounter.c **** }
 613:.\Generated_Source\PSoC4/PPMCounter.c **** 
 614:.\Generated_Source\PSoC4/PPMCounter.c **** 
 615:.\Generated_Source\PSoC4/PPMCounter.c **** 
 616:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WriteCounter
 618:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/PPMCounter.c **** *
 620:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 621:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/PPMCounter.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/PPMCounter.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/PPMCounter.c **** *
 625:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 626:.\Generated_Source\PSoC4/PPMCounter.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/PPMCounter.c **** *
 628:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 629:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 630:.\Generated_Source\PSoC4/PPMCounter.c **** *
 631:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/PPMCounter.c **** {
 634:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COUNTER_REG = (count & PPMCounter_16BIT_MASK);
 635:.\Generated_Source\PSoC4/PPMCounter.c **** }
 636:.\Generated_Source\PSoC4/PPMCounter.c **** 
 637:.\Generated_Source\PSoC4/PPMCounter.c **** 
 638:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCounter
 640:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/PPMCounter.c **** *
 642:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 643:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/PPMCounter.c **** *
 645:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 646:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 647:.\Generated_Source\PSoC4/PPMCounter.c **** *
 648:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 13


 649:.\Generated_Source\PSoC4/PPMCounter.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/PPMCounter.c **** *
 651:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCounter(void)
 653:.\Generated_Source\PSoC4/PPMCounter.c **** {
 654:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COUNTER_REG & PPMCounter_16BIT_MASK);
 655:.\Generated_Source\PSoC4/PPMCounter.c **** }
 656:.\Generated_Source\PSoC4/PPMCounter.c **** 
 657:.\Generated_Source\PSoC4/PPMCounter.c **** 
 658:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCounterMode
 660:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/PPMCounter.c **** *
 662:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 663:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/PPMCounter.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/PPMCounter.c **** *
 666:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 667:.\Generated_Source\PSoC4/PPMCounter.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 669:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/PPMCounter.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/PPMCounter.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/PPMCounter.c **** *                                         and period
 676:.\Generated_Source\PSoC4/PPMCounter.c **** *
 677:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 678:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 679:.\Generated_Source\PSoC4/PPMCounter.c **** *
 680:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/PPMCounter.c **** {
 683:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/PPMCounter.c **** 
 685:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 686:.\Generated_Source\PSoC4/PPMCounter.c **** 
 687:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_UPDOWN_MASK;
 688:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= counterMode;
 689:.\Generated_Source\PSoC4/PPMCounter.c **** 
 690:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 691:.\Generated_Source\PSoC4/PPMCounter.c **** }
 692:.\Generated_Source\PSoC4/PPMCounter.c **** 
 693:.\Generated_Source\PSoC4/PPMCounter.c **** 
 694:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WritePeriod
 696:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/PPMCounter.c **** *
 698:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 699:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/PPMCounter.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/PPMCounter.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/PPMCounter.c **** *
 703:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 704:.\Generated_Source\PSoC4/PPMCounter.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/PPMCounter.c **** *
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 14


 706:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 707:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 708:.\Generated_Source\PSoC4/PPMCounter.c **** *
 709:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/PPMCounter.c **** {
 712:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_REG = (period & PPMCounter_16BIT_MASK);
 713:.\Generated_Source\PSoC4/PPMCounter.c **** }
 714:.\Generated_Source\PSoC4/PPMCounter.c **** 
 715:.\Generated_Source\PSoC4/PPMCounter.c **** 
 716:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadPeriod
 718:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/PPMCounter.c **** *
 720:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 721:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/PPMCounter.c **** *
 723:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 725:.\Generated_Source\PSoC4/PPMCounter.c **** *
 726:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 727:.\Generated_Source\PSoC4/PPMCounter.c **** *  Period value
 728:.\Generated_Source\PSoC4/PPMCounter.c **** *
 729:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/PPMCounter.c **** {
 732:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_REG & PPMCounter_16BIT_MASK);
 733:.\Generated_Source\PSoC4/PPMCounter.c **** }
 734:.\Generated_Source\PSoC4/PPMCounter.c **** 
 735:.\Generated_Source\PSoC4/PPMCounter.c **** 
 736:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCompareSwap
 738:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/PPMCounter.c **** *
 740:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 741:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/PPMCounter.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/PPMCounter.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/PPMCounter.c **** *
 746:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 747:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 749:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/PPMCounter.c **** *
 752:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 753:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 754:.\Generated_Source\PSoC4/PPMCounter.c **** *
 755:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/PPMCounter.c **** {
 758:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/PPMCounter.c **** 
 760:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 761:.\Generated_Source\PSoC4/PPMCounter.c **** 
 762:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_CC_MASK;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 15


 763:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= (swapEnable & PPMCounter_1BIT_MASK);
 764:.\Generated_Source\PSoC4/PPMCounter.c **** 
 765:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 766:.\Generated_Source\PSoC4/PPMCounter.c **** }
 767:.\Generated_Source\PSoC4/PPMCounter.c **** 
 768:.\Generated_Source\PSoC4/PPMCounter.c **** 
 769:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WritePeriodBuf
 771:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/PPMCounter.c **** *
 773:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 774:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/PPMCounter.c **** *
 776:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 777:.\Generated_Source\PSoC4/PPMCounter.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/PPMCounter.c **** *
 779:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 780:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 781:.\Generated_Source\PSoC4/PPMCounter.c **** *
 782:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/PPMCounter.c **** {
 785:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_BUF_REG = (periodBuf & PPMCounter_16BIT_MASK);
 786:.\Generated_Source\PSoC4/PPMCounter.c **** }
 787:.\Generated_Source\PSoC4/PPMCounter.c **** 
 788:.\Generated_Source\PSoC4/PPMCounter.c **** 
 789:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/PPMCounter.c **** *
 793:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 794:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/PPMCounter.c **** *
 796:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 798:.\Generated_Source\PSoC4/PPMCounter.c **** *
 799:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 800:.\Generated_Source\PSoC4/PPMCounter.c **** *  Period value
 801:.\Generated_Source\PSoC4/PPMCounter.c **** *
 802:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/PPMCounter.c **** {
 805:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_BUF_REG & PPMCounter_16BIT_MASK);
 806:.\Generated_Source\PSoC4/PPMCounter.c **** }
 807:.\Generated_Source\PSoC4/PPMCounter.c **** 
 808:.\Generated_Source\PSoC4/PPMCounter.c **** 
 809:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetPeriodSwap
 811:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/PPMCounter.c **** *
 813:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 814:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/PPMCounter.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/PPMCounter.c **** *  switch event.
 818:.\Generated_Source\PSoC4/PPMCounter.c **** *
 819:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 16


 820:.\Generated_Source\PSoC4/PPMCounter.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
 822:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/PPMCounter.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/PPMCounter.c **** *
 825:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 826:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 827:.\Generated_Source\PSoC4/PPMCounter.c **** *
 828:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/PPMCounter.c **** {
 831:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/PPMCounter.c **** 
 833:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 834:.\Generated_Source\PSoC4/PPMCounter.c **** 
 835:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_PERIOD_MASK;
 836:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((swapEnable & PPMCounter_1BIT_MASK) <<
 837:.\Generated_Source\PSoC4/PPMCounter.c ****                                                             PPMCounter_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/PPMCounter.c **** 
 839:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 840:.\Generated_Source\PSoC4/PPMCounter.c **** }
 841:.\Generated_Source\PSoC4/PPMCounter.c **** 
 842:.\Generated_Source\PSoC4/PPMCounter.c **** 
 843:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WriteCompare
 845:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/PPMCounter.c **** *
 847:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 848:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/PPMCounter.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/PPMCounter.c **** *
 851:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 852:.\Generated_Source\PSoC4/PPMCounter.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/PPMCounter.c **** *
 854:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 855:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 856:.\Generated_Source\PSoC4/PPMCounter.c **** *
 857:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/PPMCounter.c **** {
 860:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/PPMCounter.c **** 
 864:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 866:.\Generated_Source\PSoC4/PPMCounter.c **** 
 867:.\Generated_Source\PSoC4/PPMCounter.c ****         if (PPMCounter__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 869:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_COMP_CAP_REG = ((compare + 1u) & PPMCounter_16BIT_MASK);
 870:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 871:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (PPMCounter__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 873:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_COMP_CAP_REG = ((compare - 1u) & PPMCounter_16BIT_MASK);
 874:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 875:.\Generated_Source\PSoC4/PPMCounter.c ****         else
 876:.\Generated_Source\PSoC4/PPMCounter.c ****         {
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 17


 877:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_COMP_CAP_REG = (compare & PPMCounter_16BIT_MASK);
 878:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 879:.\Generated_Source\PSoC4/PPMCounter.c ****     #else
 880:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_COMP_CAP_REG = (compare & PPMCounter_16BIT_MASK);
 881:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/PPMCounter.c **** }
 883:.\Generated_Source\PSoC4/PPMCounter.c **** 
 884:.\Generated_Source\PSoC4/PPMCounter.c **** 
 885:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCompare
 887:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/PPMCounter.c **** *
 889:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 890:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/PPMCounter.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/PPMCounter.c **** *
 893:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 894:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 895:.\Generated_Source\PSoC4/PPMCounter.c **** *
 896:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 897:.\Generated_Source\PSoC4/PPMCounter.c **** *  Compare value
 898:.\Generated_Source\PSoC4/PPMCounter.c **** *
 899:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PPMCounter.c **** {
 902:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/PPMCounter.c **** 
 907:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 909:.\Generated_Source\PSoC4/PPMCounter.c **** 
 910:.\Generated_Source\PSoC4/PPMCounter.c ****         if (PPMCounter__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 912:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal = ((PPMCounter_COMP_CAP_REG - 1u) & PPMCounter_16BIT_MASK);
 913:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 914:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (PPMCounter__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 916:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal = ((PPMCounter_COMP_CAP_REG + 1u) & PPMCounter_16BIT_MASK);
 917:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 918:.\Generated_Source\PSoC4/PPMCounter.c ****         else
 919:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 920:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal = (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 921:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 922:.\Generated_Source\PSoC4/PPMCounter.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/PPMCounter.c ****     #else
 924:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 925:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/PPMCounter.c **** }
 927:.\Generated_Source\PSoC4/PPMCounter.c **** 
 928:.\Generated_Source\PSoC4/PPMCounter.c **** 
 929:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_WriteCompareBuf
 931:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/PPMCounter.c **** *
 933:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 18


 934:.\Generated_Source\PSoC4/PPMCounter.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/PPMCounter.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/PPMCounter.c **** *
 937:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 938:.\Generated_Source\PSoC4/PPMCounter.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/PPMCounter.c **** *
 940:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 941:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 942:.\Generated_Source\PSoC4/PPMCounter.c **** *
 943:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/PPMCounter.c **** {
 946:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/PPMCounter.c **** 
 950:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 952:.\Generated_Source\PSoC4/PPMCounter.c **** 
 953:.\Generated_Source\PSoC4/PPMCounter.c ****         if (PPMCounter__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 955:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_COMP_CAP_BUF_REG = ((compareBuf + 1u) & PPMCounter_16BIT_MASK);
 956:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 957:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (PPMCounter__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 959:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_COMP_CAP_BUF_REG = ((compareBuf - 1u) & PPMCounter_16BIT_MASK);
 960:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 961:.\Generated_Source\PSoC4/PPMCounter.c ****         else
 962:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 963:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_COMP_CAP_BUF_REG = (compareBuf & PPMCounter_16BIT_MASK);
 964:.\Generated_Source\PSoC4/PPMCounter.c ****         }
 965:.\Generated_Source\PSoC4/PPMCounter.c ****     #else
 966:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_COMP_CAP_BUF_REG = (compareBuf & PPMCounter_16BIT_MASK);
 967:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/PPMCounter.c **** }
 969:.\Generated_Source\PSoC4/PPMCounter.c **** 
 970:.\Generated_Source\PSoC4/PPMCounter.c **** 
 971:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCompareBuf
 973:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/PPMCounter.c **** *
 975:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
 976:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/PPMCounter.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/PPMCounter.c **** *
 979:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
 980:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
 981:.\Generated_Source\PSoC4/PPMCounter.c **** *
 982:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
 983:.\Generated_Source\PSoC4/PPMCounter.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/PPMCounter.c **** *
 985:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/PPMCounter.c **** {
 988:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/PPMCounter.c ****         uint32 regVal;
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 19


 991:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/PPMCounter.c **** 
 993:.\Generated_Source\PSoC4/PPMCounter.c ****     #if (PPMCounter_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/PPMCounter.c ****         currentMode = ((PPMCounter_CONTROL_REG & PPMCounter_UPDOWN_MASK) >> PPMCounter_UPDOWN_SHIFT
 995:.\Generated_Source\PSoC4/PPMCounter.c **** 
 996:.\Generated_Source\PSoC4/PPMCounter.c ****         if (PPMCounter__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/PPMCounter.c ****         {
 998:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal = ((PPMCounter_COMP_CAP_BUF_REG - 1u) & PPMCounter_16BIT_MASK);
 999:.\Generated_Source\PSoC4/PPMCounter.c ****         }
1000:.\Generated_Source\PSoC4/PPMCounter.c ****         else if (PPMCounter__COUNT_UP == currentMode)
1001:.\Generated_Source\PSoC4/PPMCounter.c ****         {
1002:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal = ((PPMCounter_COMP_CAP_BUF_REG + 1u) & PPMCounter_16BIT_MASK);
1003:.\Generated_Source\PSoC4/PPMCounter.c ****         }
1004:.\Generated_Source\PSoC4/PPMCounter.c ****         else
1005:.\Generated_Source\PSoC4/PPMCounter.c ****         {
1006:.\Generated_Source\PSoC4/PPMCounter.c ****             regVal = (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
1007:.\Generated_Source\PSoC4/PPMCounter.c ****         }
1008:.\Generated_Source\PSoC4/PPMCounter.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/PPMCounter.c ****     #else
1010:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
1011:.\Generated_Source\PSoC4/PPMCounter.c ****     #endif /* (PPMCounter_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/PPMCounter.c **** }
1013:.\Generated_Source\PSoC4/PPMCounter.c **** 
1014:.\Generated_Source\PSoC4/PPMCounter.c **** 
1015:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCapture
1017:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/PPMCounter.c **** *
1019:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1020:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/PPMCounter.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/PPMCounter.c **** *
1023:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1024:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1025:.\Generated_Source\PSoC4/PPMCounter.c **** *
1026:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1027:.\Generated_Source\PSoC4/PPMCounter.c **** *  Capture value
1028:.\Generated_Source\PSoC4/PPMCounter.c **** *
1029:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCapture(void)
1031:.\Generated_Source\PSoC4/PPMCounter.c **** {
1032:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
1033:.\Generated_Source\PSoC4/PPMCounter.c **** }
1034:.\Generated_Source\PSoC4/PPMCounter.c **** 
1035:.\Generated_Source\PSoC4/PPMCounter.c **** 
1036:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/PPMCounter.c **** *
1040:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1041:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/PPMCounter.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/PPMCounter.c **** *
1044:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1045:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1046:.\Generated_Source\PSoC4/PPMCounter.c **** *
1047:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 20


1048:.\Generated_Source\PSoC4/PPMCounter.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/PPMCounter.c **** *
1050:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/PPMCounter.c **** {
1053:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
1054:.\Generated_Source\PSoC4/PPMCounter.c **** }
1055:.\Generated_Source\PSoC4/PPMCounter.c **** 
1056:.\Generated_Source\PSoC4/PPMCounter.c **** 
1057:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCaptureMode
1059:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/PPMCounter.c **** *
1061:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1062:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/PPMCounter.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/PPMCounter.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/PPMCounter.c **** *
1066:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1067:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1069:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/PPMCounter.c **** *
1074:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1075:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1076:.\Generated_Source\PSoC4/PPMCounter.c **** *
1077:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/PPMCounter.c **** {
1080:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/PPMCounter.c **** 
1082:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1083:.\Generated_Source\PSoC4/PPMCounter.c **** 
1084:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_CAPTURE_MASK;
1085:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= triggerMode;
1086:.\Generated_Source\PSoC4/PPMCounter.c **** 
1087:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1088:.\Generated_Source\PSoC4/PPMCounter.c **** }
1089:.\Generated_Source\PSoC4/PPMCounter.c **** 
1090:.\Generated_Source\PSoC4/PPMCounter.c **** 
1091:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetReloadMode
1093:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/PPMCounter.c **** *
1095:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1096:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/PPMCounter.c **** *  input.
1098:.\Generated_Source\PSoC4/PPMCounter.c **** *
1099:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1100:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1102:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 21


1105:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/PPMCounter.c **** *
1107:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1108:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1109:.\Generated_Source\PSoC4/PPMCounter.c **** *
1110:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/PPMCounter.c **** {
1113:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/PPMCounter.c **** 
1115:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1116:.\Generated_Source\PSoC4/PPMCounter.c **** 
1117:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_RELOAD_MASK;
1118:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
1119:.\Generated_Source\PSoC4/PPMCounter.c **** 
1120:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1121:.\Generated_Source\PSoC4/PPMCounter.c **** }
1122:.\Generated_Source\PSoC4/PPMCounter.c **** 
1123:.\Generated_Source\PSoC4/PPMCounter.c **** 
1124:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1125:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetStartMode
1126:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/PPMCounter.c **** *
1128:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1129:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/PPMCounter.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/PPMCounter.c **** *
1132:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1133:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1135:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/PPMCounter.c **** *
1140:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1141:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1142:.\Generated_Source\PSoC4/PPMCounter.c **** *
1143:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/PPMCounter.c **** {
1146:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/PPMCounter.c **** 
1148:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1149:.\Generated_Source\PSoC4/PPMCounter.c **** 
1150:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_START_MASK;
1151:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
1152:.\Generated_Source\PSoC4/PPMCounter.c **** 
1153:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1154:.\Generated_Source\PSoC4/PPMCounter.c **** }
1155:.\Generated_Source\PSoC4/PPMCounter.c **** 
1156:.\Generated_Source\PSoC4/PPMCounter.c **** 
1157:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetStopMode
1159:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/PPMCounter.c **** *
1161:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 22


1162:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/PPMCounter.c **** *
1164:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1165:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1167:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/PPMCounter.c **** *
1172:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1173:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1174:.\Generated_Source\PSoC4/PPMCounter.c **** *
1175:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1176:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/PPMCounter.c **** {
1178:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/PPMCounter.c **** 
1180:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1181:.\Generated_Source\PSoC4/PPMCounter.c **** 
1182:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_STOP_MASK;
1183:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
1184:.\Generated_Source\PSoC4/PPMCounter.c **** 
1185:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1186:.\Generated_Source\PSoC4/PPMCounter.c **** }
1187:.\Generated_Source\PSoC4/PPMCounter.c **** 
1188:.\Generated_Source\PSoC4/PPMCounter.c **** 
1189:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetCountMode
1191:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/PPMCounter.c **** *
1193:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1194:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/PPMCounter.c **** *  input.
1196:.\Generated_Source\PSoC4/PPMCounter.c **** *
1197:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1198:.\Generated_Source\PSoC4/PPMCounter.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1200:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/PPMCounter.c **** *
1205:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1206:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1207:.\Generated_Source\PSoC4/PPMCounter.c **** *
1208:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/PPMCounter.c **** {
1211:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/PPMCounter.c **** 
1213:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1214:.\Generated_Source\PSoC4/PPMCounter.c **** 
1215:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_COUNT_MASK;
1216:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
1217:.\Generated_Source\PSoC4/PPMCounter.c **** 
1218:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 23


1219:.\Generated_Source\PSoC4/PPMCounter.c **** }
1220:.\Generated_Source\PSoC4/PPMCounter.c **** 
1221:.\Generated_Source\PSoC4/PPMCounter.c **** 
1222:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1223:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_TriggerCommand
1224:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/PPMCounter.c **** *
1226:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1227:.\Generated_Source\PSoC4/PPMCounter.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/PPMCounter.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/PPMCounter.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/PPMCounter.c **** *
1231:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1232:.\Generated_Source\PSoC4/PPMCounter.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/PPMCounter.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/PPMCounter.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/PPMCounter.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/PPMCounter.c **** *        define.
1237:.\Generated_Source\PSoC4/PPMCounter.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/PPMCounter.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1240:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/PPMCounter.c **** *
1245:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1246:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1247:.\Generated_Source\PSoC4/PPMCounter.c **** *
1248:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/PPMCounter.c **** {
1251:.\Generated_Source\PSoC4/PPMCounter.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/PPMCounter.c **** 
1253:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
1254:.\Generated_Source\PSoC4/PPMCounter.c **** 
1255:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMMAND_REG = ((uint32)(mask << command));
1256:.\Generated_Source\PSoC4/PPMCounter.c **** 
1257:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
1258:.\Generated_Source\PSoC4/PPMCounter.c **** }
1259:.\Generated_Source\PSoC4/PPMCounter.c **** 
1260:.\Generated_Source\PSoC4/PPMCounter.c **** 
1261:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ReadStatus
1263:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PPMCounter.c **** *
1265:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1266:.\Generated_Source\PSoC4/PPMCounter.c **** *  Reads the status of the PPMCounter.
1267:.\Generated_Source\PSoC4/PPMCounter.c **** *
1268:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1270:.\Generated_Source\PSoC4/PPMCounter.c **** *
1271:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1272:.\Generated_Source\PSoC4/PPMCounter.c **** *  Status
1273:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1274:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_STATUS_RUNNING - Set if counter is running
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 24


1276:.\Generated_Source\PSoC4/PPMCounter.c **** *
1277:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_ReadStatus(void)
1279:.\Generated_Source\PSoC4/PPMCounter.c **** {
1280:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
1281:.\Generated_Source\PSoC4/PPMCounter.c ****             (PPMCounter_STATUS_REG & PPMCounter_STATUS_DOWN));
1282:.\Generated_Source\PSoC4/PPMCounter.c **** }
1283:.\Generated_Source\PSoC4/PPMCounter.c **** 
1284:.\Generated_Source\PSoC4/PPMCounter.c **** 
1285:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetInterruptMode
1287:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/PPMCounter.c **** *
1289:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1290:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/PPMCounter.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/PPMCounter.c **** *
1293:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1294:.\Generated_Source\PSoC4/PPMCounter.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1296:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/PPMCounter.c **** *
1299:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1300:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1301:.\Generated_Source\PSoC4/PPMCounter.c **** *
1302:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/PPMCounter.c **** {
1305:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_MASK_REG =  interruptMask;
  37              		.loc 1 1305 0
  38 000a 074B     		ldr	r3, .L2+8
  39              	.LBE7:
  40              	.LBE6:
 105:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  =
  41              		.loc 1 105 0
  42 000c 0C21     		mov	r1, #12
  43              	.LBB10:
  44              	.LBB8:
  45              		.loc 1 1305 0
  46 000e 0220     		mov	r0, #2
  47              	.LBE8:
  48              	.LBE10:
 105:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_TRIG_CONTROL1_REG  =
  49              		.loc 1 105 0
  50 0010 1160     		str	r1, [r2]
  51              	.LVL0:
  52              	.LBB11:
  53              	.LBB9:
  54              		.loc 1 1305 0
  55 0012 1860     		str	r0, [r3]
  56              	.LVL1:
  57              	.LBE9:
  58              	.LBE11:
  59              	.LBB12:
  60              	.LBB13:
 712:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_REG = (period & PPMCounter_16BIT_MASK);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 25


  61              		.loc 1 712 0
  62 0014 E121     		mov	r1, #225
  63 0016 0548     		ldr	r0, .L2+12
  64 0018 0A01     		lsl	r2, r1, #4
  65 001a 0260     		str	r2, [r0]
  66              	.LBE13:
  67              	.LBE12:
 183:.\Generated_Source\PSoC4/PPMCounter.c **** }
  68              		.loc 1 183 0
  69              		@ sp needed for prologue
  70 001c 7047     		bx	lr
  71              	.L3:
  72 001e C046     		.align	2
  73              	.L2:
  74 0020 C0010540 		.word	1074069952
  75 0024 E4010540 		.word	1074069988
  76 0028 F8010540 		.word	1074070008
  77 002c D4010540 		.word	1074069972
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	PPMCounter_Init, .-PPMCounter_Init
  81              		.section	.text.PPMCounter_Stop,"ax",%progbits
  82              		.align	1
  83              		.global	PPMCounter_Stop
  84              		.code	16
  85              		.thumb_func
  86              		.type	PPMCounter_Stop, %function
  87              	PPMCounter_Stop:
  88              	.LFB3:
 274:.\Generated_Source\PSoC4/PPMCounter.c **** {
  89              		.loc 1 274 0
  90              		.cfi_startproc
  91 0000 08B5     		push	{r3, lr}
  92              	.LCFI0:
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
 277:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
  96              		.loc 1 277 0
  97 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  98              	.LVL2:
 279:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG &= (uint32)~PPMCounter_MASK;
  99              		.loc 1 279 0
 100 0006 044B     		ldr	r3, .L5
 101 0008 0821     		mov	r1, #8
 102 000a 1A68     		ldr	r2, [r3]
 282:.\Generated_Source\PSoC4/PPMCounter.c **** }
 103              		.loc 1 282 0
 104              		@ sp needed for prologue
 279:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG &= (uint32)~PPMCounter_MASK;
 105              		.loc 1 279 0
 106 000c 8A43     		bic	r2, r1
 107 000e 1A60     		str	r2, [r3]
 281:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 108              		.loc 1 281 0
 109 0010 FFF7FEFF 		bl	CyExitCriticalSection
 110              	.LVL3:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 26


 282:.\Generated_Source\PSoC4/PPMCounter.c **** }
 111              		.loc 1 282 0
 112 0014 08BD     		pop	{r3, pc}
 113              	.L6:
 114 0016 C046     		.align	2
 115              	.L5:
 116 0018 00000540 		.word	1074069504
 117              		.cfi_endproc
 118              	.LFE3:
 119              		.size	PPMCounter_Stop, .-PPMCounter_Stop
 120              		.section	.text.PPMCounter_SetMode,"ax",%progbits
 121              		.align	1
 122              		.global	PPMCounter_SetMode
 123              		.code	16
 124              		.thumb_func
 125              		.type	PPMCounter_SetMode, %function
 126              	PPMCounter_SetMode:
 127              	.LFB4:
 311:.\Generated_Source\PSoC4/PPMCounter.c **** {
 128              		.loc 1 311 0
 129              		.cfi_startproc
 130              	.LVL4:
 131 0000 10B5     		push	{r4, lr}
 132              	.LCFI1:
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 311:.\Generated_Source\PSoC4/PPMCounter.c **** {
 136              		.loc 1 311 0
 137 0002 041C     		mov	r4, r0
 314:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 138              		.loc 1 314 0
 139 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 140              	.LVL5:
 316:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_MODE_MASK;
 141              		.loc 1 316 0
 142 0008 054B     		ldr	r3, .L8
 143 000a 064A     		ldr	r2, .L8+4
 144 000c 1968     		ldr	r1, [r3]
 320:.\Generated_Source\PSoC4/PPMCounter.c **** }
 145              		.loc 1 320 0
 146              		@ sp needed for prologue
 316:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_MODE_MASK;
 147              		.loc 1 316 0
 148 000e 0A40     		and	r2, r1
 149 0010 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mode;
 150              		.loc 1 317 0
 151 0012 1968     		ldr	r1, [r3]
 152 0014 0C43     		orr	r4, r1
 153              	.LVL6:
 154 0016 1C60     		str	r4, [r3]
 319:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 155              		.loc 1 319 0
 156 0018 FFF7FEFF 		bl	CyExitCriticalSection
 157              	.LVL7:
 320:.\Generated_Source\PSoC4/PPMCounter.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 27


 158              		.loc 1 320 0
 159 001c 10BD     		pop	{r4, pc}
 160              	.L9:
 161 001e C046     		.align	2
 162              	.L8:
 163 0020 C0010540 		.word	1074069952
 164 0024 FFFFFFF8 		.word	-117440513
 165              		.cfi_endproc
 166              	.LFE4:
 167              		.size	PPMCounter_SetMode, .-PPMCounter_SetMode
 168              		.section	.text.PPMCounter_SetQDMode,"ax",%progbits
 169              		.align	1
 170              		.global	PPMCounter_SetQDMode
 171              		.code	16
 172              		.thumb_func
 173              		.type	PPMCounter_SetQDMode, %function
 174              	PPMCounter_SetQDMode:
 175              	.LFB5:
 344:.\Generated_Source\PSoC4/PPMCounter.c **** {
 176              		.loc 1 344 0
 177              		.cfi_startproc
 178              	.LVL8:
 179 0000 10B5     		push	{r4, lr}
 180              	.LCFI2:
 181              		.cfi_def_cfa_offset 8
 182              		.cfi_offset 4, -8
 183              		.cfi_offset 14, -4
 344:.\Generated_Source\PSoC4/PPMCounter.c **** {
 184              		.loc 1 344 0
 185 0002 041C     		mov	r4, r0
 347:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 186              		.loc 1 347 0
 187 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 188              	.LVL9:
 349:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_QUAD_MODE_MASK;
 189              		.loc 1 349 0
 190 0008 054B     		ldr	r3, .L11
 191 000a 064A     		ldr	r2, .L11+4
 192 000c 1968     		ldr	r1, [r3]
 353:.\Generated_Source\PSoC4/PPMCounter.c **** }
 193              		.loc 1 353 0
 194              		@ sp needed for prologue
 349:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_QUAD_MODE_MASK;
 195              		.loc 1 349 0
 196 000e 0A40     		and	r2, r1
 197 0010 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= qdMode;
 198              		.loc 1 350 0
 199 0012 1968     		ldr	r1, [r3]
 200 0014 0C43     		orr	r4, r1
 201              	.LVL10:
 202 0016 1C60     		str	r4, [r3]
 352:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 203              		.loc 1 352 0
 204 0018 FFF7FEFF 		bl	CyExitCriticalSection
 205              	.LVL11:
 353:.\Generated_Source\PSoC4/PPMCounter.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 28


 206              		.loc 1 353 0
 207 001c 10BD     		pop	{r4, pc}
 208              	.L12:
 209 001e C046     		.align	2
 210              	.L11:
 211 0020 C0010540 		.word	1074069952
 212 0024 FFFF8FFF 		.word	-7340033
 213              		.cfi_endproc
 214              	.LFE5:
 215              		.size	PPMCounter_SetQDMode, .-PPMCounter_SetQDMode
 216              		.section	.text.PPMCounter_SetPrescaler,"ax",%progbits
 217              		.align	1
 218              		.global	PPMCounter_SetPrescaler
 219              		.code	16
 220              		.thumb_func
 221              		.type	PPMCounter_SetPrescaler, %function
 222              	PPMCounter_SetPrescaler:
 223              	.LFB6:
 381:.\Generated_Source\PSoC4/PPMCounter.c **** {
 224              		.loc 1 381 0
 225              		.cfi_startproc
 226              	.LVL12:
 227 0000 10B5     		push	{r4, lr}
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 14, -4
 381:.\Generated_Source\PSoC4/PPMCounter.c **** {
 232              		.loc 1 381 0
 233 0002 041C     		mov	r4, r0
 384:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 234              		.loc 1 384 0
 235 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 236              	.LVL13:
 386:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 237              		.loc 1 386 0
 238 0008 054B     		ldr	r3, .L14
 239 000a 064A     		ldr	r2, .L14+4
 240 000c 1968     		ldr	r1, [r3]
 390:.\Generated_Source\PSoC4/PPMCounter.c **** }
 241              		.loc 1 390 0
 242              		@ sp needed for prologue
 386:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 243              		.loc 1 386 0
 244 000e 0A40     		and	r2, r1
 245 0010 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= prescaler;
 246              		.loc 1 387 0
 247 0012 1968     		ldr	r1, [r3]
 248 0014 0C43     		orr	r4, r1
 249              	.LVL14:
 250 0016 1C60     		str	r4, [r3]
 389:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 251              		.loc 1 389 0
 252 0018 FFF7FEFF 		bl	CyExitCriticalSection
 253              	.LVL15:
 390:.\Generated_Source\PSoC4/PPMCounter.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 29


 254              		.loc 1 390 0
 255 001c 10BD     		pop	{r4, pc}
 256              	.L15:
 257 001e C046     		.align	2
 258              	.L14:
 259 0020 C0010540 		.word	1074069952
 260 0024 FF00FFFF 		.word	-65281
 261              		.cfi_endproc
 262              	.LFE6:
 263              		.size	PPMCounter_SetPrescaler, .-PPMCounter_SetPrescaler
 264              		.section	.text.PPMCounter_SetOneShot,"ax",%progbits
 265              		.align	1
 266              		.global	PPMCounter_SetOneShot
 267              		.code	16
 268              		.thumb_func
 269              		.type	PPMCounter_SetOneShot, %function
 270              	PPMCounter_SetOneShot:
 271              	.LFB7:
 413:.\Generated_Source\PSoC4/PPMCounter.c **** {
 272              		.loc 1 413 0
 273              		.cfi_startproc
 274              	.LVL16:
 275 0000 10B5     		push	{r4, lr}
 276              	.LCFI4:
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 413:.\Generated_Source\PSoC4/PPMCounter.c **** {
 280              		.loc 1 413 0
 281 0002 041C     		mov	r4, r0
 416:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 282              		.loc 1 416 0
 283 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 284              	.LVL17:
 418:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_ONESHOT_MASK;
 285              		.loc 1 418 0
 286 0008 064B     		ldr	r3, .L17
 287 000a 074A     		ldr	r2, .L17+4
 288 000c 1968     		ldr	r1, [r3]
 423:.\Generated_Source\PSoC4/PPMCounter.c **** }
 289              		.loc 1 423 0
 290              		@ sp needed for prologue
 418:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_ONESHOT_MASK;
 291              		.loc 1 418 0
 292 000e 0A40     		and	r2, r1
 293 0010 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((oneShotEnable & PPMCounter_1BIT_MASK) <<
 294              		.loc 1 419 0
 295 0012 0121     		mov	r1, #1
 296 0014 1A68     		ldr	r2, [r3]
 297 0016 0C40     		and	r4, r1
 298              	.LVL18:
 299 0018 A404     		lsl	r4, r4, #18
 300 001a 1443     		orr	r4, r2
 301 001c 1C60     		str	r4, [r3]
 422:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 302              		.loc 1 422 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 30


 303 001e FFF7FEFF 		bl	CyExitCriticalSection
 304              	.LVL19:
 423:.\Generated_Source\PSoC4/PPMCounter.c **** }
 305              		.loc 1 423 0
 306 0022 10BD     		pop	{r4, pc}
 307              	.L18:
 308              		.align	2
 309              	.L17:
 310 0024 C0010540 		.word	1074069952
 311 0028 FFFFFBFF 		.word	-262145
 312              		.cfi_endproc
 313              	.LFE7:
 314              		.size	PPMCounter_SetOneShot, .-PPMCounter_SetOneShot
 315              		.section	.text.PPMCounter_SetPWMMode,"ax",%progbits
 316              		.align	1
 317              		.global	PPMCounter_SetPWMMode
 318              		.code	16
 319              		.thumb_func
 320              		.type	PPMCounter_SetPWMMode, %function
 321              	PPMCounter_SetPWMMode:
 322              	.LFB8:
 467:.\Generated_Source\PSoC4/PPMCounter.c **** {
 323              		.loc 1 467 0
 324              		.cfi_startproc
 325              	.LVL20:
 468:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL2_REG = (modeMask & PPMCounter_6BIT_MASK);
 326              		.loc 1 468 0
 327 0000 3F23     		mov	r3, #63
 328 0002 0249     		ldr	r1, .L20
 329 0004 1840     		and	r0, r3
 330              	.LVL21:
 331 0006 0860     		str	r0, [r1]
 469:.\Generated_Source\PSoC4/PPMCounter.c **** }
 332              		.loc 1 469 0
 333              		@ sp needed for prologue
 334 0008 7047     		bx	lr
 335              	.L21:
 336 000a C046     		.align	2
 337              	.L20:
 338 000c E8010540 		.word	1074069992
 339              		.cfi_endproc
 340              	.LFE8:
 341              		.size	PPMCounter_SetPWMMode, .-PPMCounter_SetPWMMode
 342              		.section	.text.PPMCounter_SetPWMSyncKill,"ax",%progbits
 343              		.align	1
 344              		.global	PPMCounter_SetPWMSyncKill
 345              		.code	16
 346              		.thumb_func
 347              		.type	PPMCounter_SetPWMSyncKill, %function
 348              	PPMCounter_SetPWMSyncKill:
 349              	.LFB9:
 503:.\Generated_Source\PSoC4/PPMCounter.c **** {
 350              		.loc 1 503 0
 351              		.cfi_startproc
 352              	.LVL22:
 353 0000 10B5     		push	{r4, lr}
 354              	.LCFI5:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 31


 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 4, -8
 357              		.cfi_offset 14, -4
 503:.\Generated_Source\PSoC4/PPMCounter.c **** {
 358              		.loc 1 503 0
 359 0002 041C     		mov	r4, r0
 506:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 360              		.loc 1 506 0
 361 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 362              	.LVL23:
 508:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_SYNC_KILL_MASK;
 363              		.loc 1 508 0
 364 0008 064B     		ldr	r3, .L23
 365 000a 0421     		mov	r1, #4
 366 000c 1A68     		ldr	r2, [r3]
 513:.\Generated_Source\PSoC4/PPMCounter.c **** }
 367              		.loc 1 513 0
 368              		@ sp needed for prologue
 508:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_SYNC_KILL_MASK;
 369              		.loc 1 508 0
 370 000e 8A43     		bic	r2, r1
 371 0010 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((syncKillEnable & PPMCounter_1BIT_MASK)  <<
 372              		.loc 1 509 0
 373 0012 0121     		mov	r1, #1
 374 0014 1A68     		ldr	r2, [r3]
 375 0016 0C40     		and	r4, r1
 376              	.LVL24:
 377 0018 A400     		lsl	r4, r4, #2
 378 001a 1443     		orr	r4, r2
 379 001c 1C60     		str	r4, [r3]
 512:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 380              		.loc 1 512 0
 381 001e FFF7FEFF 		bl	CyExitCriticalSection
 382              	.LVL25:
 513:.\Generated_Source\PSoC4/PPMCounter.c **** }
 383              		.loc 1 513 0
 384 0022 10BD     		pop	{r4, pc}
 385              	.L24:
 386              		.align	2
 387              	.L23:
 388 0024 C0010540 		.word	1074069952
 389              		.cfi_endproc
 390              	.LFE9:
 391              		.size	PPMCounter_SetPWMSyncKill, .-PPMCounter_SetPWMSyncKill
 392              		.section	.text.PPMCounter_SetPWMStopOnKill,"ax",%progbits
 393              		.align	1
 394              		.global	PPMCounter_SetPWMStopOnKill
 395              		.code	16
 396              		.thumb_func
 397              		.type	PPMCounter_SetPWMStopOnKill, %function
 398              	PPMCounter_SetPWMStopOnKill:
 399              	.LFB10:
 537:.\Generated_Source\PSoC4/PPMCounter.c **** {
 400              		.loc 1 537 0
 401              		.cfi_startproc
 402              	.LVL26:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 32


 403 0000 10B5     		push	{r4, lr}
 404              	.LCFI6:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 537:.\Generated_Source\PSoC4/PPMCounter.c **** {
 408              		.loc 1 537 0
 409 0002 041C     		mov	r4, r0
 540:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 410              		.loc 1 540 0
 411 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 412              	.LVL27:
 542:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_STOP_KILL_MASK;
 413              		.loc 1 542 0
 414 0008 064B     		ldr	r3, .L26
 415 000a 0821     		mov	r1, #8
 416 000c 1A68     		ldr	r2, [r3]
 547:.\Generated_Source\PSoC4/PPMCounter.c **** }
 417              		.loc 1 547 0
 418              		@ sp needed for prologue
 542:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PWM_STOP_KILL_MASK;
 419              		.loc 1 542 0
 420 000e 8A43     		bic	r2, r1
 421 0010 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((stopOnKillEnable & PPMCounter_1BIT_MASK)  <<
 422              		.loc 1 543 0
 423 0012 0121     		mov	r1, #1
 424 0014 1A68     		ldr	r2, [r3]
 425 0016 0C40     		and	r4, r1
 426              	.LVL28:
 427 0018 E400     		lsl	r4, r4, #3
 428 001a 1443     		orr	r4, r2
 429 001c 1C60     		str	r4, [r3]
 546:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 430              		.loc 1 546 0
 431 001e FFF7FEFF 		bl	CyExitCriticalSection
 432              	.LVL29:
 547:.\Generated_Source\PSoC4/PPMCounter.c **** }
 433              		.loc 1 547 0
 434 0022 10BD     		pop	{r4, pc}
 435              	.L27:
 436              		.align	2
 437              	.L26:
 438 0024 C0010540 		.word	1074069952
 439              		.cfi_endproc
 440              	.LFE10:
 441              		.size	PPMCounter_SetPWMStopOnKill, .-PPMCounter_SetPWMStopOnKill
 442              		.section	.text.PPMCounter_SetPWMDeadTime,"ax",%progbits
 443              		.align	1
 444              		.global	PPMCounter_SetPWMDeadTime
 445              		.code	16
 446              		.thumb_func
 447              		.type	PPMCounter_SetPWMDeadTime, %function
 448              	PPMCounter_SetPWMDeadTime:
 449              	.LFB11:
 570:.\Generated_Source\PSoC4/PPMCounter.c **** {
 450              		.loc 1 570 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 33


 451              		.cfi_startproc
 452              	.LVL30:
 453 0000 10B5     		push	{r4, lr}
 454              	.LCFI7:
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 4, -8
 457              		.cfi_offset 14, -4
 570:.\Generated_Source\PSoC4/PPMCounter.c **** {
 458              		.loc 1 570 0
 459 0002 041C     		mov	r4, r0
 573:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 460              		.loc 1 573 0
 461 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 462              	.LVL31:
 575:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 463              		.loc 1 575 0
 464 0008 064B     		ldr	r3, .L29
 465 000a 074A     		ldr	r2, .L29+4
 466 000c 1968     		ldr	r1, [r3]
 576:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((deadTime & PPMCounter_8BIT_MASK) <<
 467              		.loc 1 576 0
 468 000e 2406     		lsl	r4, r4, #24
 469              	.LVL32:
 575:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_PRESCALER_MASK;
 470              		.loc 1 575 0
 471 0010 0A40     		and	r2, r1
 472 0012 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((deadTime & PPMCounter_8BIT_MASK) <<
 473              		.loc 1 576 0
 474 0014 1968     		ldr	r1, [r3]
 475 0016 220C     		lsr	r2, r4, #16
 476 0018 0A43     		orr	r2, r1
 477 001a 1A60     		str	r2, [r3]
 579:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 478              		.loc 1 579 0
 479 001c FFF7FEFF 		bl	CyExitCriticalSection
 480              	.LVL33:
 580:.\Generated_Source\PSoC4/PPMCounter.c **** }
 481              		.loc 1 580 0
 482              		@ sp needed for prologue
 483 0020 10BD     		pop	{r4, pc}
 484              	.L30:
 485 0022 C046     		.align	2
 486              	.L29:
 487 0024 C0010540 		.word	1074069952
 488 0028 FF00FFFF 		.word	-65281
 489              		.cfi_endproc
 490              	.LFE11:
 491              		.size	PPMCounter_SetPWMDeadTime, .-PPMCounter_SetPWMDeadTime
 492              		.section	.text.PPMCounter_SetPWMInvert,"ax",%progbits
 493              		.align	1
 494              		.global	PPMCounter_SetPWMInvert
 495              		.code	16
 496              		.thumb_func
 497              		.type	PPMCounter_SetPWMInvert, %function
 498              	PPMCounter_SetPWMInvert:
 499              	.LFB12:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 34


 603:.\Generated_Source\PSoC4/PPMCounter.c **** {
 500              		.loc 1 603 0
 501              		.cfi_startproc
 502              	.LVL34:
 503 0000 10B5     		push	{r4, lr}
 504              	.LCFI8:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 4, -8
 507              		.cfi_offset 14, -4
 603:.\Generated_Source\PSoC4/PPMCounter.c **** {
 508              		.loc 1 603 0
 509 0002 041C     		mov	r4, r0
 606:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 606 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL35:
 608:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_INV_OUT_MASK;
 513              		.loc 1 608 0
 514 0008 054B     		ldr	r3, .L32
 515 000a 064A     		ldr	r2, .L32+4
 516 000c 1968     		ldr	r1, [r3]
 612:.\Generated_Source\PSoC4/PPMCounter.c **** }
 517              		.loc 1 612 0
 518              		@ sp needed for prologue
 608:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_INV_OUT_MASK;
 519              		.loc 1 608 0
 520 000e 0A40     		and	r2, r1
 521 0010 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= mask;
 522              		.loc 1 609 0
 523 0012 1968     		ldr	r1, [r3]
 524 0014 0C43     		orr	r4, r1
 525              	.LVL36:
 526 0016 1C60     		str	r4, [r3]
 611:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 527              		.loc 1 611 0
 528 0018 FFF7FEFF 		bl	CyExitCriticalSection
 529              	.LVL37:
 612:.\Generated_Source\PSoC4/PPMCounter.c **** }
 530              		.loc 1 612 0
 531 001c 10BD     		pop	{r4, pc}
 532              	.L33:
 533 001e C046     		.align	2
 534              	.L32:
 535 0020 C0010540 		.word	1074069952
 536 0024 FFFFCFFF 		.word	-3145729
 537              		.cfi_endproc
 538              	.LFE12:
 539              		.size	PPMCounter_SetPWMInvert, .-PPMCounter_SetPWMInvert
 540              		.section	.text.PPMCounter_WriteCounter,"ax",%progbits
 541              		.align	1
 542              		.global	PPMCounter_WriteCounter
 543              		.code	16
 544              		.thumb_func
 545              		.type	PPMCounter_WriteCounter, %function
 546              	PPMCounter_WriteCounter:
 547              	.LFB13:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 35


 633:.\Generated_Source\PSoC4/PPMCounter.c **** {
 548              		.loc 1 633 0
 549              		.cfi_startproc
 550              	.LVL38:
 634:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COUNTER_REG = (count & PPMCounter_16BIT_MASK);
 551              		.loc 1 634 0
 552 0000 014B     		ldr	r3, .L35
 553 0002 80B2     		uxth	r0, r0
 554              	.LVL39:
 555 0004 1860     		str	r0, [r3]
 635:.\Generated_Source\PSoC4/PPMCounter.c **** }
 556              		.loc 1 635 0
 557              		@ sp needed for prologue
 558 0006 7047     		bx	lr
 559              	.L36:
 560              		.align	2
 561              	.L35:
 562 0008 C8010540 		.word	1074069960
 563              		.cfi_endproc
 564              	.LFE13:
 565              		.size	PPMCounter_WriteCounter, .-PPMCounter_WriteCounter
 566              		.section	.text.PPMCounter_ReadCounter,"ax",%progbits
 567              		.align	1
 568              		.global	PPMCounter_ReadCounter
 569              		.code	16
 570              		.thumb_func
 571              		.type	PPMCounter_ReadCounter, %function
 572              	PPMCounter_ReadCounter:
 573              	.LFB14:
 653:.\Generated_Source\PSoC4/PPMCounter.c **** {
 574              		.loc 1 653 0
 575              		.cfi_startproc
 654:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COUNTER_REG & PPMCounter_16BIT_MASK);
 576              		.loc 1 654 0
 577 0000 014B     		ldr	r3, .L38
 655:.\Generated_Source\PSoC4/PPMCounter.c **** }
 578              		.loc 1 655 0
 579              		@ sp needed for prologue
 654:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COUNTER_REG & PPMCounter_16BIT_MASK);
 580              		.loc 1 654 0
 581 0002 1868     		ldr	r0, [r3]
 582 0004 80B2     		uxth	r0, r0
 655:.\Generated_Source\PSoC4/PPMCounter.c **** }
 583              		.loc 1 655 0
 584 0006 7047     		bx	lr
 585              	.L39:
 586              		.align	2
 587              	.L38:
 588 0008 C8010540 		.word	1074069960
 589              		.cfi_endproc
 590              	.LFE14:
 591              		.size	PPMCounter_ReadCounter, .-PPMCounter_ReadCounter
 592              		.section	.text.PPMCounter_SetCounterMode,"ax",%progbits
 593              		.align	1
 594              		.global	PPMCounter_SetCounterMode
 595              		.code	16
 596              		.thumb_func
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 36


 597              		.type	PPMCounter_SetCounterMode, %function
 598              	PPMCounter_SetCounterMode:
 599              	.LFB15:
 682:.\Generated_Source\PSoC4/PPMCounter.c **** {
 600              		.loc 1 682 0
 601              		.cfi_startproc
 602              	.LVL40:
 603 0000 10B5     		push	{r4, lr}
 604              	.LCFI9:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 4, -8
 607              		.cfi_offset 14, -4
 682:.\Generated_Source\PSoC4/PPMCounter.c **** {
 608              		.loc 1 682 0
 609 0002 041C     		mov	r4, r0
 685:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 610              		.loc 1 685 0
 611 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 612              	.LVL41:
 687:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_UPDOWN_MASK;
 613              		.loc 1 687 0
 614 0008 054B     		ldr	r3, .L41
 615 000a 064A     		ldr	r2, .L41+4
 616 000c 1968     		ldr	r1, [r3]
 691:.\Generated_Source\PSoC4/PPMCounter.c **** }
 617              		.loc 1 691 0
 618              		@ sp needed for prologue
 687:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_UPDOWN_MASK;
 619              		.loc 1 687 0
 620 000e 0A40     		and	r2, r1
 621 0010 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= counterMode;
 622              		.loc 1 688 0
 623 0012 1968     		ldr	r1, [r3]
 624 0014 0C43     		orr	r4, r1
 625              	.LVL42:
 626 0016 1C60     		str	r4, [r3]
 690:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 627              		.loc 1 690 0
 628 0018 FFF7FEFF 		bl	CyExitCriticalSection
 629              	.LVL43:
 691:.\Generated_Source\PSoC4/PPMCounter.c **** }
 630              		.loc 1 691 0
 631 001c 10BD     		pop	{r4, pc}
 632              	.L42:
 633 001e C046     		.align	2
 634              	.L41:
 635 0020 C0010540 		.word	1074069952
 636 0024 FFFFFCFF 		.word	-196609
 637              		.cfi_endproc
 638              	.LFE15:
 639              		.size	PPMCounter_SetCounterMode, .-PPMCounter_SetCounterMode
 640              		.section	.text.PPMCounter_WritePeriod,"ax",%progbits
 641              		.align	1
 642              		.global	PPMCounter_WritePeriod
 643              		.code	16
 644              		.thumb_func
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 37


 645              		.type	PPMCounter_WritePeriod, %function
 646              	PPMCounter_WritePeriod:
 647              	.LFB16:
 711:.\Generated_Source\PSoC4/PPMCounter.c **** {
 648              		.loc 1 711 0
 649              		.cfi_startproc
 650              	.LVL44:
 712:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_REG = (period & PPMCounter_16BIT_MASK);
 651              		.loc 1 712 0
 652 0000 014B     		ldr	r3, .L44
 653 0002 80B2     		uxth	r0, r0
 654              	.LVL45:
 655 0004 1860     		str	r0, [r3]
 713:.\Generated_Source\PSoC4/PPMCounter.c **** }
 656              		.loc 1 713 0
 657              		@ sp needed for prologue
 658 0006 7047     		bx	lr
 659              	.L45:
 660              		.align	2
 661              	.L44:
 662 0008 D4010540 		.word	1074069972
 663              		.cfi_endproc
 664              	.LFE16:
 665              		.size	PPMCounter_WritePeriod, .-PPMCounter_WritePeriod
 666              		.section	.text.PPMCounter_ReadPeriod,"ax",%progbits
 667              		.align	1
 668              		.global	PPMCounter_ReadPeriod
 669              		.code	16
 670              		.thumb_func
 671              		.type	PPMCounter_ReadPeriod, %function
 672              	PPMCounter_ReadPeriod:
 673              	.LFB17:
 731:.\Generated_Source\PSoC4/PPMCounter.c **** {
 674              		.loc 1 731 0
 675              		.cfi_startproc
 732:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_REG & PPMCounter_16BIT_MASK);
 676              		.loc 1 732 0
 677 0000 014B     		ldr	r3, .L47
 733:.\Generated_Source\PSoC4/PPMCounter.c **** }
 678              		.loc 1 733 0
 679              		@ sp needed for prologue
 732:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_REG & PPMCounter_16BIT_MASK);
 680              		.loc 1 732 0
 681 0002 1868     		ldr	r0, [r3]
 682 0004 80B2     		uxth	r0, r0
 733:.\Generated_Source\PSoC4/PPMCounter.c **** }
 683              		.loc 1 733 0
 684 0006 7047     		bx	lr
 685              	.L48:
 686              		.align	2
 687              	.L47:
 688 0008 D4010540 		.word	1074069972
 689              		.cfi_endproc
 690              	.LFE17:
 691              		.size	PPMCounter_ReadPeriod, .-PPMCounter_ReadPeriod
 692              		.section	.text.PPMCounter_SetCompareSwap,"ax",%progbits
 693              		.align	1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 38


 694              		.global	PPMCounter_SetCompareSwap
 695              		.code	16
 696              		.thumb_func
 697              		.type	PPMCounter_SetCompareSwap, %function
 698              	PPMCounter_SetCompareSwap:
 699              	.LFB18:
 757:.\Generated_Source\PSoC4/PPMCounter.c **** {
 700              		.loc 1 757 0
 701              		.cfi_startproc
 702              	.LVL46:
 703 0000 10B5     		push	{r4, lr}
 704              	.LCFI10:
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 4, -8
 707              		.cfi_offset 14, -4
 757:.\Generated_Source\PSoC4/PPMCounter.c **** {
 708              		.loc 1 757 0
 709 0002 041C     		mov	r4, r0
 760:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 710              		.loc 1 760 0
 711 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 712              	.LVL47:
 762:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_CC_MASK;
 713              		.loc 1 762 0
 714 0008 054B     		ldr	r3, .L50
 715 000a 0122     		mov	r2, #1
 716 000c 1968     		ldr	r1, [r3]
 766:.\Generated_Source\PSoC4/PPMCounter.c **** }
 717              		.loc 1 766 0
 718              		@ sp needed for prologue
 762:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_CC_MASK;
 719              		.loc 1 762 0
 720 000e 9143     		bic	r1, r2
 721 0010 1960     		str	r1, [r3]
 763:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= (swapEnable & PPMCounter_1BIT_MASK);
 722              		.loc 1 763 0
 723 0012 1968     		ldr	r1, [r3]
 724 0014 2240     		and	r2, r4
 725 0016 0A43     		orr	r2, r1
 726 0018 1A60     		str	r2, [r3]
 765:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 727              		.loc 1 765 0
 728 001a FFF7FEFF 		bl	CyExitCriticalSection
 729              	.LVL48:
 730              	.LVL49:
 766:.\Generated_Source\PSoC4/PPMCounter.c **** }
 731              		.loc 1 766 0
 732 001e 10BD     		pop	{r4, pc}
 733              	.L51:
 734              		.align	2
 735              	.L50:
 736 0020 C0010540 		.word	1074069952
 737              		.cfi_endproc
 738              	.LFE18:
 739              		.size	PPMCounter_SetCompareSwap, .-PPMCounter_SetCompareSwap
 740              		.section	.text.PPMCounter_WritePeriodBuf,"ax",%progbits
 741              		.align	1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 39


 742              		.global	PPMCounter_WritePeriodBuf
 743              		.code	16
 744              		.thumb_func
 745              		.type	PPMCounter_WritePeriodBuf, %function
 746              	PPMCounter_WritePeriodBuf:
 747              	.LFB19:
 784:.\Generated_Source\PSoC4/PPMCounter.c **** {
 748              		.loc 1 784 0
 749              		.cfi_startproc
 750              	.LVL50:
 785:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_PERIOD_BUF_REG = (periodBuf & PPMCounter_16BIT_MASK);
 751              		.loc 1 785 0
 752 0000 014B     		ldr	r3, .L53
 753 0002 80B2     		uxth	r0, r0
 754              	.LVL51:
 755 0004 1860     		str	r0, [r3]
 786:.\Generated_Source\PSoC4/PPMCounter.c **** }
 756              		.loc 1 786 0
 757              		@ sp needed for prologue
 758 0006 7047     		bx	lr
 759              	.L54:
 760              		.align	2
 761              	.L53:
 762 0008 D8010540 		.word	1074069976
 763              		.cfi_endproc
 764              	.LFE19:
 765              		.size	PPMCounter_WritePeriodBuf, .-PPMCounter_WritePeriodBuf
 766              		.section	.text.PPMCounter_ReadPeriodBuf,"ax",%progbits
 767              		.align	1
 768              		.global	PPMCounter_ReadPeriodBuf
 769              		.code	16
 770              		.thumb_func
 771              		.type	PPMCounter_ReadPeriodBuf, %function
 772              	PPMCounter_ReadPeriodBuf:
 773              	.LFB20:
 804:.\Generated_Source\PSoC4/PPMCounter.c **** {
 774              		.loc 1 804 0
 775              		.cfi_startproc
 805:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_BUF_REG & PPMCounter_16BIT_MASK);
 776              		.loc 1 805 0
 777 0000 014B     		ldr	r3, .L56
 806:.\Generated_Source\PSoC4/PPMCounter.c **** }
 778              		.loc 1 806 0
 779              		@ sp needed for prologue
 805:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_PERIOD_BUF_REG & PPMCounter_16BIT_MASK);
 780              		.loc 1 805 0
 781 0002 1868     		ldr	r0, [r3]
 782 0004 80B2     		uxth	r0, r0
 806:.\Generated_Source\PSoC4/PPMCounter.c **** }
 783              		.loc 1 806 0
 784 0006 7047     		bx	lr
 785              	.L57:
 786              		.align	2
 787              	.L56:
 788 0008 D8010540 		.word	1074069976
 789              		.cfi_endproc
 790              	.LFE20:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 40


 791              		.size	PPMCounter_ReadPeriodBuf, .-PPMCounter_ReadPeriodBuf
 792              		.section	.text.PPMCounter_SetPeriodSwap,"ax",%progbits
 793              		.align	1
 794              		.global	PPMCounter_SetPeriodSwap
 795              		.code	16
 796              		.thumb_func
 797              		.type	PPMCounter_SetPeriodSwap, %function
 798              	PPMCounter_SetPeriodSwap:
 799              	.LFB21:
 830:.\Generated_Source\PSoC4/PPMCounter.c **** {
 800              		.loc 1 830 0
 801              		.cfi_startproc
 802              	.LVL52:
 803 0000 10B5     		push	{r4, lr}
 804              	.LCFI11:
 805              		.cfi_def_cfa_offset 8
 806              		.cfi_offset 4, -8
 807              		.cfi_offset 14, -4
 830:.\Generated_Source\PSoC4/PPMCounter.c **** {
 808              		.loc 1 830 0
 809 0002 041C     		mov	r4, r0
 833:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 810              		.loc 1 833 0
 811 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 812              	.LVL53:
 835:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_PERIOD_MASK;
 813              		.loc 1 835 0
 814 0008 064B     		ldr	r3, .L59
 815 000a 0221     		mov	r1, #2
 816 000c 1A68     		ldr	r2, [r3]
 840:.\Generated_Source\PSoC4/PPMCounter.c **** }
 817              		.loc 1 840 0
 818              		@ sp needed for prologue
 835:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG &= (uint32)~PPMCounter_RELOAD_PERIOD_MASK;
 819              		.loc 1 835 0
 820 000e 8A43     		bic	r2, r1
 821 0010 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_CONTROL_REG |= ((uint32)((swapEnable & PPMCounter_1BIT_MASK) <<
 822              		.loc 1 836 0
 823 0012 0121     		mov	r1, #1
 824 0014 1A68     		ldr	r2, [r3]
 825 0016 0C40     		and	r4, r1
 826              	.LVL54:
 827 0018 8C40     		lsl	r4, r4, r1
 828 001a 1443     		orr	r4, r2
 829 001c 1C60     		str	r4, [r3]
 839:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 830              		.loc 1 839 0
 831 001e FFF7FEFF 		bl	CyExitCriticalSection
 832              	.LVL55:
 840:.\Generated_Source\PSoC4/PPMCounter.c **** }
 833              		.loc 1 840 0
 834 0022 10BD     		pop	{r4, pc}
 835              	.L60:
 836              		.align	2
 837              	.L59:
 838 0024 C0010540 		.word	1074069952
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 41


 839              		.cfi_endproc
 840              	.LFE21:
 841              		.size	PPMCounter_SetPeriodSwap, .-PPMCounter_SetPeriodSwap
 842              		.section	.text.PPMCounter_WriteCompare,"ax",%progbits
 843              		.align	1
 844              		.global	PPMCounter_WriteCompare
 845              		.code	16
 846              		.thumb_func
 847              		.type	PPMCounter_WriteCompare, %function
 848              	PPMCounter_WriteCompare:
 849              	.LFB22:
 859:.\Generated_Source\PSoC4/PPMCounter.c **** {
 850              		.loc 1 859 0
 851              		.cfi_startproc
 852              	.LVL56:
 880:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_COMP_CAP_REG = (compare & PPMCounter_16BIT_MASK);
 853              		.loc 1 880 0
 854 0000 014B     		ldr	r3, .L62
 855 0002 80B2     		uxth	r0, r0
 856              	.LVL57:
 857 0004 1860     		str	r0, [r3]
 882:.\Generated_Source\PSoC4/PPMCounter.c **** }
 858              		.loc 1 882 0
 859              		@ sp needed for prologue
 860 0006 7047     		bx	lr
 861              	.L63:
 862              		.align	2
 863              	.L62:
 864 0008 CC010540 		.word	1074069964
 865              		.cfi_endproc
 866              	.LFE22:
 867              		.size	PPMCounter_WriteCompare, .-PPMCounter_WriteCompare
 868              		.section	.text.PPMCounter_ReadCompare,"ax",%progbits
 869              		.align	1
 870              		.global	PPMCounter_ReadCompare
 871              		.code	16
 872              		.thumb_func
 873              		.type	PPMCounter_ReadCompare, %function
 874              	PPMCounter_ReadCompare:
 875              	.LFB23:
 901:.\Generated_Source\PSoC4/PPMCounter.c **** {
 876              		.loc 1 901 0
 877              		.cfi_startproc
 924:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 878              		.loc 1 924 0
 879 0000 014B     		ldr	r3, .L65
 926:.\Generated_Source\PSoC4/PPMCounter.c **** }
 880              		.loc 1 926 0
 881              		@ sp needed for prologue
 924:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 882              		.loc 1 924 0
 883 0002 1868     		ldr	r0, [r3]
 884 0004 80B2     		uxth	r0, r0
 926:.\Generated_Source\PSoC4/PPMCounter.c **** }
 885              		.loc 1 926 0
 886 0006 7047     		bx	lr
 887              	.L66:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 42


 888              		.align	2
 889              	.L65:
 890 0008 CC010540 		.word	1074069964
 891              		.cfi_endproc
 892              	.LFE23:
 893              		.size	PPMCounter_ReadCompare, .-PPMCounter_ReadCompare
 894              		.section	.text.PPMCounter_WriteCompareBuf,"ax",%progbits
 895              		.align	1
 896              		.global	PPMCounter_WriteCompareBuf
 897              		.code	16
 898              		.thumb_func
 899              		.type	PPMCounter_WriteCompareBuf, %function
 900              	PPMCounter_WriteCompareBuf:
 901              	.LFB24:
 945:.\Generated_Source\PSoC4/PPMCounter.c **** {
 902              		.loc 1 945 0
 903              		.cfi_startproc
 904              	.LVL58:
 966:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_COMP_CAP_BUF_REG = (compareBuf & PPMCounter_16BIT_MASK);
 905              		.loc 1 966 0
 906 0000 014B     		ldr	r3, .L68
 907 0002 80B2     		uxth	r0, r0
 908              	.LVL59:
 909 0004 1860     		str	r0, [r3]
 968:.\Generated_Source\PSoC4/PPMCounter.c **** }
 910              		.loc 1 968 0
 911              		@ sp needed for prologue
 912 0006 7047     		bx	lr
 913              	.L69:
 914              		.align	2
 915              	.L68:
 916 0008 D0010540 		.word	1074069968
 917              		.cfi_endproc
 918              	.LFE24:
 919              		.size	PPMCounter_WriteCompareBuf, .-PPMCounter_WriteCompareBuf
 920              		.section	.text.PPMCounter_ReadCompareBuf,"ax",%progbits
 921              		.align	1
 922              		.global	PPMCounter_ReadCompareBuf
 923              		.code	16
 924              		.thumb_func
 925              		.type	PPMCounter_ReadCompareBuf, %function
 926              	PPMCounter_ReadCompareBuf:
 927              	.LFB25:
 987:.\Generated_Source\PSoC4/PPMCounter.c **** {
 928              		.loc 1 987 0
 929              		.cfi_startproc
1010:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 930              		.loc 1 1010 0
 931 0000 014B     		ldr	r3, .L71
1012:.\Generated_Source\PSoC4/PPMCounter.c **** }
 932              		.loc 1 1012 0
 933              		@ sp needed for prologue
1010:.\Generated_Source\PSoC4/PPMCounter.c ****         return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 934              		.loc 1 1010 0
 935 0002 1868     		ldr	r0, [r3]
 936 0004 80B2     		uxth	r0, r0
1012:.\Generated_Source\PSoC4/PPMCounter.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 43


 937              		.loc 1 1012 0
 938 0006 7047     		bx	lr
 939              	.L72:
 940              		.align	2
 941              	.L71:
 942 0008 D0010540 		.word	1074069968
 943              		.cfi_endproc
 944              	.LFE25:
 945              		.size	PPMCounter_ReadCompareBuf, .-PPMCounter_ReadCompareBuf
 946              		.section	.text.PPMCounter_ReadCapture,"ax",%progbits
 947              		.align	1
 948              		.global	PPMCounter_ReadCapture
 949              		.code	16
 950              		.thumb_func
 951              		.type	PPMCounter_ReadCapture, %function
 952              	PPMCounter_ReadCapture:
 953              	.LFB26:
1031:.\Generated_Source\PSoC4/PPMCounter.c **** {
 954              		.loc 1 1031 0
 955              		.cfi_startproc
1032:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 956              		.loc 1 1032 0
 957 0000 014B     		ldr	r3, .L74
1033:.\Generated_Source\PSoC4/PPMCounter.c **** }
 958              		.loc 1 1033 0
 959              		@ sp needed for prologue
1032:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_REG & PPMCounter_16BIT_MASK);
 960              		.loc 1 1032 0
 961 0002 1868     		ldr	r0, [r3]
 962 0004 80B2     		uxth	r0, r0
1033:.\Generated_Source\PSoC4/PPMCounter.c **** }
 963              		.loc 1 1033 0
 964 0006 7047     		bx	lr
 965              	.L75:
 966              		.align	2
 967              	.L74:
 968 0008 CC010540 		.word	1074069964
 969              		.cfi_endproc
 970              	.LFE26:
 971              		.size	PPMCounter_ReadCapture, .-PPMCounter_ReadCapture
 972              		.section	.text.PPMCounter_ReadCaptureBuf,"ax",%progbits
 973              		.align	1
 974              		.global	PPMCounter_ReadCaptureBuf
 975              		.code	16
 976              		.thumb_func
 977              		.type	PPMCounter_ReadCaptureBuf, %function
 978              	PPMCounter_ReadCaptureBuf:
 979              	.LFB27:
1052:.\Generated_Source\PSoC4/PPMCounter.c **** {
 980              		.loc 1 1052 0
 981              		.cfi_startproc
1053:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 982              		.loc 1 1053 0
 983 0000 014B     		ldr	r3, .L77
1054:.\Generated_Source\PSoC4/PPMCounter.c **** }
 984              		.loc 1 1054 0
 985              		@ sp needed for prologue
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 44


1053:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_COMP_CAP_BUF_REG & PPMCounter_16BIT_MASK);
 986              		.loc 1 1053 0
 987 0002 1868     		ldr	r0, [r3]
 988 0004 80B2     		uxth	r0, r0
1054:.\Generated_Source\PSoC4/PPMCounter.c **** }
 989              		.loc 1 1054 0
 990 0006 7047     		bx	lr
 991              	.L78:
 992              		.align	2
 993              	.L77:
 994 0008 D0010540 		.word	1074069968
 995              		.cfi_endproc
 996              	.LFE27:
 997              		.size	PPMCounter_ReadCaptureBuf, .-PPMCounter_ReadCaptureBuf
 998              		.section	.text.PPMCounter_SetCaptureMode,"ax",%progbits
 999              		.align	1
 1000              		.global	PPMCounter_SetCaptureMode
 1001              		.code	16
 1002              		.thumb_func
 1003              		.type	PPMCounter_SetCaptureMode, %function
 1004              	PPMCounter_SetCaptureMode:
 1005              	.LFB28:
1079:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1006              		.loc 1 1079 0
 1007              		.cfi_startproc
 1008              	.LVL60:
 1009 0000 10B5     		push	{r4, lr}
 1010              	.LCFI12:
 1011              		.cfi_def_cfa_offset 8
 1012              		.cfi_offset 4, -8
 1013              		.cfi_offset 14, -4
1079:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1014              		.loc 1 1079 0
 1015 0002 041C     		mov	r4, r0
1082:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1016              		.loc 1 1082 0
 1017 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1018              	.LVL61:
1084:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_CAPTURE_MASK;
 1019              		.loc 1 1084 0
 1020 0008 054B     		ldr	r3, .L80
 1021 000a 0321     		mov	r1, #3
 1022 000c 1A68     		ldr	r2, [r3]
1088:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1023              		.loc 1 1088 0
 1024              		@ sp needed for prologue
1084:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_CAPTURE_MASK;
 1025              		.loc 1 1084 0
 1026 000e 8A43     		bic	r2, r1
 1027 0010 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= triggerMode;
 1028              		.loc 1 1085 0
 1029 0012 1A68     		ldr	r2, [r3]
 1030 0014 1443     		orr	r4, r2
 1031              	.LVL62:
 1032 0016 1C60     		str	r4, [r3]
1087:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 45


 1033              		.loc 1 1087 0
 1034 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1035              	.LVL63:
1088:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1036              		.loc 1 1088 0
 1037 001c 10BD     		pop	{r4, pc}
 1038              	.L81:
 1039 001e C046     		.align	2
 1040              	.L80:
 1041 0020 E4010540 		.word	1074069988
 1042              		.cfi_endproc
 1043              	.LFE28:
 1044              		.size	PPMCounter_SetCaptureMode, .-PPMCounter_SetCaptureMode
 1045              		.section	.text.PPMCounter_SetReloadMode,"ax",%progbits
 1046              		.align	1
 1047              		.global	PPMCounter_SetReloadMode
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	PPMCounter_SetReloadMode, %function
 1051              	PPMCounter_SetReloadMode:
 1052              	.LFB29:
1112:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1053              		.loc 1 1112 0
 1054              		.cfi_startproc
 1055              	.LVL64:
 1056 0000 10B5     		push	{r4, lr}
 1057              	.LCFI13:
 1058              		.cfi_def_cfa_offset 8
 1059              		.cfi_offset 4, -8
 1060              		.cfi_offset 14, -4
1112:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1061              		.loc 1 1112 0
 1062 0002 041C     		mov	r4, r0
1115:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1063              		.loc 1 1115 0
 1064 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1065              	.LVL65:
1117:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_RELOAD_MASK;
 1066              		.loc 1 1117 0
 1067 0008 054B     		ldr	r3, .L83
 1068 000a 3021     		mov	r1, #48
 1069 000c 1A68     		ldr	r2, [r3]
1118:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
 1070              		.loc 1 1118 0
 1071 000e 2401     		lsl	r4, r4, #4
 1072              	.LVL66:
1117:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_RELOAD_MASK;
 1073              		.loc 1 1117 0
 1074 0010 8A43     		bic	r2, r1
 1075 0012 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
 1076              		.loc 1 1118 0
 1077 0014 1A68     		ldr	r2, [r3]
1121:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1078              		.loc 1 1121 0
 1079              		@ sp needed for prologue
1118:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_RELOAD_SHIFT));
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 46


 1080              		.loc 1 1118 0
 1081 0016 1443     		orr	r4, r2
 1082 0018 1C60     		str	r4, [r3]
1120:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1083              		.loc 1 1120 0
 1084 001a FFF7FEFF 		bl	CyExitCriticalSection
 1085              	.LVL67:
1121:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1086              		.loc 1 1121 0
 1087 001e 10BD     		pop	{r4, pc}
 1088              	.L84:
 1089              		.align	2
 1090              	.L83:
 1091 0020 E4010540 		.word	1074069988
 1092              		.cfi_endproc
 1093              	.LFE29:
 1094              		.size	PPMCounter_SetReloadMode, .-PPMCounter_SetReloadMode
 1095              		.section	.text.PPMCounter_SetStartMode,"ax",%progbits
 1096              		.align	1
 1097              		.global	PPMCounter_SetStartMode
 1098              		.code	16
 1099              		.thumb_func
 1100              		.type	PPMCounter_SetStartMode, %function
 1101              	PPMCounter_SetStartMode:
 1102              	.LFB30:
1145:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1103              		.loc 1 1145 0
 1104              		.cfi_startproc
 1105              	.LVL68:
 1106 0000 10B5     		push	{r4, lr}
 1107              	.LCFI14:
 1108              		.cfi_def_cfa_offset 8
 1109              		.cfi_offset 4, -8
 1110              		.cfi_offset 14, -4
1145:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1111              		.loc 1 1145 0
 1112 0002 041C     		mov	r4, r0
1148:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1113              		.loc 1 1148 0
 1114 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1115              	.LVL69:
1150:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_START_MASK;
 1116              		.loc 1 1150 0
 1117 0008 054B     		ldr	r3, .L86
 1118 000a 064A     		ldr	r2, .L86+4
 1119 000c 1968     		ldr	r1, [r3]
1151:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
 1120              		.loc 1 1151 0
 1121 000e 2402     		lsl	r4, r4, #8
 1122              	.LVL70:
1150:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_START_MASK;
 1123              		.loc 1 1150 0
 1124 0010 0A40     		and	r2, r1
 1125 0012 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
 1126              		.loc 1 1151 0
 1127 0014 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 47


1154:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1128              		.loc 1 1154 0
 1129              		@ sp needed for prologue
1151:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_START_SHIFT));
 1130              		.loc 1 1151 0
 1131 0016 0C43     		orr	r4, r1
 1132 0018 1C60     		str	r4, [r3]
1153:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1153 0
 1134 001a FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL71:
1154:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1136              		.loc 1 1154 0
 1137 001e 10BD     		pop	{r4, pc}
 1138              	.L87:
 1139              		.align	2
 1140              	.L86:
 1141 0020 E4010540 		.word	1074069988
 1142 0024 FFFCFFFF 		.word	-769
 1143              		.cfi_endproc
 1144              	.LFE30:
 1145              		.size	PPMCounter_SetStartMode, .-PPMCounter_SetStartMode
 1146              		.section	.text.PPMCounter_SetStopMode,"ax",%progbits
 1147              		.align	1
 1148              		.global	PPMCounter_SetStopMode
 1149              		.code	16
 1150              		.thumb_func
 1151              		.type	PPMCounter_SetStopMode, %function
 1152              	PPMCounter_SetStopMode:
 1153              	.LFB31:
1177:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1154              		.loc 1 1177 0
 1155              		.cfi_startproc
 1156              	.LVL72:
 1157 0000 10B5     		push	{r4, lr}
 1158              	.LCFI15:
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 4, -8
 1161              		.cfi_offset 14, -4
1177:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1162              		.loc 1 1177 0
 1163 0002 041C     		mov	r4, r0
1180:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1164              		.loc 1 1180 0
 1165 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1166              	.LVL73:
1182:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_STOP_MASK;
 1167              		.loc 1 1182 0
 1168 0008 054B     		ldr	r3, .L89
 1169 000a C021     		mov	r1, #192
 1170 000c 1A68     		ldr	r2, [r3]
1183:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
 1171              		.loc 1 1183 0
 1172 000e A401     		lsl	r4, r4, #6
 1173              	.LVL74:
1182:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_STOP_MASK;
 1174              		.loc 1 1182 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 48


 1175 0010 8A43     		bic	r2, r1
 1176 0012 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
 1177              		.loc 1 1183 0
 1178 0014 1A68     		ldr	r2, [r3]
1186:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1179              		.loc 1 1186 0
 1180              		@ sp needed for prologue
1183:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_STOP_SHIFT));
 1181              		.loc 1 1183 0
 1182 0016 1443     		orr	r4, r2
 1183 0018 1C60     		str	r4, [r3]
1185:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1184              		.loc 1 1185 0
 1185 001a FFF7FEFF 		bl	CyExitCriticalSection
 1186              	.LVL75:
1186:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1187              		.loc 1 1186 0
 1188 001e 10BD     		pop	{r4, pc}
 1189              	.L90:
 1190              		.align	2
 1191              	.L89:
 1192 0020 E4010540 		.word	1074069988
 1193              		.cfi_endproc
 1194              	.LFE31:
 1195              		.size	PPMCounter_SetStopMode, .-PPMCounter_SetStopMode
 1196              		.section	.text.PPMCounter_SetCountMode,"ax",%progbits
 1197              		.align	1
 1198              		.global	PPMCounter_SetCountMode
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	PPMCounter_SetCountMode, %function
 1202              	PPMCounter_SetCountMode:
 1203              	.LFB32:
1210:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1204              		.loc 1 1210 0
 1205              		.cfi_startproc
 1206              	.LVL76:
 1207 0000 10B5     		push	{r4, lr}
 1208              	.LCFI16:
 1209              		.cfi_def_cfa_offset 8
 1210              		.cfi_offset 4, -8
 1211              		.cfi_offset 14, -4
1210:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1212              		.loc 1 1210 0
 1213 0002 041C     		mov	r4, r0
1213:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1214              		.loc 1 1213 0
 1215 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1216              	.LVL77:
1215:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_COUNT_MASK;
 1217              		.loc 1 1215 0
 1218 0008 054B     		ldr	r3, .L92
 1219 000a 0C21     		mov	r1, #12
 1220 000c 1A68     		ldr	r2, [r3]
1216:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
 1221              		.loc 1 1216 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 49


 1222 000e A400     		lsl	r4, r4, #2
 1223              	.LVL78:
1215:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG &= (uint32)~PPMCounter_COUNT_MASK;
 1224              		.loc 1 1215 0
 1225 0010 8A43     		bic	r2, r1
 1226 0012 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
 1227              		.loc 1 1216 0
 1228 0014 1A68     		ldr	r2, [r3]
1219:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1229              		.loc 1 1219 0
 1230              		@ sp needed for prologue
1216:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PPMCounter_COUNT_SHIFT));
 1231              		.loc 1 1216 0
 1232 0016 1443     		orr	r4, r2
 1233 0018 1C60     		str	r4, [r3]
1218:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1234              		.loc 1 1218 0
 1235 001a FFF7FEFF 		bl	CyExitCriticalSection
 1236              	.LVL79:
1219:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1237              		.loc 1 1219 0
 1238 001e 10BD     		pop	{r4, pc}
 1239              	.L93:
 1240              		.align	2
 1241              	.L92:
 1242 0020 E4010540 		.word	1074069988
 1243              		.cfi_endproc
 1244              	.LFE32:
 1245              		.size	PPMCounter_SetCountMode, .-PPMCounter_SetCountMode
 1246              		.section	.text.PPMCounter_TriggerCommand,"ax",%progbits
 1247              		.align	1
 1248              		.global	PPMCounter_TriggerCommand
 1249              		.code	16
 1250              		.thumb_func
 1251              		.type	PPMCounter_TriggerCommand, %function
 1252              	PPMCounter_TriggerCommand:
 1253              	.LFB33:
1250:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1254              		.loc 1 1250 0
 1255              		.cfi_startproc
 1256              	.LVL80:
 1257 0000 38B5     		push	{r3, r4, r5, lr}
 1258              	.LCFI17:
 1259              		.cfi_def_cfa_offset 16
 1260              		.cfi_offset 3, -16
 1261              		.cfi_offset 4, -12
 1262              		.cfi_offset 5, -8
 1263              		.cfi_offset 14, -4
1250:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1264              		.loc 1 1250 0
 1265 0002 0C1C     		mov	r4, r1
 1266 0004 051C     		mov	r5, r0
1253:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1267              		.loc 1 1253 0
 1268 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1269              	.LVL81:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 50


1255:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_COMMAND_REG = ((uint32)(mask << command));
 1270              		.loc 1 1255 0
 1271 000a 034B     		ldr	r3, .L95
 1272 000c A540     		lsl	r5, r5, r4
 1273              	.LVL82:
 1274 000e 1D60     		str	r5, [r3]
1257:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1275              		.loc 1 1257 0
 1276 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1277              	.LVL83:
1258:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1278              		.loc 1 1258 0
 1279              		@ sp needed for prologue
 1280              	.LVL84:
 1281 0014 38BD     		pop	{r3, r4, r5, pc}
 1282              	.L96:
 1283 0016 C046     		.align	2
 1284              	.L95:
 1285 0018 08000540 		.word	1074069512
 1286              		.cfi_endproc
 1287              	.LFE33:
 1288              		.size	PPMCounter_TriggerCommand, .-PPMCounter_TriggerCommand
 1289              		.section	.text.PPMCounter_Enable,"ax",%progbits
 1290              		.align	1
 1291              		.global	PPMCounter_Enable
 1292              		.code	16
 1293              		.thumb_func
 1294              		.type	PPMCounter_Enable, %function
 1295              	PPMCounter_Enable:
 1296              	.LFB1:
 201:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1297              		.loc 1 201 0
 1298              		.cfi_startproc
 1299 0000 10B5     		push	{r4, lr}
 1300              	.LCFI18:
 1301              		.cfi_def_cfa_offset 8
 1302              		.cfi_offset 4, -8
 1303              		.cfi_offset 14, -4
 204:.\Generated_Source\PSoC4/PPMCounter.c ****     enableInterrupts = CyEnterCriticalSection();
 1304              		.loc 1 204 0
 1305 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1306              	.LVL85:
 205:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG |= PPMCounter_MASK;
 1307              		.loc 1 205 0
 1308 0006 064B     		ldr	r3, .L98
 1309 0008 0824     		mov	r4, #8
 1310 000a 1A68     		ldr	r2, [r3]
 220:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1311              		.loc 1 220 0
 1312              		@ sp needed for prologue
 205:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_BLOCK_CONTROL_REG |= PPMCounter_MASK;
 1313              		.loc 1 205 0
 1314 000c 2243     		orr	r2, r4
 1315 000e 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/PPMCounter.c ****     CyExitCriticalSection(enableInterrupts);
 1316              		.loc 1 206 0
 1317 0010 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 51


 1318              	.LVL86:
 217:.\Generated_Source\PSoC4/PPMCounter.c ****             PPMCounter_TriggerCommand(PPMCounter_MASK, PPMCounter_CMD_START);
 1319              		.loc 1 217 0
 1320 0014 201C     		mov	r0, r4
 1321 0016 1821     		mov	r1, #24
 1322 0018 FFF7FEFF 		bl	PPMCounter_TriggerCommand
 1323              	.LVL87:
 220:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1324              		.loc 1 220 0
 1325 001c 10BD     		pop	{r4, pc}
 1326              	.L99:
 1327 001e C046     		.align	2
 1328              	.L98:
 1329 0020 00000540 		.word	1074069504
 1330              		.cfi_endproc
 1331              	.LFE1:
 1332              		.size	PPMCounter_Enable, .-PPMCounter_Enable
 1333              		.section	.text.PPMCounter_Start,"ax",%progbits
 1334              		.align	1
 1335              		.global	PPMCounter_Start
 1336              		.code	16
 1337              		.thumb_func
 1338              		.type	PPMCounter_Start, %function
 1339              	PPMCounter_Start:
 1340              	.LFB2:
 248:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1341              		.loc 1 248 0
 1342              		.cfi_startproc
 1343 0000 10B5     		push	{r4, lr}
 1344              	.LCFI19:
 1345              		.cfi_def_cfa_offset 8
 1346              		.cfi_offset 4, -8
 1347              		.cfi_offset 14, -4
 249:.\Generated_Source\PSoC4/PPMCounter.c ****     if (0u == PPMCounter_initVar)
 1348              		.loc 1 249 0
 1349 0002 054C     		ldr	r4, .L103
 1350 0004 2378     		ldrb	r3, [r4]
 1351 0006 002B     		cmp	r3, #0
 1352 0008 03D1     		bne	.L101
 251:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_Init();
 1353              		.loc 1 251 0
 1354 000a FFF7FEFF 		bl	PPMCounter_Init
 1355              	.LVL88:
 252:.\Generated_Source\PSoC4/PPMCounter.c ****         PPMCounter_initVar = 1u;
 1356              		.loc 1 252 0
 1357 000e 0120     		mov	r0, #1
 1358 0010 2070     		strb	r0, [r4]
 1359              	.L101:
 255:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_Enable();
 1360              		.loc 1 255 0
 1361 0012 FFF7FEFF 		bl	PPMCounter_Enable
 1362              	.LVL89:
 256:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1363              		.loc 1 256 0
 1364              		@ sp needed for prologue
 1365 0016 10BD     		pop	{r4, pc}
 1366              	.L104:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 52


 1367              		.align	2
 1368              	.L103:
 1369 0018 00000000 		.word	.LANCHOR0
 1370              		.cfi_endproc
 1371              	.LFE2:
 1372              		.size	PPMCounter_Start, .-PPMCounter_Start
 1373              		.section	.text.PPMCounter_ReadStatus,"ax",%progbits
 1374              		.align	1
 1375              		.global	PPMCounter_ReadStatus
 1376              		.code	16
 1377              		.thumb_func
 1378              		.type	PPMCounter_ReadStatus, %function
 1379              	PPMCounter_ReadStatus:
 1380              	.LFB34:
1279:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1381              		.loc 1 1279 0
 1382              		.cfi_startproc
1280:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
 1383              		.loc 1 1280 0
 1384 0000 034B     		ldr	r3, .L106
1281:.\Generated_Source\PSoC4/PPMCounter.c ****             (PPMCounter_STATUS_REG & PPMCounter_STATUS_DOWN));
 1385              		.loc 1 1281 0
 1386 0002 0121     		mov	r1, #1
1280:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
 1387              		.loc 1 1280 0
 1388 0004 1A68     		ldr	r2, [r3]
1281:.\Generated_Source\PSoC4/PPMCounter.c ****             (PPMCounter_STATUS_REG & PPMCounter_STATUS_DOWN));
 1389              		.loc 1 1281 0
 1390 0006 1868     		ldr	r0, [r3]
1280:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
 1391              		.loc 1 1280 0
 1392 0008 930F     		lsr	r3, r2, #30
1281:.\Generated_Source\PSoC4/PPMCounter.c ****             (PPMCounter_STATUS_REG & PPMCounter_STATUS_DOWN));
 1393              		.loc 1 1281 0
 1394 000a 0840     		and	r0, r1
1280:.\Generated_Source\PSoC4/PPMCounter.c ****     return ((PPMCounter_STATUS_REG >> PPMCounter_RUNNING_STATUS_SHIFT) |
 1395              		.loc 1 1280 0
 1396 000c 1843     		orr	r0, r3
1282:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1397              		.loc 1 1282 0
 1398              		@ sp needed for prologue
 1399 000e 7047     		bx	lr
 1400              	.L107:
 1401              		.align	2
 1402              	.L106:
 1403 0010 C4010540 		.word	1074069956
 1404              		.cfi_endproc
 1405              	.LFE34:
 1406              		.size	PPMCounter_ReadStatus, .-PPMCounter_ReadStatus
 1407              		.section	.text.PPMCounter_SetInterruptMode,"ax",%progbits
 1408              		.align	1
 1409              		.global	PPMCounter_SetInterruptMode
 1410              		.code	16
 1411              		.thumb_func
 1412              		.type	PPMCounter_SetInterruptMode, %function
 1413              	PPMCounter_SetInterruptMode:
 1414              	.LFB35:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 53


1304:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1415              		.loc 1 1304 0
 1416              		.cfi_startproc
 1417              	.LVL90:
 1418              		.loc 1 1305 0
 1419 0000 014B     		ldr	r3, .L109
1306:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1420              		.loc 1 1306 0
 1421              		@ sp needed for prologue
1305:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_MASK_REG =  interruptMask;
 1422              		.loc 1 1305 0
 1423 0002 1860     		str	r0, [r3]
 1424              		.loc 1 1306 0
 1425 0004 7047     		bx	lr
 1426              	.L110:
 1427 0006 C046     		.align	2
 1428              	.L109:
 1429 0008 F8010540 		.word	1074070008
 1430              		.cfi_endproc
 1431              	.LFE35:
 1432              		.size	PPMCounter_SetInterruptMode, .-PPMCounter_SetInterruptMode
 1433              		.section	.text.PPMCounter_GetInterruptSourceMasked,"ax",%progbits
 1434              		.align	1
 1435              		.global	PPMCounter_GetInterruptSourceMasked
 1436              		.code	16
 1437              		.thumb_func
 1438              		.type	PPMCounter_GetInterruptSourceMasked, %function
 1439              	PPMCounter_GetInterruptSourceMasked:
 1440              	.LFB36:
1307:.\Generated_Source\PSoC4/PPMCounter.c **** 
1308:.\Generated_Source\PSoC4/PPMCounter.c **** 
1309:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/PPMCounter.c **** *
1313:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1314:.\Generated_Source\PSoC4/PPMCounter.c **** *  Gets the interrupt requests masked by the interrupt mask.
1315:.\Generated_Source\PSoC4/PPMCounter.c **** *
1316:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1317:.\Generated_Source\PSoC4/PPMCounter.c **** *   None
1318:.\Generated_Source\PSoC4/PPMCounter.c **** *
1319:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1320:.\Generated_Source\PSoC4/PPMCounter.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1322:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/PPMCounter.c **** *
1325:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1441              		.loc 1 1327 0
 1442              		.cfi_startproc
1328:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_MASKED_REG);
 1443              		.loc 1 1328 0
 1444 0000 014B     		ldr	r3, .L112
1329:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1445              		.loc 1 1329 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 54


 1446              		@ sp needed for prologue
1328:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_MASKED_REG);
 1447              		.loc 1 1328 0
 1448 0002 1868     		ldr	r0, [r3]
 1449              		.loc 1 1329 0
 1450 0004 7047     		bx	lr
 1451              	.L113:
 1452 0006 C046     		.align	2
 1453              	.L112:
 1454 0008 FC010540 		.word	1074070012
 1455              		.cfi_endproc
 1456              	.LFE36:
 1457              		.size	PPMCounter_GetInterruptSourceMasked, .-PPMCounter_GetInterruptSourceMasked
 1458              		.section	.text.PPMCounter_GetInterruptSource,"ax",%progbits
 1459              		.align	1
 1460              		.global	PPMCounter_GetInterruptSource
 1461              		.code	16
 1462              		.thumb_func
 1463              		.type	PPMCounter_GetInterruptSource, %function
 1464              	PPMCounter_GetInterruptSource:
 1465              	.LFB37:
1330:.\Generated_Source\PSoC4/PPMCounter.c **** 
1331:.\Generated_Source\PSoC4/PPMCounter.c **** 
1332:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_GetInterruptSource
1334:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/PPMCounter.c **** *
1336:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1337:.\Generated_Source\PSoC4/PPMCounter.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/PPMCounter.c **** *
1339:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1340:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1341:.\Generated_Source\PSoC4/PPMCounter.c **** *
1342:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1343:.\Generated_Source\PSoC4/PPMCounter.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1345:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/PPMCounter.c **** *
1348:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/PPMCounter.c **** uint32 PPMCounter_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1466              		.loc 1 1350 0
 1467              		.cfi_startproc
1351:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_REQ_REG);
 1468              		.loc 1 1351 0
 1469 0000 014B     		ldr	r3, .L115
1352:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1470              		.loc 1 1352 0
 1471              		@ sp needed for prologue
1351:.\Generated_Source\PSoC4/PPMCounter.c ****     return (PPMCounter_INTERRUPT_REQ_REG);
 1472              		.loc 1 1351 0
 1473 0002 1868     		ldr	r0, [r3]
 1474              		.loc 1 1352 0
 1475 0004 7047     		bx	lr
 1476              	.L116:
 1477 0006 C046     		.align	2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 55


 1478              	.L115:
 1479 0008 F0010540 		.word	1074070000
 1480              		.cfi_endproc
 1481              	.LFE37:
 1482              		.size	PPMCounter_GetInterruptSource, .-PPMCounter_GetInterruptSource
 1483              		.section	.text.PPMCounter_ClearInterrupt,"ax",%progbits
 1484              		.align	1
 1485              		.global	PPMCounter_ClearInterrupt
 1486              		.code	16
 1487              		.thumb_func
 1488              		.type	PPMCounter_ClearInterrupt, %function
 1489              	PPMCounter_ClearInterrupt:
 1490              	.LFB38:
1353:.\Generated_Source\PSoC4/PPMCounter.c **** 
1354:.\Generated_Source\PSoC4/PPMCounter.c **** 
1355:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_ClearInterrupt
1357:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/PPMCounter.c **** *
1359:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1360:.\Generated_Source\PSoC4/PPMCounter.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/PPMCounter.c **** *
1362:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1363:.\Generated_Source\PSoC4/PPMCounter.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1365:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/PPMCounter.c **** *
1368:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1369:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1370:.\Generated_Source\PSoC4/PPMCounter.c **** *
1371:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1491              		.loc 1 1373 0
 1492              		.cfi_startproc
 1493              	.LVL91:
1374:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_REQ_REG = interruptMask;
 1494              		.loc 1 1374 0
 1495 0000 014B     		ldr	r3, .L118
1375:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1496              		.loc 1 1375 0
 1497              		@ sp needed for prologue
1374:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_REQ_REG = interruptMask;
 1498              		.loc 1 1374 0
 1499 0002 1860     		str	r0, [r3]
 1500              		.loc 1 1375 0
 1501 0004 7047     		bx	lr
 1502              	.L119:
 1503 0006 C046     		.align	2
 1504              	.L118:
 1505 0008 F0010540 		.word	1074070000
 1506              		.cfi_endproc
 1507              	.LFE38:
 1508              		.size	PPMCounter_ClearInterrupt, .-PPMCounter_ClearInterrupt
 1509              		.section	.text.PPMCounter_SetInterrupt,"ax",%progbits
 1510              		.align	1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 56


 1511              		.global	PPMCounter_SetInterrupt
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	PPMCounter_SetInterrupt, %function
 1515              	PPMCounter_SetInterrupt:
 1516              	.LFB39:
1376:.\Generated_Source\PSoC4/PPMCounter.c **** 
1377:.\Generated_Source\PSoC4/PPMCounter.c **** 
1378:.\Generated_Source\PSoC4/PPMCounter.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/PPMCounter.c **** * Function Name: PPMCounter_SetInterrupt
1380:.\Generated_Source\PSoC4/PPMCounter.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/PPMCounter.c **** *
1382:.\Generated_Source\PSoC4/PPMCounter.c **** * Summary:
1383:.\Generated_Source\PSoC4/PPMCounter.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/PPMCounter.c **** *
1385:.\Generated_Source\PSoC4/PPMCounter.c **** * Parameters:
1386:.\Generated_Source\PSoC4/PPMCounter.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/PPMCounter.c **** *   Values:
1388:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/PPMCounter.c **** *     - PPMCounter_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/PPMCounter.c **** *
1391:.\Generated_Source\PSoC4/PPMCounter.c **** * Return:
1392:.\Generated_Source\PSoC4/PPMCounter.c **** *  None
1393:.\Generated_Source\PSoC4/PPMCounter.c **** *
1394:.\Generated_Source\PSoC4/PPMCounter.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/PPMCounter.c **** void PPMCounter_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/PPMCounter.c **** {
 1517              		.loc 1 1396 0
 1518              		.cfi_startproc
 1519              	.LVL92:
1397:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_SET_REG = interruptMask;
 1520              		.loc 1 1397 0
 1521 0000 014B     		ldr	r3, .L121
1398:.\Generated_Source\PSoC4/PPMCounter.c **** }
 1522              		.loc 1 1398 0
 1523              		@ sp needed for prologue
1397:.\Generated_Source\PSoC4/PPMCounter.c ****     PPMCounter_INTERRUPT_SET_REG = interruptMask;
 1524              		.loc 1 1397 0
 1525 0002 1860     		str	r0, [r3]
 1526              		.loc 1 1398 0
 1527 0004 7047     		bx	lr
 1528              	.L122:
 1529 0006 C046     		.align	2
 1530              	.L121:
 1531 0008 F4010540 		.word	1074070004
 1532              		.cfi_endproc
 1533              	.LFE39:
 1534              		.size	PPMCounter_SetInterrupt, .-PPMCounter_SetInterrupt
 1535              		.global	PPMCounter_initVar
 1536              		.bss
 1537              		.set	.LANCHOR0,. + 0
 1538              		.type	PPMCounter_initVar, %object
 1539              		.size	PPMCounter_initVar, 1
 1540              	PPMCounter_initVar:
 1541 0000 00       		.space	1
 1542              		.text
 1543              	.Letext0:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 57


 1544              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1545              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1546              		.section	.debug_info,"",%progbits
 1547              	.Ldebug_info0:
 1548 0000 C4090000 		.4byte	0x9c4
 1549 0004 0200     		.2byte	0x2
 1550 0006 00000000 		.4byte	.Ldebug_abbrev0
 1551 000a 04       		.byte	0x4
 1552 000b 01       		.uleb128 0x1
 1553 000c 54040000 		.4byte	.LASF76
 1554 0010 01       		.byte	0x1
 1555 0011 62000000 		.4byte	.LASF77
 1556 0015 68010000 		.4byte	.LASF78
 1557 0019 20000000 		.4byte	.Ldebug_ranges0+0x20
 1558 001d 00000000 		.4byte	0
 1559 0021 00000000 		.4byte	0
 1560 0025 00000000 		.4byte	.Ldebug_line0
 1561 0029 02       		.uleb128 0x2
 1562 002a 01       		.byte	0x1
 1563 002b 06       		.byte	0x6
 1564 002c 26010000 		.4byte	.LASF0
 1565 0030 02       		.uleb128 0x2
 1566 0031 01       		.byte	0x1
 1567 0032 08       		.byte	0x8
 1568 0033 9D040000 		.4byte	.LASF1
 1569 0037 02       		.uleb128 0x2
 1570 0038 02       		.byte	0x2
 1571 0039 05       		.byte	0x5
 1572 003a BC040000 		.4byte	.LASF2
 1573 003e 02       		.uleb128 0x2
 1574 003f 02       		.byte	0x2
 1575 0040 07       		.byte	0x7
 1576 0041 DA020000 		.4byte	.LASF3
 1577 0045 02       		.uleb128 0x2
 1578 0046 04       		.byte	0x4
 1579 0047 05       		.byte	0x5
 1580 0048 CA010000 		.4byte	.LASF4
 1581 004c 02       		.uleb128 0x2
 1582 004d 04       		.byte	0x4
 1583 004e 07       		.byte	0x7
 1584 004f A8020000 		.4byte	.LASF5
 1585 0053 02       		.uleb128 0x2
 1586 0054 08       		.byte	0x8
 1587 0055 05       		.byte	0x5
 1588 0056 18010000 		.4byte	.LASF6
 1589 005a 02       		.uleb128 0x2
 1590 005b 08       		.byte	0x8
 1591 005c 07       		.byte	0x7
 1592 005d A6000000 		.4byte	.LASF7
 1593 0061 03       		.uleb128 0x3
 1594 0062 04       		.byte	0x4
 1595 0063 05       		.byte	0x5
 1596 0064 696E7400 		.ascii	"int\000"
 1597 0068 02       		.uleb128 0x2
 1598 0069 04       		.byte	0x4
 1599 006a 07       		.byte	0x7
 1600 006b 93020000 		.4byte	.LASF8
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 58


 1601 006f 04       		.uleb128 0x4
 1602 0070 20020000 		.4byte	.LASF9
 1603 0074 02       		.byte	0x2
 1604 0075 5B       		.byte	0x5b
 1605 0076 30000000 		.4byte	0x30
 1606 007a 04       		.uleb128 0x4
 1607 007b 40020000 		.4byte	.LASF10
 1608 007f 02       		.byte	0x2
 1609 0080 5D       		.byte	0x5d
 1610 0081 4C000000 		.4byte	0x4c
 1611 0085 02       		.uleb128 0x2
 1612 0086 04       		.byte	0x4
 1613 0087 04       		.byte	0x4
 1614 0088 14040000 		.4byte	.LASF11
 1615 008c 02       		.uleb128 0x2
 1616 008d 08       		.byte	0x8
 1617 008e 04       		.byte	0x4
 1618 008f 39020000 		.4byte	.LASF12
 1619 0093 02       		.uleb128 0x2
 1620 0094 01       		.byte	0x1
 1621 0095 08       		.byte	0x8
 1622 0096 EE040000 		.4byte	.LASF13
 1623 009a 04       		.uleb128 0x4
 1624 009b 55030000 		.4byte	.LASF14
 1625 009f 02       		.byte	0x2
 1626 00a0 F2       		.byte	0xf2
 1627 00a1 A5000000 		.4byte	0xa5
 1628 00a5 05       		.uleb128 0x5
 1629 00a6 7A000000 		.4byte	0x7a
 1630 00aa 02       		.uleb128 0x2
 1631 00ab 04       		.byte	0x4
 1632 00ac 07       		.byte	0x7
 1633 00ad 70030000 		.4byte	.LASF15
 1634 00b1 06       		.uleb128 0x6
 1635 00b2 01       		.byte	0x1
 1636 00b3 ED010000 		.4byte	.LASF16
 1637 00b7 01       		.byte	0x1
 1638 00b8 1705     		.2byte	0x517
 1639 00ba 01       		.byte	0x1
 1640 00bb 01       		.byte	0x1
 1641 00bc CD000000 		.4byte	0xcd
 1642 00c0 07       		.uleb128 0x7
 1643 00c1 C6040000 		.4byte	.LASF18
 1644 00c5 01       		.byte	0x1
 1645 00c6 1705     		.2byte	0x517
 1646 00c8 7A000000 		.4byte	0x7a
 1647 00cc 00       		.byte	0
 1648 00cd 06       		.uleb128 0x6
 1649 00ce 01       		.byte	0x1
 1650 00cf 88000000 		.4byte	.LASF17
 1651 00d3 01       		.byte	0x1
 1652 00d4 C602     		.2byte	0x2c6
 1653 00d6 01       		.byte	0x1
 1654 00d7 01       		.byte	0x1
 1655 00d8 E9000000 		.4byte	0xe9
 1656 00dc 07       		.uleb128 0x7
 1657 00dd 9F000000 		.4byte	.LASF19
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 59


 1658 00e1 01       		.byte	0x1
 1659 00e2 C602     		.2byte	0x2c6
 1660 00e4 7A000000 		.4byte	0x7a
 1661 00e8 00       		.byte	0
 1662 00e9 08       		.uleb128 0x8
 1663 00ea 01       		.byte	0x1
 1664 00eb 04040000 		.4byte	.LASF20
 1665 00ef 01       		.byte	0x1
 1666 00f0 27       		.byte	0x27
 1667 00f1 01       		.byte	0x1
 1668 00f2 00000000 		.4byte	.LFB0
 1669 00f6 30000000 		.4byte	.LFE0
 1670 00fa 02       		.byte	0x2
 1671 00fb 7D       		.byte	0x7d
 1672 00fc 00       		.sleb128 0
 1673 00fd 01       		.byte	0x1
 1674 00fe 34010000 		.4byte	0x134
 1675 0102 09       		.uleb128 0x9
 1676 0103 B1000000 		.4byte	0xb1
 1677 0107 0A000000 		.4byte	.LBB6
 1678 010b 00000000 		.4byte	.Ldebug_ranges0+0
 1679 010f 01       		.byte	0x1
 1680 0110 7B       		.byte	0x7b
 1681 0111 1C010000 		.4byte	0x11c
 1682 0115 0A       		.uleb128 0xa
 1683 0116 C0000000 		.4byte	0xc0
 1684 011a 02       		.byte	0x2
 1685 011b 00       		.byte	0
 1686 011c 0B       		.uleb128 0xb
 1687 011d CD000000 		.4byte	0xcd
 1688 0121 14000000 		.4byte	.LBB12
 1689 0125 1C000000 		.4byte	.LBE12
 1690 0129 01       		.byte	0x1
 1691 012a 80       		.byte	0x80
 1692 012b 0C       		.uleb128 0xc
 1693 012c DC000000 		.4byte	0xdc
 1694 0130 100E     		.2byte	0xe10
 1695 0132 00       		.byte	0
 1696 0133 00       		.byte	0
 1697 0134 0D       		.uleb128 0xd
 1698 0135 01       		.byte	0x1
 1699 0136 BA010000 		.4byte	.LASF21
 1700 013a 01       		.byte	0x1
 1701 013b 1101     		.2byte	0x111
 1702 013d 01       		.byte	0x1
 1703 013e 00000000 		.4byte	.LFB3
 1704 0142 1C000000 		.4byte	.LFE3
 1705 0146 00000000 		.4byte	.LLST0
 1706 014a 01       		.byte	0x1
 1707 014b 72010000 		.4byte	0x172
 1708 014f 0E       		.uleb128 0xe
 1709 0150 9C050000 		.4byte	.LASF23
 1710 0154 01       		.byte	0x1
 1711 0155 1301     		.2byte	0x113
 1712 0157 6F000000 		.4byte	0x6f
 1713 015b 20000000 		.4byte	.LLST1
 1714 015f 0F       		.uleb128 0xf
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 60


 1715 0160 06000000 		.4byte	.LVL2
 1716 0164 A9090000 		.4byte	0x9a9
 1717 0168 0F       		.uleb128 0xf
 1718 0169 14000000 		.4byte	.LVL3
 1719 016d B7090000 		.4byte	0x9b7
 1720 0171 00       		.byte	0
 1721 0172 0D       		.uleb128 0xd
 1722 0173 01       		.byte	0x1
 1723 0174 26020000 		.4byte	.LASF22
 1724 0178 01       		.byte	0x1
 1725 0179 3601     		.2byte	0x136
 1726 017b 01       		.byte	0x1
 1727 017c 00000000 		.4byte	.LFB4
 1728 0180 28000000 		.4byte	.LFE4
 1729 0184 33000000 		.4byte	.LLST2
 1730 0188 01       		.byte	0x1
 1731 0189 C0010000 		.4byte	0x1c0
 1732 018d 10       		.uleb128 0x10
 1733 018e F3040000 		.4byte	.LASF25
 1734 0192 01       		.byte	0x1
 1735 0193 3601     		.2byte	0x136
 1736 0195 7A000000 		.4byte	0x7a
 1737 0199 53000000 		.4byte	.LLST3
 1738 019d 0E       		.uleb128 0xe
 1739 019e 9C050000 		.4byte	.LASF23
 1740 01a2 01       		.byte	0x1
 1741 01a3 3801     		.2byte	0x138
 1742 01a5 6F000000 		.4byte	0x6f
 1743 01a9 7F000000 		.4byte	.LLST4
 1744 01ad 0F       		.uleb128 0xf
 1745 01ae 08000000 		.4byte	.LVL5
 1746 01b2 A9090000 		.4byte	0x9a9
 1747 01b6 0F       		.uleb128 0xf
 1748 01b7 1C000000 		.4byte	.LVL7
 1749 01bb B7090000 		.4byte	0x9b7
 1750 01bf 00       		.byte	0
 1751 01c0 0D       		.uleb128 0xd
 1752 01c1 01       		.byte	0x1
 1753 01c2 5B030000 		.4byte	.LASF24
 1754 01c6 01       		.byte	0x1
 1755 01c7 5701     		.2byte	0x157
 1756 01c9 01       		.byte	0x1
 1757 01ca 00000000 		.4byte	.LFB5
 1758 01ce 28000000 		.4byte	.LFE5
 1759 01d2 92000000 		.4byte	.LLST5
 1760 01d6 01       		.byte	0x1
 1761 01d7 0E020000 		.4byte	0x20e
 1762 01db 10       		.uleb128 0x10
 1763 01dc D3000000 		.4byte	.LASF26
 1764 01e0 01       		.byte	0x1
 1765 01e1 5701     		.2byte	0x157
 1766 01e3 7A000000 		.4byte	0x7a
 1767 01e7 B2000000 		.4byte	.LLST6
 1768 01eb 0E       		.uleb128 0xe
 1769 01ec 9C050000 		.4byte	.LASF23
 1770 01f0 01       		.byte	0x1
 1771 01f1 5901     		.2byte	0x159
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 61


 1772 01f3 6F000000 		.4byte	0x6f
 1773 01f7 DE000000 		.4byte	.LLST7
 1774 01fb 0F       		.uleb128 0xf
 1775 01fc 08000000 		.4byte	.LVL9
 1776 0200 A9090000 		.4byte	0x9a9
 1777 0204 0F       		.uleb128 0xf
 1778 0205 1C000000 		.4byte	.LVL11
 1779 0209 B7090000 		.4byte	0x9b7
 1780 020d 00       		.byte	0
 1781 020e 0D       		.uleb128 0xd
 1782 020f 01       		.byte	0x1
 1783 0210 3D030000 		.4byte	.LASF27
 1784 0214 01       		.byte	0x1
 1785 0215 7C01     		.2byte	0x17c
 1786 0217 01       		.byte	0x1
 1787 0218 00000000 		.4byte	.LFB6
 1788 021c 28000000 		.4byte	.LFE6
 1789 0220 F1000000 		.4byte	.LLST8
 1790 0224 01       		.byte	0x1
 1791 0225 5C020000 		.4byte	0x25c
 1792 0229 10       		.uleb128 0x10
 1793 022a 1A040000 		.4byte	.LASF28
 1794 022e 01       		.byte	0x1
 1795 022f 7C01     		.2byte	0x17c
 1796 0231 7A000000 		.4byte	0x7a
 1797 0235 11010000 		.4byte	.LLST9
 1798 0239 0E       		.uleb128 0xe
 1799 023a 9C050000 		.4byte	.LASF23
 1800 023e 01       		.byte	0x1
 1801 023f 7E01     		.2byte	0x17e
 1802 0241 6F000000 		.4byte	0x6f
 1803 0245 3D010000 		.4byte	.LLST10
 1804 0249 0F       		.uleb128 0xf
 1805 024a 08000000 		.4byte	.LVL13
 1806 024e A9090000 		.4byte	0x9a9
 1807 0252 0F       		.uleb128 0xf
 1808 0253 1C000000 		.4byte	.LVL15
 1809 0257 B7090000 		.4byte	0x9b7
 1810 025b 00       		.byte	0
 1811 025c 0D       		.uleb128 0xd
 1812 025d 01       		.byte	0x1
 1813 025e BD000000 		.4byte	.LASF29
 1814 0262 01       		.byte	0x1
 1815 0263 9C01     		.2byte	0x19c
 1816 0265 01       		.byte	0x1
 1817 0266 00000000 		.4byte	.LFB7
 1818 026a 2C000000 		.4byte	.LFE7
 1819 026e 50010000 		.4byte	.LLST11
 1820 0272 01       		.byte	0x1
 1821 0273 AA020000 		.4byte	0x2aa
 1822 0277 10       		.uleb128 0x10
 1823 0278 07030000 		.4byte	.LASF30
 1824 027c 01       		.byte	0x1
 1825 027d 9C01     		.2byte	0x19c
 1826 027f 7A000000 		.4byte	0x7a
 1827 0283 70010000 		.4byte	.LLST12
 1828 0287 0E       		.uleb128 0xe
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 62


 1829 0288 9C050000 		.4byte	.LASF23
 1830 028c 01       		.byte	0x1
 1831 028d 9E01     		.2byte	0x19e
 1832 028f 6F000000 		.4byte	0x6f
 1833 0293 9C010000 		.4byte	.LLST13
 1834 0297 0F       		.uleb128 0xf
 1835 0298 08000000 		.4byte	.LVL17
 1836 029c A9090000 		.4byte	0x9a9
 1837 02a0 0F       		.uleb128 0xf
 1838 02a1 22000000 		.4byte	.LVL19
 1839 02a5 B7090000 		.4byte	0x9b7
 1840 02a9 00       		.byte	0
 1841 02aa 11       		.uleb128 0x11
 1842 02ab 01       		.byte	0x1
 1843 02ac A2030000 		.4byte	.LASF31
 1844 02b0 01       		.byte	0x1
 1845 02b1 D201     		.2byte	0x1d2
 1846 02b3 01       		.byte	0x1
 1847 02b4 00000000 		.4byte	.LFB8
 1848 02b8 10000000 		.4byte	.LFE8
 1849 02bc 02       		.byte	0x2
 1850 02bd 7D       		.byte	0x7d
 1851 02be 00       		.sleb128 0
 1852 02bf 01       		.byte	0x1
 1853 02c0 D5020000 		.4byte	0x2d5
 1854 02c4 10       		.uleb128 0x10
 1855 02c5 BA020000 		.4byte	.LASF32
 1856 02c9 01       		.byte	0x1
 1857 02ca D201     		.2byte	0x1d2
 1858 02cc 7A000000 		.4byte	0x7a
 1859 02d0 AF010000 		.4byte	.LLST14
 1860 02d4 00       		.byte	0
 1861 02d5 0D       		.uleb128 0xd
 1862 02d6 01       		.byte	0x1
 1863 02d7 58020000 		.4byte	.LASF33
 1864 02db 01       		.byte	0x1
 1865 02dc F601     		.2byte	0x1f6
 1866 02de 01       		.byte	0x1
 1867 02df 00000000 		.4byte	.LFB9
 1868 02e3 28000000 		.4byte	.LFE9
 1869 02e7 D0010000 		.4byte	.LLST15
 1870 02eb 01       		.byte	0x1
 1871 02ec 23030000 		.4byte	0x323
 1872 02f0 10       		.uleb128 0x10
 1873 02f1 93030000 		.4byte	.LASF34
 1874 02f5 01       		.byte	0x1
 1875 02f6 F601     		.2byte	0x1f6
 1876 02f8 7A000000 		.4byte	0x7a
 1877 02fc F0010000 		.4byte	.LLST16
 1878 0300 0E       		.uleb128 0xe
 1879 0301 9C050000 		.4byte	.LASF23
 1880 0305 01       		.byte	0x1
 1881 0306 F801     		.2byte	0x1f8
 1882 0308 6F000000 		.4byte	0x6f
 1883 030c 1C020000 		.4byte	.LLST17
 1884 0310 0F       		.uleb128 0xf
 1885 0311 08000000 		.4byte	.LVL23
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 63


 1886 0315 A9090000 		.4byte	0x9a9
 1887 0319 0F       		.uleb128 0xf
 1888 031a 22000000 		.4byte	.LVL25
 1889 031e B7090000 		.4byte	0x9b7
 1890 0322 00       		.byte	0
 1891 0323 0D       		.uleb128 0xd
 1892 0324 01       		.byte	0x1
 1893 0325 1E060000 		.4byte	.LASF35
 1894 0329 01       		.byte	0x1
 1895 032a 1802     		.2byte	0x218
 1896 032c 01       		.byte	0x1
 1897 032d 00000000 		.4byte	.LFB10
 1898 0331 28000000 		.4byte	.LFE10
 1899 0335 2F020000 		.4byte	.LLST18
 1900 0339 01       		.byte	0x1
 1901 033a 71030000 		.4byte	0x371
 1902 033e 10       		.uleb128 0x10
 1903 033f AB040000 		.4byte	.LASF36
 1904 0343 01       		.byte	0x1
 1905 0344 1802     		.2byte	0x218
 1906 0346 7A000000 		.4byte	0x7a
 1907 034a 4F020000 		.4byte	.LLST19
 1908 034e 0E       		.uleb128 0xe
 1909 034f 9C050000 		.4byte	.LASF23
 1910 0353 01       		.byte	0x1
 1911 0354 1A02     		.2byte	0x21a
 1912 0356 6F000000 		.4byte	0x6f
 1913 035a 7B020000 		.4byte	.LLST20
 1914 035e 0F       		.uleb128 0xf
 1915 035f 08000000 		.4byte	.LVL27
 1916 0363 A9090000 		.4byte	0x9a9
 1917 0367 0F       		.uleb128 0xf
 1918 0368 22000000 		.4byte	.LVL29
 1919 036c B7090000 		.4byte	0x9b7
 1920 0370 00       		.byte	0
 1921 0371 0D       		.uleb128 0xd
 1922 0372 01       		.byte	0x1
 1923 0373 C7050000 		.4byte	.LASF37
 1924 0377 01       		.byte	0x1
 1925 0378 3902     		.2byte	0x239
 1926 037a 01       		.byte	0x1
 1927 037b 00000000 		.4byte	.LFB11
 1928 037f 2C000000 		.4byte	.LFE11
 1929 0383 8E020000 		.4byte	.LLST21
 1930 0387 01       		.byte	0x1
 1931 0388 BF030000 		.4byte	0x3bf
 1932 038c 10       		.uleb128 0x10
 1933 038d 8A020000 		.4byte	.LASF38
 1934 0391 01       		.byte	0x1
 1935 0392 3902     		.2byte	0x239
 1936 0394 7A000000 		.4byte	0x7a
 1937 0398 AE020000 		.4byte	.LLST22
 1938 039c 0E       		.uleb128 0xe
 1939 039d 9C050000 		.4byte	.LASF23
 1940 03a1 01       		.byte	0x1
 1941 03a2 3B02     		.2byte	0x23b
 1942 03a4 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 64


 1943 03a8 DA020000 		.4byte	.LLST23
 1944 03ac 0F       		.uleb128 0xf
 1945 03ad 08000000 		.4byte	.LVL31
 1946 03b1 A9090000 		.4byte	0x9a9
 1947 03b5 0F       		.uleb128 0xf
 1948 03b6 20000000 		.4byte	.LVL33
 1949 03ba B7090000 		.4byte	0x9b7
 1950 03be 00       		.byte	0
 1951 03bf 0D       		.uleb128 0xd
 1952 03c0 01       		.byte	0x1
 1953 03c1 72020000 		.4byte	.LASF39
 1954 03c5 01       		.byte	0x1
 1955 03c6 5A02     		.2byte	0x25a
 1956 03c8 01       		.byte	0x1
 1957 03c9 00000000 		.4byte	.LFB12
 1958 03cd 28000000 		.4byte	.LFE12
 1959 03d1 ED020000 		.4byte	.LLST24
 1960 03d5 01       		.byte	0x1
 1961 03d6 0D040000 		.4byte	0x40d
 1962 03da 10       		.uleb128 0x10
 1963 03db 53020000 		.4byte	.LASF40
 1964 03df 01       		.byte	0x1
 1965 03e0 5A02     		.2byte	0x25a
 1966 03e2 7A000000 		.4byte	0x7a
 1967 03e6 0D030000 		.4byte	.LLST25
 1968 03ea 0E       		.uleb128 0xe
 1969 03eb 9C050000 		.4byte	.LASF23
 1970 03ef 01       		.byte	0x1
 1971 03f0 5C02     		.2byte	0x25c
 1972 03f2 6F000000 		.4byte	0x6f
 1973 03f6 39030000 		.4byte	.LLST26
 1974 03fa 0F       		.uleb128 0xf
 1975 03fb 08000000 		.4byte	.LVL35
 1976 03ff A9090000 		.4byte	0x9a9
 1977 0403 0F       		.uleb128 0xf
 1978 0404 1C000000 		.4byte	.LVL37
 1979 0408 B7090000 		.4byte	0x9b7
 1980 040c 00       		.byte	0
 1981 040d 11       		.uleb128 0x11
 1982 040e 01       		.byte	0x1
 1983 040f 32010000 		.4byte	.LASF41
 1984 0413 01       		.byte	0x1
 1985 0414 7802     		.2byte	0x278
 1986 0416 01       		.byte	0x1
 1987 0417 00000000 		.4byte	.LFB13
 1988 041b 0C000000 		.4byte	.LFE13
 1989 041f 02       		.byte	0x2
 1990 0420 7D       		.byte	0x7d
 1991 0421 00       		.sleb128 0
 1992 0422 01       		.byte	0x1
 1993 0423 38040000 		.4byte	0x438
 1994 0427 10       		.uleb128 0x10
 1995 0428 00000000 		.4byte	.LASF42
 1996 042c 01       		.byte	0x1
 1997 042d 7802     		.2byte	0x278
 1998 042f 7A000000 		.4byte	0x7a
 1999 0433 4C030000 		.4byte	.LLST27
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 65


 2000 0437 00       		.byte	0
 2001 0438 12       		.uleb128 0x12
 2002 0439 01       		.byte	0x1
 2003 043a 15030000 		.4byte	.LASF45
 2004 043e 01       		.byte	0x1
 2005 043f 8C02     		.2byte	0x28c
 2006 0441 01       		.byte	0x1
 2007 0442 7A000000 		.4byte	0x7a
 2008 0446 00000000 		.4byte	.LFB14
 2009 044a 0C000000 		.4byte	.LFE14
 2010 044e 02       		.byte	0x2
 2011 044f 7D       		.byte	0x7d
 2012 0450 00       		.sleb128 0
 2013 0451 01       		.byte	0x1
 2014 0452 0D       		.uleb128 0xd
 2015 0453 01       		.byte	0x1
 2016 0454 04060000 		.4byte	.LASF43
 2017 0458 01       		.byte	0x1
 2018 0459 A902     		.2byte	0x2a9
 2019 045b 01       		.byte	0x1
 2020 045c 00000000 		.4byte	.LFB15
 2021 0460 28000000 		.4byte	.LFE15
 2022 0464 6D030000 		.4byte	.LLST28
 2023 0468 01       		.byte	0x1
 2024 0469 A0040000 		.4byte	0x4a0
 2025 046d 10       		.uleb128 0x10
 2026 046e 11050000 		.4byte	.LASF44
 2027 0472 01       		.byte	0x1
 2028 0473 A902     		.2byte	0x2a9
 2029 0475 7A000000 		.4byte	0x7a
 2030 0479 8D030000 		.4byte	.LLST29
 2031 047d 0E       		.uleb128 0xe
 2032 047e 9C050000 		.4byte	.LASF23
 2033 0482 01       		.byte	0x1
 2034 0483 AB02     		.2byte	0x2ab
 2035 0485 6F000000 		.4byte	0x6f
 2036 0489 B9030000 		.4byte	.LLST30
 2037 048d 0F       		.uleb128 0xf
 2038 048e 08000000 		.4byte	.LVL41
 2039 0492 A9090000 		.4byte	0x9a9
 2040 0496 0F       		.uleb128 0xf
 2041 0497 1C000000 		.4byte	.LVL43
 2042 049b B7090000 		.4byte	0x9b7
 2043 049f 00       		.byte	0
 2044 04a0 13       		.uleb128 0x13
 2045 04a1 CD000000 		.4byte	0xcd
 2046 04a5 00000000 		.4byte	.LFB16
 2047 04a9 0C000000 		.4byte	.LFE16
 2048 04ad 02       		.byte	0x2
 2049 04ae 7D       		.byte	0x7d
 2050 04af 00       		.sleb128 0
 2051 04b0 01       		.byte	0x1
 2052 04b1 BF040000 		.4byte	0x4bf
 2053 04b5 14       		.uleb128 0x14
 2054 04b6 DC000000 		.4byte	0xdc
 2055 04ba CC030000 		.4byte	.LLST31
 2056 04be 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 66


 2057 04bf 12       		.uleb128 0x12
 2058 04c0 01       		.byte	0x1
 2059 04c1 4C000000 		.4byte	.LASF46
 2060 04c5 01       		.byte	0x1
 2061 04c6 DA02     		.2byte	0x2da
 2062 04c8 01       		.byte	0x1
 2063 04c9 7A000000 		.4byte	0x7a
 2064 04cd 00000000 		.4byte	.LFB17
 2065 04d1 0C000000 		.4byte	.LFE17
 2066 04d5 02       		.byte	0x2
 2067 04d6 7D       		.byte	0x7d
 2068 04d7 00       		.sleb128 0
 2069 04d8 01       		.byte	0x1
 2070 04d9 0D       		.uleb128 0xd
 2071 04da 01       		.byte	0x1
 2072 04db D3010000 		.4byte	.LASF47
 2073 04df 01       		.byte	0x1
 2074 04e0 F402     		.2byte	0x2f4
 2075 04e2 01       		.byte	0x1
 2076 04e3 00000000 		.4byte	.LFB18
 2077 04e7 24000000 		.4byte	.LFE18
 2078 04eb ED030000 		.4byte	.LLST32
 2079 04ef 01       		.byte	0x1
 2080 04f0 27050000 		.4byte	0x527
 2081 04f4 10       		.uleb128 0x10
 2082 04f5 E1050000 		.4byte	.LASF48
 2083 04f9 01       		.byte	0x1
 2084 04fa F402     		.2byte	0x2f4
 2085 04fc 7A000000 		.4byte	0x7a
 2086 0500 0D040000 		.4byte	.LLST33
 2087 0504 0E       		.uleb128 0xe
 2088 0505 9C050000 		.4byte	.LASF23
 2089 0509 01       		.byte	0x1
 2090 050a F602     		.2byte	0x2f6
 2091 050c 6F000000 		.4byte	0x6f
 2092 0510 39040000 		.4byte	.LLST34
 2093 0514 0F       		.uleb128 0xf
 2094 0515 08000000 		.4byte	.LVL47
 2095 0519 A9090000 		.4byte	0x9a9
 2096 051d 0F       		.uleb128 0xf
 2097 051e 1E000000 		.4byte	.LVL48
 2098 0522 B7090000 		.4byte	0x9b7
 2099 0526 00       		.byte	0
 2100 0527 11       		.uleb128 0x11
 2101 0528 01       		.byte	0x1
 2102 0529 D4040000 		.4byte	.LASF49
 2103 052d 01       		.byte	0x1
 2104 052e 0F03     		.2byte	0x30f
 2105 0530 01       		.byte	0x1
 2106 0531 00000000 		.4byte	.LFB19
 2107 0535 0C000000 		.4byte	.LFE19
 2108 0539 02       		.byte	0x2
 2109 053a 7D       		.byte	0x7d
 2110 053b 00       		.sleb128 0
 2111 053c 01       		.byte	0x1
 2112 053d 52050000 		.4byte	0x552
 2113 0541 10       		.uleb128 0x10
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 67


 2114 0542 3A060000 		.4byte	.LASF50
 2115 0546 01       		.byte	0x1
 2116 0547 0F03     		.2byte	0x30f
 2117 0549 7A000000 		.4byte	0x7a
 2118 054d 4C040000 		.4byte	.LLST35
 2119 0551 00       		.byte	0
 2120 0552 12       		.uleb128 0x12
 2121 0553 01       		.byte	0x1
 2122 0554 83050000 		.4byte	.LASF51
 2123 0558 01       		.byte	0x1
 2124 0559 2303     		.2byte	0x323
 2125 055b 01       		.byte	0x1
 2126 055c 7A000000 		.4byte	0x7a
 2127 0560 00000000 		.4byte	.LFB20
 2128 0564 0C000000 		.4byte	.LFE20
 2129 0568 02       		.byte	0x2
 2130 0569 7D       		.byte	0x7d
 2131 056a 00       		.sleb128 0
 2132 056b 01       		.byte	0x1
 2133 056c 0D       		.uleb128 0xd
 2134 056d 01       		.byte	0x1
 2135 056e 3B040000 		.4byte	.LASF52
 2136 0572 01       		.byte	0x1
 2137 0573 3D03     		.2byte	0x33d
 2138 0575 01       		.byte	0x1
 2139 0576 00000000 		.4byte	.LFB21
 2140 057a 28000000 		.4byte	.LFE21
 2141 057e 6D040000 		.4byte	.LLST36
 2142 0582 01       		.byte	0x1
 2143 0583 BA050000 		.4byte	0x5ba
 2144 0587 10       		.uleb128 0x10
 2145 0588 E1050000 		.4byte	.LASF48
 2146 058c 01       		.byte	0x1
 2147 058d 3D03     		.2byte	0x33d
 2148 058f 7A000000 		.4byte	0x7a
 2149 0593 8D040000 		.4byte	.LLST37
 2150 0597 0E       		.uleb128 0xe
 2151 0598 9C050000 		.4byte	.LASF23
 2152 059c 01       		.byte	0x1
 2153 059d 3F03     		.2byte	0x33f
 2154 059f 6F000000 		.4byte	0x6f
 2155 05a3 B9040000 		.4byte	.LLST38
 2156 05a7 0F       		.uleb128 0xf
 2157 05a8 08000000 		.4byte	.LVL53
 2158 05ac A9090000 		.4byte	0x9a9
 2159 05b0 0F       		.uleb128 0xf
 2160 05b1 22000000 		.4byte	.LVL55
 2161 05b5 B7090000 		.4byte	0x9b7
 2162 05b9 00       		.byte	0
 2163 05ba 11       		.uleb128 0x11
 2164 05bb 01       		.byte	0x1
 2165 05bc 34000000 		.4byte	.LASF53
 2166 05c0 01       		.byte	0x1
 2167 05c1 5A03     		.2byte	0x35a
 2168 05c3 01       		.byte	0x1
 2169 05c4 00000000 		.4byte	.LFB22
 2170 05c8 0C000000 		.4byte	.LFE22
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 68


 2171 05cc 02       		.byte	0x2
 2172 05cd 7D       		.byte	0x7d
 2173 05ce 00       		.sleb128 0
 2174 05cf 01       		.byte	0x1
 2175 05d0 E5050000 		.4byte	0x5e5
 2176 05d4 10       		.uleb128 0x10
 2177 05d5 CA030000 		.4byte	.LASF54
 2178 05d9 01       		.byte	0x1
 2179 05da 5A03     		.2byte	0x35a
 2180 05dc 7A000000 		.4byte	0x7a
 2181 05e0 CC040000 		.4byte	.LLST39
 2182 05e4 00       		.byte	0
 2183 05e5 12       		.uleb128 0x12
 2184 05e6 01       		.byte	0x1
 2185 05e7 ED030000 		.4byte	.LASF55
 2186 05eb 01       		.byte	0x1
 2187 05ec 8403     		.2byte	0x384
 2188 05ee 01       		.byte	0x1
 2189 05ef 7A000000 		.4byte	0x7a
 2190 05f3 00000000 		.4byte	.LFB23
 2191 05f7 0C000000 		.4byte	.LFE23
 2192 05fb 02       		.byte	0x2
 2193 05fc 7D       		.byte	0x7d
 2194 05fd 00       		.sleb128 0
 2195 05fe 01       		.byte	0x1
 2196 05ff 11       		.uleb128 0x11
 2197 0600 01       		.byte	0x1
 2198 0601 D2030000 		.4byte	.LASF56
 2199 0605 01       		.byte	0x1
 2200 0606 B003     		.2byte	0x3b0
 2201 0608 01       		.byte	0x1
 2202 0609 00000000 		.4byte	.LFB24
 2203 060d 0C000000 		.4byte	.LFE24
 2204 0611 02       		.byte	0x2
 2205 0612 7D       		.byte	0x7d
 2206 0613 00       		.sleb128 0
 2207 0614 01       		.byte	0x1
 2208 0615 2A060000 		.4byte	0x62a
 2209 0619 10       		.uleb128 0x10
 2210 061a 62050000 		.4byte	.LASF57
 2211 061e 01       		.byte	0x1
 2212 061f B003     		.2byte	0x3b0
 2213 0621 7A000000 		.4byte	0x7a
 2214 0625 ED040000 		.4byte	.LLST40
 2215 0629 00       		.byte	0
 2216 062a 12       		.uleb128 0x12
 2217 062b 01       		.byte	0x1
 2218 062c AD050000 		.4byte	.LASF58
 2219 0630 01       		.byte	0x1
 2220 0631 DA03     		.2byte	0x3da
 2221 0633 01       		.byte	0x1
 2222 0634 7A000000 		.4byte	0x7a
 2223 0638 00000000 		.4byte	.LFB25
 2224 063c 0C000000 		.4byte	.LFE25
 2225 0640 02       		.byte	0x2
 2226 0641 7D       		.byte	0x7d
 2227 0642 00       		.sleb128 0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 69


 2228 0643 01       		.byte	0x1
 2229 0644 12       		.uleb128 0x12
 2230 0645 01       		.byte	0x1
 2231 0646 09020000 		.4byte	.LASF59
 2232 064a 01       		.byte	0x1
 2233 064b 0604     		.2byte	0x406
 2234 064d 01       		.byte	0x1
 2235 064e 7A000000 		.4byte	0x7a
 2236 0652 00000000 		.4byte	.LFB26
 2237 0656 0C000000 		.4byte	.LFE26
 2238 065a 02       		.byte	0x2
 2239 065b 7D       		.byte	0x7d
 2240 065c 00       		.sleb128 0
 2241 065d 01       		.byte	0x1
 2242 065e 12       		.uleb128 0x12
 2243 065f 01       		.byte	0x1
 2244 0660 30050000 		.4byte	.LASF60
 2245 0664 01       		.byte	0x1
 2246 0665 1B04     		.2byte	0x41b
 2247 0667 01       		.byte	0x1
 2248 0668 7A000000 		.4byte	0x7a
 2249 066c 00000000 		.4byte	.LFB27
 2250 0670 0C000000 		.4byte	.LFE27
 2251 0674 02       		.byte	0x2
 2252 0675 7D       		.byte	0x7d
 2253 0676 00       		.sleb128 0
 2254 0677 01       		.byte	0x1
 2255 0678 0D       		.uleb128 0xd
 2256 0679 01       		.byte	0x1
 2257 067a FE000000 		.4byte	.LASF61
 2258 067e 01       		.byte	0x1
 2259 067f 3604     		.2byte	0x436
 2260 0681 01       		.byte	0x1
 2261 0682 00000000 		.4byte	.LFB28
 2262 0686 24000000 		.4byte	.LFE28
 2263 068a 0E050000 		.4byte	.LLST41
 2264 068e 01       		.byte	0x1
 2265 068f C6060000 		.4byte	0x6c6
 2266 0693 10       		.uleb128 0x10
 2267 0694 47020000 		.4byte	.LASF62
 2268 0698 01       		.byte	0x1
 2269 0699 3604     		.2byte	0x436
 2270 069b 7A000000 		.4byte	0x7a
 2271 069f 2E050000 		.4byte	.LLST42
 2272 06a3 0E       		.uleb128 0xe
 2273 06a4 9C050000 		.4byte	.LASF23
 2274 06a8 01       		.byte	0x1
 2275 06a9 3804     		.2byte	0x438
 2276 06ab 6F000000 		.4byte	0x6f
 2277 06af 5A050000 		.4byte	.LLST43
 2278 06b3 0F       		.uleb128 0xf
 2279 06b4 08000000 		.4byte	.LVL61
 2280 06b8 A9090000 		.4byte	0x9a9
 2281 06bc 0F       		.uleb128 0xf
 2282 06bd 1C000000 		.4byte	.LVL63
 2283 06c1 B7090000 		.4byte	0x9b7
 2284 06c5 00       		.byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 70


 2285 06c6 0D       		.uleb128 0xd
 2286 06c7 01       		.byte	0x1
 2287 06c8 F8040000 		.4byte	.LASF63
 2288 06cc 01       		.byte	0x1
 2289 06cd 5704     		.2byte	0x457
 2290 06cf 01       		.byte	0x1
 2291 06d0 00000000 		.4byte	.LFB29
 2292 06d4 24000000 		.4byte	.LFE29
 2293 06d8 6D050000 		.4byte	.LLST44
 2294 06dc 01       		.byte	0x1
 2295 06dd 14070000 		.4byte	0x714
 2296 06e1 10       		.uleb128 0x10
 2297 06e2 47020000 		.4byte	.LASF62
 2298 06e6 01       		.byte	0x1
 2299 06e7 5704     		.2byte	0x457
 2300 06e9 7A000000 		.4byte	0x7a
 2301 06ed 8D050000 		.4byte	.LLST45
 2302 06f1 0E       		.uleb128 0xe
 2303 06f2 9C050000 		.4byte	.LASF23
 2304 06f6 01       		.byte	0x1
 2305 06f7 5904     		.2byte	0x459
 2306 06f9 6F000000 		.4byte	0x6f
 2307 06fd B9050000 		.4byte	.LLST46
 2308 0701 0F       		.uleb128 0xf
 2309 0702 08000000 		.4byte	.LVL65
 2310 0706 A9090000 		.4byte	0x9a9
 2311 070a 0F       		.uleb128 0xf
 2312 070b 1E000000 		.4byte	.LVL67
 2313 070f B7090000 		.4byte	0x9b7
 2314 0713 00       		.byte	0
 2315 0714 0D       		.uleb128 0xd
 2316 0715 01       		.byte	0x1
 2317 0716 06000000 		.4byte	.LASF64
 2318 071a 01       		.byte	0x1
 2319 071b 7804     		.2byte	0x478
 2320 071d 01       		.byte	0x1
 2321 071e 00000000 		.4byte	.LFB30
 2322 0722 28000000 		.4byte	.LFE30
 2323 0726 CC050000 		.4byte	.LLST47
 2324 072a 01       		.byte	0x1
 2325 072b 62070000 		.4byte	0x762
 2326 072f 10       		.uleb128 0x10
 2327 0730 47020000 		.4byte	.LASF62
 2328 0734 01       		.byte	0x1
 2329 0735 7804     		.2byte	0x478
 2330 0737 7A000000 		.4byte	0x7a
 2331 073b EC050000 		.4byte	.LLST48
 2332 073f 0E       		.uleb128 0xe
 2333 0740 9C050000 		.4byte	.LASF23
 2334 0744 01       		.byte	0x1
 2335 0745 7A04     		.2byte	0x47a
 2336 0747 6F000000 		.4byte	0x6f
 2337 074b 18060000 		.4byte	.LLST49
 2338 074f 0F       		.uleb128 0xf
 2339 0750 08000000 		.4byte	.LVL69
 2340 0754 A9090000 		.4byte	0x9a9
 2341 0758 0F       		.uleb128 0xf
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 71


 2342 0759 1E000000 		.4byte	.LVL71
 2343 075d B7090000 		.4byte	0x9b7
 2344 0761 00       		.byte	0
 2345 0762 0D       		.uleb128 0xd
 2346 0763 01       		.byte	0x1
 2347 0764 24040000 		.4byte	.LASF65
 2348 0768 01       		.byte	0x1
 2349 0769 9804     		.2byte	0x498
 2350 076b 01       		.byte	0x1
 2351 076c 00000000 		.4byte	.LFB31
 2352 0770 24000000 		.4byte	.LFE31
 2353 0774 2B060000 		.4byte	.LLST50
 2354 0778 01       		.byte	0x1
 2355 0779 B0070000 		.4byte	0x7b0
 2356 077d 10       		.uleb128 0x10
 2357 077e 47020000 		.4byte	.LASF62
 2358 0782 01       		.byte	0x1
 2359 0783 9804     		.2byte	0x498
 2360 0785 7A000000 		.4byte	0x7a
 2361 0789 4B060000 		.4byte	.LLST51
 2362 078d 0E       		.uleb128 0xe
 2363 078e 9C050000 		.4byte	.LASF23
 2364 0792 01       		.byte	0x1
 2365 0793 9A04     		.2byte	0x49a
 2366 0795 6F000000 		.4byte	0x6f
 2367 0799 77060000 		.4byte	.LLST52
 2368 079d 0F       		.uleb128 0xf
 2369 079e 08000000 		.4byte	.LVL73
 2370 07a2 A9090000 		.4byte	0x9a9
 2371 07a6 0F       		.uleb128 0xf
 2372 07a7 1E000000 		.4byte	.LVL75
 2373 07ab B7090000 		.4byte	0x9b7
 2374 07af 00       		.byte	0
 2375 07b0 0D       		.uleb128 0xd
 2376 07b1 01       		.byte	0x1
 2377 07b2 EC050000 		.4byte	.LASF66
 2378 07b6 01       		.byte	0x1
 2379 07b7 B904     		.2byte	0x4b9
 2380 07b9 01       		.byte	0x1
 2381 07ba 00000000 		.4byte	.LFB32
 2382 07be 24000000 		.4byte	.LFE32
 2383 07c2 8A060000 		.4byte	.LLST53
 2384 07c6 01       		.byte	0x1
 2385 07c7 FE070000 		.4byte	0x7fe
 2386 07cb 10       		.uleb128 0x10
 2387 07cc 47020000 		.4byte	.LASF62
 2388 07d0 01       		.byte	0x1
 2389 07d1 B904     		.2byte	0x4b9
 2390 07d3 7A000000 		.4byte	0x7a
 2391 07d7 AA060000 		.4byte	.LLST54
 2392 07db 0E       		.uleb128 0xe
 2393 07dc 9C050000 		.4byte	.LASF23
 2394 07e0 01       		.byte	0x1
 2395 07e1 BB04     		.2byte	0x4bb
 2396 07e3 6F000000 		.4byte	0x6f
 2397 07e7 D6060000 		.4byte	.LLST55
 2398 07eb 0F       		.uleb128 0xf
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 72


 2399 07ec 08000000 		.4byte	.LVL77
 2400 07f0 A9090000 		.4byte	0x9a9
 2401 07f4 0F       		.uleb128 0xf
 2402 07f5 1E000000 		.4byte	.LVL79
 2403 07f9 B7090000 		.4byte	0x9b7
 2404 07fd 00       		.byte	0
 2405 07fe 0D       		.uleb128 0xd
 2406 07ff 01       		.byte	0x1
 2407 0800 ED020000 		.4byte	.LASF67
 2408 0804 01       		.byte	0x1
 2409 0805 E104     		.2byte	0x4e1
 2410 0807 01       		.byte	0x1
 2411 0808 00000000 		.4byte	.LFB33
 2412 080c 1C000000 		.4byte	.LFE33
 2413 0810 E9060000 		.4byte	.LLST56
 2414 0814 01       		.byte	0x1
 2415 0815 5C080000 		.4byte	0x85c
 2416 0819 10       		.uleb128 0x10
 2417 081a 53020000 		.4byte	.LASF40
 2418 081e 01       		.byte	0x1
 2419 081f E104     		.2byte	0x4e1
 2420 0821 7A000000 		.4byte	0x7a
 2421 0825 09070000 		.4byte	.LLST57
 2422 0829 10       		.uleb128 0x10
 2423 082a A0020000 		.4byte	.LASF68
 2424 082e 01       		.byte	0x1
 2425 082f E104     		.2byte	0x4e1
 2426 0831 7A000000 		.4byte	0x7a
 2427 0835 35070000 		.4byte	.LLST58
 2428 0839 0E       		.uleb128 0xe
 2429 083a 9C050000 		.4byte	.LASF23
 2430 083e 01       		.byte	0x1
 2431 083f E304     		.2byte	0x4e3
 2432 0841 6F000000 		.4byte	0x6f
 2433 0845 61070000 		.4byte	.LLST59
 2434 0849 0F       		.uleb128 0xf
 2435 084a 0A000000 		.4byte	.LVL81
 2436 084e A9090000 		.4byte	0x9a9
 2437 0852 0F       		.uleb128 0xf
 2438 0853 14000000 		.4byte	.LVL83
 2439 0857 B7090000 		.4byte	0x9b7
 2440 085b 00       		.byte	0
 2441 085c 15       		.uleb128 0x15
 2442 085d 01       		.byte	0x1
 2443 085e B8030000 		.4byte	.LASF69
 2444 0862 01       		.byte	0x1
 2445 0863 C8       		.byte	0xc8
 2446 0864 01       		.byte	0x1
 2447 0865 00000000 		.4byte	.LFB1
 2448 0869 24000000 		.4byte	.LFE1
 2449 086d 74070000 		.4byte	.LLST60
 2450 0871 01       		.byte	0x1
 2451 0872 AD080000 		.4byte	0x8ad
 2452 0876 16       		.uleb128 0x16
 2453 0877 9C050000 		.4byte	.LASF23
 2454 087b 01       		.byte	0x1
 2455 087c CA       		.byte	0xca
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 73


 2456 087d 6F000000 		.4byte	0x6f
 2457 0881 94070000 		.4byte	.LLST61
 2458 0885 0F       		.uleb128 0xf
 2459 0886 06000000 		.4byte	.LVL85
 2460 088a A9090000 		.4byte	0x9a9
 2461 088e 0F       		.uleb128 0xf
 2462 088f 14000000 		.4byte	.LVL86
 2463 0893 B7090000 		.4byte	0x9b7
 2464 0897 17       		.uleb128 0x17
 2465 0898 1C000000 		.4byte	.LVL87
 2466 089c FE070000 		.4byte	0x7fe
 2467 08a0 18       		.uleb128 0x18
 2468 08a1 01       		.byte	0x1
 2469 08a2 51       		.byte	0x51
 2470 08a3 01       		.byte	0x1
 2471 08a4 48       		.byte	0x48
 2472 08a5 18       		.uleb128 0x18
 2473 08a6 01       		.byte	0x1
 2474 08a7 50       		.byte	0x50
 2475 08a8 02       		.byte	0x2
 2476 08a9 74       		.byte	0x74
 2477 08aa 00       		.sleb128 0
 2478 08ab 00       		.byte	0
 2479 08ac 00       		.byte	0
 2480 08ad 15       		.uleb128 0x15
 2481 08ae 01       		.byte	0x1
 2482 08af 2C030000 		.4byte	.LASF70
 2483 08b3 01       		.byte	0x1
 2484 08b4 F7       		.byte	0xf7
 2485 08b5 01       		.byte	0x1
 2486 08b6 00000000 		.4byte	.LFB2
 2487 08ba 1C000000 		.4byte	.LFE2
 2488 08be A7070000 		.4byte	.LLST62
 2489 08c2 01       		.byte	0x1
 2490 08c3 DA080000 		.4byte	0x8da
 2491 08c7 0F       		.uleb128 0xf
 2492 08c8 0E000000 		.4byte	.LVL88
 2493 08cc E9000000 		.4byte	0xe9
 2494 08d0 0F       		.uleb128 0xf
 2495 08d1 16000000 		.4byte	.LVL89
 2496 08d5 5C080000 		.4byte	0x85c
 2497 08d9 00       		.byte	0
 2498 08da 12       		.uleb128 0x12
 2499 08db 01       		.byte	0x1
 2500 08dc 6D050000 		.4byte	.LASF71
 2501 08e0 01       		.byte	0x1
 2502 08e1 FE04     		.2byte	0x4fe
 2503 08e3 01       		.byte	0x1
 2504 08e4 7A000000 		.4byte	0x7a
 2505 08e8 00000000 		.4byte	.LFB34
 2506 08ec 14000000 		.4byte	.LFE34
 2507 08f0 02       		.byte	0x2
 2508 08f1 7D       		.byte	0x7d
 2509 08f2 00       		.sleb128 0
 2510 08f3 01       		.byte	0x1
 2511 08f4 13       		.uleb128 0x13
 2512 08f5 B1000000 		.4byte	0xb1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 74


 2513 08f9 00000000 		.4byte	.LFB35
 2514 08fd 0C000000 		.4byte	.LFE35
 2515 0901 02       		.byte	0x2
 2516 0902 7D       		.byte	0x7d
 2517 0903 00       		.sleb128 0
 2518 0904 01       		.byte	0x1
 2519 0905 11090000 		.4byte	0x911
 2520 0909 19       		.uleb128 0x19
 2521 090a C0000000 		.4byte	0xc0
 2522 090e 01       		.byte	0x1
 2523 090f 50       		.byte	0x50
 2524 0910 00       		.byte	0
 2525 0911 12       		.uleb128 0x12
 2526 0912 01       		.byte	0x1
 2527 0913 DA000000 		.4byte	.LASF72
 2528 0917 01       		.byte	0x1
 2529 0918 2E05     		.2byte	0x52e
 2530 091a 01       		.byte	0x1
 2531 091b 7A000000 		.4byte	0x7a
 2532 091f 00000000 		.4byte	.LFB36
 2533 0923 0C000000 		.4byte	.LFE36
 2534 0927 02       		.byte	0x2
 2535 0928 7D       		.byte	0x7d
 2536 0929 00       		.sleb128 0
 2537 092a 01       		.byte	0x1
 2538 092b 12       		.uleb128 0x12
 2539 092c 01       		.byte	0x1
 2540 092d 4A010000 		.4byte	.LASF73
 2541 0931 01       		.byte	0x1
 2542 0932 4505     		.2byte	0x545
 2543 0934 01       		.byte	0x1
 2544 0935 7A000000 		.4byte	0x7a
 2545 0939 00000000 		.4byte	.LFB37
 2546 093d 0C000000 		.4byte	.LFE37
 2547 0941 02       		.byte	0x2
 2548 0942 7D       		.byte	0x7d
 2549 0943 00       		.sleb128 0
 2550 0944 01       		.byte	0x1
 2551 0945 11       		.uleb128 0x11
 2552 0946 01       		.byte	0x1
 2553 0947 79030000 		.4byte	.LASF74
 2554 094b 01       		.byte	0x1
 2555 094c 5C05     		.2byte	0x55c
 2556 094e 01       		.byte	0x1
 2557 094f 00000000 		.4byte	.LFB38
 2558 0953 0C000000 		.4byte	.LFE38
 2559 0957 02       		.byte	0x2
 2560 0958 7D       		.byte	0x7d
 2561 0959 00       		.sleb128 0
 2562 095a 01       		.byte	0x1
 2563 095b 6E090000 		.4byte	0x96e
 2564 095f 1A       		.uleb128 0x1a
 2565 0960 C6040000 		.4byte	.LASF18
 2566 0964 01       		.byte	0x1
 2567 0965 5C05     		.2byte	0x55c
 2568 0967 7A000000 		.4byte	0x7a
 2569 096b 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 75


 2570 096c 50       		.byte	0x50
 2571 096d 00       		.byte	0
 2572 096e 11       		.uleb128 0x11
 2573 096f 01       		.byte	0x1
 2574 0970 4A050000 		.4byte	.LASF75
 2575 0974 01       		.byte	0x1
 2576 0975 7305     		.2byte	0x573
 2577 0977 01       		.byte	0x1
 2578 0978 00000000 		.4byte	.LFB39
 2579 097c 0C000000 		.4byte	.LFE39
 2580 0980 02       		.byte	0x2
 2581 0981 7D       		.byte	0x7d
 2582 0982 00       		.sleb128 0
 2583 0983 01       		.byte	0x1
 2584 0984 97090000 		.4byte	0x997
 2585 0988 1A       		.uleb128 0x1a
 2586 0989 C6040000 		.4byte	.LASF18
 2587 098d 01       		.byte	0x1
 2588 098e 7305     		.2byte	0x573
 2589 0990 7A000000 		.4byte	0x7a
 2590 0994 01       		.byte	0x1
 2591 0995 50       		.byte	0x50
 2592 0996 00       		.byte	0
 2593 0997 1B       		.uleb128 0x1b
 2594 0998 1D050000 		.4byte	.LASF79
 2595 099c 01       		.byte	0x1
 2596 099d 16       		.byte	0x16
 2597 099e 6F000000 		.4byte	0x6f
 2598 09a2 01       		.byte	0x1
 2599 09a3 05       		.byte	0x5
 2600 09a4 03       		.byte	0x3
 2601 09a5 00000000 		.4byte	PPMCounter_initVar
 2602 09a9 1C       		.uleb128 0x1c
 2603 09aa 01       		.byte	0x1
 2604 09ab C3020000 		.4byte	.LASF80
 2605 09af 03       		.byte	0x3
 2606 09b0 73       		.byte	0x73
 2607 09b1 01       		.byte	0x1
 2608 09b2 6F000000 		.4byte	0x6f
 2609 09b6 01       		.byte	0x1
 2610 09b7 1D       		.uleb128 0x1d
 2611 09b8 01       		.byte	0x1
 2612 09b9 1E000000 		.4byte	.LASF81
 2613 09bd 03       		.byte	0x3
 2614 09be 74       		.byte	0x74
 2615 09bf 01       		.byte	0x1
 2616 09c0 01       		.byte	0x1
 2617 09c1 1E       		.uleb128 0x1e
 2618 09c2 6F000000 		.4byte	0x6f
 2619 09c6 00       		.byte	0
 2620 09c7 00       		.byte	0
 2621              		.section	.debug_abbrev,"",%progbits
 2622              	.Ldebug_abbrev0:
 2623 0000 01       		.uleb128 0x1
 2624 0001 11       		.uleb128 0x11
 2625 0002 01       		.byte	0x1
 2626 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 76


 2627 0004 0E       		.uleb128 0xe
 2628 0005 13       		.uleb128 0x13
 2629 0006 0B       		.uleb128 0xb
 2630 0007 03       		.uleb128 0x3
 2631 0008 0E       		.uleb128 0xe
 2632 0009 1B       		.uleb128 0x1b
 2633 000a 0E       		.uleb128 0xe
 2634 000b 55       		.uleb128 0x55
 2635 000c 06       		.uleb128 0x6
 2636 000d 11       		.uleb128 0x11
 2637 000e 01       		.uleb128 0x1
 2638 000f 52       		.uleb128 0x52
 2639 0010 01       		.uleb128 0x1
 2640 0011 10       		.uleb128 0x10
 2641 0012 06       		.uleb128 0x6
 2642 0013 00       		.byte	0
 2643 0014 00       		.byte	0
 2644 0015 02       		.uleb128 0x2
 2645 0016 24       		.uleb128 0x24
 2646 0017 00       		.byte	0
 2647 0018 0B       		.uleb128 0xb
 2648 0019 0B       		.uleb128 0xb
 2649 001a 3E       		.uleb128 0x3e
 2650 001b 0B       		.uleb128 0xb
 2651 001c 03       		.uleb128 0x3
 2652 001d 0E       		.uleb128 0xe
 2653 001e 00       		.byte	0
 2654 001f 00       		.byte	0
 2655 0020 03       		.uleb128 0x3
 2656 0021 24       		.uleb128 0x24
 2657 0022 00       		.byte	0
 2658 0023 0B       		.uleb128 0xb
 2659 0024 0B       		.uleb128 0xb
 2660 0025 3E       		.uleb128 0x3e
 2661 0026 0B       		.uleb128 0xb
 2662 0027 03       		.uleb128 0x3
 2663 0028 08       		.uleb128 0x8
 2664 0029 00       		.byte	0
 2665 002a 00       		.byte	0
 2666 002b 04       		.uleb128 0x4
 2667 002c 16       		.uleb128 0x16
 2668 002d 00       		.byte	0
 2669 002e 03       		.uleb128 0x3
 2670 002f 0E       		.uleb128 0xe
 2671 0030 3A       		.uleb128 0x3a
 2672 0031 0B       		.uleb128 0xb
 2673 0032 3B       		.uleb128 0x3b
 2674 0033 0B       		.uleb128 0xb
 2675 0034 49       		.uleb128 0x49
 2676 0035 13       		.uleb128 0x13
 2677 0036 00       		.byte	0
 2678 0037 00       		.byte	0
 2679 0038 05       		.uleb128 0x5
 2680 0039 35       		.uleb128 0x35
 2681 003a 00       		.byte	0
 2682 003b 49       		.uleb128 0x49
 2683 003c 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 77


 2684 003d 00       		.byte	0
 2685 003e 00       		.byte	0
 2686 003f 06       		.uleb128 0x6
 2687 0040 2E       		.uleb128 0x2e
 2688 0041 01       		.byte	0x1
 2689 0042 3F       		.uleb128 0x3f
 2690 0043 0C       		.uleb128 0xc
 2691 0044 03       		.uleb128 0x3
 2692 0045 0E       		.uleb128 0xe
 2693 0046 3A       		.uleb128 0x3a
 2694 0047 0B       		.uleb128 0xb
 2695 0048 3B       		.uleb128 0x3b
 2696 0049 05       		.uleb128 0x5
 2697 004a 27       		.uleb128 0x27
 2698 004b 0C       		.uleb128 0xc
 2699 004c 20       		.uleb128 0x20
 2700 004d 0B       		.uleb128 0xb
 2701 004e 01       		.uleb128 0x1
 2702 004f 13       		.uleb128 0x13
 2703 0050 00       		.byte	0
 2704 0051 00       		.byte	0
 2705 0052 07       		.uleb128 0x7
 2706 0053 05       		.uleb128 0x5
 2707 0054 00       		.byte	0
 2708 0055 03       		.uleb128 0x3
 2709 0056 0E       		.uleb128 0xe
 2710 0057 3A       		.uleb128 0x3a
 2711 0058 0B       		.uleb128 0xb
 2712 0059 3B       		.uleb128 0x3b
 2713 005a 05       		.uleb128 0x5
 2714 005b 49       		.uleb128 0x49
 2715 005c 13       		.uleb128 0x13
 2716 005d 00       		.byte	0
 2717 005e 00       		.byte	0
 2718 005f 08       		.uleb128 0x8
 2719 0060 2E       		.uleb128 0x2e
 2720 0061 01       		.byte	0x1
 2721 0062 3F       		.uleb128 0x3f
 2722 0063 0C       		.uleb128 0xc
 2723 0064 03       		.uleb128 0x3
 2724 0065 0E       		.uleb128 0xe
 2725 0066 3A       		.uleb128 0x3a
 2726 0067 0B       		.uleb128 0xb
 2727 0068 3B       		.uleb128 0x3b
 2728 0069 0B       		.uleb128 0xb
 2729 006a 27       		.uleb128 0x27
 2730 006b 0C       		.uleb128 0xc
 2731 006c 11       		.uleb128 0x11
 2732 006d 01       		.uleb128 0x1
 2733 006e 12       		.uleb128 0x12
 2734 006f 01       		.uleb128 0x1
 2735 0070 40       		.uleb128 0x40
 2736 0071 0A       		.uleb128 0xa
 2737 0072 9742     		.uleb128 0x2117
 2738 0074 0C       		.uleb128 0xc
 2739 0075 01       		.uleb128 0x1
 2740 0076 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 78


 2741 0077 00       		.byte	0
 2742 0078 00       		.byte	0
 2743 0079 09       		.uleb128 0x9
 2744 007a 1D       		.uleb128 0x1d
 2745 007b 01       		.byte	0x1
 2746 007c 31       		.uleb128 0x31
 2747 007d 13       		.uleb128 0x13
 2748 007e 52       		.uleb128 0x52
 2749 007f 01       		.uleb128 0x1
 2750 0080 55       		.uleb128 0x55
 2751 0081 06       		.uleb128 0x6
 2752 0082 58       		.uleb128 0x58
 2753 0083 0B       		.uleb128 0xb
 2754 0084 59       		.uleb128 0x59
 2755 0085 0B       		.uleb128 0xb
 2756 0086 01       		.uleb128 0x1
 2757 0087 13       		.uleb128 0x13
 2758 0088 00       		.byte	0
 2759 0089 00       		.byte	0
 2760 008a 0A       		.uleb128 0xa
 2761 008b 05       		.uleb128 0x5
 2762 008c 00       		.byte	0
 2763 008d 31       		.uleb128 0x31
 2764 008e 13       		.uleb128 0x13
 2765 008f 1C       		.uleb128 0x1c
 2766 0090 0B       		.uleb128 0xb
 2767 0091 00       		.byte	0
 2768 0092 00       		.byte	0
 2769 0093 0B       		.uleb128 0xb
 2770 0094 1D       		.uleb128 0x1d
 2771 0095 01       		.byte	0x1
 2772 0096 31       		.uleb128 0x31
 2773 0097 13       		.uleb128 0x13
 2774 0098 11       		.uleb128 0x11
 2775 0099 01       		.uleb128 0x1
 2776 009a 12       		.uleb128 0x12
 2777 009b 01       		.uleb128 0x1
 2778 009c 58       		.uleb128 0x58
 2779 009d 0B       		.uleb128 0xb
 2780 009e 59       		.uleb128 0x59
 2781 009f 0B       		.uleb128 0xb
 2782 00a0 00       		.byte	0
 2783 00a1 00       		.byte	0
 2784 00a2 0C       		.uleb128 0xc
 2785 00a3 05       		.uleb128 0x5
 2786 00a4 00       		.byte	0
 2787 00a5 31       		.uleb128 0x31
 2788 00a6 13       		.uleb128 0x13
 2789 00a7 1C       		.uleb128 0x1c
 2790 00a8 05       		.uleb128 0x5
 2791 00a9 00       		.byte	0
 2792 00aa 00       		.byte	0
 2793 00ab 0D       		.uleb128 0xd
 2794 00ac 2E       		.uleb128 0x2e
 2795 00ad 01       		.byte	0x1
 2796 00ae 3F       		.uleb128 0x3f
 2797 00af 0C       		.uleb128 0xc
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 79


 2798 00b0 03       		.uleb128 0x3
 2799 00b1 0E       		.uleb128 0xe
 2800 00b2 3A       		.uleb128 0x3a
 2801 00b3 0B       		.uleb128 0xb
 2802 00b4 3B       		.uleb128 0x3b
 2803 00b5 05       		.uleb128 0x5
 2804 00b6 27       		.uleb128 0x27
 2805 00b7 0C       		.uleb128 0xc
 2806 00b8 11       		.uleb128 0x11
 2807 00b9 01       		.uleb128 0x1
 2808 00ba 12       		.uleb128 0x12
 2809 00bb 01       		.uleb128 0x1
 2810 00bc 40       		.uleb128 0x40
 2811 00bd 06       		.uleb128 0x6
 2812 00be 9742     		.uleb128 0x2117
 2813 00c0 0C       		.uleb128 0xc
 2814 00c1 01       		.uleb128 0x1
 2815 00c2 13       		.uleb128 0x13
 2816 00c3 00       		.byte	0
 2817 00c4 00       		.byte	0
 2818 00c5 0E       		.uleb128 0xe
 2819 00c6 34       		.uleb128 0x34
 2820 00c7 00       		.byte	0
 2821 00c8 03       		.uleb128 0x3
 2822 00c9 0E       		.uleb128 0xe
 2823 00ca 3A       		.uleb128 0x3a
 2824 00cb 0B       		.uleb128 0xb
 2825 00cc 3B       		.uleb128 0x3b
 2826 00cd 05       		.uleb128 0x5
 2827 00ce 49       		.uleb128 0x49
 2828 00cf 13       		.uleb128 0x13
 2829 00d0 02       		.uleb128 0x2
 2830 00d1 06       		.uleb128 0x6
 2831 00d2 00       		.byte	0
 2832 00d3 00       		.byte	0
 2833 00d4 0F       		.uleb128 0xf
 2834 00d5 898201   		.uleb128 0x4109
 2835 00d8 00       		.byte	0
 2836 00d9 11       		.uleb128 0x11
 2837 00da 01       		.uleb128 0x1
 2838 00db 31       		.uleb128 0x31
 2839 00dc 13       		.uleb128 0x13
 2840 00dd 00       		.byte	0
 2841 00de 00       		.byte	0
 2842 00df 10       		.uleb128 0x10
 2843 00e0 05       		.uleb128 0x5
 2844 00e1 00       		.byte	0
 2845 00e2 03       		.uleb128 0x3
 2846 00e3 0E       		.uleb128 0xe
 2847 00e4 3A       		.uleb128 0x3a
 2848 00e5 0B       		.uleb128 0xb
 2849 00e6 3B       		.uleb128 0x3b
 2850 00e7 05       		.uleb128 0x5
 2851 00e8 49       		.uleb128 0x49
 2852 00e9 13       		.uleb128 0x13
 2853 00ea 02       		.uleb128 0x2
 2854 00eb 06       		.uleb128 0x6
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 80


 2855 00ec 00       		.byte	0
 2856 00ed 00       		.byte	0
 2857 00ee 11       		.uleb128 0x11
 2858 00ef 2E       		.uleb128 0x2e
 2859 00f0 01       		.byte	0x1
 2860 00f1 3F       		.uleb128 0x3f
 2861 00f2 0C       		.uleb128 0xc
 2862 00f3 03       		.uleb128 0x3
 2863 00f4 0E       		.uleb128 0xe
 2864 00f5 3A       		.uleb128 0x3a
 2865 00f6 0B       		.uleb128 0xb
 2866 00f7 3B       		.uleb128 0x3b
 2867 00f8 05       		.uleb128 0x5
 2868 00f9 27       		.uleb128 0x27
 2869 00fa 0C       		.uleb128 0xc
 2870 00fb 11       		.uleb128 0x11
 2871 00fc 01       		.uleb128 0x1
 2872 00fd 12       		.uleb128 0x12
 2873 00fe 01       		.uleb128 0x1
 2874 00ff 40       		.uleb128 0x40
 2875 0100 0A       		.uleb128 0xa
 2876 0101 9742     		.uleb128 0x2117
 2877 0103 0C       		.uleb128 0xc
 2878 0104 01       		.uleb128 0x1
 2879 0105 13       		.uleb128 0x13
 2880 0106 00       		.byte	0
 2881 0107 00       		.byte	0
 2882 0108 12       		.uleb128 0x12
 2883 0109 2E       		.uleb128 0x2e
 2884 010a 00       		.byte	0
 2885 010b 3F       		.uleb128 0x3f
 2886 010c 0C       		.uleb128 0xc
 2887 010d 03       		.uleb128 0x3
 2888 010e 0E       		.uleb128 0xe
 2889 010f 3A       		.uleb128 0x3a
 2890 0110 0B       		.uleb128 0xb
 2891 0111 3B       		.uleb128 0x3b
 2892 0112 05       		.uleb128 0x5
 2893 0113 27       		.uleb128 0x27
 2894 0114 0C       		.uleb128 0xc
 2895 0115 49       		.uleb128 0x49
 2896 0116 13       		.uleb128 0x13
 2897 0117 11       		.uleb128 0x11
 2898 0118 01       		.uleb128 0x1
 2899 0119 12       		.uleb128 0x12
 2900 011a 01       		.uleb128 0x1
 2901 011b 40       		.uleb128 0x40
 2902 011c 0A       		.uleb128 0xa
 2903 011d 9742     		.uleb128 0x2117
 2904 011f 0C       		.uleb128 0xc
 2905 0120 00       		.byte	0
 2906 0121 00       		.byte	0
 2907 0122 13       		.uleb128 0x13
 2908 0123 2E       		.uleb128 0x2e
 2909 0124 01       		.byte	0x1
 2910 0125 31       		.uleb128 0x31
 2911 0126 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 81


 2912 0127 11       		.uleb128 0x11
 2913 0128 01       		.uleb128 0x1
 2914 0129 12       		.uleb128 0x12
 2915 012a 01       		.uleb128 0x1
 2916 012b 40       		.uleb128 0x40
 2917 012c 0A       		.uleb128 0xa
 2918 012d 9742     		.uleb128 0x2117
 2919 012f 0C       		.uleb128 0xc
 2920 0130 01       		.uleb128 0x1
 2921 0131 13       		.uleb128 0x13
 2922 0132 00       		.byte	0
 2923 0133 00       		.byte	0
 2924 0134 14       		.uleb128 0x14
 2925 0135 05       		.uleb128 0x5
 2926 0136 00       		.byte	0
 2927 0137 31       		.uleb128 0x31
 2928 0138 13       		.uleb128 0x13
 2929 0139 02       		.uleb128 0x2
 2930 013a 06       		.uleb128 0x6
 2931 013b 00       		.byte	0
 2932 013c 00       		.byte	0
 2933 013d 15       		.uleb128 0x15
 2934 013e 2E       		.uleb128 0x2e
 2935 013f 01       		.byte	0x1
 2936 0140 3F       		.uleb128 0x3f
 2937 0141 0C       		.uleb128 0xc
 2938 0142 03       		.uleb128 0x3
 2939 0143 0E       		.uleb128 0xe
 2940 0144 3A       		.uleb128 0x3a
 2941 0145 0B       		.uleb128 0xb
 2942 0146 3B       		.uleb128 0x3b
 2943 0147 0B       		.uleb128 0xb
 2944 0148 27       		.uleb128 0x27
 2945 0149 0C       		.uleb128 0xc
 2946 014a 11       		.uleb128 0x11
 2947 014b 01       		.uleb128 0x1
 2948 014c 12       		.uleb128 0x12
 2949 014d 01       		.uleb128 0x1
 2950 014e 40       		.uleb128 0x40
 2951 014f 06       		.uleb128 0x6
 2952 0150 9742     		.uleb128 0x2117
 2953 0152 0C       		.uleb128 0xc
 2954 0153 01       		.uleb128 0x1
 2955 0154 13       		.uleb128 0x13
 2956 0155 00       		.byte	0
 2957 0156 00       		.byte	0
 2958 0157 16       		.uleb128 0x16
 2959 0158 34       		.uleb128 0x34
 2960 0159 00       		.byte	0
 2961 015a 03       		.uleb128 0x3
 2962 015b 0E       		.uleb128 0xe
 2963 015c 3A       		.uleb128 0x3a
 2964 015d 0B       		.uleb128 0xb
 2965 015e 3B       		.uleb128 0x3b
 2966 015f 0B       		.uleb128 0xb
 2967 0160 49       		.uleb128 0x49
 2968 0161 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 82


 2969 0162 02       		.uleb128 0x2
 2970 0163 06       		.uleb128 0x6
 2971 0164 00       		.byte	0
 2972 0165 00       		.byte	0
 2973 0166 17       		.uleb128 0x17
 2974 0167 898201   		.uleb128 0x4109
 2975 016a 01       		.byte	0x1
 2976 016b 11       		.uleb128 0x11
 2977 016c 01       		.uleb128 0x1
 2978 016d 31       		.uleb128 0x31
 2979 016e 13       		.uleb128 0x13
 2980 016f 00       		.byte	0
 2981 0170 00       		.byte	0
 2982 0171 18       		.uleb128 0x18
 2983 0172 8A8201   		.uleb128 0x410a
 2984 0175 00       		.byte	0
 2985 0176 02       		.uleb128 0x2
 2986 0177 0A       		.uleb128 0xa
 2987 0178 9142     		.uleb128 0x2111
 2988 017a 0A       		.uleb128 0xa
 2989 017b 00       		.byte	0
 2990 017c 00       		.byte	0
 2991 017d 19       		.uleb128 0x19
 2992 017e 05       		.uleb128 0x5
 2993 017f 00       		.byte	0
 2994 0180 31       		.uleb128 0x31
 2995 0181 13       		.uleb128 0x13
 2996 0182 02       		.uleb128 0x2
 2997 0183 0A       		.uleb128 0xa
 2998 0184 00       		.byte	0
 2999 0185 00       		.byte	0
 3000 0186 1A       		.uleb128 0x1a
 3001 0187 05       		.uleb128 0x5
 3002 0188 00       		.byte	0
 3003 0189 03       		.uleb128 0x3
 3004 018a 0E       		.uleb128 0xe
 3005 018b 3A       		.uleb128 0x3a
 3006 018c 0B       		.uleb128 0xb
 3007 018d 3B       		.uleb128 0x3b
 3008 018e 05       		.uleb128 0x5
 3009 018f 49       		.uleb128 0x49
 3010 0190 13       		.uleb128 0x13
 3011 0191 02       		.uleb128 0x2
 3012 0192 0A       		.uleb128 0xa
 3013 0193 00       		.byte	0
 3014 0194 00       		.byte	0
 3015 0195 1B       		.uleb128 0x1b
 3016 0196 34       		.uleb128 0x34
 3017 0197 00       		.byte	0
 3018 0198 03       		.uleb128 0x3
 3019 0199 0E       		.uleb128 0xe
 3020 019a 3A       		.uleb128 0x3a
 3021 019b 0B       		.uleb128 0xb
 3022 019c 3B       		.uleb128 0x3b
 3023 019d 0B       		.uleb128 0xb
 3024 019e 49       		.uleb128 0x49
 3025 019f 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 83


 3026 01a0 3F       		.uleb128 0x3f
 3027 01a1 0C       		.uleb128 0xc
 3028 01a2 02       		.uleb128 0x2
 3029 01a3 0A       		.uleb128 0xa
 3030 01a4 00       		.byte	0
 3031 01a5 00       		.byte	0
 3032 01a6 1C       		.uleb128 0x1c
 3033 01a7 2E       		.uleb128 0x2e
 3034 01a8 00       		.byte	0
 3035 01a9 3F       		.uleb128 0x3f
 3036 01aa 0C       		.uleb128 0xc
 3037 01ab 03       		.uleb128 0x3
 3038 01ac 0E       		.uleb128 0xe
 3039 01ad 3A       		.uleb128 0x3a
 3040 01ae 0B       		.uleb128 0xb
 3041 01af 3B       		.uleb128 0x3b
 3042 01b0 0B       		.uleb128 0xb
 3043 01b1 27       		.uleb128 0x27
 3044 01b2 0C       		.uleb128 0xc
 3045 01b3 49       		.uleb128 0x49
 3046 01b4 13       		.uleb128 0x13
 3047 01b5 3C       		.uleb128 0x3c
 3048 01b6 0C       		.uleb128 0xc
 3049 01b7 00       		.byte	0
 3050 01b8 00       		.byte	0
 3051 01b9 1D       		.uleb128 0x1d
 3052 01ba 2E       		.uleb128 0x2e
 3053 01bb 01       		.byte	0x1
 3054 01bc 3F       		.uleb128 0x3f
 3055 01bd 0C       		.uleb128 0xc
 3056 01be 03       		.uleb128 0x3
 3057 01bf 0E       		.uleb128 0xe
 3058 01c0 3A       		.uleb128 0x3a
 3059 01c1 0B       		.uleb128 0xb
 3060 01c2 3B       		.uleb128 0x3b
 3061 01c3 0B       		.uleb128 0xb
 3062 01c4 27       		.uleb128 0x27
 3063 01c5 0C       		.uleb128 0xc
 3064 01c6 3C       		.uleb128 0x3c
 3065 01c7 0C       		.uleb128 0xc
 3066 01c8 00       		.byte	0
 3067 01c9 00       		.byte	0
 3068 01ca 1E       		.uleb128 0x1e
 3069 01cb 05       		.uleb128 0x5
 3070 01cc 00       		.byte	0
 3071 01cd 49       		.uleb128 0x49
 3072 01ce 13       		.uleb128 0x13
 3073 01cf 00       		.byte	0
 3074 01d0 00       		.byte	0
 3075 01d1 00       		.byte	0
 3076              		.section	.debug_loc,"",%progbits
 3077              	.Ldebug_loc0:
 3078              	.LLST0:
 3079 0000 00000000 		.4byte	.LFB3
 3080 0004 02000000 		.4byte	.LCFI0
 3081 0008 0200     		.2byte	0x2
 3082 000a 7D       		.byte	0x7d
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 84


 3083 000b 00       		.sleb128 0
 3084 000c 02000000 		.4byte	.LCFI0
 3085 0010 1C000000 		.4byte	.LFE3
 3086 0014 0200     		.2byte	0x2
 3087 0016 7D       		.byte	0x7d
 3088 0017 08       		.sleb128 8
 3089 0018 00000000 		.4byte	0
 3090 001c 00000000 		.4byte	0
 3091              	.LLST1:
 3092 0020 06000000 		.4byte	.LVL2
 3093 0024 13000000 		.4byte	.LVL3-1
 3094 0028 0100     		.2byte	0x1
 3095 002a 50       		.byte	0x50
 3096 002b 00000000 		.4byte	0
 3097 002f 00000000 		.4byte	0
 3098              	.LLST2:
 3099 0033 00000000 		.4byte	.LFB4
 3100 0037 02000000 		.4byte	.LCFI1
 3101 003b 0200     		.2byte	0x2
 3102 003d 7D       		.byte	0x7d
 3103 003e 00       		.sleb128 0
 3104 003f 02000000 		.4byte	.LCFI1
 3105 0043 28000000 		.4byte	.LFE4
 3106 0047 0200     		.2byte	0x2
 3107 0049 7D       		.byte	0x7d
 3108 004a 08       		.sleb128 8
 3109 004b 00000000 		.4byte	0
 3110 004f 00000000 		.4byte	0
 3111              	.LLST3:
 3112 0053 00000000 		.4byte	.LVL4
 3113 0057 07000000 		.4byte	.LVL5-1
 3114 005b 0100     		.2byte	0x1
 3115 005d 50       		.byte	0x50
 3116 005e 07000000 		.4byte	.LVL5-1
 3117 0062 16000000 		.4byte	.LVL6
 3118 0066 0100     		.2byte	0x1
 3119 0068 54       		.byte	0x54
 3120 0069 16000000 		.4byte	.LVL6
 3121 006d 28000000 		.4byte	.LFE4
 3122 0071 0400     		.2byte	0x4
 3123 0073 F3       		.byte	0xf3
 3124 0074 01       		.uleb128 0x1
 3125 0075 50       		.byte	0x50
 3126 0076 9F       		.byte	0x9f
 3127 0077 00000000 		.4byte	0
 3128 007b 00000000 		.4byte	0
 3129              	.LLST4:
 3130 007f 08000000 		.4byte	.LVL5
 3131 0083 1B000000 		.4byte	.LVL7-1
 3132 0087 0100     		.2byte	0x1
 3133 0089 50       		.byte	0x50
 3134 008a 00000000 		.4byte	0
 3135 008e 00000000 		.4byte	0
 3136              	.LLST5:
 3137 0092 00000000 		.4byte	.LFB5
 3138 0096 02000000 		.4byte	.LCFI2
 3139 009a 0200     		.2byte	0x2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 85


 3140 009c 7D       		.byte	0x7d
 3141 009d 00       		.sleb128 0
 3142 009e 02000000 		.4byte	.LCFI2
 3143 00a2 28000000 		.4byte	.LFE5
 3144 00a6 0200     		.2byte	0x2
 3145 00a8 7D       		.byte	0x7d
 3146 00a9 08       		.sleb128 8
 3147 00aa 00000000 		.4byte	0
 3148 00ae 00000000 		.4byte	0
 3149              	.LLST6:
 3150 00b2 00000000 		.4byte	.LVL8
 3151 00b6 07000000 		.4byte	.LVL9-1
 3152 00ba 0100     		.2byte	0x1
 3153 00bc 50       		.byte	0x50
 3154 00bd 07000000 		.4byte	.LVL9-1
 3155 00c1 16000000 		.4byte	.LVL10
 3156 00c5 0100     		.2byte	0x1
 3157 00c7 54       		.byte	0x54
 3158 00c8 16000000 		.4byte	.LVL10
 3159 00cc 28000000 		.4byte	.LFE5
 3160 00d0 0400     		.2byte	0x4
 3161 00d2 F3       		.byte	0xf3
 3162 00d3 01       		.uleb128 0x1
 3163 00d4 50       		.byte	0x50
 3164 00d5 9F       		.byte	0x9f
 3165 00d6 00000000 		.4byte	0
 3166 00da 00000000 		.4byte	0
 3167              	.LLST7:
 3168 00de 08000000 		.4byte	.LVL9
 3169 00e2 1B000000 		.4byte	.LVL11-1
 3170 00e6 0100     		.2byte	0x1
 3171 00e8 50       		.byte	0x50
 3172 00e9 00000000 		.4byte	0
 3173 00ed 00000000 		.4byte	0
 3174              	.LLST8:
 3175 00f1 00000000 		.4byte	.LFB6
 3176 00f5 02000000 		.4byte	.LCFI3
 3177 00f9 0200     		.2byte	0x2
 3178 00fb 7D       		.byte	0x7d
 3179 00fc 00       		.sleb128 0
 3180 00fd 02000000 		.4byte	.LCFI3
 3181 0101 28000000 		.4byte	.LFE6
 3182 0105 0200     		.2byte	0x2
 3183 0107 7D       		.byte	0x7d
 3184 0108 08       		.sleb128 8
 3185 0109 00000000 		.4byte	0
 3186 010d 00000000 		.4byte	0
 3187              	.LLST9:
 3188 0111 00000000 		.4byte	.LVL12
 3189 0115 07000000 		.4byte	.LVL13-1
 3190 0119 0100     		.2byte	0x1
 3191 011b 50       		.byte	0x50
 3192 011c 07000000 		.4byte	.LVL13-1
 3193 0120 16000000 		.4byte	.LVL14
 3194 0124 0100     		.2byte	0x1
 3195 0126 54       		.byte	0x54
 3196 0127 16000000 		.4byte	.LVL14
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 86


 3197 012b 28000000 		.4byte	.LFE6
 3198 012f 0400     		.2byte	0x4
 3199 0131 F3       		.byte	0xf3
 3200 0132 01       		.uleb128 0x1
 3201 0133 50       		.byte	0x50
 3202 0134 9F       		.byte	0x9f
 3203 0135 00000000 		.4byte	0
 3204 0139 00000000 		.4byte	0
 3205              	.LLST10:
 3206 013d 08000000 		.4byte	.LVL13
 3207 0141 1B000000 		.4byte	.LVL15-1
 3208 0145 0100     		.2byte	0x1
 3209 0147 50       		.byte	0x50
 3210 0148 00000000 		.4byte	0
 3211 014c 00000000 		.4byte	0
 3212              	.LLST11:
 3213 0150 00000000 		.4byte	.LFB7
 3214 0154 02000000 		.4byte	.LCFI4
 3215 0158 0200     		.2byte	0x2
 3216 015a 7D       		.byte	0x7d
 3217 015b 00       		.sleb128 0
 3218 015c 02000000 		.4byte	.LCFI4
 3219 0160 2C000000 		.4byte	.LFE7
 3220 0164 0200     		.2byte	0x2
 3221 0166 7D       		.byte	0x7d
 3222 0167 08       		.sleb128 8
 3223 0168 00000000 		.4byte	0
 3224 016c 00000000 		.4byte	0
 3225              	.LLST12:
 3226 0170 00000000 		.4byte	.LVL16
 3227 0174 07000000 		.4byte	.LVL17-1
 3228 0178 0100     		.2byte	0x1
 3229 017a 50       		.byte	0x50
 3230 017b 07000000 		.4byte	.LVL17-1
 3231 017f 18000000 		.4byte	.LVL18
 3232 0183 0100     		.2byte	0x1
 3233 0185 54       		.byte	0x54
 3234 0186 18000000 		.4byte	.LVL18
 3235 018a 2C000000 		.4byte	.LFE7
 3236 018e 0400     		.2byte	0x4
 3237 0190 F3       		.byte	0xf3
 3238 0191 01       		.uleb128 0x1
 3239 0192 50       		.byte	0x50
 3240 0193 9F       		.byte	0x9f
 3241 0194 00000000 		.4byte	0
 3242 0198 00000000 		.4byte	0
 3243              	.LLST13:
 3244 019c 08000000 		.4byte	.LVL17
 3245 01a0 21000000 		.4byte	.LVL19-1
 3246 01a4 0100     		.2byte	0x1
 3247 01a6 50       		.byte	0x50
 3248 01a7 00000000 		.4byte	0
 3249 01ab 00000000 		.4byte	0
 3250              	.LLST14:
 3251 01af 00000000 		.4byte	.LVL20
 3252 01b3 06000000 		.4byte	.LVL21
 3253 01b7 0100     		.2byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 87


 3254 01b9 50       		.byte	0x50
 3255 01ba 06000000 		.4byte	.LVL21
 3256 01be 10000000 		.4byte	.LFE8
 3257 01c2 0400     		.2byte	0x4
 3258 01c4 F3       		.byte	0xf3
 3259 01c5 01       		.uleb128 0x1
 3260 01c6 50       		.byte	0x50
 3261 01c7 9F       		.byte	0x9f
 3262 01c8 00000000 		.4byte	0
 3263 01cc 00000000 		.4byte	0
 3264              	.LLST15:
 3265 01d0 00000000 		.4byte	.LFB9
 3266 01d4 02000000 		.4byte	.LCFI5
 3267 01d8 0200     		.2byte	0x2
 3268 01da 7D       		.byte	0x7d
 3269 01db 00       		.sleb128 0
 3270 01dc 02000000 		.4byte	.LCFI5
 3271 01e0 28000000 		.4byte	.LFE9
 3272 01e4 0200     		.2byte	0x2
 3273 01e6 7D       		.byte	0x7d
 3274 01e7 08       		.sleb128 8
 3275 01e8 00000000 		.4byte	0
 3276 01ec 00000000 		.4byte	0
 3277              	.LLST16:
 3278 01f0 00000000 		.4byte	.LVL22
 3279 01f4 07000000 		.4byte	.LVL23-1
 3280 01f8 0100     		.2byte	0x1
 3281 01fa 50       		.byte	0x50
 3282 01fb 07000000 		.4byte	.LVL23-1
 3283 01ff 18000000 		.4byte	.LVL24
 3284 0203 0100     		.2byte	0x1
 3285 0205 54       		.byte	0x54
 3286 0206 18000000 		.4byte	.LVL24
 3287 020a 28000000 		.4byte	.LFE9
 3288 020e 0400     		.2byte	0x4
 3289 0210 F3       		.byte	0xf3
 3290 0211 01       		.uleb128 0x1
 3291 0212 50       		.byte	0x50
 3292 0213 9F       		.byte	0x9f
 3293 0214 00000000 		.4byte	0
 3294 0218 00000000 		.4byte	0
 3295              	.LLST17:
 3296 021c 08000000 		.4byte	.LVL23
 3297 0220 21000000 		.4byte	.LVL25-1
 3298 0224 0100     		.2byte	0x1
 3299 0226 50       		.byte	0x50
 3300 0227 00000000 		.4byte	0
 3301 022b 00000000 		.4byte	0
 3302              	.LLST18:
 3303 022f 00000000 		.4byte	.LFB10
 3304 0233 02000000 		.4byte	.LCFI6
 3305 0237 0200     		.2byte	0x2
 3306 0239 7D       		.byte	0x7d
 3307 023a 00       		.sleb128 0
 3308 023b 02000000 		.4byte	.LCFI6
 3309 023f 28000000 		.4byte	.LFE10
 3310 0243 0200     		.2byte	0x2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 88


 3311 0245 7D       		.byte	0x7d
 3312 0246 08       		.sleb128 8
 3313 0247 00000000 		.4byte	0
 3314 024b 00000000 		.4byte	0
 3315              	.LLST19:
 3316 024f 00000000 		.4byte	.LVL26
 3317 0253 07000000 		.4byte	.LVL27-1
 3318 0257 0100     		.2byte	0x1
 3319 0259 50       		.byte	0x50
 3320 025a 07000000 		.4byte	.LVL27-1
 3321 025e 18000000 		.4byte	.LVL28
 3322 0262 0100     		.2byte	0x1
 3323 0264 54       		.byte	0x54
 3324 0265 18000000 		.4byte	.LVL28
 3325 0269 28000000 		.4byte	.LFE10
 3326 026d 0400     		.2byte	0x4
 3327 026f F3       		.byte	0xf3
 3328 0270 01       		.uleb128 0x1
 3329 0271 50       		.byte	0x50
 3330 0272 9F       		.byte	0x9f
 3331 0273 00000000 		.4byte	0
 3332 0277 00000000 		.4byte	0
 3333              	.LLST20:
 3334 027b 08000000 		.4byte	.LVL27
 3335 027f 21000000 		.4byte	.LVL29-1
 3336 0283 0100     		.2byte	0x1
 3337 0285 50       		.byte	0x50
 3338 0286 00000000 		.4byte	0
 3339 028a 00000000 		.4byte	0
 3340              	.LLST21:
 3341 028e 00000000 		.4byte	.LFB11
 3342 0292 02000000 		.4byte	.LCFI7
 3343 0296 0200     		.2byte	0x2
 3344 0298 7D       		.byte	0x7d
 3345 0299 00       		.sleb128 0
 3346 029a 02000000 		.4byte	.LCFI7
 3347 029e 2C000000 		.4byte	.LFE11
 3348 02a2 0200     		.2byte	0x2
 3349 02a4 7D       		.byte	0x7d
 3350 02a5 08       		.sleb128 8
 3351 02a6 00000000 		.4byte	0
 3352 02aa 00000000 		.4byte	0
 3353              	.LLST22:
 3354 02ae 00000000 		.4byte	.LVL30
 3355 02b2 07000000 		.4byte	.LVL31-1
 3356 02b6 0100     		.2byte	0x1
 3357 02b8 50       		.byte	0x50
 3358 02b9 07000000 		.4byte	.LVL31-1
 3359 02bd 10000000 		.4byte	.LVL32
 3360 02c1 0100     		.2byte	0x1
 3361 02c3 54       		.byte	0x54
 3362 02c4 10000000 		.4byte	.LVL32
 3363 02c8 2C000000 		.4byte	.LFE11
 3364 02cc 0400     		.2byte	0x4
 3365 02ce F3       		.byte	0xf3
 3366 02cf 01       		.uleb128 0x1
 3367 02d0 50       		.byte	0x50
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 89


 3368 02d1 9F       		.byte	0x9f
 3369 02d2 00000000 		.4byte	0
 3370 02d6 00000000 		.4byte	0
 3371              	.LLST23:
 3372 02da 08000000 		.4byte	.LVL31
 3373 02de 1F000000 		.4byte	.LVL33-1
 3374 02e2 0100     		.2byte	0x1
 3375 02e4 50       		.byte	0x50
 3376 02e5 00000000 		.4byte	0
 3377 02e9 00000000 		.4byte	0
 3378              	.LLST24:
 3379 02ed 00000000 		.4byte	.LFB12
 3380 02f1 02000000 		.4byte	.LCFI8
 3381 02f5 0200     		.2byte	0x2
 3382 02f7 7D       		.byte	0x7d
 3383 02f8 00       		.sleb128 0
 3384 02f9 02000000 		.4byte	.LCFI8
 3385 02fd 28000000 		.4byte	.LFE12
 3386 0301 0200     		.2byte	0x2
 3387 0303 7D       		.byte	0x7d
 3388 0304 08       		.sleb128 8
 3389 0305 00000000 		.4byte	0
 3390 0309 00000000 		.4byte	0
 3391              	.LLST25:
 3392 030d 00000000 		.4byte	.LVL34
 3393 0311 07000000 		.4byte	.LVL35-1
 3394 0315 0100     		.2byte	0x1
 3395 0317 50       		.byte	0x50
 3396 0318 07000000 		.4byte	.LVL35-1
 3397 031c 16000000 		.4byte	.LVL36
 3398 0320 0100     		.2byte	0x1
 3399 0322 54       		.byte	0x54
 3400 0323 16000000 		.4byte	.LVL36
 3401 0327 28000000 		.4byte	.LFE12
 3402 032b 0400     		.2byte	0x4
 3403 032d F3       		.byte	0xf3
 3404 032e 01       		.uleb128 0x1
 3405 032f 50       		.byte	0x50
 3406 0330 9F       		.byte	0x9f
 3407 0331 00000000 		.4byte	0
 3408 0335 00000000 		.4byte	0
 3409              	.LLST26:
 3410 0339 08000000 		.4byte	.LVL35
 3411 033d 1B000000 		.4byte	.LVL37-1
 3412 0341 0100     		.2byte	0x1
 3413 0343 50       		.byte	0x50
 3414 0344 00000000 		.4byte	0
 3415 0348 00000000 		.4byte	0
 3416              	.LLST27:
 3417 034c 00000000 		.4byte	.LVL38
 3418 0350 04000000 		.4byte	.LVL39
 3419 0354 0100     		.2byte	0x1
 3420 0356 50       		.byte	0x50
 3421 0357 04000000 		.4byte	.LVL39
 3422 035b 0C000000 		.4byte	.LFE13
 3423 035f 0400     		.2byte	0x4
 3424 0361 F3       		.byte	0xf3
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 90


 3425 0362 01       		.uleb128 0x1
 3426 0363 50       		.byte	0x50
 3427 0364 9F       		.byte	0x9f
 3428 0365 00000000 		.4byte	0
 3429 0369 00000000 		.4byte	0
 3430              	.LLST28:
 3431 036d 00000000 		.4byte	.LFB15
 3432 0371 02000000 		.4byte	.LCFI9
 3433 0375 0200     		.2byte	0x2
 3434 0377 7D       		.byte	0x7d
 3435 0378 00       		.sleb128 0
 3436 0379 02000000 		.4byte	.LCFI9
 3437 037d 28000000 		.4byte	.LFE15
 3438 0381 0200     		.2byte	0x2
 3439 0383 7D       		.byte	0x7d
 3440 0384 08       		.sleb128 8
 3441 0385 00000000 		.4byte	0
 3442 0389 00000000 		.4byte	0
 3443              	.LLST29:
 3444 038d 00000000 		.4byte	.LVL40
 3445 0391 07000000 		.4byte	.LVL41-1
 3446 0395 0100     		.2byte	0x1
 3447 0397 50       		.byte	0x50
 3448 0398 07000000 		.4byte	.LVL41-1
 3449 039c 16000000 		.4byte	.LVL42
 3450 03a0 0100     		.2byte	0x1
 3451 03a2 54       		.byte	0x54
 3452 03a3 16000000 		.4byte	.LVL42
 3453 03a7 28000000 		.4byte	.LFE15
 3454 03ab 0400     		.2byte	0x4
 3455 03ad F3       		.byte	0xf3
 3456 03ae 01       		.uleb128 0x1
 3457 03af 50       		.byte	0x50
 3458 03b0 9F       		.byte	0x9f
 3459 03b1 00000000 		.4byte	0
 3460 03b5 00000000 		.4byte	0
 3461              	.LLST30:
 3462 03b9 08000000 		.4byte	.LVL41
 3463 03bd 1B000000 		.4byte	.LVL43-1
 3464 03c1 0100     		.2byte	0x1
 3465 03c3 50       		.byte	0x50
 3466 03c4 00000000 		.4byte	0
 3467 03c8 00000000 		.4byte	0
 3468              	.LLST31:
 3469 03cc 00000000 		.4byte	.LVL44
 3470 03d0 04000000 		.4byte	.LVL45
 3471 03d4 0100     		.2byte	0x1
 3472 03d6 50       		.byte	0x50
 3473 03d7 04000000 		.4byte	.LVL45
 3474 03db 0C000000 		.4byte	.LFE16
 3475 03df 0400     		.2byte	0x4
 3476 03e1 F3       		.byte	0xf3
 3477 03e2 01       		.uleb128 0x1
 3478 03e3 50       		.byte	0x50
 3479 03e4 9F       		.byte	0x9f
 3480 03e5 00000000 		.4byte	0
 3481 03e9 00000000 		.4byte	0
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 91


 3482              	.LLST32:
 3483 03ed 00000000 		.4byte	.LFB18
 3484 03f1 02000000 		.4byte	.LCFI10
 3485 03f5 0200     		.2byte	0x2
 3486 03f7 7D       		.byte	0x7d
 3487 03f8 00       		.sleb128 0
 3488 03f9 02000000 		.4byte	.LCFI10
 3489 03fd 24000000 		.4byte	.LFE18
 3490 0401 0200     		.2byte	0x2
 3491 0403 7D       		.byte	0x7d
 3492 0404 08       		.sleb128 8
 3493 0405 00000000 		.4byte	0
 3494 0409 00000000 		.4byte	0
 3495              	.LLST33:
 3496 040d 00000000 		.4byte	.LVL46
 3497 0411 07000000 		.4byte	.LVL47-1
 3498 0415 0100     		.2byte	0x1
 3499 0417 50       		.byte	0x50
 3500 0418 07000000 		.4byte	.LVL47-1
 3501 041c 1E000000 		.4byte	.LVL49
 3502 0420 0100     		.2byte	0x1
 3503 0422 54       		.byte	0x54
 3504 0423 1E000000 		.4byte	.LVL49
 3505 0427 24000000 		.4byte	.LFE18
 3506 042b 0400     		.2byte	0x4
 3507 042d F3       		.byte	0xf3
 3508 042e 01       		.uleb128 0x1
 3509 042f 50       		.byte	0x50
 3510 0430 9F       		.byte	0x9f
 3511 0431 00000000 		.4byte	0
 3512 0435 00000000 		.4byte	0
 3513              	.LLST34:
 3514 0439 08000000 		.4byte	.LVL47
 3515 043d 1D000000 		.4byte	.LVL48-1
 3516 0441 0100     		.2byte	0x1
 3517 0443 50       		.byte	0x50
 3518 0444 00000000 		.4byte	0
 3519 0448 00000000 		.4byte	0
 3520              	.LLST35:
 3521 044c 00000000 		.4byte	.LVL50
 3522 0450 04000000 		.4byte	.LVL51
 3523 0454 0100     		.2byte	0x1
 3524 0456 50       		.byte	0x50
 3525 0457 04000000 		.4byte	.LVL51
 3526 045b 0C000000 		.4byte	.LFE19
 3527 045f 0400     		.2byte	0x4
 3528 0461 F3       		.byte	0xf3
 3529 0462 01       		.uleb128 0x1
 3530 0463 50       		.byte	0x50
 3531 0464 9F       		.byte	0x9f
 3532 0465 00000000 		.4byte	0
 3533 0469 00000000 		.4byte	0
 3534              	.LLST36:
 3535 046d 00000000 		.4byte	.LFB21
 3536 0471 02000000 		.4byte	.LCFI11
 3537 0475 0200     		.2byte	0x2
 3538 0477 7D       		.byte	0x7d
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 92


 3539 0478 00       		.sleb128 0
 3540 0479 02000000 		.4byte	.LCFI11
 3541 047d 28000000 		.4byte	.LFE21
 3542 0481 0200     		.2byte	0x2
 3543 0483 7D       		.byte	0x7d
 3544 0484 08       		.sleb128 8
 3545 0485 00000000 		.4byte	0
 3546 0489 00000000 		.4byte	0
 3547              	.LLST37:
 3548 048d 00000000 		.4byte	.LVL52
 3549 0491 07000000 		.4byte	.LVL53-1
 3550 0495 0100     		.2byte	0x1
 3551 0497 50       		.byte	0x50
 3552 0498 07000000 		.4byte	.LVL53-1
 3553 049c 18000000 		.4byte	.LVL54
 3554 04a0 0100     		.2byte	0x1
 3555 04a2 54       		.byte	0x54
 3556 04a3 18000000 		.4byte	.LVL54
 3557 04a7 28000000 		.4byte	.LFE21
 3558 04ab 0400     		.2byte	0x4
 3559 04ad F3       		.byte	0xf3
 3560 04ae 01       		.uleb128 0x1
 3561 04af 50       		.byte	0x50
 3562 04b0 9F       		.byte	0x9f
 3563 04b1 00000000 		.4byte	0
 3564 04b5 00000000 		.4byte	0
 3565              	.LLST38:
 3566 04b9 08000000 		.4byte	.LVL53
 3567 04bd 21000000 		.4byte	.LVL55-1
 3568 04c1 0100     		.2byte	0x1
 3569 04c3 50       		.byte	0x50
 3570 04c4 00000000 		.4byte	0
 3571 04c8 00000000 		.4byte	0
 3572              	.LLST39:
 3573 04cc 00000000 		.4byte	.LVL56
 3574 04d0 04000000 		.4byte	.LVL57
 3575 04d4 0100     		.2byte	0x1
 3576 04d6 50       		.byte	0x50
 3577 04d7 04000000 		.4byte	.LVL57
 3578 04db 0C000000 		.4byte	.LFE22
 3579 04df 0400     		.2byte	0x4
 3580 04e1 F3       		.byte	0xf3
 3581 04e2 01       		.uleb128 0x1
 3582 04e3 50       		.byte	0x50
 3583 04e4 9F       		.byte	0x9f
 3584 04e5 00000000 		.4byte	0
 3585 04e9 00000000 		.4byte	0
 3586              	.LLST40:
 3587 04ed 00000000 		.4byte	.LVL58
 3588 04f1 04000000 		.4byte	.LVL59
 3589 04f5 0100     		.2byte	0x1
 3590 04f7 50       		.byte	0x50
 3591 04f8 04000000 		.4byte	.LVL59
 3592 04fc 0C000000 		.4byte	.LFE24
 3593 0500 0400     		.2byte	0x4
 3594 0502 F3       		.byte	0xf3
 3595 0503 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 93


 3596 0504 50       		.byte	0x50
 3597 0505 9F       		.byte	0x9f
 3598 0506 00000000 		.4byte	0
 3599 050a 00000000 		.4byte	0
 3600              	.LLST41:
 3601 050e 00000000 		.4byte	.LFB28
 3602 0512 02000000 		.4byte	.LCFI12
 3603 0516 0200     		.2byte	0x2
 3604 0518 7D       		.byte	0x7d
 3605 0519 00       		.sleb128 0
 3606 051a 02000000 		.4byte	.LCFI12
 3607 051e 24000000 		.4byte	.LFE28
 3608 0522 0200     		.2byte	0x2
 3609 0524 7D       		.byte	0x7d
 3610 0525 08       		.sleb128 8
 3611 0526 00000000 		.4byte	0
 3612 052a 00000000 		.4byte	0
 3613              	.LLST42:
 3614 052e 00000000 		.4byte	.LVL60
 3615 0532 07000000 		.4byte	.LVL61-1
 3616 0536 0100     		.2byte	0x1
 3617 0538 50       		.byte	0x50
 3618 0539 07000000 		.4byte	.LVL61-1
 3619 053d 16000000 		.4byte	.LVL62
 3620 0541 0100     		.2byte	0x1
 3621 0543 54       		.byte	0x54
 3622 0544 16000000 		.4byte	.LVL62
 3623 0548 24000000 		.4byte	.LFE28
 3624 054c 0400     		.2byte	0x4
 3625 054e F3       		.byte	0xf3
 3626 054f 01       		.uleb128 0x1
 3627 0550 50       		.byte	0x50
 3628 0551 9F       		.byte	0x9f
 3629 0552 00000000 		.4byte	0
 3630 0556 00000000 		.4byte	0
 3631              	.LLST43:
 3632 055a 08000000 		.4byte	.LVL61
 3633 055e 1B000000 		.4byte	.LVL63-1
 3634 0562 0100     		.2byte	0x1
 3635 0564 50       		.byte	0x50
 3636 0565 00000000 		.4byte	0
 3637 0569 00000000 		.4byte	0
 3638              	.LLST44:
 3639 056d 00000000 		.4byte	.LFB29
 3640 0571 02000000 		.4byte	.LCFI13
 3641 0575 0200     		.2byte	0x2
 3642 0577 7D       		.byte	0x7d
 3643 0578 00       		.sleb128 0
 3644 0579 02000000 		.4byte	.LCFI13
 3645 057d 24000000 		.4byte	.LFE29
 3646 0581 0200     		.2byte	0x2
 3647 0583 7D       		.byte	0x7d
 3648 0584 08       		.sleb128 8
 3649 0585 00000000 		.4byte	0
 3650 0589 00000000 		.4byte	0
 3651              	.LLST45:
 3652 058d 00000000 		.4byte	.LVL64
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 94


 3653 0591 07000000 		.4byte	.LVL65-1
 3654 0595 0100     		.2byte	0x1
 3655 0597 50       		.byte	0x50
 3656 0598 07000000 		.4byte	.LVL65-1
 3657 059c 10000000 		.4byte	.LVL66
 3658 05a0 0100     		.2byte	0x1
 3659 05a2 54       		.byte	0x54
 3660 05a3 10000000 		.4byte	.LVL66
 3661 05a7 24000000 		.4byte	.LFE29
 3662 05ab 0400     		.2byte	0x4
 3663 05ad F3       		.byte	0xf3
 3664 05ae 01       		.uleb128 0x1
 3665 05af 50       		.byte	0x50
 3666 05b0 9F       		.byte	0x9f
 3667 05b1 00000000 		.4byte	0
 3668 05b5 00000000 		.4byte	0
 3669              	.LLST46:
 3670 05b9 08000000 		.4byte	.LVL65
 3671 05bd 1D000000 		.4byte	.LVL67-1
 3672 05c1 0100     		.2byte	0x1
 3673 05c3 50       		.byte	0x50
 3674 05c4 00000000 		.4byte	0
 3675 05c8 00000000 		.4byte	0
 3676              	.LLST47:
 3677 05cc 00000000 		.4byte	.LFB30
 3678 05d0 02000000 		.4byte	.LCFI14
 3679 05d4 0200     		.2byte	0x2
 3680 05d6 7D       		.byte	0x7d
 3681 05d7 00       		.sleb128 0
 3682 05d8 02000000 		.4byte	.LCFI14
 3683 05dc 28000000 		.4byte	.LFE30
 3684 05e0 0200     		.2byte	0x2
 3685 05e2 7D       		.byte	0x7d
 3686 05e3 08       		.sleb128 8
 3687 05e4 00000000 		.4byte	0
 3688 05e8 00000000 		.4byte	0
 3689              	.LLST48:
 3690 05ec 00000000 		.4byte	.LVL68
 3691 05f0 07000000 		.4byte	.LVL69-1
 3692 05f4 0100     		.2byte	0x1
 3693 05f6 50       		.byte	0x50
 3694 05f7 07000000 		.4byte	.LVL69-1
 3695 05fb 10000000 		.4byte	.LVL70
 3696 05ff 0100     		.2byte	0x1
 3697 0601 54       		.byte	0x54
 3698 0602 10000000 		.4byte	.LVL70
 3699 0606 28000000 		.4byte	.LFE30
 3700 060a 0400     		.2byte	0x4
 3701 060c F3       		.byte	0xf3
 3702 060d 01       		.uleb128 0x1
 3703 060e 50       		.byte	0x50
 3704 060f 9F       		.byte	0x9f
 3705 0610 00000000 		.4byte	0
 3706 0614 00000000 		.4byte	0
 3707              	.LLST49:
 3708 0618 08000000 		.4byte	.LVL69
 3709 061c 1D000000 		.4byte	.LVL71-1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 95


 3710 0620 0100     		.2byte	0x1
 3711 0622 50       		.byte	0x50
 3712 0623 00000000 		.4byte	0
 3713 0627 00000000 		.4byte	0
 3714              	.LLST50:
 3715 062b 00000000 		.4byte	.LFB31
 3716 062f 02000000 		.4byte	.LCFI15
 3717 0633 0200     		.2byte	0x2
 3718 0635 7D       		.byte	0x7d
 3719 0636 00       		.sleb128 0
 3720 0637 02000000 		.4byte	.LCFI15
 3721 063b 24000000 		.4byte	.LFE31
 3722 063f 0200     		.2byte	0x2
 3723 0641 7D       		.byte	0x7d
 3724 0642 08       		.sleb128 8
 3725 0643 00000000 		.4byte	0
 3726 0647 00000000 		.4byte	0
 3727              	.LLST51:
 3728 064b 00000000 		.4byte	.LVL72
 3729 064f 07000000 		.4byte	.LVL73-1
 3730 0653 0100     		.2byte	0x1
 3731 0655 50       		.byte	0x50
 3732 0656 07000000 		.4byte	.LVL73-1
 3733 065a 10000000 		.4byte	.LVL74
 3734 065e 0100     		.2byte	0x1
 3735 0660 54       		.byte	0x54
 3736 0661 10000000 		.4byte	.LVL74
 3737 0665 24000000 		.4byte	.LFE31
 3738 0669 0400     		.2byte	0x4
 3739 066b F3       		.byte	0xf3
 3740 066c 01       		.uleb128 0x1
 3741 066d 50       		.byte	0x50
 3742 066e 9F       		.byte	0x9f
 3743 066f 00000000 		.4byte	0
 3744 0673 00000000 		.4byte	0
 3745              	.LLST52:
 3746 0677 08000000 		.4byte	.LVL73
 3747 067b 1D000000 		.4byte	.LVL75-1
 3748 067f 0100     		.2byte	0x1
 3749 0681 50       		.byte	0x50
 3750 0682 00000000 		.4byte	0
 3751 0686 00000000 		.4byte	0
 3752              	.LLST53:
 3753 068a 00000000 		.4byte	.LFB32
 3754 068e 02000000 		.4byte	.LCFI16
 3755 0692 0200     		.2byte	0x2
 3756 0694 7D       		.byte	0x7d
 3757 0695 00       		.sleb128 0
 3758 0696 02000000 		.4byte	.LCFI16
 3759 069a 24000000 		.4byte	.LFE32
 3760 069e 0200     		.2byte	0x2
 3761 06a0 7D       		.byte	0x7d
 3762 06a1 08       		.sleb128 8
 3763 06a2 00000000 		.4byte	0
 3764 06a6 00000000 		.4byte	0
 3765              	.LLST54:
 3766 06aa 00000000 		.4byte	.LVL76
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 96


 3767 06ae 07000000 		.4byte	.LVL77-1
 3768 06b2 0100     		.2byte	0x1
 3769 06b4 50       		.byte	0x50
 3770 06b5 07000000 		.4byte	.LVL77-1
 3771 06b9 10000000 		.4byte	.LVL78
 3772 06bd 0100     		.2byte	0x1
 3773 06bf 54       		.byte	0x54
 3774 06c0 10000000 		.4byte	.LVL78
 3775 06c4 24000000 		.4byte	.LFE32
 3776 06c8 0400     		.2byte	0x4
 3777 06ca F3       		.byte	0xf3
 3778 06cb 01       		.uleb128 0x1
 3779 06cc 50       		.byte	0x50
 3780 06cd 9F       		.byte	0x9f
 3781 06ce 00000000 		.4byte	0
 3782 06d2 00000000 		.4byte	0
 3783              	.LLST55:
 3784 06d6 08000000 		.4byte	.LVL77
 3785 06da 1D000000 		.4byte	.LVL79-1
 3786 06de 0100     		.2byte	0x1
 3787 06e0 50       		.byte	0x50
 3788 06e1 00000000 		.4byte	0
 3789 06e5 00000000 		.4byte	0
 3790              	.LLST56:
 3791 06e9 00000000 		.4byte	.LFB33
 3792 06ed 02000000 		.4byte	.LCFI17
 3793 06f1 0200     		.2byte	0x2
 3794 06f3 7D       		.byte	0x7d
 3795 06f4 00       		.sleb128 0
 3796 06f5 02000000 		.4byte	.LCFI17
 3797 06f9 1C000000 		.4byte	.LFE33
 3798 06fd 0200     		.2byte	0x2
 3799 06ff 7D       		.byte	0x7d
 3800 0700 10       		.sleb128 16
 3801 0701 00000000 		.4byte	0
 3802 0705 00000000 		.4byte	0
 3803              	.LLST57:
 3804 0709 00000000 		.4byte	.LVL80
 3805 070d 09000000 		.4byte	.LVL81-1
 3806 0711 0100     		.2byte	0x1
 3807 0713 50       		.byte	0x50
 3808 0714 09000000 		.4byte	.LVL81-1
 3809 0718 0E000000 		.4byte	.LVL82
 3810 071c 0100     		.2byte	0x1
 3811 071e 55       		.byte	0x55
 3812 071f 0E000000 		.4byte	.LVL82
 3813 0723 1C000000 		.4byte	.LFE33
 3814 0727 0400     		.2byte	0x4
 3815 0729 F3       		.byte	0xf3
 3816 072a 01       		.uleb128 0x1
 3817 072b 50       		.byte	0x50
 3818 072c 9F       		.byte	0x9f
 3819 072d 00000000 		.4byte	0
 3820 0731 00000000 		.4byte	0
 3821              	.LLST58:
 3822 0735 00000000 		.4byte	.LVL80
 3823 0739 09000000 		.4byte	.LVL81-1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 97


 3824 073d 0100     		.2byte	0x1
 3825 073f 51       		.byte	0x51
 3826 0740 09000000 		.4byte	.LVL81-1
 3827 0744 14000000 		.4byte	.LVL84
 3828 0748 0100     		.2byte	0x1
 3829 074a 54       		.byte	0x54
 3830 074b 14000000 		.4byte	.LVL84
 3831 074f 1C000000 		.4byte	.LFE33
 3832 0753 0400     		.2byte	0x4
 3833 0755 F3       		.byte	0xf3
 3834 0756 01       		.uleb128 0x1
 3835 0757 51       		.byte	0x51
 3836 0758 9F       		.byte	0x9f
 3837 0759 00000000 		.4byte	0
 3838 075d 00000000 		.4byte	0
 3839              	.LLST59:
 3840 0761 0A000000 		.4byte	.LVL81
 3841 0765 13000000 		.4byte	.LVL83-1
 3842 0769 0100     		.2byte	0x1
 3843 076b 50       		.byte	0x50
 3844 076c 00000000 		.4byte	0
 3845 0770 00000000 		.4byte	0
 3846              	.LLST60:
 3847 0774 00000000 		.4byte	.LFB1
 3848 0778 02000000 		.4byte	.LCFI18
 3849 077c 0200     		.2byte	0x2
 3850 077e 7D       		.byte	0x7d
 3851 077f 00       		.sleb128 0
 3852 0780 02000000 		.4byte	.LCFI18
 3853 0784 24000000 		.4byte	.LFE1
 3854 0788 0200     		.2byte	0x2
 3855 078a 7D       		.byte	0x7d
 3856 078b 08       		.sleb128 8
 3857 078c 00000000 		.4byte	0
 3858 0790 00000000 		.4byte	0
 3859              	.LLST61:
 3860 0794 06000000 		.4byte	.LVL85
 3861 0798 13000000 		.4byte	.LVL86-1
 3862 079c 0100     		.2byte	0x1
 3863 079e 50       		.byte	0x50
 3864 079f 00000000 		.4byte	0
 3865 07a3 00000000 		.4byte	0
 3866              	.LLST62:
 3867 07a7 00000000 		.4byte	.LFB2
 3868 07ab 02000000 		.4byte	.LCFI19
 3869 07af 0200     		.2byte	0x2
 3870 07b1 7D       		.byte	0x7d
 3871 07b2 00       		.sleb128 0
 3872 07b3 02000000 		.4byte	.LCFI19
 3873 07b7 1C000000 		.4byte	.LFE2
 3874 07bb 0200     		.2byte	0x2
 3875 07bd 7D       		.byte	0x7d
 3876 07be 08       		.sleb128 8
 3877 07bf 00000000 		.4byte	0
 3878 07c3 00000000 		.4byte	0
 3879              		.section	.debug_aranges,"",%progbits
 3880 0000 54010000 		.4byte	0x154
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 98


 3881 0004 0200     		.2byte	0x2
 3882 0006 00000000 		.4byte	.Ldebug_info0
 3883 000a 04       		.byte	0x4
 3884 000b 00       		.byte	0
 3885 000c 0000     		.2byte	0
 3886 000e 0000     		.2byte	0
 3887 0010 00000000 		.4byte	.LFB0
 3888 0014 30000000 		.4byte	.LFE0-.LFB0
 3889 0018 00000000 		.4byte	.LFB3
 3890 001c 1C000000 		.4byte	.LFE3-.LFB3
 3891 0020 00000000 		.4byte	.LFB4
 3892 0024 28000000 		.4byte	.LFE4-.LFB4
 3893 0028 00000000 		.4byte	.LFB5
 3894 002c 28000000 		.4byte	.LFE5-.LFB5
 3895 0030 00000000 		.4byte	.LFB6
 3896 0034 28000000 		.4byte	.LFE6-.LFB6
 3897 0038 00000000 		.4byte	.LFB7
 3898 003c 2C000000 		.4byte	.LFE7-.LFB7
 3899 0040 00000000 		.4byte	.LFB8
 3900 0044 10000000 		.4byte	.LFE8-.LFB8
 3901 0048 00000000 		.4byte	.LFB9
 3902 004c 28000000 		.4byte	.LFE9-.LFB9
 3903 0050 00000000 		.4byte	.LFB10
 3904 0054 28000000 		.4byte	.LFE10-.LFB10
 3905 0058 00000000 		.4byte	.LFB11
 3906 005c 2C000000 		.4byte	.LFE11-.LFB11
 3907 0060 00000000 		.4byte	.LFB12
 3908 0064 28000000 		.4byte	.LFE12-.LFB12
 3909 0068 00000000 		.4byte	.LFB13
 3910 006c 0C000000 		.4byte	.LFE13-.LFB13
 3911 0070 00000000 		.4byte	.LFB14
 3912 0074 0C000000 		.4byte	.LFE14-.LFB14
 3913 0078 00000000 		.4byte	.LFB15
 3914 007c 28000000 		.4byte	.LFE15-.LFB15
 3915 0080 00000000 		.4byte	.LFB16
 3916 0084 0C000000 		.4byte	.LFE16-.LFB16
 3917 0088 00000000 		.4byte	.LFB17
 3918 008c 0C000000 		.4byte	.LFE17-.LFB17
 3919 0090 00000000 		.4byte	.LFB18
 3920 0094 24000000 		.4byte	.LFE18-.LFB18
 3921 0098 00000000 		.4byte	.LFB19
 3922 009c 0C000000 		.4byte	.LFE19-.LFB19
 3923 00a0 00000000 		.4byte	.LFB20
 3924 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3925 00a8 00000000 		.4byte	.LFB21
 3926 00ac 28000000 		.4byte	.LFE21-.LFB21
 3927 00b0 00000000 		.4byte	.LFB22
 3928 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3929 00b8 00000000 		.4byte	.LFB23
 3930 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3931 00c0 00000000 		.4byte	.LFB24
 3932 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3933 00c8 00000000 		.4byte	.LFB25
 3934 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3935 00d0 00000000 		.4byte	.LFB26
 3936 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3937 00d8 00000000 		.4byte	.LFB27
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 99


 3938 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3939 00e0 00000000 		.4byte	.LFB28
 3940 00e4 24000000 		.4byte	.LFE28-.LFB28
 3941 00e8 00000000 		.4byte	.LFB29
 3942 00ec 24000000 		.4byte	.LFE29-.LFB29
 3943 00f0 00000000 		.4byte	.LFB30
 3944 00f4 28000000 		.4byte	.LFE30-.LFB30
 3945 00f8 00000000 		.4byte	.LFB31
 3946 00fc 24000000 		.4byte	.LFE31-.LFB31
 3947 0100 00000000 		.4byte	.LFB32
 3948 0104 24000000 		.4byte	.LFE32-.LFB32
 3949 0108 00000000 		.4byte	.LFB33
 3950 010c 1C000000 		.4byte	.LFE33-.LFB33
 3951 0110 00000000 		.4byte	.LFB1
 3952 0114 24000000 		.4byte	.LFE1-.LFB1
 3953 0118 00000000 		.4byte	.LFB2
 3954 011c 1C000000 		.4byte	.LFE2-.LFB2
 3955 0120 00000000 		.4byte	.LFB34
 3956 0124 14000000 		.4byte	.LFE34-.LFB34
 3957 0128 00000000 		.4byte	.LFB35
 3958 012c 0C000000 		.4byte	.LFE35-.LFB35
 3959 0130 00000000 		.4byte	.LFB36
 3960 0134 0C000000 		.4byte	.LFE36-.LFB36
 3961 0138 00000000 		.4byte	.LFB37
 3962 013c 0C000000 		.4byte	.LFE37-.LFB37
 3963 0140 00000000 		.4byte	.LFB38
 3964 0144 0C000000 		.4byte	.LFE38-.LFB38
 3965 0148 00000000 		.4byte	.LFB39
 3966 014c 0C000000 		.4byte	.LFE39-.LFB39
 3967 0150 00000000 		.4byte	0
 3968 0154 00000000 		.4byte	0
 3969              		.section	.debug_ranges,"",%progbits
 3970              	.Ldebug_ranges0:
 3971 0000 0A000000 		.4byte	.LBB6
 3972 0004 0C000000 		.4byte	.LBE6
 3973 0008 0E000000 		.4byte	.LBB10
 3974 000c 10000000 		.4byte	.LBE10
 3975 0010 12000000 		.4byte	.LBB11
 3976 0014 14000000 		.4byte	.LBE11
 3977 0018 00000000 		.4byte	0
 3978 001c 00000000 		.4byte	0
 3979 0020 00000000 		.4byte	.LFB0
 3980 0024 30000000 		.4byte	.LFE0
 3981 0028 00000000 		.4byte	.LFB3
 3982 002c 1C000000 		.4byte	.LFE3
 3983 0030 00000000 		.4byte	.LFB4
 3984 0034 28000000 		.4byte	.LFE4
 3985 0038 00000000 		.4byte	.LFB5
 3986 003c 28000000 		.4byte	.LFE5
 3987 0040 00000000 		.4byte	.LFB6
 3988 0044 28000000 		.4byte	.LFE6
 3989 0048 00000000 		.4byte	.LFB7
 3990 004c 2C000000 		.4byte	.LFE7
 3991 0050 00000000 		.4byte	.LFB8
 3992 0054 10000000 		.4byte	.LFE8
 3993 0058 00000000 		.4byte	.LFB9
 3994 005c 28000000 		.4byte	.LFE9
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 100


 3995 0060 00000000 		.4byte	.LFB10
 3996 0064 28000000 		.4byte	.LFE10
 3997 0068 00000000 		.4byte	.LFB11
 3998 006c 2C000000 		.4byte	.LFE11
 3999 0070 00000000 		.4byte	.LFB12
 4000 0074 28000000 		.4byte	.LFE12
 4001 0078 00000000 		.4byte	.LFB13
 4002 007c 0C000000 		.4byte	.LFE13
 4003 0080 00000000 		.4byte	.LFB14
 4004 0084 0C000000 		.4byte	.LFE14
 4005 0088 00000000 		.4byte	.LFB15
 4006 008c 28000000 		.4byte	.LFE15
 4007 0090 00000000 		.4byte	.LFB16
 4008 0094 0C000000 		.4byte	.LFE16
 4009 0098 00000000 		.4byte	.LFB17
 4010 009c 0C000000 		.4byte	.LFE17
 4011 00a0 00000000 		.4byte	.LFB18
 4012 00a4 24000000 		.4byte	.LFE18
 4013 00a8 00000000 		.4byte	.LFB19
 4014 00ac 0C000000 		.4byte	.LFE19
 4015 00b0 00000000 		.4byte	.LFB20
 4016 00b4 0C000000 		.4byte	.LFE20
 4017 00b8 00000000 		.4byte	.LFB21
 4018 00bc 28000000 		.4byte	.LFE21
 4019 00c0 00000000 		.4byte	.LFB22
 4020 00c4 0C000000 		.4byte	.LFE22
 4021 00c8 00000000 		.4byte	.LFB23
 4022 00cc 0C000000 		.4byte	.LFE23
 4023 00d0 00000000 		.4byte	.LFB24
 4024 00d4 0C000000 		.4byte	.LFE24
 4025 00d8 00000000 		.4byte	.LFB25
 4026 00dc 0C000000 		.4byte	.LFE25
 4027 00e0 00000000 		.4byte	.LFB26
 4028 00e4 0C000000 		.4byte	.LFE26
 4029 00e8 00000000 		.4byte	.LFB27
 4030 00ec 0C000000 		.4byte	.LFE27
 4031 00f0 00000000 		.4byte	.LFB28
 4032 00f4 24000000 		.4byte	.LFE28
 4033 00f8 00000000 		.4byte	.LFB29
 4034 00fc 24000000 		.4byte	.LFE29
 4035 0100 00000000 		.4byte	.LFB30
 4036 0104 28000000 		.4byte	.LFE30
 4037 0108 00000000 		.4byte	.LFB31
 4038 010c 24000000 		.4byte	.LFE31
 4039 0110 00000000 		.4byte	.LFB32
 4040 0114 24000000 		.4byte	.LFE32
 4041 0118 00000000 		.4byte	.LFB33
 4042 011c 1C000000 		.4byte	.LFE33
 4043 0120 00000000 		.4byte	.LFB1
 4044 0124 24000000 		.4byte	.LFE1
 4045 0128 00000000 		.4byte	.LFB2
 4046 012c 1C000000 		.4byte	.LFE2
 4047 0130 00000000 		.4byte	.LFB34
 4048 0134 14000000 		.4byte	.LFE34
 4049 0138 00000000 		.4byte	.LFB35
 4050 013c 0C000000 		.4byte	.LFE35
 4051 0140 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 101


 4052 0144 0C000000 		.4byte	.LFE36
 4053 0148 00000000 		.4byte	.LFB37
 4054 014c 0C000000 		.4byte	.LFE37
 4055 0150 00000000 		.4byte	.LFB38
 4056 0154 0C000000 		.4byte	.LFE38
 4057 0158 00000000 		.4byte	.LFB39
 4058 015c 0C000000 		.4byte	.LFE39
 4059 0160 00000000 		.4byte	0
 4060 0164 00000000 		.4byte	0
 4061              		.section	.debug_line,"",%progbits
 4062              	.Ldebug_line0:
 4063 0000 EC030000 		.section	.debug_str,"MS",%progbits,1
 4063      02005400 
 4063      00000201 
 4063      FB0E0D00 
 4063      01010101 
 4064              	.LASF42:
 4065 0000 636F756E 		.ascii	"count\000"
 4065      7400
 4066              	.LASF64:
 4067 0006 50504D43 		.ascii	"PPMCounter_SetStartMode\000"
 4067      6F756E74 
 4067      65725F53 
 4067      65745374 
 4067      6172744D 
 4068              	.LASF81:
 4069 001e 43794578 		.ascii	"CyExitCriticalSection\000"
 4069      69744372 
 4069      69746963 
 4069      616C5365 
 4069      6374696F 
 4070              	.LASF53:
 4071 0034 50504D43 		.ascii	"PPMCounter_WriteCompare\000"
 4071      6F756E74 
 4071      65725F57 
 4071      72697465 
 4071      436F6D70 
 4072              	.LASF46:
 4073 004c 50504D43 		.ascii	"PPMCounter_ReadPeriod\000"
 4073      6F756E74 
 4073      65725F52 
 4073      65616450 
 4073      6572696F 
 4074              	.LASF77:
 4075 0062 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PPMCounter.c\000"
 4075      6E657261 
 4075      7465645F 
 4075      536F7572 
 4075      63655C50 
 4076              	.LASF17:
 4077 0088 50504D43 		.ascii	"PPMCounter_WritePeriod\000"
 4077      6F756E74 
 4077      65725F57 
 4077      72697465 
 4077      50657269 
 4078              	.LASF19:
 4079 009f 70657269 		.ascii	"period\000"
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 102


 4079      6F6400
 4080              	.LASF7:
 4081 00a6 6C6F6E67 		.ascii	"long long unsigned int\000"
 4081      206C6F6E 
 4081      6720756E 
 4081      7369676E 
 4081      65642069 
 4082              	.LASF29:
 4083 00bd 50504D43 		.ascii	"PPMCounter_SetOneShot\000"
 4083      6F756E74 
 4083      65725F53 
 4083      65744F6E 
 4083      6553686F 
 4084              	.LASF26:
 4085 00d3 71644D6F 		.ascii	"qdMode\000"
 4085      646500
 4086              	.LASF72:
 4087 00da 50504D43 		.ascii	"PPMCounter_GetInterruptSourceMasked\000"
 4087      6F756E74 
 4087      65725F47 
 4087      6574496E 
 4087      74657272 
 4088              	.LASF61:
 4089 00fe 50504D43 		.ascii	"PPMCounter_SetCaptureMode\000"
 4089      6F756E74 
 4089      65725F53 
 4089      65744361 
 4089      70747572 
 4090              	.LASF6:
 4091 0118 6C6F6E67 		.ascii	"long long int\000"
 4091      206C6F6E 
 4091      6720696E 
 4091      7400
 4092              	.LASF0:
 4093 0126 7369676E 		.ascii	"signed char\000"
 4093      65642063 
 4093      68617200 
 4094              	.LASF41:
 4095 0132 50504D43 		.ascii	"PPMCounter_WriteCounter\000"
 4095      6F756E74 
 4095      65725F57 
 4095      72697465 
 4095      436F756E 
 4096              	.LASF73:
 4097 014a 50504D43 		.ascii	"PPMCounter_GetInterruptSource\000"
 4097      6F756E74 
 4097      65725F47 
 4097      6574496E 
 4097      74657272 
 4098              	.LASF78:
 4099 0168 433A5C55 		.ascii	"C:\\Users\\SNFU\\Documents\\T-50_UAV_Project\\Softw"
 4099      73657273 
 4099      5C534E46 
 4099      555C446F 
 4099      63756D65 
 4100 0196 6172655C 		.ascii	"are\\T-50_Project\\T-50_Project.cydsn\000"
 4100      542D3530 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 103


 4100      5F50726F 
 4100      6A656374 
 4100      5C542D35 
 4101              	.LASF21:
 4102 01ba 50504D43 		.ascii	"PPMCounter_Stop\000"
 4102      6F756E74 
 4102      65725F53 
 4102      746F7000 
 4103              	.LASF4:
 4104 01ca 6C6F6E67 		.ascii	"long int\000"
 4104      20696E74 
 4104      00
 4105              	.LASF47:
 4106 01d3 50504D43 		.ascii	"PPMCounter_SetCompareSwap\000"
 4106      6F756E74 
 4106      65725F53 
 4106      6574436F 
 4106      6D706172 
 4107              	.LASF16:
 4108 01ed 50504D43 		.ascii	"PPMCounter_SetInterruptMode\000"
 4108      6F756E74 
 4108      65725F53 
 4108      6574496E 
 4108      74657272 
 4109              	.LASF59:
 4110 0209 50504D43 		.ascii	"PPMCounter_ReadCapture\000"
 4110      6F756E74 
 4110      65725F52 
 4110      65616443 
 4110      61707475 
 4111              	.LASF9:
 4112 0220 75696E74 		.ascii	"uint8\000"
 4112      3800
 4113              	.LASF22:
 4114 0226 50504D43 		.ascii	"PPMCounter_SetMode\000"
 4114      6F756E74 
 4114      65725F53 
 4114      65744D6F 
 4114      646500
 4115              	.LASF12:
 4116 0239 646F7562 		.ascii	"double\000"
 4116      6C6500
 4117              	.LASF10:
 4118 0240 75696E74 		.ascii	"uint32\000"
 4118      333200
 4119              	.LASF62:
 4120 0247 74726967 		.ascii	"triggerMode\000"
 4120      6765724D 
 4120      6F646500 
 4121              	.LASF40:
 4122 0253 6D61736B 		.ascii	"mask\000"
 4122      00
 4123              	.LASF33:
 4124 0258 50504D43 		.ascii	"PPMCounter_SetPWMSyncKill\000"
 4124      6F756E74 
 4124      65725F53 
 4124      65745057 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 104


 4124      4D53796E 
 4125              	.LASF39:
 4126 0272 50504D43 		.ascii	"PPMCounter_SetPWMInvert\000"
 4126      6F756E74 
 4126      65725F53 
 4126      65745057 
 4126      4D496E76 
 4127              	.LASF38:
 4128 028a 64656164 		.ascii	"deadTime\000"
 4128      54696D65 
 4128      00
 4129              	.LASF8:
 4130 0293 756E7369 		.ascii	"unsigned int\000"
 4130      676E6564 
 4130      20696E74 
 4130      00
 4131              	.LASF68:
 4132 02a0 636F6D6D 		.ascii	"command\000"
 4132      616E6400 
 4133              	.LASF5:
 4134 02a8 6C6F6E67 		.ascii	"long unsigned int\000"
 4134      20756E73 
 4134      69676E65 
 4134      6420696E 
 4134      7400
 4135              	.LASF32:
 4136 02ba 6D6F6465 		.ascii	"modeMask\000"
 4136      4D61736B 
 4136      00
 4137              	.LASF80:
 4138 02c3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4138      74657243 
 4138      72697469 
 4138      63616C53 
 4138      65637469 
 4139              	.LASF3:
 4140 02da 73686F72 		.ascii	"short unsigned int\000"
 4140      7420756E 
 4140      7369676E 
 4140      65642069 
 4140      6E7400
 4141              	.LASF67:
 4142 02ed 50504D43 		.ascii	"PPMCounter_TriggerCommand\000"
 4142      6F756E74 
 4142      65725F54 
 4142      72696767 
 4142      6572436F 
 4143              	.LASF30:
 4144 0307 6F6E6553 		.ascii	"oneShotEnable\000"
 4144      686F7445 
 4144      6E61626C 
 4144      6500
 4145              	.LASF45:
 4146 0315 50504D43 		.ascii	"PPMCounter_ReadCounter\000"
 4146      6F756E74 
 4146      65725F52 
 4146      65616443 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 105


 4146      6F756E74 
 4147              	.LASF70:
 4148 032c 50504D43 		.ascii	"PPMCounter_Start\000"
 4148      6F756E74 
 4148      65725F53 
 4148      74617274 
 4148      00
 4149              	.LASF27:
 4150 033d 50504D43 		.ascii	"PPMCounter_SetPrescaler\000"
 4150      6F756E74 
 4150      65725F53 
 4150      65745072 
 4150      65736361 
 4151              	.LASF14:
 4152 0355 72656733 		.ascii	"reg32\000"
 4152      3200
 4153              	.LASF24:
 4154 035b 50504D43 		.ascii	"PPMCounter_SetQDMode\000"
 4154      6F756E74 
 4154      65725F53 
 4154      65745144 
 4154      4D6F6465 
 4155              	.LASF15:
 4156 0370 73697A65 		.ascii	"sizetype\000"
 4156      74797065 
 4156      00
 4157              	.LASF74:
 4158 0379 50504D43 		.ascii	"PPMCounter_ClearInterrupt\000"
 4158      6F756E74 
 4158      65725F43 
 4158      6C656172 
 4158      496E7465 
 4159              	.LASF34:
 4160 0393 73796E63 		.ascii	"syncKillEnable\000"
 4160      4B696C6C 
 4160      456E6162 
 4160      6C6500
 4161              	.LASF31:
 4162 03a2 50504D43 		.ascii	"PPMCounter_SetPWMMode\000"
 4162      6F756E74 
 4162      65725F53 
 4162      65745057 
 4162      4D4D6F64 
 4163              	.LASF69:
 4164 03b8 50504D43 		.ascii	"PPMCounter_Enable\000"
 4164      6F756E74 
 4164      65725F45 
 4164      6E61626C 
 4164      6500
 4165              	.LASF54:
 4166 03ca 636F6D70 		.ascii	"compare\000"
 4166      61726500 
 4167              	.LASF56:
 4168 03d2 50504D43 		.ascii	"PPMCounter_WriteCompareBuf\000"
 4168      6F756E74 
 4168      65725F57 
 4168      72697465 
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 106


 4168      436F6D70 
 4169              	.LASF55:
 4170 03ed 50504D43 		.ascii	"PPMCounter_ReadCompare\000"
 4170      6F756E74 
 4170      65725F52 
 4170      65616443 
 4170      6F6D7061 
 4171              	.LASF20:
 4172 0404 50504D43 		.ascii	"PPMCounter_Init\000"
 4172      6F756E74 
 4172      65725F49 
 4172      6E697400 
 4173              	.LASF11:
 4174 0414 666C6F61 		.ascii	"float\000"
 4174      7400
 4175              	.LASF28:
 4176 041a 70726573 		.ascii	"prescaler\000"
 4176      63616C65 
 4176      7200
 4177              	.LASF65:
 4178 0424 50504D43 		.ascii	"PPMCounter_SetStopMode\000"
 4178      6F756E74 
 4178      65725F53 
 4178      65745374 
 4178      6F704D6F 
 4179              	.LASF52:
 4180 043b 50504D43 		.ascii	"PPMCounter_SetPeriodSwap\000"
 4180      6F756E74 
 4180      65725F53 
 4180      65745065 
 4180      72696F64 
 4181              	.LASF76:
 4182 0454 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4182      4320342E 
 4182      372E3320 
 4182      32303133 
 4182      30333132 
 4183 0487 616E6368 		.ascii	"anch revision 196615]\000"
 4183      20726576 
 4183      6973696F 
 4183      6E203139 
 4183      36363135 
 4184              	.LASF1:
 4185 049d 756E7369 		.ascii	"unsigned char\000"
 4185      676E6564 
 4185      20636861 
 4185      7200
 4186              	.LASF36:
 4187 04ab 73746F70 		.ascii	"stopOnKillEnable\000"
 4187      4F6E4B69 
 4187      6C6C456E 
 4187      61626C65 
 4187      00
 4188              	.LASF2:
 4189 04bc 73686F72 		.ascii	"short int\000"
 4189      7420696E 
 4189      7400
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 107


 4190              	.LASF18:
 4191 04c6 696E7465 		.ascii	"interruptMask\000"
 4191      72727570 
 4191      744D6173 
 4191      6B00
 4192              	.LASF49:
 4193 04d4 50504D43 		.ascii	"PPMCounter_WritePeriodBuf\000"
 4193      6F756E74 
 4193      65725F57 
 4193      72697465 
 4193      50657269 
 4194              	.LASF13:
 4195 04ee 63686172 		.ascii	"char\000"
 4195      00
 4196              	.LASF25:
 4197 04f3 6D6F6465 		.ascii	"mode\000"
 4197      00
 4198              	.LASF63:
 4199 04f8 50504D43 		.ascii	"PPMCounter_SetReloadMode\000"
 4199      6F756E74 
 4199      65725F53 
 4199      65745265 
 4199      6C6F6164 
 4200              	.LASF44:
 4201 0511 636F756E 		.ascii	"counterMode\000"
 4201      7465724D 
 4201      6F646500 
 4202              	.LASF79:
 4203 051d 50504D43 		.ascii	"PPMCounter_initVar\000"
 4203      6F756E74 
 4203      65725F69 
 4203      6E697456 
 4203      617200
 4204              	.LASF60:
 4205 0530 50504D43 		.ascii	"PPMCounter_ReadCaptureBuf\000"
 4205      6F756E74 
 4205      65725F52 
 4205      65616443 
 4205      61707475 
 4206              	.LASF75:
 4207 054a 50504D43 		.ascii	"PPMCounter_SetInterrupt\000"
 4207      6F756E74 
 4207      65725F53 
 4207      6574496E 
 4207      74657272 
 4208              	.LASF57:
 4209 0562 636F6D70 		.ascii	"compareBuf\000"
 4209      61726542 
 4209      756600
 4210              	.LASF71:
 4211 056d 50504D43 		.ascii	"PPMCounter_ReadStatus\000"
 4211      6F756E74 
 4211      65725F52 
 4211      65616453 
 4211      74617475 
 4212              	.LASF51:
 4213 0583 50504D43 		.ascii	"PPMCounter_ReadPeriodBuf\000"
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccDbN44i.s 			page 108


 4213      6F756E74 
 4213      65725F52 
 4213      65616450 
 4213      6572696F 
 4214              	.LASF23:
 4215 059c 656E6162 		.ascii	"enableInterrupts\000"
 4215      6C65496E 
 4215      74657272 
 4215      75707473 
 4215      00
 4216              	.LASF58:
 4217 05ad 50504D43 		.ascii	"PPMCounter_ReadCompareBuf\000"
 4217      6F756E74 
 4217      65725F52 
 4217      65616443 
 4217      6F6D7061 
 4218              	.LASF37:
 4219 05c7 50504D43 		.ascii	"PPMCounter_SetPWMDeadTime\000"
 4219      6F756E74 
 4219      65725F53 
 4219      65745057 
 4219      4D446561 
 4220              	.LASF48:
 4221 05e1 73776170 		.ascii	"swapEnable\000"
 4221      456E6162 
 4221      6C6500
 4222              	.LASF66:
 4223 05ec 50504D43 		.ascii	"PPMCounter_SetCountMode\000"
 4223      6F756E74 
 4223      65725F53 
 4223      6574436F 
 4223      756E744D 
 4224              	.LASF43:
 4225 0604 50504D43 		.ascii	"PPMCounter_SetCounterMode\000"
 4225      6F756E74 
 4225      65725F53 
 4225      6574436F 
 4225      756E7465 
 4226              	.LASF35:
 4227 061e 50504D43 		.ascii	"PPMCounter_SetPWMStopOnKill\000"
 4227      6F756E74 
 4227      65725F53 
 4227      65745057 
 4227      4D53746F 
 4228              	.LASF50:
 4229 063a 70657269 		.ascii	"periodBuf\000"
 4229      6F644275 
 4229      6600
 4230              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
