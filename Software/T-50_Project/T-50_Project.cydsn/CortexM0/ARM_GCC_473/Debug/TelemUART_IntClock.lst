ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TelemUART_IntClock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TelemUART_IntClock_Start,"ax",%progbits
  18              		.align	1
  19              		.global	TelemUART_IntClock_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	TelemUART_IntClock_Start, %function
  23              	TelemUART_IntClock_Start:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\TelemUART_IntClock.c"
   1:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * File Name: TelemUART_IntClock.c
   3:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
   5:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Description:
   6:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
   8:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Note:
   9:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  12:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  19:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #include "TelemUART_IntClock.h"
  21:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  22:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #if defined CYREG_PERI_DIV_CMD
  23:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  24:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Function Name: TelemUART_IntClock_StartEx
  26:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  28:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Summary:
  29:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Starts the clock, aligned to the specified running clock.
  30:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  31:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Parameters:
  32:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  alignClkDiv:  The divider to which phase alignment is performed when the
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 2


  33:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *    clock is started.
  34:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  35:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Returns:
  36:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
  37:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  38:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** void TelemUART_IntClock_StartEx(uint32 alignClkDiv)
  40:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** {
  41:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* Make sure any previous start command has finished. */
  42:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     while((TelemUART_IntClock_CMD_REG & TelemUART_IntClock_CMD_ENABLE_MASK) != 0u)
  43:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     {
  44:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     }
  45:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     
  46:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* Specify the target divider and it's alignment divider, and enable. */
  47:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     TelemUART_IntClock_CMD_REG =
  48:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         ((uint32)TelemUART_IntClock__DIV_ID << TelemUART_IntClock_CMD_DIV_SHIFT)|
  49:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         (alignClkDiv << TelemUART_IntClock_CMD_PA_DIV_SHIFT) |
  50:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         (uint32)TelemUART_IntClock_CMD_ENABLE_MASK;
  51:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** }
  52:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  53:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #else
  54:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  55:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** /*******************************************************************************
  56:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Function Name: TelemUART_IntClock_Start
  57:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** ********************************************************************************
  58:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  59:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Summary:
  60:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Starts the clock.
  61:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  62:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Parameters:
  63:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
  64:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  65:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Returns:
  66:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
  67:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  68:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *******************************************************************************/
  69:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  70:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** void TelemUART_IntClock_Start(void)
  71:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  72:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* Set the bit to enable the clock. */
  73:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     TelemUART_IntClock_ENABLE_REG |= TelemUART_IntClock__ENABLE_MASK;
  28              		.loc 1 73 0
  29 0000 034B     		ldr	r3, .L2
  30 0002 8022     		mov	r2, #128
  31 0004 1968     		ldr	r1, [r3]
  32 0006 1006     		lsl	r0, r2, #24
  33 0008 0843     		orr	r0, r1
  34 000a 1860     		str	r0, [r3]
  74:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** }
  35              		.loc 1 74 0
  36              		@ sp needed for prologue
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 3


  41 0010 84000240 		.word	1073873028
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	TelemUART_IntClock_Start, .-TelemUART_IntClock_Start
  45              		.section	.text.TelemUART_IntClock_Stop,"ax",%progbits
  46              		.align	1
  47              		.global	TelemUART_IntClock_Stop
  48              		.code	16
  49              		.thumb_func
  50              		.type	TelemUART_IntClock_Stop, %function
  51              	TelemUART_IntClock_Stop:
  52              	.LFB1:
  75:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  76:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #endif /* CYREG_PERI_DIV_CMD */
  77:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  78:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  79:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** /*******************************************************************************
  80:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Function Name: TelemUART_IntClock_Stop
  81:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** ********************************************************************************
  82:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  83:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Summary:
  84:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Stops the clock and returns immediately. This API does not require the
  85:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  source clock to be running but may return before the hardware is actually
  86:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  disabled.
  87:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  88:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Parameters:
  89:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
  90:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  91:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Returns:
  92:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
  93:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
  94:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** void TelemUART_IntClock_Stop(void)
  96:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** {
  53              		.loc 1 96 0
  54              		.cfi_startproc
  97:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #if defined CYREG_PERI_DIV_CMD
  98:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
  99:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* Make sure any previous start command has finished. */
 100:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     while((TelemUART_IntClock_CMD_REG & TelemUART_IntClock_CMD_ENABLE_MASK) != 0u)
 101:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     {
 102:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     }
 103:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     
 104:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* Specify the target divider and it's alignment divider, and disable. */
 105:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     TelemUART_IntClock_CMD_REG =
 106:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         ((uint32)TelemUART_IntClock__DIV_ID << TelemUART_IntClock_CMD_DIV_SHIFT)|
 107:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         ((uint32)TelemUART_IntClock_CMD_DISABLE_MASK);
 108:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 109:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #else
 110:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 111:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* Clear the bit to disable the clock. */
 112:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     TelemUART_IntClock_ENABLE_REG &= (uint32)(~TelemUART_IntClock__ENABLE_MASK);
  55              		.loc 1 112 0
  56 0000 024B     		ldr	r3, .L5
 113:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     
 114:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #endif /* CYREG_PERI_DIV_CMD */
 115:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** }
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 4


  57              		.loc 1 115 0
  58              		@ sp needed for prologue
 112:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     TelemUART_IntClock_ENABLE_REG &= (uint32)(~TelemUART_IntClock__ENABLE_MASK);
  59              		.loc 1 112 0
  60 0002 1A68     		ldr	r2, [r3]
  61 0004 5000     		lsl	r0, r2, #1
  62 0006 4108     		lsr	r1, r0, #1
  63 0008 1960     		str	r1, [r3]
  64              		.loc 1 115 0
  65 000a 7047     		bx	lr
  66              	.L6:
  67              		.align	2
  68              	.L5:
  69 000c 84000240 		.word	1073873028
  70              		.cfi_endproc
  71              	.LFE1:
  72              		.size	TelemUART_IntClock_Stop, .-TelemUART_IntClock_Stop
  73              		.section	.text.TelemUART_IntClock_SetFractionalDividerRegister,"ax",%progbits
  74              		.align	1
  75              		.global	TelemUART_IntClock_SetFractionalDividerRegister
  76              		.code	16
  77              		.thumb_func
  78              		.type	TelemUART_IntClock_SetFractionalDividerRegister, %function
  79              	TelemUART_IntClock_SetFractionalDividerRegister:
  80              	.LFB2:
 116:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 117:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 118:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** /*******************************************************************************
 119:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Function Name: TelemUART_IntClock_SetFractionalDividerRegister
 120:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** ********************************************************************************
 121:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 122:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Summary:
 123:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Modifies the clock divider and the fractional divider.
 124:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 125:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Parameters:
 126:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
 127:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 128:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *    to divide the clock by 2, this parameter should be set to 1.
 129:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  fracDivider:  Fractional Divider register value (0-31).
 130:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Returns:
 131:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
 132:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 133:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *******************************************************************************/
 134:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** void TelemUART_IntClock_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
 135:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** {
  81              		.loc 1 135 0
  82              		.cfi_startproc
  83              	.LVL0:
 136:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     uint32 maskVal;
 137:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     uint32 regVal;
 138:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     
 139:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #if defined (TelemUART_IntClock__FRAC_MASK) || defined (CYREG_PERI_DIV_CMD)
 140:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     
 141:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 	/* get all but divider bits */
 142:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     maskVal = TelemUART_IntClock_DIV_REG & 
 143:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****                     (uint32)(~(uint32)(TelemUART_IntClock_DIV_INT_MASK | TelemUART_IntClock_DIV_FRA
 144:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 	/* combine mask and new divider vals into 32-bit value */
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 5


 145:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     regVal = maskVal |
 146:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         ((uint32)((uint32)clkDivider <<  TelemUART_IntClock_DIV_INT_SHIFT) & TelemUART_IntClock_DIV
 147:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         ((uint32)((uint32)clkFractional << TelemUART_IntClock_DIV_FRAC_SHIFT) & TelemUART_IntClock_
 148:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     
 149:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #else
 150:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* get all but integer divider bits */
 151:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     maskVal = TelemUART_IntClock_DIV_REG & (uint32)(~(uint32)TelemUART_IntClock__DIVIDER_MASK);
  84              		.loc 1 151 0
  85 0000 034B     		ldr	r3, .L8
 152:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* combine mask and new divider val into 32-bit value */
 153:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     regVal = clkDivider | maskVal;
 154:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     
 155:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #endif /* TelemUART_IntClock__FRAC_MASK || CYREG_PERI_DIV_CMD */
 156:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 157:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     TelemUART_IntClock_DIV_REG = regVal;
 158:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** }
  86              		.loc 1 158 0
  87              		@ sp needed for prologue
 151:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     maskVal = TelemUART_IntClock_DIV_REG & (uint32)(~(uint32)TelemUART_IntClock__DIVIDER_MASK);
  88              		.loc 1 151 0
  89 0002 1A68     		ldr	r2, [r3]
  90              	.LVL1:
  91 0004 110C     		lsr	r1, r2, #16
  92              	.LVL2:
  93 0006 0A04     		lsl	r2, r1, #16
  94              	.LVL3:
 153:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     regVal = clkDivider | maskVal;
  95              		.loc 1 153 0
  96 0008 1043     		orr	r0, r2
  97              	.LVL4:
 157:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     TelemUART_IntClock_DIV_REG = regVal;
  98              		.loc 1 157 0
  99 000a 1860     		str	r0, [r3]
 100              		.loc 1 158 0
 101 000c 7047     		bx	lr
 102              	.L9:
 103 000e C046     		.align	2
 104              	.L8:
 105 0010 84000240 		.word	1073873028
 106              		.cfi_endproc
 107              	.LFE2:
 108              		.size	TelemUART_IntClock_SetFractionalDividerRegister, .-TelemUART_IntClock_SetFractionalDividerRe
 109              		.section	.text.TelemUART_IntClock_GetDividerRegister,"ax",%progbits
 110              		.align	1
 111              		.global	TelemUART_IntClock_GetDividerRegister
 112              		.code	16
 113              		.thumb_func
 114              		.type	TelemUART_IntClock_GetDividerRegister, %function
 115              	TelemUART_IntClock_GetDividerRegister:
 116              	.LFB3:
 159:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 160:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 161:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** /*******************************************************************************
 162:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Function Name: TelemUART_IntClock_GetDividerRegister
 163:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** ********************************************************************************
 164:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 165:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Summary:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 6


 166:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Gets the clock divider register value.
 167:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 168:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Parameters:
 169:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
 170:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 171:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Returns:
 172:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 173:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  divide by 2, the return value will be 1.
 174:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 175:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *******************************************************************************/
 176:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** uint16 TelemUART_IntClock_GetDividerRegister(void)
 177:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** {
 117              		.loc 1 177 0
 118              		.cfi_startproc
 178:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     return (uint16)((TelemUART_IntClock_DIV_REG & TelemUART_IntClock_DIV_INT_MASK)
 119              		.loc 1 178 0
 120 0000 014B     		ldr	r3, .L11
 179:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         >> TelemUART_IntClock_DIV_INT_SHIFT);
 180:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** }
 121              		.loc 1 180 0
 122              		@ sp needed for prologue
 178:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     return (uint16)((TelemUART_IntClock_DIV_REG & TelemUART_IntClock_DIV_INT_MASK)
 123              		.loc 1 178 0
 124 0002 1868     		ldr	r0, [r3]
 125 0004 80B2     		uxth	r0, r0
 126              		.loc 1 180 0
 127 0006 7047     		bx	lr
 128              	.L12:
 129              		.align	2
 130              	.L11:
 131 0008 84000240 		.word	1073873028
 132              		.cfi_endproc
 133              	.LFE3:
 134              		.size	TelemUART_IntClock_GetDividerRegister, .-TelemUART_IntClock_GetDividerRegister
 135              		.section	.text.TelemUART_IntClock_GetFractionalDividerRegister,"ax",%progbits
 136              		.align	1
 137              		.global	TelemUART_IntClock_GetFractionalDividerRegister
 138              		.code	16
 139              		.thumb_func
 140              		.type	TelemUART_IntClock_GetFractionalDividerRegister, %function
 141              	TelemUART_IntClock_GetFractionalDividerRegister:
 142              	.LFB4:
 181:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 182:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** 
 183:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** /*******************************************************************************
 184:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Function Name: TelemUART_IntClock_GetFractionalDividerRegister
 185:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** ********************************************************************************
 186:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 187:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Summary:
 188:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Gets the clock fractional divider register value.
 189:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 190:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Parameters:
 191:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  None
 192:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 193:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** * Returns:
 194:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  Fractional Divide value of the clock
 195:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *  0 if the fractional divider is not in use.
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 7


 196:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *
 197:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** *******************************************************************************/
 198:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** uint8 TelemUART_IntClock_GetFractionalDividerRegister(void)
 199:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** {
 143              		.loc 1 199 0
 144              		.cfi_startproc
 200:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #if defined (TelemUART_IntClock__FRAC_MASK)
 201:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     /* return fractional divider bits */
 202:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     return (uint8)((TelemUART_IntClock_DIV_REG & TelemUART_IntClock_DIV_FRAC_MASK)
 203:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****         >> TelemUART_IntClock_DIV_FRAC_SHIFT);
 204:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #else
 205:.\Generated_Source\PSoC4/TelemUART_IntClock.c ****     return 0u;
 206:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** #endif /* TelemUART_IntClock__FRAC_MASK */
 207:.\Generated_Source\PSoC4/TelemUART_IntClock.c **** }
 145              		.loc 1 207 0
 146 0000 0020     		mov	r0, #0
 147              		@ sp needed for prologue
 148 0002 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE4:
 151              		.size	TelemUART_IntClock_GetFractionalDividerRegister, .-TelemUART_IntClock_GetFractionalDividerRe
 152              		.text
 153              	.Letext0:
 154              		.file 2 "./Generated_Source/PSoC4/cytypes.h"
 155              		.section	.debug_info,"",%progbits
 156              	.Ldebug_info0:
 157 0000 62010000 		.4byte	0x162
 158 0004 0200     		.2byte	0x2
 159 0006 00000000 		.4byte	.Ldebug_abbrev0
 160 000a 04       		.byte	0x4
 161 000b 01       		.uleb128 0x1
 162 000c FA010000 		.4byte	.LASF24
 163 0010 01       		.byte	0x1
 164 0011 F0000000 		.4byte	.LASF25
 165 0015 0E000000 		.4byte	.LASF26
 166 0019 00000000 		.4byte	.Ldebug_ranges0+0
 167 001d 00000000 		.4byte	0
 168 0021 00000000 		.4byte	0
 169 0025 00000000 		.4byte	.Ldebug_line0
 170 0029 02       		.uleb128 0x2
 171 002a 01       		.byte	0x1
 172 002b 06       		.byte	0x6
 173 002c 4C020000 		.4byte	.LASF0
 174 0030 02       		.uleb128 0x2
 175 0031 01       		.byte	0x1
 176 0032 08       		.byte	0x8
 177 0033 7E000000 		.4byte	.LASF1
 178 0037 02       		.uleb128 0x2
 179 0038 02       		.byte	0x2
 180 0039 05       		.byte	0x5
 181 003a EA010000 		.4byte	.LASF2
 182 003e 02       		.uleb128 0x2
 183 003f 02       		.byte	0x2
 184 0040 07       		.byte	0x7
 185 0041 C4000000 		.4byte	.LASF3
 186 0045 02       		.uleb128 0x2
 187 0046 04       		.byte	0x4
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 8


 188 0047 05       		.byte	0x5
 189 0048 43020000 		.4byte	.LASF4
 190 004c 02       		.uleb128 0x2
 191 004d 04       		.byte	0x4
 192 004e 07       		.byte	0x7
 193 004f B2000000 		.4byte	.LASF5
 194 0053 02       		.uleb128 0x2
 195 0054 08       		.byte	0x8
 196 0055 05       		.byte	0x5
 197 0056 BE010000 		.4byte	.LASF6
 198 005a 02       		.uleb128 0x2
 199 005b 08       		.byte	0x8
 200 005c 07       		.byte	0x7
 201 005d 77010000 		.4byte	.LASF7
 202 0061 03       		.uleb128 0x3
 203 0062 04       		.byte	0x4
 204 0063 05       		.byte	0x5
 205 0064 696E7400 		.ascii	"int\000"
 206 0068 02       		.uleb128 0x2
 207 0069 04       		.byte	0x4
 208 006a 07       		.byte	0x7
 209 006b 6A010000 		.4byte	.LASF8
 210 006f 04       		.uleb128 0x4
 211 0070 F4010000 		.4byte	.LASF9
 212 0074 02       		.byte	0x2
 213 0075 5B       		.byte	0x5b
 214 0076 30000000 		.4byte	0x30
 215 007a 04       		.uleb128 0x4
 216 007b 2C010000 		.4byte	.LASF10
 217 007f 02       		.byte	0x2
 218 0080 5C       		.byte	0x5c
 219 0081 3E000000 		.4byte	0x3e
 220 0085 04       		.uleb128 0x4
 221 0086 63010000 		.4byte	.LASF11
 222 008a 02       		.byte	0x2
 223 008b 5D       		.byte	0x5d
 224 008c 4C000000 		.4byte	0x4c
 225 0090 02       		.uleb128 0x2
 226 0091 04       		.byte	0x4
 227 0092 04       		.byte	0x4
 228 0093 60000000 		.4byte	.LASF12
 229 0097 02       		.uleb128 0x2
 230 0098 08       		.byte	0x8
 231 0099 04       		.byte	0x4
 232 009a E2000000 		.4byte	.LASF13
 233 009e 02       		.uleb128 0x2
 234 009f 01       		.byte	0x1
 235 00a0 08       		.byte	0x8
 236 00a1 E5010000 		.4byte	.LASF14
 237 00a5 04       		.uleb128 0x4
 238 00a6 00000000 		.4byte	.LASF15
 239 00aa 02       		.byte	0x2
 240 00ab F2       		.byte	0xf2
 241 00ac B0000000 		.4byte	0xb0
 242 00b0 05       		.uleb128 0x5
 243 00b1 85000000 		.4byte	0x85
 244 00b5 06       		.uleb128 0x6
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 9


 245 00b6 01       		.byte	0x1
 246 00b7 CC010000 		.4byte	.LASF16
 247 00bb 01       		.byte	0x1
 248 00bc 46       		.byte	0x46
 249 00bd 01       		.byte	0x1
 250 00be 00000000 		.4byte	.LFB0
 251 00c2 14000000 		.4byte	.LFE0
 252 00c6 02       		.byte	0x2
 253 00c7 7D       		.byte	0x7d
 254 00c8 00       		.sleb128 0
 255 00c9 01       		.byte	0x1
 256 00ca 06       		.uleb128 0x6
 257 00cb 01       		.byte	0x1
 258 00cc 66000000 		.4byte	.LASF17
 259 00d0 01       		.byte	0x1
 260 00d1 5F       		.byte	0x5f
 261 00d2 01       		.byte	0x1
 262 00d3 00000000 		.4byte	.LFB1
 263 00d7 10000000 		.4byte	.LFE1
 264 00db 02       		.byte	0x2
 265 00dc 7D       		.byte	0x7d
 266 00dd 00       		.sleb128 0
 267 00de 01       		.byte	0x1
 268 00df 07       		.uleb128 0x7
 269 00e0 01       		.byte	0x1
 270 00e1 33010000 		.4byte	.LASF27
 271 00e5 01       		.byte	0x1
 272 00e6 86       		.byte	0x86
 273 00e7 01       		.byte	0x1
 274 00e8 00000000 		.4byte	.LFB2
 275 00ec 14000000 		.4byte	.LFE2
 276 00f0 02       		.byte	0x2
 277 00f1 7D       		.byte	0x7d
 278 00f2 00       		.sleb128 0
 279 00f3 01       		.byte	0x1
 280 00f4 33010000 		.4byte	0x133
 281 00f8 08       		.uleb128 0x8
 282 00f9 D7000000 		.4byte	.LASF18
 283 00fd 01       		.byte	0x1
 284 00fe 86       		.byte	0x86
 285 00ff 7A000000 		.4byte	0x7a
 286 0103 00000000 		.4byte	.LLST0
 287 0107 08       		.uleb128 0x8
 288 0108 1E010000 		.4byte	.LASF19
 289 010c 01       		.byte	0x1
 290 010d 86       		.byte	0x86
 291 010e 6F000000 		.4byte	0x6f
 292 0112 21000000 		.4byte	.LLST1
 293 0116 09       		.uleb128 0x9
 294 0117 06000000 		.4byte	.LASF20
 295 011b 01       		.byte	0x1
 296 011c 88       		.byte	0x88
 297 011d 85000000 		.4byte	0x85
 298 0121 42000000 		.4byte	.LLST2
 299 0125 0A       		.uleb128 0xa
 300 0126 E9000000 		.4byte	.LASF21
 301 012a 01       		.byte	0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 10


 302 012b 89       		.byte	0x89
 303 012c 85000000 		.4byte	0x85
 304 0130 01       		.byte	0x1
 305 0131 50       		.byte	0x50
 306 0132 00       		.byte	0
 307 0133 0B       		.uleb128 0xb
 308 0134 01       		.byte	0x1
 309 0135 8C000000 		.4byte	.LASF22
 310 0139 01       		.byte	0x1
 311 013a B0       		.byte	0xb0
 312 013b 01       		.byte	0x1
 313 013c 7A000000 		.4byte	0x7a
 314 0140 00000000 		.4byte	.LFB3
 315 0144 0C000000 		.4byte	.LFE3
 316 0148 02       		.byte	0x2
 317 0149 7D       		.byte	0x7d
 318 014a 00       		.sleb128 0
 319 014b 01       		.byte	0x1
 320 014c 0B       		.uleb128 0xb
 321 014d 01       		.byte	0x1
 322 014e 8E010000 		.4byte	.LASF23
 323 0152 01       		.byte	0x1
 324 0153 C6       		.byte	0xc6
 325 0154 01       		.byte	0x1
 326 0155 6F000000 		.4byte	0x6f
 327 0159 00000000 		.4byte	.LFB4
 328 015d 04000000 		.4byte	.LFE4
 329 0161 02       		.byte	0x2
 330 0162 7D       		.byte	0x7d
 331 0163 00       		.sleb128 0
 332 0164 01       		.byte	0x1
 333 0165 00       		.byte	0
 334              		.section	.debug_abbrev,"",%progbits
 335              	.Ldebug_abbrev0:
 336 0000 01       		.uleb128 0x1
 337 0001 11       		.uleb128 0x11
 338 0002 01       		.byte	0x1
 339 0003 25       		.uleb128 0x25
 340 0004 0E       		.uleb128 0xe
 341 0005 13       		.uleb128 0x13
 342 0006 0B       		.uleb128 0xb
 343 0007 03       		.uleb128 0x3
 344 0008 0E       		.uleb128 0xe
 345 0009 1B       		.uleb128 0x1b
 346 000a 0E       		.uleb128 0xe
 347 000b 55       		.uleb128 0x55
 348 000c 06       		.uleb128 0x6
 349 000d 11       		.uleb128 0x11
 350 000e 01       		.uleb128 0x1
 351 000f 52       		.uleb128 0x52
 352 0010 01       		.uleb128 0x1
 353 0011 10       		.uleb128 0x10
 354 0012 06       		.uleb128 0x6
 355 0013 00       		.byte	0
 356 0014 00       		.byte	0
 357 0015 02       		.uleb128 0x2
 358 0016 24       		.uleb128 0x24
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 11


 359 0017 00       		.byte	0
 360 0018 0B       		.uleb128 0xb
 361 0019 0B       		.uleb128 0xb
 362 001a 3E       		.uleb128 0x3e
 363 001b 0B       		.uleb128 0xb
 364 001c 03       		.uleb128 0x3
 365 001d 0E       		.uleb128 0xe
 366 001e 00       		.byte	0
 367 001f 00       		.byte	0
 368 0020 03       		.uleb128 0x3
 369 0021 24       		.uleb128 0x24
 370 0022 00       		.byte	0
 371 0023 0B       		.uleb128 0xb
 372 0024 0B       		.uleb128 0xb
 373 0025 3E       		.uleb128 0x3e
 374 0026 0B       		.uleb128 0xb
 375 0027 03       		.uleb128 0x3
 376 0028 08       		.uleb128 0x8
 377 0029 00       		.byte	0
 378 002a 00       		.byte	0
 379 002b 04       		.uleb128 0x4
 380 002c 16       		.uleb128 0x16
 381 002d 00       		.byte	0
 382 002e 03       		.uleb128 0x3
 383 002f 0E       		.uleb128 0xe
 384 0030 3A       		.uleb128 0x3a
 385 0031 0B       		.uleb128 0xb
 386 0032 3B       		.uleb128 0x3b
 387 0033 0B       		.uleb128 0xb
 388 0034 49       		.uleb128 0x49
 389 0035 13       		.uleb128 0x13
 390 0036 00       		.byte	0
 391 0037 00       		.byte	0
 392 0038 05       		.uleb128 0x5
 393 0039 35       		.uleb128 0x35
 394 003a 00       		.byte	0
 395 003b 49       		.uleb128 0x49
 396 003c 13       		.uleb128 0x13
 397 003d 00       		.byte	0
 398 003e 00       		.byte	0
 399 003f 06       		.uleb128 0x6
 400 0040 2E       		.uleb128 0x2e
 401 0041 00       		.byte	0
 402 0042 3F       		.uleb128 0x3f
 403 0043 0C       		.uleb128 0xc
 404 0044 03       		.uleb128 0x3
 405 0045 0E       		.uleb128 0xe
 406 0046 3A       		.uleb128 0x3a
 407 0047 0B       		.uleb128 0xb
 408 0048 3B       		.uleb128 0x3b
 409 0049 0B       		.uleb128 0xb
 410 004a 27       		.uleb128 0x27
 411 004b 0C       		.uleb128 0xc
 412 004c 11       		.uleb128 0x11
 413 004d 01       		.uleb128 0x1
 414 004e 12       		.uleb128 0x12
 415 004f 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 12


 416 0050 40       		.uleb128 0x40
 417 0051 0A       		.uleb128 0xa
 418 0052 9742     		.uleb128 0x2117
 419 0054 0C       		.uleb128 0xc
 420 0055 00       		.byte	0
 421 0056 00       		.byte	0
 422 0057 07       		.uleb128 0x7
 423 0058 2E       		.uleb128 0x2e
 424 0059 01       		.byte	0x1
 425 005a 3F       		.uleb128 0x3f
 426 005b 0C       		.uleb128 0xc
 427 005c 03       		.uleb128 0x3
 428 005d 0E       		.uleb128 0xe
 429 005e 3A       		.uleb128 0x3a
 430 005f 0B       		.uleb128 0xb
 431 0060 3B       		.uleb128 0x3b
 432 0061 0B       		.uleb128 0xb
 433 0062 27       		.uleb128 0x27
 434 0063 0C       		.uleb128 0xc
 435 0064 11       		.uleb128 0x11
 436 0065 01       		.uleb128 0x1
 437 0066 12       		.uleb128 0x12
 438 0067 01       		.uleb128 0x1
 439 0068 40       		.uleb128 0x40
 440 0069 0A       		.uleb128 0xa
 441 006a 9742     		.uleb128 0x2117
 442 006c 0C       		.uleb128 0xc
 443 006d 01       		.uleb128 0x1
 444 006e 13       		.uleb128 0x13
 445 006f 00       		.byte	0
 446 0070 00       		.byte	0
 447 0071 08       		.uleb128 0x8
 448 0072 05       		.uleb128 0x5
 449 0073 00       		.byte	0
 450 0074 03       		.uleb128 0x3
 451 0075 0E       		.uleb128 0xe
 452 0076 3A       		.uleb128 0x3a
 453 0077 0B       		.uleb128 0xb
 454 0078 3B       		.uleb128 0x3b
 455 0079 0B       		.uleb128 0xb
 456 007a 49       		.uleb128 0x49
 457 007b 13       		.uleb128 0x13
 458 007c 02       		.uleb128 0x2
 459 007d 06       		.uleb128 0x6
 460 007e 00       		.byte	0
 461 007f 00       		.byte	0
 462 0080 09       		.uleb128 0x9
 463 0081 34       		.uleb128 0x34
 464 0082 00       		.byte	0
 465 0083 03       		.uleb128 0x3
 466 0084 0E       		.uleb128 0xe
 467 0085 3A       		.uleb128 0x3a
 468 0086 0B       		.uleb128 0xb
 469 0087 3B       		.uleb128 0x3b
 470 0088 0B       		.uleb128 0xb
 471 0089 49       		.uleb128 0x49
 472 008a 13       		.uleb128 0x13
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 13


 473 008b 02       		.uleb128 0x2
 474 008c 06       		.uleb128 0x6
 475 008d 00       		.byte	0
 476 008e 00       		.byte	0
 477 008f 0A       		.uleb128 0xa
 478 0090 34       		.uleb128 0x34
 479 0091 00       		.byte	0
 480 0092 03       		.uleb128 0x3
 481 0093 0E       		.uleb128 0xe
 482 0094 3A       		.uleb128 0x3a
 483 0095 0B       		.uleb128 0xb
 484 0096 3B       		.uleb128 0x3b
 485 0097 0B       		.uleb128 0xb
 486 0098 49       		.uleb128 0x49
 487 0099 13       		.uleb128 0x13
 488 009a 02       		.uleb128 0x2
 489 009b 0A       		.uleb128 0xa
 490 009c 00       		.byte	0
 491 009d 00       		.byte	0
 492 009e 0B       		.uleb128 0xb
 493 009f 2E       		.uleb128 0x2e
 494 00a0 00       		.byte	0
 495 00a1 3F       		.uleb128 0x3f
 496 00a2 0C       		.uleb128 0xc
 497 00a3 03       		.uleb128 0x3
 498 00a4 0E       		.uleb128 0xe
 499 00a5 3A       		.uleb128 0x3a
 500 00a6 0B       		.uleb128 0xb
 501 00a7 3B       		.uleb128 0x3b
 502 00a8 0B       		.uleb128 0xb
 503 00a9 27       		.uleb128 0x27
 504 00aa 0C       		.uleb128 0xc
 505 00ab 49       		.uleb128 0x49
 506 00ac 13       		.uleb128 0x13
 507 00ad 11       		.uleb128 0x11
 508 00ae 01       		.uleb128 0x1
 509 00af 12       		.uleb128 0x12
 510 00b0 01       		.uleb128 0x1
 511 00b1 40       		.uleb128 0x40
 512 00b2 0A       		.uleb128 0xa
 513 00b3 9742     		.uleb128 0x2117
 514 00b5 0C       		.uleb128 0xc
 515 00b6 00       		.byte	0
 516 00b7 00       		.byte	0
 517 00b8 00       		.byte	0
 518              		.section	.debug_loc,"",%progbits
 519              	.Ldebug_loc0:
 520              	.LLST0:
 521 0000 00000000 		.4byte	.LVL0
 522 0004 0A000000 		.4byte	.LVL4
 523 0008 0100     		.2byte	0x1
 524 000a 50       		.byte	0x50
 525 000b 0A000000 		.4byte	.LVL4
 526 000f 14000000 		.4byte	.LFE2
 527 0013 0400     		.2byte	0x4
 528 0015 F3       		.byte	0xf3
 529 0016 01       		.uleb128 0x1
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 14


 530 0017 50       		.byte	0x50
 531 0018 9F       		.byte	0x9f
 532 0019 00000000 		.4byte	0
 533 001d 00000000 		.4byte	0
 534              	.LLST1:
 535 0021 00000000 		.4byte	.LVL0
 536 0025 06000000 		.4byte	.LVL2
 537 0029 0100     		.2byte	0x1
 538 002b 51       		.byte	0x51
 539 002c 06000000 		.4byte	.LVL2
 540 0030 14000000 		.4byte	.LFE2
 541 0034 0400     		.2byte	0x4
 542 0036 F3       		.byte	0xf3
 543 0037 01       		.uleb128 0x1
 544 0038 51       		.byte	0x51
 545 0039 9F       		.byte	0x9f
 546 003a 00000000 		.4byte	0
 547 003e 00000000 		.4byte	0
 548              	.LLST2:
 549 0042 04000000 		.4byte	.LVL1
 550 0046 08000000 		.4byte	.LVL3
 551 004a 0800     		.2byte	0x8
 552 004c 72       		.byte	0x72
 553 004d 00       		.sleb128 0
 554 004e 11       		.byte	0x11
 555 004f 80807C   		.sleb128 -65536
 556 0052 1A       		.byte	0x1a
 557 0053 9F       		.byte	0x9f
 558 0054 00000000 		.4byte	0
 559 0058 00000000 		.4byte	0
 560              		.section	.debug_aranges,"",%progbits
 561 0000 3C000000 		.4byte	0x3c
 562 0004 0200     		.2byte	0x2
 563 0006 00000000 		.4byte	.Ldebug_info0
 564 000a 04       		.byte	0x4
 565 000b 00       		.byte	0
 566 000c 0000     		.2byte	0
 567 000e 0000     		.2byte	0
 568 0010 00000000 		.4byte	.LFB0
 569 0014 14000000 		.4byte	.LFE0-.LFB0
 570 0018 00000000 		.4byte	.LFB1
 571 001c 10000000 		.4byte	.LFE1-.LFB1
 572 0020 00000000 		.4byte	.LFB2
 573 0024 14000000 		.4byte	.LFE2-.LFB2
 574 0028 00000000 		.4byte	.LFB3
 575 002c 0C000000 		.4byte	.LFE3-.LFB3
 576 0030 00000000 		.4byte	.LFB4
 577 0034 04000000 		.4byte	.LFE4-.LFB4
 578 0038 00000000 		.4byte	0
 579 003c 00000000 		.4byte	0
 580              		.section	.debug_ranges,"",%progbits
 581              	.Ldebug_ranges0:
 582 0000 00000000 		.4byte	.LFB0
 583 0004 14000000 		.4byte	.LFE0
 584 0008 00000000 		.4byte	.LFB1
 585 000c 10000000 		.4byte	.LFE1
 586 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 15


 587 0014 14000000 		.4byte	.LFE2
 588 0018 00000000 		.4byte	.LFB3
 589 001c 0C000000 		.4byte	.LFE3
 590 0020 00000000 		.4byte	.LFB4
 591 0024 04000000 		.4byte	.LFE4
 592 0028 00000000 		.4byte	0
 593 002c 00000000 		.4byte	0
 594              		.section	.debug_line,"",%progbits
 595              	.Ldebug_line0:
 596 0000 BE000000 		.section	.debug_str,"MS",%progbits,1
 596      02005100 
 596      00000201 
 596      FB0E0D00 
 596      01010101 
 597              	.LASF15:
 598 0000 72656733 		.ascii	"reg32\000"
 598      3200
 599              	.LASF20:
 600 0006 6D61736B 		.ascii	"maskVal\000"
 600      56616C00 
 601              	.LASF26:
 602 000e 433A5C55 		.ascii	"C:\\Users\\SNFU\\Documents\\T-50_UAV_Project\\Softw"
 602      73657273 
 602      5C534E46 
 602      555C446F 
 602      63756D65 
 603 003c 6172655C 		.ascii	"are\\T-50_Project\\T-50_Project.cydsn\000"
 603      542D3530 
 603      5F50726F 
 603      6A656374 
 603      5C542D35 
 604              	.LASF12:
 605 0060 666C6F61 		.ascii	"float\000"
 605      7400
 606              	.LASF17:
 607 0066 54656C65 		.ascii	"TelemUART_IntClock_Stop\000"
 607      6D554152 
 607      545F496E 
 607      74436C6F 
 607      636B5F53 
 608              	.LASF1:
 609 007e 756E7369 		.ascii	"unsigned char\000"
 609      676E6564 
 609      20636861 
 609      7200
 610              	.LASF22:
 611 008c 54656C65 		.ascii	"TelemUART_IntClock_GetDividerRegister\000"
 611      6D554152 
 611      545F496E 
 611      74436C6F 
 611      636B5F47 
 612              	.LASF5:
 613 00b2 6C6F6E67 		.ascii	"long unsigned int\000"
 613      20756E73 
 613      69676E65 
 613      6420696E 
 613      7400
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 16


 614              	.LASF3:
 615 00c4 73686F72 		.ascii	"short unsigned int\000"
 615      7420756E 
 615      7369676E 
 615      65642069 
 615      6E7400
 616              	.LASF18:
 617 00d7 636C6B44 		.ascii	"clkDivider\000"
 617      69766964 
 617      657200
 618              	.LASF13:
 619 00e2 646F7562 		.ascii	"double\000"
 619      6C6500
 620              	.LASF21:
 621 00e9 72656756 		.ascii	"regVal\000"
 621      616C00
 622              	.LASF25:
 623 00f0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\TelemUART_IntClock.c\000"
 623      6E657261 
 623      7465645F 
 623      536F7572 
 623      63655C50 
 624              	.LASF19:
 625 011e 636C6B46 		.ascii	"clkFractional\000"
 625      72616374 
 625      696F6E61 
 625      6C00
 626              	.LASF10:
 627 012c 75696E74 		.ascii	"uint16\000"
 627      313600
 628              	.LASF27:
 629 0133 54656C65 		.ascii	"TelemUART_IntClock_SetFractionalDividerRegister\000"
 629      6D554152 
 629      545F496E 
 629      74436C6F 
 629      636B5F53 
 630              	.LASF11:
 631 0163 75696E74 		.ascii	"uint32\000"
 631      333200
 632              	.LASF8:
 633 016a 756E7369 		.ascii	"unsigned int\000"
 633      676E6564 
 633      20696E74 
 633      00
 634              	.LASF7:
 635 0177 6C6F6E67 		.ascii	"long long unsigned int\000"
 635      206C6F6E 
 635      6720756E 
 635      7369676E 
 635      65642069 
 636              	.LASF23:
 637 018e 54656C65 		.ascii	"TelemUART_IntClock_GetFractionalDividerRegister\000"
 637      6D554152 
 637      545F496E 
 637      74436C6F 
 637      636B5F47 
 638              	.LASF6:
ARM GAS  C:\Users\SNFU\AppData\Local\Temp\ccO1L1wh.s 			page 17


 639 01be 6C6F6E67 		.ascii	"long long int\000"
 639      206C6F6E 
 639      6720696E 
 639      7400
 640              	.LASF16:
 641 01cc 54656C65 		.ascii	"TelemUART_IntClock_Start\000"
 641      6D554152 
 641      545F496E 
 641      74436C6F 
 641      636B5F53 
 642              	.LASF14:
 643 01e5 63686172 		.ascii	"char\000"
 643      00
 644              	.LASF2:
 645 01ea 73686F72 		.ascii	"short int\000"
 645      7420696E 
 645      7400
 646              	.LASF9:
 647 01f4 75696E74 		.ascii	"uint8\000"
 647      3800
 648              	.LASF24:
 649 01fa 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 649      4320342E 
 649      372E3320 
 649      32303133 
 649      30333132 
 650 022d 616E6368 		.ascii	"anch revision 196615]\000"
 650      20726576 
 650      6973696F 
 650      6E203139 
 650      36363135 
 651              	.LASF4:
 652 0243 6C6F6E67 		.ascii	"long int\000"
 652      20696E74 
 652      00
 653              	.LASF0:
 654 024c 7369676E 		.ascii	"signed char\000"
 654      65642063 
 654      68617200 
 655              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
